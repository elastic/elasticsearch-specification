# Overlays that are specific to the Elasticsearch OpenAPI document
overlay: 1.0.0
info:
  title: Overlays for the Elasticsearch OpenAPI document
  version: 0.0.1
actions:
  - target: '$.info'
    description: Add a document description and feedback link
    update:
      title: Elasticsearch API
      description: >
        ## Documentation source and versions
        
        This documentation is derived from the `main` branch of the [elasticsearch-specification](https://github.com/elastic/elasticsearch-specification) repository.
        It is provided under license [Attribution-NonCommercial-NoDerivatives 4.0 International](https://creativecommons.org/licenses/by-nc-nd/4.0/).
      x-doc-license:
        name: Attribution-NonCommercial-NoDerivatives 4.0 International
        url: 'https://creativecommons.org/licenses/by-nc-nd/4.0/'
      x-feedbackLink:
        label: Feedback
        url: https://github.com/elastic/docs-content/issues/new?assignees=&labels=feedback%2Ccommunity&projects=&template=api-feedback.yaml&title=%5BFeedback%5D%3A+
# Add an alphabetically sorted list of tags
  - target: '$'
    description: Add document-level tags sorted by display name
    update:
      tags:
      # A
        - name: asynch_search
          description: The async search API enables you to asynchronously run a search request, monitor its progress, and retrieve partial results as they become available.
          x-displayName: Async search
        - name: autoscaling
          x-displayName: Autoscaling
      # C  
        - name: cat
          x-displayName: Compact and aligned text (CAT)
          description: >
            The compact and aligned text (CAT) APIs aim are intended only for human consumption using the Kibana console or command line.
            They are not intended for use by applications.
            For application consumption, it's recommend to use a corresponding JSON API.
            
            All the cat commands accept a query string parameter `help` to see all the headers and info they provide, and the `/_cat` command alone lists all the available commands.
        - name: cluster
          x-displayName: Cluster
        - name: health_report
          x-displayName: Cluster - Health
        - name: nodes
          x-displayName: Cluster - Nodes
        - name: ping
          x-displayName: Cluster - Ping
        - name: connector
          x-displayName: Connector
          description: >
            The connector and sync jobs APIs provide a convenient way to create and manage Elastic connectors and sync jobs in an internal index.
            
            Connectors are Elasticsearch integrations that bring content from third-party data sources, which can be deployed on Elastic Cloud or hosted on your own infrastructure:
            
            * Native connectors are a managed service on Elastic Cloud
            * Connector clients are self-managed on your infrastructure
            
            This API provides an alternative to relying solely on Kibana UI for connector and sync job management. The API comes with a set of validations and assertions to ensure that the state representation in the internal index remains valid.
          externalDocs:
            url: https://www.elastic.co/guide/en/enterprise-search/current/connectors-tutorial-api.html
            description: To get started with Connector APIs, check out the tutorial.
        - name: ccr
          x-displayName: Cross-cluster replication
      # D
        - name: bulk
          description: The bulk API performs multiple indexing or delete operations in a single API call. This reduces overhead and can greatly increase indexing speed.
          x-displayName: Document - Bulk
        - name: create
          x-displayName: Document - Create
        - name: delete
          x-displayName: Document - Delete
        - name: delete_by_query
          x-displayName: Document - Delete by query
        - name: exists
          x-displayName: Document - Exists
        - name: get
          x-displayName: Document - Get
        - name: get_source
          x-displayName: Document - Get source
        - name: index
          x-displayName: Document - Index
        - name: mget
          x-displayName: Document - Multi get
        - name: mtermvectors
          x-displayName: Document - Multi term vectors
        - name: reindex
          x-displayName: Document - Reindex
        - name: delete_by_query_rethrottle
          x-displayName: Document - Rethrottle delete by query
        - name: reindex_throttle
          x-displayName: Document - Rethrottle reindex
        - name: update_by_query_rethrottle
          x-displayName: Document - Rethrottle update by query
        - name: exists_source
          x-displayName: Document - Source exists
        - name: termvectors
          x-displayName: Document - Term vectors
        - name: update
          x-displayName: Document - Update
        - name: update_by_query
          x-displayName: Document - Update by query
      # E
        - name: enrich
          x-displayName: Enrich
        - name: eql
          x-displayName: EQL
          description: >
            Event Query Language (EQL) is a query language for event-based time series data, such as logs, metrics, and traces.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/current/eql.html
            description: EQL search
        - name: esql
          x-displayName: ES|QL
          description: >
            The Elasticsearch Query Language (ES|QL) provides a powerful way to filter, transform, and analyze data stored in Elasticsearch, and in the future in other runtimes.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/current/esql.html
            description: ES|QL overview and tutorials
      # F
        - name: features
          description: The feature APIs enable you to introspect and manage features provided by Elasticsearch and Elasticsearch plugins.
          x-displayName: Features
        - name: fleet
          x-displayName: Fleet
      # G
        - name: graph
          x-displayName: Graph explore
          description: >
            The graph explore API enables you to extract and summarize information about the documents and terms in an Elasticsearch data stream or index.
          externalDocs:
            url: https://www.elastic.co/guide/en/kibana/current/xpack-graph.html
            description: Getting started with Graph
      # I
        - name: indices
          x-displayName: Index
          description: >
            Index APIs enable you to manage individual indices, index settings, aliases, mappings, and index templates.
        - name: dangling_indices
          x-displayName: Index - Import dangling index
        - name: ilm
          x-displayName: Index lifecycle management
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/current/index-lifecycle-management.html
            description: Manage the index lifecycle
        - name: inference
          x-displayName: Inference
          description: >
            Inference APIs enable you to use certain services, such as built-in machine learning models (ELSER, E5), models uploaded through Eland, Cohere, OpenAI, Azure, Google AI Studio or Hugging Face.
            For built-in models and models uploaded through Eland, the inference APIs offer an alternative way to use and manage trained models.
            However, if you do not plan to use the inference APIs to use these models or if you want to use non-NLP models, use the machine learning trained model APIs.
        - name: info
          x-displayName: Info
        - name: ingest
          x-displayName: Ingest
          description: Ingest APIs enable you to manage tasks and resources related to ingest pipelines and processors.
      # L
        - name: license
          x-displayName: Licensing
          description: Licensing APIs enable you to manage your licenses.
        - name: logstash
          x-displayName: Logstash
          description: >
            Logstash APIs enable you to manage pipelines that are used by Logstash Central Management.
          externalDocs:
            url: https://www.elastic.co/guide/en/logstash/current/logstash-centralized-pipeline-management.html
            description: Centralized pipeline management
      # M
        - name: migration
          x-displayName: Migration
        - name: ml
          x-displayName: Machine learning
        - name: monitoring
          x-displayName: Monitoring
      # N
        - name: shutdown
          x-displayName: Node lifecycle
      # Q
        - name: query_rules
          x-displayName: Query rules
          description: >
            Query rules enable you to configure per-query rules that are applied at query time to queries that match the specific rule.
            Query rules are organized into rulesets, collections of query rules that are matched against incoming queries.
            Query rules are applied using the rule query.
            
            If a query matches one or more rules in the ruleset, the query is re-written to apply the rules before searching.
            This allows pinning documents for only queries that match a specific term.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-rule-query.html
            description: Rule query
      # R
        - name: rollup
          x-displayName: Rollup
      # S
        - name: put_script
          x-displayName: Script - Create or update
        - name: delete_script
          x-displayName: Script - Delete
        - name: get_script
          x-displayName: Script - Get
        - name: get_script_context
          x-displayName: Script - Get contexts
        - name: get_script_languages
          x-displayName: Script - Get languages
        - name: scripts_painless_execute
          x-displayName: Script - Run painless
        - name: search
          x-displayName: Search
        - name: clear_scroll
          x-displayName: Search - Clear scroll
        - name: close_point_in_time
          x-displayName: Search - Close point in time
        - name: count
          x-displayName: Search - Count
        - name: explain
          x-displayName: Search - Explain
        - name: field_caps
          x-displayName: Search - Field capabilities
        - name: msearch
          x-displayName: Search - Multi search
        - name: msearch_template
          x-displayName: Search - Multi search template
        - name: open_point_in_time
          x-displayName:  Search - Open point in time
        - name: rank_eval
          x-displayName: Search - Ranking evaluation
        - name: render_search_template
          x-displayName: Search - Render search template
        - name: scroll
          x-displayName: Search - Scroll
        - name: search_shards
          x-displayName: Search - Shards
        - name: search_template
          x-displayName: Search - Search template
        - name: terms_enum
          x-displayName: Search - Terms enum
        - name: search_mvt
          x-displayName: Search - Vector tile search
        - name: search_application
          x-displayName: Search application
        - name: searchable_snapshots
          x-displayName: Searchable snapshots
        - name: security
          x-displayName: Security
        - name: snapshot
          x-displayName: Snapshot and restore
          description: >
            Snapshot and restore APIs enable you to set up snapshot repositories, manage snapshot backups, and restore snapshots to a running cluster.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/current/snapshot-restore.html
            description: Snapshot and restore
        - name: slm
          x-displayName: Snapshot lifecycle management
          description: >
            Snapshot lifecycle management (SLM) APIs enable you to set up policies to automatically take snapshots and control how long they are retained.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/current/snapshots-take-snapshot.html
            description: Create a snapshot
        - name: sql
          x-displayName: SQL
          description: >
            Elasticsearch's SQL APIs enable you to run SQL queries on Elasticsearch indices and data streams.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/current/xpack-sql.html
            description: An overview and tutorials for the Elasticsearch SQL features
        - name: synonyms
          x-displayName: Synonyms
          description: >
            The synonyms management API provides a convenient way to define and manage synonyms in an internal system index.
            Related synonyms can be grouped in a "synonyms set".
            Create as many synonym sets as you need.
      # T
        - name: tasks
          x-displayName: Task management
        - name: text_structure
          x-displayName: Text structure
        - name: transform
          x-displayName: Transform
      # U
        - name: xpack
          x-displayName: Usage
      # W
        - name: watcher
          x-displayName: Watcher
# Examples that apply only to the Elasticsearch OpenAPI document
  - target: "$.paths['/_features']['get']"
    description: "Add examples for get features operation"
    update:
      responses:
        200:
          content:
            application/json:
              examples:
                getFeaturesResponseExample1:
                  $ref: "../../specification/features/get_features/FeaturesApiResponseExample1.json"
  - target: "$.paths['/_features/_reset']['post']"
    description: "Add examples for reset features operation"
    update:
      responses:
        200:
          content:
            application/json:
              examples:
                resetFeaturesResponseExample1:
                  $ref: "../../specification/features/reset_features/ResetFeaturesResponseExample1.json"
  - target: "$.components['requestBodies']['cluster.allocation_explain']"
    description: "Add examples for cluster allocation explain operation"
    update: 
      content: 
        application/json: 
          examples: 
            clusterAllocationExplainRequestExample1: 
              $ref: "../../specification/cluster/allocation_explain/clusterAllocationExplainRequestExample1.json"
  - target: "$.components['responses']['cluster.health#200']"
    description: "Add examples for cluster health operation"
    update: 
      content:
        application/json:
          examples:
            clusterHealthResponseExample1:
              $ref: "../../specification/cluster/health/clusterHealthResponseExample1.json"
  - target: "$.paths['/_cluster/settings']['put']"
    description: "Add examples for cluster update settings operation"
    update: 
      requestBody: 
        content: 
          application/json: 
            examples: 
              clusterPutSettingsRequestExample1: 
                $ref: "../../specification/cluster/put_settings/clusterPutSettingsRequestExample1.json"
  - target: "$.paths['/_cluster/reroute']['post']"
    description: "Add examples for cluster reroute operation"
    update: 
      requestBody: 
        content: 
          application/json: 
            examples: 
              clusterRerouteRequestExample1: 
                $ref: "../../specification/cluster/reroute/clusterRerouteRequestExample1.json"
  - target: "$.components['requestBodies']['nodes.reload_secure_settings']"
    description: "Add examples for nodes reload secure settings operation"
    update: 
      content: 
        application/json: 
          examples: 
            clusterNodesReloadSecureSettingsRequestExample1: 
              $ref: "../../specification/nodes/reload_secure_settings/clusterNodesReloadSecureSettingsRequestExample1.json"
  - target: "$.components['responses']['nodes.reload_secure_settings#200']"
    description: "Add response examples for nodes reload secure settings operation"
    update: 
      content:
        application/json:
          examples:
            clusterNodesReloadSecureSettingsResponseExample1:
              $ref: "../../specification/nodes/reload_secure_settings/clusterNodesReloadSecureSettingsResponseExample1.json"
  - target: "$.paths['/_tasks']['get']"
    description: "Add examples for task management operation"
    update:
      responses:
        200:
          content:
            application/json:
              examples:
                getTasksResponseExample1:
                  $ref: "../../specification/tasks/get/getTasksResponseExample1.json"
  - target: "$.components['responses']['nodes.info#200']"
    description: "Add response examples for nodes info"
    update: 
      content:
        application/json:
          examples:
            nodesInfoResponseExample1:
              $ref: "../../specification/nodes/info/nodesInfoResponseExample1.yaml"
  - target: "$.paths['/_ilm/policy/{policy}']['delete']"
    description: "Add examples for delete lifecycle policy operation"
    update:
      responses:
        200:
          content:
            application/json:
              examples:
                deleteLifecycleResponseExample1:
                  $ref: "../../specification/ilm/delete_lifecycle/DeleteLifecycleResponseExample1.json" 
  - target: "$.paths['/_ilm/policy/{policy}']['put']"
    description: "Add examples for create a lifecycle operation"
    update:
      update: 
      requestBody: 
        content: 
          application/json: 
            examples:
              putLifecycleRequestExample1: 
                $ref: "../../specification/ilm/put_lifecycle/PutLifecycleRequestExample1.json"
      responses:
        200:
          content:
            application/json:
              examples:
                putLifecycleResponseExample1:
                  $ref: "../../specification/ilm/put_lifecycle/PutLifecycleResponseExample1.json"  
  - target: "$.components['responses']['ilm.get_lifecycle#200']"
    description: "Add examples for get lifecycle policy operation"
    update: 
      content:
        application/json:
          examples:
            getLifecycleResponseExample1:
              $ref: "../../specification/ilm/get_lifecycle/GetLifecycleResponseExample1.json"
  - target: "$.paths['/_ilm/migrate_to_data_tiers']['post']"
    description: "Add examples for migrate to data tiers routing operation"
    update:
      update: 
      requestBody: 
        content: 
          application/json: 
            examples: 
              migrateToDataTiersRequestExample1: 
                $ref: "../../specification/ilm/migrate_to_data_tiers/MigrateToDataTiersRequestExample1.json"
      responses:
        200:
          content:
            application/json:
              examples:
                migrateToDataTiersResponseExample1:
                  $ref: "../../specification/ilm/migrate_to_data_tiers/MigrateToDataTiersResponseExample1.json"
  - target: "$.paths['/_ilm/move/{index}']['post']"
    description: "Add examples for move to lifecycle step operation"
    update:
      update: 
      requestBody: 
        content: 
          application/json: 
            examples:
              moveToStepRequestExample1: 
                $ref: "../../specification/ilm/move_to_step/MoveToStepRequestExample1.json"
      responses:
        200:
          content:
            application/json:
              examples:
                moveToStepResponseExample1:
                  $ref: "../../specification/ilm/move_to_step/MoveToStepResponseExample1.json"
  - target: "$.paths['/_ilm/start']['post']"
    description: "Add examples for start index lifecycle management operation"
    update:
      responses:
        200:
          content:
            application/json:
              examples:
                startILMResponseExample1:
                  $ref: "../../specification/ilm/start/StartILMResponseExample1.json"
  - target: "$.paths['/_ilm/stop']['post']"
    description: "Add examples for stop index lifecycle management operation"
    update:
      responses:
        200:
          content:
            application/json:
              examples:
                stopILMResponseExample1:
                  $ref: "../../specification/ilm/stop/stopILMResponseExample1.json"
  - target: "$.paths['/_ilm/status']['get']"
    description: "Add examples for get index lifecycle management status operation"
    update:
      responses:
        200:
          content:
            application/json:
              examples:
                getILMStatusResponseExample1:
                  $ref: "../../specification/ilm/get_status/GetILMStatusResponseExample1.json"
  - target: "$.paths['/{index}/_ilm/explain']['get']"
    description: "Add examples for explain lifecycle operation"
    update:
      responses:
        200:
          content:
            application/json:
              examples:
                explainLifecycleResponseExample1:
                  $ref: "../../specification/ilm/explain_lifecycle/ExplainLifecycleResponseExample1.json"
  - target: "$.paths['/{index}/_ilm/remove']['post']"
    description: "Add examples for remove policy from index operation"
    update:
      responses:
        200:
          content:
            application/json:
              examples:
                removePolicyResponseExample1:
                  $ref: "../../specification/ilm/remove_policy/RemovePolicyResponseExample1.json" 