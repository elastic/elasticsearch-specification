# Overlays that are applicable to both Elasticsearch and Elasticsearch Serverless OpenAPI documents
overlay: 1.0.0
info:
  title: Overlays for changes that apply to both Elasticsearch and Elasticsearch Serverless OpenAPI documents
  version: 0.0.1
actions:
# Add an alphabetically sorted list of tags
  - target: '$'
    description: Add document-level tags sorted by display name
    update:
      tags:
      # A
        - name: autoscaling
          x-displayName: Autoscaling
      # B
        - name: analytics
          x-displayName: Behavioral analytics
      # C 
        - name: cat
          x-displayName: Compact and aligned text (CAT)
          description: >
            The compact and aligned text (CAT) APIs aim are intended only for human consumption using the Kibana console or command line.
            They are not intended for use by applications.
            For application consumption, it's recommend to use a corresponding JSON API.
            
            All the cat commands accept a query string parameter `help` to see all the headers and info they provide, and the `/_cat` command alone lists all the available commands.
        - name: cluster
          x-displayName: Cluster
        - name: health_report
          x-displayName: Cluster - Health
        - name: connector
          x-displayName: Connector
          description: >
            The connector and sync jobs APIs provide a convenient way to create and manage Elastic connectors and sync jobs in an internal index.
            
            Connectors are Elasticsearch integrations that bring content from third-party data sources, which can be deployed on Elastic Cloud or hosted on your own infrastructure:
            
            * Elastic managed connectors (Native connectors) are a managed service on Elastic Cloud
            
            * Self-managed connectors (Connector clients) are self-managed on your infrastructure.
            
            
            This API provides an alternative to relying solely on Kibana UI for connector and sync job management. The API comes with a set of validations and assertions to ensure that the state representation in the internal index remains valid.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/master/es-connectors-tutorial-api.html
            description: Check out the connector API tutorial
        - name: ccr
          x-displayName: Cross-cluster replication
      # D
        - name: data stream
          x-displayName: Data stream
          externalDocs:
            description: Learn more about data streams. 
            url: https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams.html
        - name: document
          x-displayName: Document
          externalDocs:
            description: Learn more about reading and writing documents.
            url: https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-replication.html
      # E  
        - name: enrich
          x-displayName: Enrich
        - name: eql
          x-displayName: EQL
          description: >
            Event Query Language (EQL) is a query language for event-based time series data, such as logs, metrics, and traces.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/master/eql.html
            description: Learn more about EQL search.
        - name: esql
          x-displayName: ES|QL
          description: >
            The Elasticsearch Query Language (ES|QL) provides a powerful way to filter, transform, and analyze data stored in Elasticsearch, and in the future in other runtimes.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/master/esql.html
            description: Learn more about ES|QL.
      # F
        - name: features
          description: The feature APIs enable you to introspect and manage features provided by Elasticsearch and Elasticsearch plugins.
          x-displayName: Features
        - name: fleet
          x-displayName: Fleet
      # G
        - name: graph
          x-displayName: Graph explore
          description: >
            The graph explore API enables you to extract and summarize information about the documents and terms in an Elasticsearch data stream or index.
          externalDocs:
            url: https://www.elastic.co/guide/en/kibana/master/xpack-graph.html
            description: Get started with Graph.
      # I
        - name: indices
          x-displayName: Index
          description: >
            Index APIs enable you to manage individual indices, index settings, aliases, mappings, and index templates.
        - name: ilm
          x-displayName: Index lifecycle management
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/master/index-lifecycle-management.html
            description: Learn more about managing the index lifecycle.
        - name: inference
          x-displayName: Inference
          description: >
            Inference APIs enable you to use certain services, such as built-in machine learning models (ELSER, E5), models uploaded through Eland, Cohere, OpenAI, Azure, Google AI Studio or Hugging Face.
            For built-in models and models uploaded through Eland, the inference APIs offer an alternative way to use and manage trained models.
            However, if you do not plan to use the inference APIs to use these models or if you want to use non-NLP models, use the machine learning trained model APIs.
        - name: info
          x-displayName: Info
        - name: ingest
          x-displayName: Ingest
          description: Ingest APIs enable you to manage tasks and resources related to ingest pipelines and processors.
      # L  
        - name: license
          x-displayName: Licensing
          description: Licensing APIs enable you to manage your licenses.
          externalDocs:
            url: https://www.elastic.co/subscriptions
            description: For more information about the different types of licenses, refer to Elastic subscriptions.
        - name: logstash
          x-displayName: Logstash
          description: >
            Logstash APIs enable you to manage pipelines that are used by Logstash Central Management.
          externalDocs:
            url: https://www.elastic.co/guide/en/logstash/master/logstash-centralized-pipeline-management.html
            description: Learn more about centralized pipeline management.
      # M
        - name: ml
          x-displayName: Machine learning
        - name: ml anomaly
          x-displayName: Machine learning anomaly detection
          # description:
          externalDocs:
            url: https://www.elastic.co/guide/en/machine-learning/master/ml-ad-finding-anomalies.html
            description: Learn more about finding anomalies.
        - name: ml data frame
          x-displayName: Machine learning data frame analytics
          # description:
          externalDocs:
            url: https://www.elastic.co/guide/en/machine-learning/master/ml-dfa-overview.html
            description: Learn more about data frame analytics.
        - name: ml trained model
          x-displayName: Machine learning trained model
          # description:
          externalDocs:
            url: https://www.elastic.co/guide/en/machine-learning/master/ml-nlp-overview.html
            description: Learn more about natural language processing.
        - name: migration
          x-displayName: Migration
        - name: monitoring
          x-displayName: Monitoring
      # N
        - name: shutdown
          x-displayName: Node lifecycle
      # Q
        - name: query_rules
          x-displayName: Query rules
          description: >
            Query rules enable you to configure per-query rules that are applied at query time to queries that match the specific rule.
            Query rules are organized into rulesets, collections of query rules that are matched against incoming queries.
            Query rules are applied using the rule query.
            
            If a query matches one or more rules in the ruleset, the query is re-written to apply the rules before searching.
            This allows pinning documents for only queries that match a specific term.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/master/query-dsl-rule-query.html
            description: Learn more about the rule query.
      # R
        - name: rollup
          x-displayName: Rollup
      # S
        - name: script
          x-displayName: Script
        - name: search
          x-displayName: Search
        - name: search_application
          x-displayName: Search application
        - name: searchable_snapshots
          x-displayName: Searchable snapshots
        - name: security
          x-displayName: Security
        - name: snapshot
          x-displayName: Snapshot and restore
          description: >
            Snapshot and restore APIs enable you to set up snapshot repositories, manage snapshot backups, and restore snapshots to a running cluster.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/master/snapshot-restore.html
            description: Learn more about snapshot and restore operations.
        - name: slm
          x-displayName: Snapshot lifecycle management
          description: >
            Snapshot lifecycle management (SLM) APIs enable you to set up policies to automatically take snapshots and control how long they are retained.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/master/snapshots-take-snapshot.html
            description: Learn more about creating a snapshot.
        - name: sql
          x-displayName: SQL
          description: >
            Elasticsearch's SQL APIs enable you to run SQL queries on Elasticsearch indices and data streams.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/master/xpack-sql.html
            description: Check out the overview and tutorials for the Elasticsearch SQL features.
        - name: synonyms
          x-displayName: Synonyms
          description: >
            The synonyms management API provides a convenient way to define and manage synonyms in an internal system index.
            Related synonyms can be grouped in a "synonyms set".
            Create as many synonym sets as you need.
      # T  
        - name: tasks
          x-displayName: Task management
        - name: text_structure
          x-displayName: Text structure
        - name: transform
          x-displayName: Transform
      # U
        - name: xpack
          x-displayName: Usage
      # W
        - name: watcher
          x-displayName: Watcher
          description: >
            You can use Watcher to watch for changes or anomalies in your data and perform the necessary actions in response.
          externalDocs:
            url: https://www.elastic.co/guide/en/elasticsearch/reference/master/xpack-alerting.html
            description: Learn more about Watcher.
# Add x-model and/or abbreviate schemas that should point to other references
  - target: "$.components['schemas']['_types.query_dsl:QueryContainer']"
    description: Add x-model for the QueryContainer object
    update:
      x-model: true
  - target: "$.components['schemas']['_types.analysis:CharFilter'].oneOf"
    description: Remove existing oneOf definition for CharFilter
    remove: true
  - target: "$.components['schemas']['_types.analysis:CharFilter']"
    description: Simplify CharFilter definition
    update:
      x-model: true
  - target: "$.components['schemas']['_types.analysis:Tokenizer'].oneOf"
    description: Remove existing oneOf definition for tokenizer
    remove: true
  - target: "$.components['schemas']['_types.analysis:Tokenizer']"
    description: Simplify tokenizer definition
    update:
      x-model: true
  - target: "$.components['schemas']['_types.analysis:TokenFilter'].oneOf"
    description: Remove existing oneOf definition for tokenfilter
    remove: true
  - target: "$.components['schemas']['_types.analysis:TokenFilter']"
    description: Simplify tokenfilter definition
    update:
      x-model: true
  - target: "$.components['schemas']['security._types:RoleTemplateScript']"
    description: Add x-model where recommended by Bump.sh
    update:
      x-model: true
      externalDocs:
        description: Templating a role query
        url: https://www.elastic.co/guide/en/elasticsearch/reference/master/field-and-document-access-control.html#templating-role-query
  - target: "$.components['schemas']['_types.query_dsl:DistanceFeatureQuery']"
    description: Add x-model for distance feature query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:GeoShapeQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:GeoPolygonQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:GeoDistanceQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:DistanceFeatureQueryBase']"
    description: Add x-model to distance feature query base
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:GeoDistanceFeatureQuery']"
    description: Add x-model to geo distance feature query 
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:DistanceFeatureQueryBaseGeoLocationDistance']"
    description: Add x-model to distance feature query base geolocation distance
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:DateDistanceFeatureQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:DistanceFeatureQueryBaseDateMathDuration']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:MoreLikeThisQuery']"
    description: Add x-model for more like this query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:PercolateQuery']"
    description: Add x-model for percolate query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:RankFeatureQuery']"
    description: Add x-model for rank feature query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:ScriptQuery']"
    description: Add x-model for script query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:ScriptScoreFunction']"
    description: Add x-model for script score query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:ScriptScoreQuery']"
    description: Add x-model for script score query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:WrapperQuery']"
    description: Add x-model for wrapper query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:PinnedQuery']"
    description: Add x-model for pinned query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:RuleQuery']"
    description: Add x-model for rule query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:BoolQuery']"
    description: Add x-model for boolean query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:QueryBase']"
    description: Add x-model for query base
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:BoostingQuery']"
    description: Add x-model for query base
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:CommonTermsQuery']"
    description: Add x-model for common terms query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:CombinedFieldsQuery']"
    description: Add x-model for combined fields query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:ConstantScoreQuery']"
    description: Add x-model for constant score query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:DisMaxQuery']"
    description: Add x-model to Disjunction max query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:UntypedDistanceFeatureQuery']"
    description: Add x-model to untyped distance feature query
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:ExistsQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:FunctionScoreQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:FunctionScoreContainer']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:DecayFunction']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:UntypedDecayFunction']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:DecayFunctionBase']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:MultiValueMode']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:DateDecayFunction']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:DecayFunctionBaseDateMathDuration']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:NumericDecayFunction']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:DecayFunctionBasedoubledouble']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:GeoDecayFunction']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:DecayFunctionBaseGeoLocationDistance']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:FieldValueFactorScoreFunction']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:RandomScoreFunction']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:FuzzyQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:GeoBoundingBoxQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:HasChildQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:HasParentQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:ParentIdQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:IntervalsQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:IntervalsAllOf']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:IntervalsContainer']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:IntervalsAnyOf']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:IntervalsFilter']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:IntervalsFuzzy']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:IntervalsMatch']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:IntervalsPrefix']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:IntervalsWildcard']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:MatchQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:MatchBoolPrefixQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:MatchPhraseQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:MatchPhrasePrefixQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:MultiMatchQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:QueryStringQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SimpleQueryStringQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:ShapeQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:NestedQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:MatchAllQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:MatchNoneQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SpanContainingQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SpanFieldMaskingQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SpanFirstQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SpanMultiTermQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SpanNearQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SpanNotQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SpanOrQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SpanTermQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SpanWithinQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types:KnnQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SparseVectorQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:SemanticQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:TextExpansionQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:WeightedTokensQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:IdsQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:PrefixQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:RangeQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:RegexpQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:TermQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:TermsQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:TermsSetQuery']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.query_dsl:WildcardQuery']"
    description: Add x-model
    update:
      x-model: true
# Abbreviate and annotate items that are not shown in Bump.sh due to depth limits
  - target: "$.components['schemas']['_types.aggregations:Aggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:CardinalityAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:HdrPercentilesAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:HdrPercentileRanksAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:PercentileRanksAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:TDigestPercentilesAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:TDigestPercentileRanksAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:PercentilesBucketAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:MedianAbsoluteDeviationAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:MinAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:MaxAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:SumAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:AvgAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:WeightedAvgAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:ValueCountAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:SimpleValueAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:DerivativeAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:BucketMetricValueAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:StatsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:StatsBucketAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:ExtendedStatsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:ExtendedStatsBucketAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:GeoBoundsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:GeoCentroidAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:HistogramAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:DateHistogramAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:AutoDateHistogramAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:VariableWidthHistogramAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:StringTermsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:LongTermsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:DoubleTermsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:UnmappedTermsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:LongRareTermsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:StringRareTermsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:UnmappedRareTermsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:MultiTermsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:MissingAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:NestedAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:ReverseNestedAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:GlobalAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:FilterAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:ChildrenAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:ParentAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:SamplerAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:UnmappedSamplerAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:GeoHashGridAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:GeoTileGridAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:GeoHexGridAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:RangeAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:DateRangeAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:GeoDistanceAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:IpRangeAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:IpPrefixAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:FiltersAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:AdjacencyMatrixAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:SignificantLongTermsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:SignificantStringTermsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:UnmappedSignificantTermsAggregate']"
    description: Add x-model
    update:
      x-model: true 
  - target: "$.components['schemas']['_types.aggregations:SignificantTermsAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:CompositeAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:FrequentItemSetsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:TimeSeriesAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:ScriptedMetricAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:TopHitsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:InferenceAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:StringStatsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:BoxPlotAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:TopMetricsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:TTestAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:RateAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:CumulativeCardinalityAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:MatrixStatsAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:GeoLineAggregate']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:AutoDateHistogramAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:CategorizeTextAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:DiversifiedSamplerAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:RandomSamplerAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:RareTermsAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:SignificantTextAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:TermsAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:AverageBucketAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:BucketScriptAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:BucketKsAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:BucketCorrelationAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:BucketSelectorAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:BucketSortAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:CumulativeSumAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:MaxBucketAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:MinBucketAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:MovingFunctionAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:MovingPercentilesAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:NormalizeAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:SerialDifferencingAggregation']"
    description: Add x-model
    update:
      x-model: true
  - target: "$.components['schemas']['_types.aggregations:SumBucketAggregation']"
    description: Add x-model
    update:
      x-model: true 
  - target: "$.components['schemas']['_types.query_dsl:LikeDocument']"
    description: Add x-model to LikeDocument schema
    update:
      x-model: true
  - target: "$.components['schemas']['ml._types:Datafeed'].properties.query"
    description: Remove query object from anomaly detection datafeed
    remove: true
  - target: "$.components['schemas']['ml._types:Datafeed'].properties"
    description: Re-add a simplified query object in anomaly detection datafeed
    update:
      query:
        x-model: true
        type: object
        description: >
          The Elasticsearch query domain-specific language (DSL).
          This value corresponds to the query object in an Elasticsearch search POST body.
          All the options that are supported by Elasticsearch can be used, as this object is passed verbatim to Elasticsearch.
          By default, this property has the following value: `{"match_all": {"boost": 1}}`.
        externalDocs:
          url: https://www.elastic.co/guide/en/elasticsearch/reference/master/query-dsl.html
          description: Query DSL
  - target: "$.components['schemas']['ml._types:CategorizationAnalyzerDefinition'].properties.tokenizer"
    description: Remove tokenizer object from ML anomaly detection analysis config
    remove: true
  - target: "$.components['schemas']['ml._types:CategorizationAnalyzerDefinition'].properties"
    description: Re-add a simplified tokenizer object in anomaly detection analysis config
    update:
      tokenizer:
        x-model: true
        oneOf:
          - type: object
          - type: string
        description: >
          The name or definition of the tokenizer to use after character filters are applied.
          This property is compulsory if `categorization_analyzer` is specified as an object.
          Machine learning provides a tokenizer called `ml_standard` that tokenizes in a way that has been determined to produce good categorization results on a variety of log file formats for logs in English.
          If you want to use that tokenizer but change the character or token filters, specify `"tokenizer": "ml_standard"` in your `categorization_analyzer`.
          Additionally, the `ml_classic` tokenizer is available, which tokenizes in the same way as the non-customizable tokenizer in old versions of the product (before 6.2).
          `ml_classic` was the default categorization tokenizer in versions 6.2 to 7.13, so if you need categorization identical to the default for jobs created in these versions, specify `"tokenizer": "ml_classic"` in your `categorization_analyzer`.
        externalDocs:
          url: https://www.elastic.co/guide/en/elasticsearch/reference/master/analysis-tokenizers.html
          description: Tokenizer reference
  - target: "$.components['schemas']['ml._types:DataframeAnalyticsSource'].properties.query"
    description: Remove query object from data frame analytics source
    remove: true
  - target: "$.components['schemas']['ml._types:DataframeAnalyticsSource'].properties"
    description: Re-add a simplified query object in data frame analytics source
    update:
      query:
        x-model: true
        type: object
        description: >
          The Elasticsearch query domain-specific language (DSL).
          This value corresponds to the query object in an Elasticsearch search POST body.
          All the options that are supported by Elasticsearch can be used, as this object is passed verbatim to Elasticsearch.
          By default, this property has the following value: `{"match_all": {}}`.
        externalDocs:
          url: https://www.elastic.co/guide/en/elasticsearch/reference/master/query-dsl.html
          description: Query DSL
  - target: "$.components['schemas']['transform._types:Source'].properties.query"
    description: Remove query object from transform source
    remove: true
  - target: "$.components['schemas']['transform._types:Source'].properties"
    description: Re-add a simplified query object in transform source
    update:
      query:
        x-model: true
        type: object
        description: >
          A query clause that retrieves a subset of data from the source index.
        externalDocs:
          url: https://www.elastic.co/guide/en/elasticsearch/reference/master/query-dsl.html
          description: Query DSL
  - target: "$.components['schemas']['_global.search._types:FieldCollapse']"
    description: Add x-model and externalDocs
    update:
      x-model: true
      externalDocs:
        url: https://www.elastic.co/guide/en/elasticsearch/reference/master/collapse-search-results.html
  - target: "$.components['schemas']['_global.msearch:MultisearchBody'].properties"
    description: Add x-model
    update:
      aggregations:
        x-model: true
# Examples
  - target: "$.components['requestBodies']['async_search.submit']"
    description: "Add example for asynch search submit request"
    update: 
      content:
        application/json:
          examples:
            asyncSearchSubmitRequestExample1:
              $ref: "../../specification/async_search/submit/examples/request/AsyncSearchSubmitRequestExample1.yaml"
  - target: "$.components['responses']['async_search.submit#200']"
    description: "Add example for asynch search submit response"
    update: 
      content:
        application/json:
          examples:
            asyncSearchSubmitResponseExample1:
              $ref: "../../specification/async_search/submit/examples/response/AsyncSearchSubmitResponseExample1.yaml"
  - target: "$.paths['/_transform/{transform_id}']['put']"
    description: "Add examples for create transform operation"
    update: 
      requestBody: 
        content: 
          application/json: 
            examples: 
              createTransformRequestExample1: 
                $ref: "../../specification/transform/put_transform/examples/request/PutTransformRequestExample1.yaml"
              createTransformRequestExample2:
                $ref: "../../specification/transform/put_transform/examples/request/PutTransformRequestExample2.yaml"
      responses:
        200:
          content:
            application/json:
              examples:
                createTransformResponseExample1:
                  $ref: "../../specification/transform/put_transform/examples/response/PutTransformResponseExample1.yaml"
  - target: "$.components['requestBodies']['transform.preview_transform']"
    description: "Add examples for preview transform operation"
    update: 
      content: 
        application/json: 
          examples: 
            previewTransformRequestExample1: 
              $ref: "../../specification/transform/preview_transform/examples/request/PreviewTransformRequestExample1.yaml"
  - target: "$.components['responses']['transform.preview_transform#200']"
    description: "Add examples for preview transform operation"
    update: 
      content:
        application/json:
          examples:
            previewTransformResponseExample1:
              $ref: "../../specification/transform/preview_transform/examples/response/PreviewTransformResponseExample1.yaml"
  - target: "$.paths['/_transform/{transform_id}/_update']['post']"
    description: "Add examples for update transform operation"
    update: 
      requestBody: 
        content: 
          application/json: 
            examples: 
              updateTransformRequestExample1: 
                $ref: "../../specification/transform/update_transform/examples/request/UpdateTransformRequestExample1.yaml"
      responses:
        200:
          content:
            application/json:
              examples:
                updateTransformResponseExample1:
                  $ref: "../../specification/transform/update_transform/examples/response/UpdateTransformResponseExample1.yaml"
  - target: "$.paths['/_eql/search/status/{id}']['get']"
    description: "Add examples for get async EQL status operation"
    update: 
      responses:
        200:
          content:
            application/json:
              examples:
                eqlGetStatusResponseExample1:
                  $ref: "../../specification/eql/get_status/examples/response/EqlGetStatusResponseExample1.yaml"
  - target: "$.components['requestBodies']['eql.search']"
    description: "Add examples for EQL search operation"
    update: 
      content: 
        application/json: 
          examples: 
            eqlSearchRequestExample1: 
              $ref: "../../specification/eql/search/examples/request/EqlSearchRequestExample1.yaml"
            eqlSearchRequestExample2: 
              $ref: "../../specification/eql/search/examples/request/EqlSearchRequestExample2.yaml"
  - target: "$.components['reponses']['eql.search#200']"
    description: "Add examples for EQL search operation"
    update: 
      content:
        application/json:
          examples:
            eqlSearchResponseExample2:
              $ref: "../../specification/eql/search/examples/response/EqlSearchResponseExample2.yaml"
  - target: "$.paths['/_query']['post']"
    description: "Add examples for ES|QL query operation"
    update: 
      requestBody: 
        content: 
          application/json: 
            examples: 
              esqlQueryRequestExample1: 
                $ref: "../../specification/esql/query/examples/request/QueryRequestExample1.yaml"
  - target: "$.components['requestBodies']['graph.explore']"
    description: "Add example for graph explore request"
    update: 
      content:
        application/json:
          examples:
            graphExploreRequestExample1:
              $ref: "../../specification/graph/explore/examples/request/GraphExploreRequestExample1.yaml"
  - target: "$.paths['/{index}/_block/{block}']['put']"
    description: "Add examples for add index block operation"
    update: 
      responses:
        200:
          content:
            application/json:
              examples:
                indicesAddBlockResponseExample1:
                  $ref: "../../specification/indices/add_block/examples/response/IndicesAddBlockResponseExample1.yaml"
  - target: "$.components['requestBodies']['indices.analyze']"
    description: "Add example for analyze API request"
    update: 
      content:
        application/json:
          examples:
            indicesAnalyzeRequestExample1:
              $ref: "../../specification/indices/analyze/examples/request/indicesAnalyzeRequestExample1.yaml"
  - target: "$.paths['/{index}']['put']"
    description: "Add examples for create index request"
    update: 
      requestBody:
        content:
          application/json:
            examples:
              indicesCreateRequestExample1:
                $ref: "../../specification/indices/create/examples/request/indicesCreateRequestExample1.yaml"
              indicesCreateRequestExample2:
                $ref: "../../specification/indices/create/examples/request/indicesCreateRequestExample2.yaml"
  - target: "$.paths['/_data_stream/{name}/_lifecycle']['delete']"
    description: "Add example for delete data stream lifecycle response"
    update: 
      responses:
        200:
          content:
            application/json:
              examples:
                indicesDeleteDataLifecycleResponseExample1:
                  $ref: "../../specification/indices/delete_data_lifecycle/examples/200_response/IndicesDeleteDataLifecycleResponseExample1.yaml"
  - target: "$.paths['/_data_stream/{name}/_lifecycle']['get']"
    description: "Add example for get data stream lifecycle response"
    update: 
      responses:
        200:
          content:
            application/json:
              examples:
                indicesGetDataLifecycleResponseExample1:
                  $ref: "../../specification/indices/get_data_lifecycle/examples/response/IndicesGetDataLifecycleResponseExample1.yaml"
  - target: "$.components['responses']['indices.get_data_stream#200']"
    description: "Add example for get data stream response"
    update: 
      content:
        application/json:
          examples:
            indicesGetDataStreamResponseExample:
              $ref: "../../specification/indices/get_data_stream/examples/200_response/indicesGetDataStreamResponseExample1.yaml"
  - target: "$.paths['/_data_stream/{name}/_lifecycle']['put']"
    description: "Add examples update data stream lifecycle request and response"
    update: 
      requestBody: 
        content: 
          application/json: 
            examples: 
              indicesPutDataLifecycleRequestExample1: 
                $ref: "../../specification/indices/put_data_lifecycle/examples/request/IndicesPutDataLifecycleRequestExample1.yaml"
              indicesPutLifecycleRequestExample2:
                $ref: "../../specification/indices/put_data_lifecycle/examples/request/IndicesPutDataLifecycleRequestExample2.yaml"
      responses:
        200:
          content:
            application/json:
              examples:
                indicesPutDataLifecycleResponseExample1:
                  $ref: "../../specification/indices/put_data_lifecycle/examples/200_response/IndicesPutDataLifecycleResponseExample1.yaml"
  - target: "$.paths['/{index}/_lifecycle/explain']['get']"
    description: "Add example for explain data stream lifecycle response"
    update: 
      responses:
        200:
          content:
            application/json:
              examples:
                indicesExplainDataLifecycleResponseExample:
                  $ref: "../../specification/indices/explain_data_lifecycle/examples/response/IndicesExplainDataLifecycleResponseExample1.yaml"
  - target: "$.components['responses']['ingest.get_pipeline#200']"
    description: "Add example for get pipeline response"
    update: 
      content:
        application/json:
          examples:
            indicesGetDataStreamResponseExample:
              $ref: "../../specification/ingest/get_pipeline/examples/200_response/GetPipelineResponseExample1.yaml"
  - target: "$.paths['/_ingest/pipeline/{id}']['put']"
    description: "Add examples for create pipeline"
    update: 
      requestBody: 
        content: 
          application/json: 
            examples: 
              putPipelineRequestExample1: 
                $ref: "../../specification/ingest/put_pipeline/examples/request/PutPipelineRequestExample1.yaml"
              putPipelineRequestExample2: 
                $ref: "../../specification/ingest/put_pipeline/examples/request/PutPipelineRequestExample2.yaml"
  - target: "$.components['requestBodies']['ingest.simulate']"
    description: "Add example for simulate pipeline request"
    update: 
      content:
        application/json:
          examples:
            simulatePipelineRequestExample1:
              $ref: "../../specification/ingest/simulate/examples/request/SimulatePipelineRequestExample1.yaml"
  - target: "$.components['responses']['ingest.simulate#200']"
    description: "Add example for simulate pipeline response"
    update: 
      content:
        application/json:
          examples:
            simulatePipelineResponseExample1:
              $ref: "../../specification/ingest/simulate/examples/response/SimulatePipelineResponseExample1.yaml"
  - target: "$.components['requestBodies']['indices.put_index_template']"
    description: "Add example for create index template request"
    update: 
      content:
        application/json:
          examples:
            indicesPutIndexTemplateRequestExample1:
              $ref: "../../specification/indices/put_index_template/examples/request/indicesPutIndexTemplateRequestExample1.yaml"
  - target: "$.components['requestBodies']['indices.put_mapping']"
    description: "Add example for update mapping request"
    update: 
      content:
        application/json:
          examples:
            indicesPutSettingRequestExample1:
              $ref: "../../specification/indices/put_mapping/examples/request/indicesPutMappingRequestExample1.yaml"
  - target: "$.components['requestBodies']['indices.put_settings']"
    description: "Add example for update index settings request"
    update: 
      content:
        application/json:
          examples:
            indicesPutSettingRequestExample1:
              $ref: "../../specification/indices/put_settings/examples/request/IndicesPutSettingsRequestExample1.yaml"
  - target: "$.paths['/_resolve/index/{name}']['get']"
    description: "Add examples for resolve index operation"
    update: 
      responses:
        200:
          content:
            application/json:
              examples:
                indicesResolveResponseExample1:
                  $ref: "../../specification/indices/resolve_index/examples/response/ResolveIndexResponseExample1.yaml"
  - target: "$.components['requestBodies']['indices.rollover']"
    description: "Add example for rollover index request"
    update: 
      content:
        application/json:
          examples:
            indicesRolloverRequestExample1:
              $ref: "../../specification/indices/rollover/examples/request/indicesRolloverRequestExample1.yaml"
  - target: "$.components['responses']['indices.rollover#200']"
    description: "Add example for rollover index response"
    update: 
      content:
        application/json:
          examples:
            indicesRolloverResponseExample1:
              $ref: "../../specification/indices/rollover/examples/200_response/indicesRolloverResponseExample1.yaml"
## Examples for behavioral analytics
  - target: "$.components['responses']['search_application.get_behavioral_analytics#200']"
    description: "Add example for get behavioral analytics collections response"
    update: 
      content:
        application/json:
          examples:
            getBehavioralAnalyticsCollectionsResponseExample1:
              $ref: "../../specification/search_application/get_behavioral_analytics/examples/200_response/BehavioralAnalyticsGetResponseExample1.yaml"
## Examples for cat
  - target: "$.components['responses']['cat.aliases#200']"
    description: "Add example for cat aliases response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catAliasesResponseExample1:
              $ref: "../../specification/cat/aliases/examples/200_response/CatAliasesResponseExample1.yaml"
  - target: "$.components['responses']['cat.allocation#200']"
    description: "Add example for cat allocation response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catAllocationResponseExample1:
              $ref: "../../specification/cat/allocation/examples/200_response/CatAllocationResponseExample1.yaml"
  - target: "$.components['responses']['cat.component_templates#200']"
    description: "Add example for cat component templates response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catComponentTemplatesResponseExample1:
              $ref: "../../specification/cat/component_templates/examples/200_response/CatComponentTemplatesResponseExample1.yaml"
  - target: "$.components['responses']['cat.count#200']"
    description: "Add example for cat count response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catCountResponseExample1:
              $ref: "../../specification/cat/count/examples/200_response/CatCountResponseExample1.yaml"
            catCountResponseExample2:
              $ref: "../../specification/cat/count/examples/200_response/CatCountResponseExample2.yaml" 
  - target: "$.components['responses']['cat.fielddata#200']"
    description: "Add example for cat fielddata response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catFieldDataResponseExample1:
              $ref: "../../specification/cat/fielddata/examples/200_response/CatFielddataResponseExample1.yaml"
            catFieldDataResponseExample2:
              $ref: "../../specification/cat/fielddata/examples/200_response/CatFielddataResponseExample2.yaml" 
  - target: "$.components['responses']['cat.indices#200']"
    description: "Add example for cat indices response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catIndicesResponseExample1:
              $ref: "../../specification/cat/indices/examples/200_response/CatIndicesResponseExample1.yaml" 
  - target: "$.components['responses']['cat.ml_datafeeds#200']"
    description: "Add example for cat datafeeds response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catDatafeedsResponseExample1:
              $ref: "../../specification/cat/ml_datafeeds/examples/200_response/CatDatafeedsResponseExample1.yaml"
  - target: "$.components['responses']['cat.ml_data_frame_analytics#200']"
    description: "Add example for cat data frame analytics response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catDataFrameAnalyticsResponseExample1:
              $ref: "../../specification/cat/ml_data_frame_analytics/examples/200_response/CatDataFrameAnalyticsResponseExample1.yaml" 
  - target: "$.components['responses']['cat.ml_jobs#200']"
    description: "Add example for cat anomaly detectors response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catAnomalyDetectorsResponseExample1:
              $ref: "../../specification/cat/ml_jobs/examples/200_response/CatJobsResponseExample1.yaml"
  - target: "$.components['responses']['cat.ml_trained_models#200']"
    description: "Add example for cat trained models response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catTrainedModelsResponseExample1:
              $ref: "../../specification/cat/ml_trained_models/examples/200_response/CatTrainedModelsResponseExample1.yaml"
  - target: "$.components['responses']['cat.recovery#200']"
    description: "Add example for cat recovery response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catRecoveryResponseExample1:
              $ref: "../../specification/cat/recovery/examples/200_response/CatRecoveryResponseExample1.yaml"
            catRecoveryResponseExample2:
              $ref: "../../specification/cat/recovery/examples/200_response/CatRecoveryResponseExample2.yaml"
            catRecoveryResponseExample3:
              $ref: "../../specification/cat/recovery/examples/200_response/CatRecoveryResponseExample3.yaml"
  - target: "$.components['responses']['cat.segments#200']"
    description: "Add example for cat segments response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catSegmentsResponseExample1:
              $ref: "../../specification/cat/segments/examples/200_response/CatSegmentsResponseExample1.yaml"
  - target: "$.components['responses']['cat.shards#200']"
    description: "Add example for cat shards response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catShardsResponseExample1:
              $ref: "../../specification/cat/shards/examples/200_response/CatShardsResponseExample1.yaml"
            catShardsResponseExample2:
              $ref: "../../specification/cat/shards/examples/200_response/CatShardsResponseExample2.yaml"
            catShardsResponseExample3:
              $ref: "../../specification/cat/shards/examples/200_response/CatShardsResponseExample3.yaml"
            catShardsResponseExample4:
              $ref: "../../specification/cat/shards/examples/200_response/CatShardsResponseExample4.yaml"
            catShardsResponseExample5:
              $ref: "../../specification/cat/shards/examples/200_response/CatShardsResponseExample5.yaml"
  - target: "$.components['responses']['cat.snapshots#200']"
    description: "Add example for cat snapshot response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catSnapshotsResponseExample1:
              $ref: "../../specification/cat/snapshots/examples/200_response/CatSnapshotsResponseExample1.yaml"
  - target: "$.components['responses']['cat.templates#200']"
    description: "Add example for cat templates response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catTemplatesResponseExample1:
              $ref: "../../specification/cat/templates/examples/200_response/CatTemplatesResponseExample1.yaml"
  - target: "$.components['responses']['cat.thread_pool#200']"
    description: "Add example for cat thread pool response"
    update: 
      content:
        text/plain:
          schema:
            type: string
          examples:
            catThreadPoolResponseExample1:
              $ref: "../../specification/cat/thread_pool/examples/200_response/CatThreadPoolResponseExample1.yaml"
            catThreadPoolResponseExample2:
              $ref: "../../specification/cat/thread_pool/examples/200_response/CatThreadPoolResponseExample2.yaml"
  - target: "$.components['responses']['cat.transforms#200']"
    description: "Add example for cat transforms response"
    update: 
      content:
        application/json:
          examples:
            catTransformsResponseExample1:
              $ref: "../../specification/cat/transforms/examples/200_response/CatTransformsResponseExample1.yaml"
  - target: "$.paths['/_cat/health']['get']"
    description: "Add examples for cat health operation"
    update: 
      responses:
        200: 
          content:
            text/plain:
              schema:
                type: string
              examples:
                catMasterResponseExample1: 
                  $ref: "../../specification/cat/health/examples/200_response/CatHealthResponseExample1.yaml"
  - target: "$.paths['/_cat/master']['get']"
    description: "Add examples for cat master operation"
    update: 
      responses:
        200: 
          content:
            text/plain:
              schema:
                type: string
              examples:
                catMasterResponseExample1: 
                  $ref: "../../specification/cat/master/examples/200_response/CatMasterResponseExample1.yaml"
  - target: "$.paths['/_cat/nodeattrs']['get']"
    description: "Add examples for cat node attributes operation"
    update: 
      responses:
        200: 
          content:
            text/plain:
              schema:
                type: string
              examples:
                catNodeAttributesResponseExample1: 
                  $ref: "../../specification/cat/nodeattrs/examples/200_response/CatNodeAttributesResponseExample1.yaml"
                catNodeAttributesResponseExample2: 
                  $ref: "../../specification/cat/nodeattrs/examples/200_response/CatNodeAttributesResponseExample2.yaml"
  - target: "$.paths['/_cat/nodes']['get']"
    description: "Add examples for cat nodes operation"
    update: 
      responses:
        200: 
          content:
            text/plain:
              schema:
                type: string
              examples:
                catNodesResponseExample1: 
                  $ref: "../../specification/cat/nodes/examples/200_response/CatNodesResponseExample1.yaml"
                catNodesResponseExample2: 
                  $ref: "../../specification/cat/nodes/examples/200_response/CatNodesResponseExample2.yaml"
  - target: "$.paths['/_cat/pending_tasks']['get']"
    description: "Add examples for cat pending tasks operation"
    update: 
      responses:
        200: 
          content:
            text/plain:
              schema:
                type: string
              examples:
                catPendingTasksResponseExample1: 
                  $ref: "../../specification/cat/pending_tasks/examples/200_response/CatPendingTasksResponseExample1.yaml"
  - target: "$.paths['/_cat/plugins']['get']"
    description: "Add examples for cat plugins operation"
    update: 
      responses:
        200: 
          content:
            text/plain:
              schema:
                type: string
              examples:
                catPluginsResponseExample1: 
                  $ref: "../../specification/cat/plugins/examples/200_response/CatPluginsResponseExample1.yaml"
  - target: "$.paths['/_cat/repositories']['get']"
    description: "Add examples for cat repositories operation"
    update: 
      responses:
        200: 
          content:
            text/plain:
              schema:
                type: string
              examples:
                catRepositoriesResponseExample1: 
                  $ref: "../../specification/cat/repositories/examples/200_response/CatRepositoriesResponseExample1.yaml"
  - target: "$.paths['/_cat/tasks']['get']"
    description: "Add examples for cat tasks operation"
    update: 
      responses:
        200: 
          content:
            text/plain:
              schema:
                type: string
              examples:
                catTasksResponseExample1: 
                  $ref: "../../specification/cat/tasks/examples/200_response/CatTasksResponseExample1.yaml"
## Examples for licensing
  - target: "$.paths['/_license']['get']"
    description: "Add example for get license response"
    update: 
      responses:
        200:
          content:
            application/json:
              examples:
                getLicenseResponseExample1:
                  $ref: "../../specification/license/get/examples/response/GetLicenseResponseExample1.yaml"
## Examples for search applications
  - target: "$.paths['/_application/search_application']['get']"
    description: "Add examples for get search applications operation"
    update: 
      responses:
        200: 
          content: 
            application/json: 
              examples: 
                getSearchApplicationsResponseExample1: 
                  $ref: "../../specification/search_application/list/examples/200_response/SearchApplicationsListResponseExample1.yaml"
  - target: "$.paths['/_application/search_application/{name}']['get']"
    description: "Add examples for get search application details operation"
    update: 
      responses:
        200: 
          content: 
            application/json: 
              examples: 
                getSearchApplicationResponseExample1: 
                  $ref: "../../specification/search_application/get/examples/200_response/SearchApplicationGetResponseExample1.yaml"
  - target: "$.paths['/_application/search_application/{name}']['put']"
    description: "Add examples for create search application operation"
    update: 
      requestBody: 
        content: 
          application/json: 
            examples: 
              putSearchApplicationRequestExample1: 
                $ref: "../../specification/search_application/put/examples/request/SearchApplicationPutRequestExample1.yaml"
  - target: "$.components['requestBodies']['search_application.search']"
    description: "Add example for search application search request"
    update: 
      content:
        application/json:
          examples:
            searchApplicationSearchRequestExample1:
              $ref: "../../specification/search_application/search/examples/request/SearchApplicationsSearchRequestExample1.yaml"
