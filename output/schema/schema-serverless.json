{
  "_info": {
    "license": {
      "name": "Apache 2.0",
      "url": "https://github.com/elastic/elasticsearch-specification/blob/main/LICENSE"
    },
    "title": "Elasticsearch Request & Response Specification"
  },
  "endpoints": [
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.7.0",
          "stability": "stable"
        }
      },
      "description": "Delete an async search.\n\nIf the asynchronous search is still running, it is cancelled.\nOtherwise, the saved search results are deleted.\nIf the Elasticsearch security features are enabled, the deletion of a specific async search is restricted to: the authenticated user that submitted the original search request; users that have the `cancel_task` cluster privilege.",
      "docId": "async-search",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/async-search.html",
      "name": "async_search.delete",
      "request": {
        "name": "Request",
        "namespace": "async_search.delete"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "async_search.delete"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_async_search/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.7.0",
          "stability": "stable"
        }
      },
      "description": "Get async search results.\n\nRetrieve the results of a previously submitted asynchronous search request.\nIf the Elasticsearch security features are enabled, access to the results of a specific async search is restricted to the user or API key that submitted it.",
      "docId": "async-search",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/async-search.html",
      "name": "async_search.get",
      "request": {
        "name": "Request",
        "namespace": "async_search.get"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "async_search.get"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_async_search/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.11.0",
          "stability": "stable"
        }
      },
      "description": "Get the async search status.\n\nGet the status of a previously submitted async search request given its identifier, without retrieving search results.\nIf the Elasticsearch security features are enabled, use of this API is restricted to the `monitoring_user` role.",
      "docId": "async-search",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/async-search.html",
      "name": "async_search.status",
      "request": {
        "name": "Request",
        "namespace": "async_search.status"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "async_search.status"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_async_search/status/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.7.0",
          "stability": "stable"
        }
      },
      "description": "Run an async search.\n\nWhen the primary sort of the results is an indexed field, shards get sorted based on minimum and maximum value that they hold for that field. Partial results become available following the sort criteria that was requested.\n\nWarning: Asynchronous search does not support scroll or search requests that include only the suggest section.\n\nBy default, Elasticsearch does not allow you to store an async search response larger than 10Mb and an attempt to do this results in an error.\nThe maximum allowed size for a stored async search response can be set by changing the `search.max_async_search_response_size` cluster level setting.",
      "docId": "async-search",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/async-search.html",
      "name": "async_search.submit",
      "request": {
        "name": "Request",
        "namespace": "async_search.submit"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "async_search.submit"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_async_search"
        },
        {
          "methods": [
            "POST"
          ],
          "path": "/{index}/_async_search"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Bulk index or delete documents.\nPerforms multiple indexing or delete operations in a single API call.\nThis reduces overhead and can greatly increase indexing speed.",
      "docId": "docs-bulk",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/docs-bulk.html",
      "name": "bulk",
      "request": {
        "name": "Request",
        "namespace": "_global.bulk"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/x-ndjson"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.bulk"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST",
            "PUT"
          ],
          "path": "/_bulk"
        },
        {
          "methods": [
            "POST",
            "PUT"
          ],
          "path": "/{index}/_bulk"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get aliases.\nRetrieves the clusterâ€™s index aliases, including filter and routing information.\nThe API does not return data stream aliases.\n\nCAT APIs are only intended for human consumption using the command line or the Kibana console. They are not intended for use by applications. For application consumption, use the aliases API.",
      "docId": "cat-alias",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cat-alias.html",
      "name": "cat.aliases",
      "privileges": {
        "index": [
          "view_index_metadata"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cat.aliases"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cat.aliases"
      },
      "responseMediaType": [
        "text/plain",
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/aliases"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/aliases/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.1.0",
          "stability": "stable"
        }
      },
      "description": "Get component templates.\nReturns information about component templates in a cluster.\nComponent templates are building blocks for constructing index templates that specify index mappings, settings, and aliases.\n\nCAT APIs are only intended for human consumption using the command line or Kibana console.\nThey are not intended for use by applications. For application consumption, use the get component template API.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-component-templates.html",
      "name": "cat.component_templates",
      "privileges": {
        "cluster": [
          "monitor"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cat.component_templates"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cat.component_templates"
      },
      "responseMediaType": [
        "text/plain",
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/component_templates"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/component_templates/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get a document count.\nProvides quick access to a document count for a data stream, an index, or an entire cluster.\nThe document count only includes live documents, not deleted documents which have not yet been removed by the merge process.\n\nCAT APIs are only intended for human consumption using the command line or Kibana console.\nThey are not intended for use by applications. For application consumption, use the count API.",
      "docId": "cat-count",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cat-count.html",
      "name": "cat.count",
      "privileges": {
        "index": [
          "read"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cat.count"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cat.count"
      },
      "responseMediaType": [
        "text/plain",
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/count"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/count/{index}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get CAT help.\nReturns help for the CAT APIs.",
      "docId": "cat",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cat.html",
      "name": "cat.help",
      "request": {
        "name": "Request",
        "namespace": "cat.help"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cat.help"
      },
      "responseMediaType": [
        "text/plain"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get index information.\nReturns high-level information about indices in a cluster, including backing indices for data streams.\n\nUse this request to get the following information for each index in a cluster:\n- shard count\n- document count\n- deleted document count\n- primary store size\n- total store size of all shards, including shard replicas\n\nThese metrics are retrieved directly from Lucene, which Elasticsearch uses internally to power indexing and search. As a result, all document counts include hidden nested documents.\nTo get an accurate count of Elasticsearch documents, use the cat count or count APIs.\n\nCAT APIs are only intended for human consumption using the command line or Kibana console.\nThey are not intended for use by applications. For application consumption, use an index endpoint.",
      "docId": "cat-indices",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cat-indices.html",
      "name": "cat.indices",
      "privileges": {
        "cluster": [
          "monitor"
        ],
        "index": [
          "monitor"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cat.indices"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cat.indices"
      },
      "responseMediaType": [
        "text/plain",
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/indices"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/indices/{index}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.7.0",
          "stability": "stable"
        }
      },
      "description": "Get data frame analytics jobs.\nReturns configuration and usage information about data frame analytics jobs.\n\nCAT APIs are only intended for human consumption using the Kibana\nconsole or command line. They are not intended for use by applications. For\napplication consumption, use the get data frame analytics jobs statistics API.",
      "docId": "cat-dfanalytics",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cat-dfanalytics.html",
      "name": "cat.ml_data_frame_analytics",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cat.ml_data_frame_analytics"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cat.ml_data_frame_analytics"
      },
      "responseMediaType": [
        "text/plain",
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/ml/data_frame/analytics"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/ml/data_frame/analytics/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.7.0",
          "stability": "stable"
        }
      },
      "description": "Get datafeeds.\nReturns configuration and usage information about datafeeds.\nThis API returns a maximum of 10,000 datafeeds.\nIf the Elasticsearch security features are enabled, you must have `monitor_ml`, `monitor`, `manage_ml`, or `manage`\ncluster privileges to use this API.\n\nCAT APIs are only intended for human consumption using the Kibana\nconsole or command line. They are not intended for use by applications. For\napplication consumption, use the get datafeed statistics API.",
      "docId": "cat-datafeeds",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cat-datafeeds.html",
      "name": "cat.ml_datafeeds",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cat.ml_datafeeds"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cat.ml_datafeeds"
      },
      "responseMediaType": [
        "text/plain",
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/ml/datafeeds"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/ml/datafeeds/{datafeed_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.7.0",
          "stability": "stable"
        }
      },
      "description": "Get anomaly detection jobs.\nReturns configuration and usage information for anomaly detection jobs.\nThis API returns a maximum of 10,000 jobs.\nIf the Elasticsearch security features are enabled, you must have `monitor_ml`,\n`monitor`, `manage_ml`, or `manage` cluster privileges to use this API.\n\nCAT APIs are only intended for human consumption using the Kibana\nconsole or command line. They are not intended for use by applications. For\napplication consumption, use the get anomaly detection job statistics API.",
      "docId": "cat-anomaly-detectors",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cat-anomaly-detectors.html",
      "name": "cat.ml_jobs",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cat.ml_jobs"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cat.ml_jobs"
      },
      "responseMediaType": [
        "text/plain",
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/ml/anomaly_detectors"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/ml/anomaly_detectors/{job_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.7.0",
          "stability": "stable"
        }
      },
      "description": "Get trained models.\nReturns configuration and usage information about inference trained models.\n\nCAT APIs are only intended for human consumption using the Kibana\nconsole or command line. They are not intended for use by applications. For\napplication consumption, use the get trained models statistics API.",
      "docId": "cat-trained-model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cat-trained-model.html",
      "name": "cat.ml_trained_models",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cat.ml_trained_models"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cat.ml_trained_models"
      },
      "responseMediaType": [
        "text/plain",
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/ml/trained_models"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/ml/trained_models/{model_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.7.0",
          "stability": "stable"
        }
      },
      "description": "Get transforms.\nReturns configuration and usage information about transforms.\n\nCAT APIs are only intended for human consumption using the Kibana\nconsole or command line. They are not intended for use by applications. For\napplication consumption, use the get transform statistics API.",
      "docId": "cat-transforms",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cat-transforms.html",
      "name": "cat.transforms",
      "privileges": {
        "cluster": [
          "monitor_transform"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cat.transforms"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cat.transforms"
      },
      "responseMediaType": [
        "text/plain",
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/transforms"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_cat/transforms/{transform_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Clear a scrolling search.\n\nClear the search context and results for a scrolling search.",
      "docId": "clear-scroll-api",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/clear-scroll-api.html",
      "name": "clear_scroll",
      "request": {
        "name": "Request",
        "namespace": "_global.clear_scroll"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json",
        "text/plain"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.clear_scroll"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_search/scroll"
        },
        {
          "deprecation": {
            "description": "A scroll id can be quite large and should be specified as part of the body",
            "version": "7.0.0"
          },
          "methods": [
            "DELETE"
          ],
          "path": "/_search/scroll/{scroll_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.10.0",
          "stability": "stable"
        }
      },
      "description": "Close a point in time.\n\nA point in time must be opened explicitly before being used in search requests.\nThe `keep_alive` parameter tells Elasticsearch how long it should persist.\nA point in time is automatically closed when the `keep_alive` period has elapsed.\nHowever, keeping points in time has a cost; close them as soon as they are no longer required for search requests.",
      "docId": "point-in-time-api",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/point-in-time-api.html",
      "name": "close_point_in_time",
      "request": {
        "name": "Request",
        "namespace": "_global.close_point_in_time"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.close_point_in_time"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_pit"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.8.0",
          "stability": "stable"
        }
      },
      "description": "Delete component templates.\nDeletes component templates.\nComponent templates are building blocks for constructing index templates that specify index mappings, settings, and aliases.",
      "docId": "indices-component-template",
      "docTag": "indices",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/indices-component-template.html",
      "name": "cluster.delete_component_template",
      "privileges": {
        "cluster": [
          "manage_index_templates"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cluster.delete_component_template"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cluster.delete_component_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_component_template/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.8.0",
          "stability": "stable"
        }
      },
      "description": "Check component templates.\nReturns information about whether a particular component template exists.",
      "docId": "indices-component-template",
      "docTag": "indices",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/indices-component-template.html",
      "name": "cluster.exists_component_template",
      "request": {
        "name": "Request",
        "namespace": "cluster.exists_component_template"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cluster.exists_component_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "HEAD"
          ],
          "path": "/_component_template/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.8.0",
          "stability": "stable"
        }
      },
      "description": "Get component templates.\nRetrieves information about component templates.",
      "docId": "indices-component-template",
      "docTag": "indices",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/indices-component-template.html",
      "name": "cluster.get_component_template",
      "privileges": {
        "cluster": [
          "manage_index_templates"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cluster.get_component_template"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cluster.get_component_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_component_template"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_component_template/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.9.0",
          "stability": "stable"
        }
      },
      "description": "Get cluster info.\nReturns basic information about the cluster.",
      "docId": "cluster-info",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cluster-info.html",
      "name": "cluster.info",
      "request": {
        "name": "Request",
        "namespace": "cluster.info"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "cluster.info"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_info/{target}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.8.0",
          "stability": "stable"
        }
      },
      "description": "Create or update a component template.\nCreates or updates a component template.\nComponent templates are building blocks for constructing index templates that specify index mappings, settings, and aliases.\n\nAn index template can be composed of multiple component templates.\nTo use a component template, specify it in an index templateâ€™s `composed_of` list.\nComponent templates are only applied to new data streams and indices as part of a matching index template.\n\nSettings and mappings specified directly in the index template or the create index request override any settings or mappings specified in a component template.\n\nComponent templates are only used during index creation.\nFor data streams, this includes data stream creation and the creation of a streamâ€™s backing indices.\nChanges to component templates do not affect existing indices, including a streamâ€™s backing indices.\n\nYou can use C-style `/* *\\/` block comments in component templates.\nYou can include comments anywhere in the request body except before the opening curly bracket.",
      "docId": "indices-component-template",
      "docTag": "indices",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/indices-component-template.html",
      "name": "cluster.put_component_template",
      "privileges": {
        "cluster": [
          "manage_index_templates"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "cluster.put_component_template"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "cluster.put_component_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT",
            "POST"
          ],
          "path": "/_component_template/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "experimental",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "experimental"
        }
      },
      "description": "Check in a connector.\n\nUpdate the `last_seen` field in the connector and set it to the current timestamp.",
      "docId": "connector-checkin",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/check-in-connector-api.html",
      "name": "connector.check_in",
      "request": {
        "name": "Request",
        "namespace": "connector.check_in"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "connector.check_in"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_check_in"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Delete a connector.\n\nRemoves a connector and associated sync jobs.\nThis is a destructive action that is not recoverable.\nNOTE: This action doesnâ€™t delete any API keys, ingest pipelines, or data indices associated with the connector.\nThese need to be removed manually.",
      "docId": "connector-delete",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/delete-connector-api.html",
      "name": "connector.delete",
      "request": {
        "name": "Request",
        "namespace": "connector.delete"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "connector.delete"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_connector/{connector_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Get a connector.\n\nGet the details about a connector.",
      "docId": "connector-get",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/get-connector-api.html",
      "name": "connector.get",
      "request": {
        "name": "Request",
        "namespace": "connector.get"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "connector.get"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_connector/{connector_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Get all connectors.\n\nGet information about all connectors.",
      "docId": "connector-list",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/list-connector-api.html",
      "name": "connector.list",
      "request": {
        "name": "Request",
        "namespace": "connector.list"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "connector.list"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_connector"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Create a connector.\n\nConnectors are Elasticsearch integrations that bring content from third-party data sources, which can be deployed on Elastic Cloud or hosted on your own infrastructure.\nElastic managed connectors (Native connectors) are a managed service on Elastic Cloud.\nSelf-managed connectors (Connector clients) are self-managed on your infrastructure.",
      "docId": "connector-post",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/create-connector-api.html",
      "name": "connector.post",
      "request": {
        "name": "Request",
        "namespace": "connector.post"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.post"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_connector"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Create or update a connector.",
      "docId": "connector-put",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/create-connector-api.html",
      "name": "connector.put",
      "request": {
        "name": "Request",
        "namespace": "connector.put"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.put"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}"
        },
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Cancel a connector sync job.\n\nCancel a connector sync job, which sets the status to cancelling and updates `cancellation_requested_at` to the current time.\nThe connector service is then responsible for setting the status of connector sync jobs to cancelled.",
      "docId": "connector-sync-job-cancel",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cancel-connector-sync-job-api.html",
      "name": "connector.sync_job_cancel",
      "request": {
        "name": "Request",
        "namespace": "connector.sync_job_cancel"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "connector.sync_job_cancel"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/_sync_job/{connector_sync_job_id}/_cancel"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Delete a connector sync job.\n\nRemove a connector sync job and its associated data.\nThis is a destructive action that is not recoverable.",
      "docId": "connector-sync-job-delete",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/delete-connector-sync-job-api.html",
      "name": "connector.sync_job_delete",
      "request": {
        "name": "Request",
        "namespace": "connector.sync_job_delete"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "connector.sync_job_delete"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_connector/_sync_job/{connector_sync_job_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Get a connector sync job.",
      "docId": "connector-sync-job-get",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/get-connector-sync-job-api.html",
      "name": "connector.sync_job_get",
      "request": {
        "name": "Request",
        "namespace": "connector.sync_job_get"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "connector.sync_job_get"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_connector/_sync_job/{connector_sync_job_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Get all connector sync jobs.\n\nGet information about all stored connector sync jobs listed by their creation date in ascending order.",
      "docId": "connector-sync-job-list",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/list-connector-sync-jobs-api.html",
      "name": "connector.sync_job_list",
      "request": {
        "name": "Request",
        "namespace": "connector.sync_job_list"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "connector.sync_job_list"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_connector/_sync_job"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Create a connector sync job.\n\nCreate a connector sync job document in the internal index and initialize its counters and timestamps with default values.",
      "docId": "connector-sync-job-post",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/create-connector-sync-job-api.html",
      "name": "connector.sync_job_post",
      "request": {
        "name": "Request",
        "namespace": "connector.sync_job_post"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.sync_job_post"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_connector/_sync_job"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "experimental",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "experimental"
        }
      },
      "description": "Activate the connector draft filter.\n\nActivates the valid draft filtering for a connector.",
      "docId": "connector-update-filtering",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-filtering-api.html",
      "name": "connector.update_active_filtering",
      "request": {
        "name": "Request",
        "namespace": "connector.update_active_filtering"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_active_filtering"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_filtering/_activate"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Update the connector API key ID.\n\nUpdate the `api_key_id` and `api_key_secret_id` fields of a connector.\nYou can specify the ID of the API key used for authorization and the ID of the connector secret where the API key is stored.\nThe connector secret ID is required only for Elastic managed (native) connectors.\nSelf-managed connectors (connector clients) do not use this field.",
      "docId": "connector-update-api-key-id",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-api-key-id-api.html",
      "name": "connector.update_api_key_id",
      "request": {
        "name": "Request",
        "namespace": "connector.update_api_key_id"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_api_key_id"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_api_key_id"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Update the connector configuration.\n\nUpdate the configuration field in the connector document.",
      "docId": "connector-configuration",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-configuration-api.html",
      "name": "connector.update_configuration",
      "request": {
        "name": "Request",
        "namespace": "connector.update_configuration"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_configuration"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_configuration"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "experimental",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "experimental"
        }
      },
      "description": "Update the connector error field.\n\nSet the error field for the connector.\nIf the error provided in the request body is non-null, the connectorâ€™s status is updated to error.\nOtherwise, if the error is reset to null, the connector status is updated to connected.",
      "docId": "connector-update-error",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-error-api.html",
      "name": "connector.update_error",
      "request": {
        "name": "Request",
        "namespace": "connector.update_error"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_error"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_error"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Update the connector filtering.\n\nUpdate the draft filtering configuration of a connector and marks the draft validation state as edited.\nThe filtering draft is activated once validated by the running Elastic connector service.\nThe filtering property is used to configure sync rules (both basic and advanced) for a connector.",
      "docId": "connector-update-filtering",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-filtering-api.html",
      "name": "connector.update_filtering",
      "request": {
        "name": "Request",
        "namespace": "connector.update_filtering"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_filtering"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_filtering"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "experimental",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "experimental"
        }
      },
      "description": "Update the connector draft filtering validation.\n\nUpdate the draft filtering validation info for a connector.",
      "docId": "connector-update-filtering-validation",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-filtering-validation-api.html",
      "name": "connector.update_filtering_validation",
      "request": {
        "name": "Request",
        "namespace": "connector.update_filtering_validation"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_filtering_validation"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_filtering/_validation"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Update the connector index name.\n\nUpdate the `index_name` field of a connector, specifying the index where the data ingested by the connector is stored.",
      "docId": "connector-update-index-name",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-index-name-api.html",
      "name": "connector.update_index_name",
      "request": {
        "name": "Request",
        "namespace": "connector.update_index_name"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_index_name"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_index_name"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Update the connector name and description.",
      "docId": "connector-update-name",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-name-description-api.html",
      "name": "connector.update_name",
      "request": {
        "name": "Request",
        "namespace": "connector.update_name"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_name"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_name"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Update the connector is_native flag.",
      "docId": "connector-update-native",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-native-api.html",
      "name": "connector.update_native",
      "request": {
        "name": "Request",
        "namespace": "connector.update_native"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_native"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_native"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Update the connector pipeline.\n\nWhen you create a new connector, the configuration of an ingest pipeline is populated with default settings.",
      "docId": "connector-update-pipeline",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-pipeline-api.html",
      "name": "connector.update_pipeline",
      "request": {
        "name": "Request",
        "namespace": "connector.update_pipeline"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_pipeline"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_pipeline"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Update the connector scheduling.",
      "docId": "connector-update-scheduling",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-scheduling-api.html",
      "name": "connector.update_scheduling",
      "request": {
        "name": "Request",
        "namespace": "connector.update_scheduling"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_scheduling"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_scheduling"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "beta"
        }
      },
      "description": "Update the connector service type.",
      "docId": "connector-update-service-type",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-service-type-api.html",
      "name": "connector.update_service_type",
      "request": {
        "name": "Request",
        "namespace": "connector.update_service_type"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_service_type"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_service_type"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "experimental",
          "visibility": "public"
        },
        "stack": {
          "since": "8.12.0",
          "stability": "experimental"
        }
      },
      "description": "Update the connector status.",
      "docId": "connector-update-status",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/update-connector-status-api.html",
      "name": "connector.update_status",
      "request": {
        "name": "Request",
        "namespace": "connector.update_status"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "connector.update_status"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_connector/{connector_id}/_status"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Returns number of documents matching a query.",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html",
      "name": "count",
      "request": {
        "name": "Request",
        "namespace": "_global.count"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.count"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST",
            "GET"
          ],
          "path": "/_count"
        },
        {
          "methods": [
            "POST",
            "GET"
          ],
          "path": "/{index}/_count"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.0.0",
          "stability": "stable"
        }
      },
      "description": "Index a document.\nAdds a JSON document to the specified data stream or index and makes it searchable.\nIf the target is an index and the document already exists, the request updates the document and increments its version.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html",
      "name": "create",
      "request": {
        "name": "Request",
        "namespace": "_global.create"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.create"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT",
            "POST"
          ],
          "path": "/{index}/_create/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Delete a document.\nRemoves a JSON document from the specified index.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html",
      "name": "delete",
      "request": {
        "name": "Request",
        "namespace": "_global.delete"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "_global.delete"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/{index}/_doc/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.0.0",
          "stability": "stable"
        }
      },
      "description": "Delete documents.\nDeletes documents that match the specified query.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html",
      "name": "delete_by_query",
      "request": {
        "name": "Request",
        "namespace": "_global.delete_by_query"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.delete_by_query"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/{index}/_delete_by_query"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Delete a script or search template.\nDeletes a stored script or search template.",
      "docTag": "script",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html",
      "name": "delete_script",
      "request": {
        "name": "Request",
        "namespace": "_global.delete_script"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "_global.delete_script"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_scripts/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.5.0",
          "stability": "stable"
        }
      },
      "description": "Delete an enrich policy.\nDeletes an existing enrich policy and its enrich index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-enrich-policy-api.html",
      "name": "enrich.delete_policy",
      "request": {
        "name": "Request",
        "namespace": "enrich.delete_policy"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "enrich.delete_policy"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_enrich/policy/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.5.0",
          "stability": "stable"
        }
      },
      "description": "Creates the enrich index for an existing enrich policy.",
      "docId": "execute-enrich-policy-api",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/execute-enrich-policy-api.html",
      "name": "enrich.execute_policy",
      "request": {
        "name": "Request",
        "namespace": "enrich.execute_policy"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "enrich.execute_policy"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_enrich/policy/{name}/_execute"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.5.0",
          "stability": "stable"
        }
      },
      "description": "Get an enrich policy.\nReturns information about an enrich policy.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-enrich-policy-api.html",
      "name": "enrich.get_policy",
      "request": {
        "name": "Request",
        "namespace": "enrich.get_policy"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "enrich.get_policy"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_enrich/policy/{name}"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_enrich/policy"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.5.0",
          "stability": "stable"
        }
      },
      "description": "Create an enrich policy.\nCreates an enrich policy.",
      "docId": "put-enrich-policy-api",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/put-enrich-policy-api.html",
      "name": "enrich.put_policy",
      "request": {
        "name": "Request",
        "namespace": "enrich.put_policy"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "enrich.put_policy"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_enrich/policy/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.5.0",
          "stability": "stable"
        }
      },
      "description": "Get enrich stats.\nReturns enrich coordinator statistics and information about enrich policies that are currently executing.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/enrich-stats-api.html",
      "name": "enrich.stats",
      "request": {
        "name": "Request",
        "namespace": "enrich.stats"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "enrich.stats"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_enrich/_stats"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Deletes an async EQL search or a stored synchronous EQL search.\nThe API also deletes results for the search.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html",
      "name": "eql.delete",
      "request": {
        "name": "Request",
        "namespace": "eql.delete"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "eql.delete"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_eql/search/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Returns the current status and available results for an async EQL search or a stored synchronous EQL search.",
      "docId": "eql-async-search-api",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/get-async-eql-search-api.html",
      "name": "eql.get",
      "request": {
        "name": "Request",
        "namespace": "eql.get"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "eql.get"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_eql/search/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Returns the current status for an async EQL search or a stored synchronous EQL search without returning results.",
      "docId": "eql-async-search-status-api",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/get-async-eql-status-api.html",
      "name": "eql.get_status",
      "request": {
        "name": "Request",
        "namespace": "eql.get_status"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "eql.get_status"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_eql/search/status/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Returns results matching a query expressed in Event Query Language (EQL)",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html",
      "name": "eql.search",
      "request": {
        "name": "Request",
        "namespace": "eql.search"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "eql.search"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_eql/search"
        }
      ]
    },
    {
      "availability": {
        "serverless": {},
        "stack": {
          "since": "8.11.0"
        }
      },
      "description": "Executes an ES|QL request",
      "docId": "esql-query",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/esql-rest.html",
      "name": "esql.query",
      "request": {
        "name": "Request",
        "namespace": "esql.query"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "esql.query"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_query"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Check a document.\nChecks if a specified document exists.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html",
      "name": "exists",
      "request": {
        "name": "Request",
        "namespace": "_global.exists"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "_global.exists"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "HEAD"
          ],
          "path": "/{index}/_doc/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Check for a document source.\nChecks if a document's `_source` is stored.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html",
      "name": "exists_source",
      "request": {
        "name": "Request",
        "namespace": "_global.exists_source"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "_global.exists_source"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "HEAD"
          ],
          "path": "/{index}/_source/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Explain a document match result.\nReturns information about why a specific document matches, or doesnâ€™t match, a query.",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html",
      "name": "explain",
      "request": {
        "name": "Request",
        "namespace": "_global.explain"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.explain"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_explain/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Get the field capabilities.\n\nGet information about the capabilities of fields among multiple indices.\n\nFor data streams, the API returns field capabilities among the streamâ€™s backing indices.\nIt returns runtime fields like any other field.\nFor example, a runtime field with a type of keyword is returned the same as any other field that belongs to the `keyword` family.",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html",
      "name": "field_caps",
      "privileges": {
        "index": [
          "view_index_metadata",
          "read",
          "manage"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "_global.field_caps"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.field_caps"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_field_caps"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_field_caps"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get a document by its ID.\nRetrieves the document with the specified ID from an index.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html",
      "name": "get",
      "request": {
        "name": "Request",
        "namespace": "_global.get"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "_global.get"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/{index}/_doc/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get a script or search template.\nRetrieves a stored script or search template.",
      "docTag": "script",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html",
      "name": "get_script",
      "request": {
        "name": "Request",
        "namespace": "_global.get_script"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "_global.get_script"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_scripts/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get a document's source.\nReturns the source of a document.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html",
      "name": "get_source",
      "request": {
        "name": "Request",
        "namespace": "_global.get_source"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "_global.get_source"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/{index}/_source/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Extracts and summarizes information about the documents and terms in an Elasticsearch data stream or index.",
      "docId": "graph-explore-api",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/graph-explore-api.html",
      "name": "graph.explore",
      "request": {
        "name": "Request",
        "namespace": "graph.explore"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "graph.explore"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_graph/explore"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Index a document.\nAdds a JSON document to the specified data stream or index and makes it searchable.\nIf the target is an index and the document already exists, the request updates the document and increments its version.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html",
      "name": "index",
      "request": {
        "name": "Request",
        "namespace": "_global.index"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.index"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT",
            "POST"
          ],
          "path": "/{index}/_doc/{id}"
        },
        {
          "methods": [
            "POST"
          ],
          "path": "/{index}/_doc"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Add an index block.\nLimits the operations allowed on an index by blocking specific operation types.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/index-modules-blocks.html",
      "name": "indices.add_block",
      "request": {
        "name": "Request",
        "namespace": "indices.add_block"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.add_block"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/{index}/_block/{block}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get tokens from text analysis.\nThe analyze API performs [analysis](https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html) on a text string and returns the resulting tokens.",
      "docId": "indices-analyze",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/indices-analyze.html",
      "name": "indices.analyze",
      "request": {
        "name": "Request",
        "namespace": "indices.analyze"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.analyze"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_analyze"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_analyze"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Create an index.\nCreates a new index.",
      "docId": "indices-create-index",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/indices-create-index.html",
      "name": "indices.create",
      "privileges": {
        "index": [
          "create_index",
          "manage"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.create"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.create"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/{index}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Create a data stream.\nCreates a data stream.\nYou must have a matching index template with data stream enabled.",
      "docTag": "data stream",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams.html",
      "name": "indices.create_data_stream",
      "privileges": {
        "index": [
          "create_index"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.create_data_stream"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.create_data_stream"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_data_stream/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Get data stream stats.\nRetrieves statistics for one or more data streams.",
      "docTag": "data stream",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams.html",
      "name": "indices.data_streams_stats",
      "privileges": {
        "index": [
          "monitor"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.data_streams_stats"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.data_streams_stats"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_data_stream/_stats"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_data_stream/{name}/_stats"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Delete indices.\nDeletes one or more indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html",
      "name": "indices.delete",
      "request": {
        "name": "Request",
        "namespace": "indices.delete"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.delete"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/{index}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Delete an alias.\nRemoves a data stream or index from an alias.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html",
      "name": "indices.delete_alias",
      "request": {
        "name": "Request",
        "namespace": "indices.delete_alias"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.delete_alias"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/{index}/_alias/{name}"
        },
        {
          "methods": [
            "DELETE"
          ],
          "path": "/{index}/_aliases/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.11.0",
          "stability": "stable"
        }
      },
      "description": "Delete data stream lifecycles.\nRemoves the data stream lifecycle from a data stream, rendering it not managed by the data stream lifecycle.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams-delete-lifecycle.html",
      "name": "indices.delete_data_lifecycle",
      "request": {
        "name": "Request",
        "namespace": "indices.delete_data_lifecycle"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.delete_data_lifecycle"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_data_stream/{name}/_lifecycle"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Delete data streams.\nDeletes one or more data streams and their backing indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams.html",
      "name": "indices.delete_data_stream",
      "privileges": {
        "index": [
          "delete_index"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.delete_data_stream"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.delete_data_stream"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_data_stream/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.8.0",
          "stability": "stable"
        }
      },
      "description": "Delete an index template.\nThe provided <index-template> may contain multiple template names separated by a comma. If multiple template\nnames are specified then there is no wildcard support and the provided names should match completely with\nexisting templates.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-template.html",
      "name": "indices.delete_index_template",
      "privileges": {
        "cluster": [
          "manage_index_templates",
          "manage"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.delete_index_template"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.delete_index_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_index_template/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Check indices.\nChecks if one or more indices, index aliases, or data streams exist.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html",
      "name": "indices.exists",
      "request": {
        "name": "Request",
        "namespace": "indices.exists"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.exists"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "HEAD"
          ],
          "path": "/{index}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Check aliases.\nChecks if one or more data stream or index aliases exist.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html",
      "name": "indices.exists_alias",
      "request": {
        "name": "Request",
        "namespace": "indices.exists_alias"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.exists_alias"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "HEAD"
          ],
          "path": "/_alias/{name}"
        },
        {
          "methods": [
            "HEAD"
          ],
          "path": "/{index}/_alias/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Returns information about whether a particular index template exists.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/index-templates.html",
      "name": "indices.exists_index_template",
      "request": {
        "name": "Request",
        "namespace": "indices.exists_index_template"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.exists_index_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "HEAD"
          ],
          "path": "/_index_template/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.11.0",
          "stability": "stable"
        }
      },
      "description": "Get the status for a data stream lifecycle.\nRetrieves information about an index or data streamâ€™s current data stream lifecycle status, such as time since index creation, time since rollover, the lifecycle configuration managing the index, or any errors encountered during lifecycle execution.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/data-streams-explain-lifecycle.html",
      "name": "indices.explain_data_lifecycle",
      "request": {
        "name": "Request",
        "namespace": "indices.explain_data_lifecycle"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.explain_data_lifecycle"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/{index}/_lifecycle/explain"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get index information.\nReturns information about one or more indices. For data streams, the API returns information about the\nstreamâ€™s backing indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html",
      "name": "indices.get",
      "privileges": {
        "index": [
          "view_index_metadata",
          "manage"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.get"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.get"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/{index}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get aliases.\nRetrieves information for one or more data stream or index aliases.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html",
      "name": "indices.get_alias",
      "request": {
        "name": "Request",
        "namespace": "indices.get_alias"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.get_alias"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_alias"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_alias/{name}"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/{index}/_alias/{name}"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/{index}/_alias"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.11.0",
          "stability": "stable"
        }
      },
      "description": "Get data stream lifecycles.\nRetrieves the data stream lifecycle configuration of one or more data streams.",
      "docTag": "data stream",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams-get-lifecycle.html",
      "name": "indices.get_data_lifecycle",
      "request": {
        "name": "Request",
        "namespace": "indices.get_data_lifecycle"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.get_data_lifecycle"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_data_stream/{name}/_lifecycle"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Get data streams.\nRetrieves information about one or more data streams.",
      "docTag": "data stream",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams.html",
      "name": "indices.get_data_stream",
      "privileges": {
        "index": [
          "view_index_metadata"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.get_data_stream"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.get_data_stream"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_data_stream"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_data_stream/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Get index templates.\nReturns information about one or more index templates.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-template.html",
      "name": "indices.get_index_template",
      "privileges": {
        "cluster": [
          "manage_index_templates",
          "manage"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.get_index_template"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.get_index_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_index_template"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_index_template/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get mapping definitions.\nRetrieves mapping definitions for one or more indices.\nFor data streams, the API retrieves mappings for the streamâ€™s backing indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html",
      "name": "indices.get_mapping",
      "request": {
        "name": "Request",
        "namespace": "indices.get_mapping"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.get_mapping"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_mapping"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/{index}/_mapping"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get index settings.\nReturns setting information for one or more indices. For data streams,\nreturns setting information for the streamâ€™s backing indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html",
      "name": "indices.get_settings",
      "privileges": {
        "index": [
          "view_index_metadata",
          "monitor",
          "manage"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.get_settings"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.get_settings"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_settings"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/{index}/_settings"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/{index}/_settings/{name}"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_settings/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Convert an index alias to a data stream.\nConverts an index alias to a data stream.\nYou must have a matching index template that is data stream enabled.\nThe alias must meet the following criteria:\nThe alias must have a write index;\nAll indices for the alias must have a `@timestamp` field mapping of a `date` or `date_nanos` field type;\nThe alias must not have any filters;\nThe alias must not use custom routing.\nIf successful, the request removes the alias and creates a data stream with the same name.\nThe indices for the alias become hidden backing indices for the stream.\nThe write index for the alias becomes the write index for the stream.",
      "docTag": "data stream",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams.html",
      "name": "indices.migrate_to_data_stream",
      "privileges": {
        "index": [
          "manage"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.migrate_to_data_stream"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.migrate_to_data_stream"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_data_stream/_migrate/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.16.0",
          "stability": "stable"
        }
      },
      "description": "Update data streams.\nPerforms one or more data stream modification actions in a single atomic operation.",
      "docTag": "data stream",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams.html",
      "name": "indices.modify_data_stream",
      "request": {
        "name": "Request",
        "namespace": "indices.modify_data_stream"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.modify_data_stream"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_data_stream/_modify"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Create or update an alias.\nAdds a data stream or index to an alias.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html",
      "name": "indices.put_alias",
      "request": {
        "name": "Request",
        "namespace": "indices.put_alias"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.put_alias"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT",
            "POST"
          ],
          "path": "/{index}/_alias/{name}"
        },
        {
          "methods": [
            "PUT",
            "POST"
          ],
          "path": "/{index}/_aliases/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.11.0",
          "stability": "stable"
        }
      },
      "description": "Update data stream lifecycles.\nUpdate the data stream lifecycle of the specified data streams.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams-put-lifecycle.html",
      "name": "indices.put_data_lifecycle",
      "request": {
        "name": "Request",
        "namespace": "indices.put_data_lifecycle"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.put_data_lifecycle"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_data_stream/{name}/_lifecycle"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Create or update an index template.\nIndex templates define settings, mappings, and aliases that can be applied automatically to new indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-template.html",
      "name": "indices.put_index_template",
      "request": {
        "name": "Request",
        "namespace": "indices.put_index_template"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.put_index_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT",
            "POST"
          ],
          "path": "/_index_template/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Update field mappings.\nAdds new fields to an existing data stream or index.\nYou can also use this API to change the search settings of existing fields.\nFor data streams, these changes are applied to all backing indices by default.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html",
      "name": "indices.put_mapping",
      "request": {
        "name": "Request",
        "namespace": "indices.put_mapping"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.put_mapping"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT",
            "POST"
          ],
          "path": "/{index}/_mapping"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Update index settings.\nChanges dynamic index settings in real time. For data streams, index setting\nchanges are applied to all backing indices by default.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html",
      "name": "indices.put_settings",
      "privileges": {
        "index": [
          "manage"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.put_settings"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.put_settings"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_settings"
        },
        {
          "methods": [
            "PUT"
          ],
          "path": "/{index}/_settings"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Create or update an index template.\nIndex templates define settings, mappings, and aliases that can be applied automatically to new indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates-v1.html",
      "name": "indices.put_template",
      "request": {
        "name": "Request",
        "namespace": "indices.put_template"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.put_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT",
            "POST"
          ],
          "path": "/_template/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Refresh an index.\nA refresh makes recent operations performed on one or more indices available for search.\nFor data streams, the API runs the refresh operation on the streamâ€™s backing indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html",
      "name": "indices.refresh",
      "request": {
        "name": "Request",
        "namespace": "indices.refresh"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.refresh"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST",
            "GET"
          ],
          "path": "/_refresh"
        },
        {
          "methods": [
            "POST",
            "GET"
          ],
          "path": "/{index}/_refresh"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Resolves the specified name(s) and/or index patterns for indices, aliases, and data streams.\nMultiple patterns and remote clusters are supported.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-resolve-index-api.html",
      "name": "indices.resolve_index",
      "request": {
        "name": "Request",
        "namespace": "indices.resolve_index"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "indices.resolve_index"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_resolve/index/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.0.0",
          "stability": "stable"
        }
      },
      "description": "Roll over to a new index.\nCreates a new index for a data stream or index alias.",
      "docId": "indices-rollover-index",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/indices-rollover-index.html",
      "name": "indices.rollover",
      "request": {
        "name": "Request",
        "namespace": "indices.rollover"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.rollover"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/{alias}/_rollover"
        },
        {
          "methods": [
            "POST"
          ],
          "path": "/{alias}/_rollover/{new_index}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.9.0",
          "stability": "stable"
        }
      },
      "description": "Simulate an index.\nReturns the index configuration that would be applied to the specified index from an existing index template.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-simulate-index.html",
      "name": "indices.simulate_index_template",
      "request": {
        "name": "Request",
        "namespace": "indices.simulate_index_template"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.simulate_index_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_index_template/_simulate_index/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Simulate an index template.\nReturns the index configuration that would be applied by a particular index template.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-simulate-template.html",
      "name": "indices.simulate_template",
      "privileges": {
        "cluster": [
          "manage_index_templates",
          "manage"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "indices.simulate_template"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.simulate_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_index_template/_simulate"
        },
        {
          "methods": [
            "POST"
          ],
          "path": "/_index_template/_simulate/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "1.3.0",
          "stability": "stable"
        }
      },
      "description": "Create or update an alias.\nAdds a data stream or index to an alias.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html",
      "name": "indices.update_aliases",
      "request": {
        "name": "Request",
        "namespace": "indices.update_aliases"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.update_aliases"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_aliases"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "1.3.0",
          "stability": "stable"
        }
      },
      "description": "Validate a query.\nValidates a query without running it.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html",
      "name": "indices.validate_query",
      "request": {
        "name": "Request",
        "namespace": "indices.validate_query"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "indices.validate_query"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_validate/query"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_validate/query"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.11.0",
          "stability": "stable",
          "visibility": "public"
        }
      },
      "description": "Delete an inference endpoint",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-inference-api.html",
      "name": "inference.delete",
      "request": {
        "name": "Request",
        "namespace": "inference.delete"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "inference.delete"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_inference/{inference_id}"
        },
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_inference/{task_type}/{inference_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.11.0",
          "stability": "stable",
          "visibility": "public"
        }
      },
      "description": "Get an inference endpoint",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-inference-api.html",
      "name": "inference.get",
      "request": {
        "name": "Request",
        "namespace": "inference.get"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "inference.get"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_inference"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_inference/{inference_id}"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_inference/{task_type}/{inference_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.11.0",
          "stability": "stable",
          "visibility": "public"
        }
      },
      "description": "Perform inference on the service",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/post-inference-api.html",
      "name": "inference.inference",
      "request": {
        "name": "Request",
        "namespace": "inference.inference"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "inference.inference"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_inference/{inference_id}"
        },
        {
          "methods": [
            "POST"
          ],
          "path": "/_inference/{task_type}/{inference_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.11.0",
          "stability": "stable",
          "visibility": "public"
        }
      },
      "description": "Create an inference endpoint",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/put-inference-api.html",
      "name": "inference.put",
      "request": {
        "name": "Request",
        "namespace": "inference.put"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "inference.put"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_inference/{inference_id}"
        },
        {
          "methods": [
            "PUT"
          ],
          "path": "/_inference/{task_type}/{inference_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get cluster info.\nReturns basic information about the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html",
      "name": "info",
      "request": {
        "name": "Request",
        "namespace": "_global.info"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "_global.info"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.0.0",
          "stability": "stable"
        }
      },
      "description": "Deletes one or more existing ingest pipeline.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html",
      "name": "ingest.delete_pipeline",
      "request": {
        "name": "Request",
        "namespace": "ingest.delete_pipeline"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ingest.delete_pipeline"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_ingest/pipeline/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.0.0",
          "stability": "stable"
        }
      },
      "description": "Returns information about one or more ingest pipelines.\nThis API returns a local reference of the pipeline.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html",
      "name": "ingest.get_pipeline",
      "request": {
        "name": "Request",
        "namespace": "ingest.get_pipeline"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ingest.get_pipeline"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ingest/pipeline"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_ingest/pipeline/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.1.0",
          "stability": "stable"
        }
      },
      "description": "Extracts structured fields out of a single text field within a document.\nYou choose which field to extract matched fields from, as well as the grok pattern you expect will match.\nA grok pattern is like a regular expression that supports aliased expressions that can be reused.",
      "docId": "grok-processor",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/grok-processor.html",
      "name": "ingest.processor_grok",
      "request": {
        "name": "Request",
        "namespace": "ingest.processor_grok"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ingest.processor_grok"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ingest/processor/grok"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.0.0",
          "stability": "stable"
        }
      },
      "description": "Creates or updates an ingest pipeline.\nChanges made using this API take effect immediately.",
      "docId": "ingest",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ingest.html",
      "name": "ingest.put_pipeline",
      "request": {
        "name": "Request",
        "namespace": "ingest.put_pipeline"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ingest.put_pipeline"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_ingest/pipeline/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.0.0",
          "stability": "stable"
        }
      },
      "description": "Executes an ingest pipeline against a set of provided documents.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html",
      "name": "ingest.simulate",
      "request": {
        "name": "Request",
        "namespace": "ingest.simulate"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ingest.simulate"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_ingest/pipeline/_simulate"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_ingest/pipeline/{id}/_simulate"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get license information.\nReturns information about your Elastic license, including its type, its status, when it was issued, and when it expires.\nFor more information about the different types of licenses, refer to [Elastic Stack subscriptions](https://www.elastic.co/subscriptions).",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html",
      "name": "license.get",
      "request": {
        "name": "Request",
        "namespace": "license.get"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "license.get"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_license"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.12.0",
          "stability": "stable"
        }
      },
      "description": "Deletes a pipeline used for Logstash Central Management.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/logstash-api-delete-pipeline.html",
      "name": "logstash.delete_pipeline",
      "privileges": {
        "cluster": [
          "manage_logstash_pipelines"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "logstash.delete_pipeline"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "logstash.delete_pipeline"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_logstash/pipeline/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.12.0",
          "stability": "stable"
        }
      },
      "description": "Retrieves pipelines used for Logstash Central Management.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/logstash-api-get-pipeline.html",
      "name": "logstash.get_pipeline",
      "privileges": {
        "cluster": [
          "manage_logstash_pipelines"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "logstash.get_pipeline"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "logstash.get_pipeline"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_logstash/pipeline"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_logstash/pipeline/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.12.0",
          "stability": "stable"
        }
      },
      "description": "Creates or updates a pipeline used for Logstash Central Management.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/logstash-api-put-pipeline.html",
      "name": "logstash.put_pipeline",
      "privileges": {
        "cluster": [
          "manage_logstash_pipelines"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "logstash.put_pipeline"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "logstash.put_pipeline"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_logstash/pipeline/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "1.3.0",
          "stability": "stable"
        }
      },
      "description": "Get multiple documents.\n\nGet multiple JSON documents by ID from one or more indices.\nIf you specify an index in the request URI, you only need to specify the document IDs in the request body.\nTo ensure fast responses, this multi get (mget) API responds with partial results if one or more shards fail.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html",
      "name": "mget",
      "privileges": {
        "index": [
          "read"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "_global.mget"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.mget"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_mget"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_mget"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Close anomaly detection jobs.\nA job can be opened and closed multiple times throughout its lifecycle. A closed job cannot receive data or perform analysis operations, but you can still explore and navigate results.\nWhen you close a job, it runs housekeeping tasks such as pruning the model history, flushing buffers, calculating final results and persisting the model snapshots. Depending upon the size of the job, it could take several minutes to close and the equivalent time to re-open. After it is closed, the job has a minimal overhead on the cluster except for maintaining its meta data. Therefore it is a best practice to close jobs that are no longer required to process data.\nIf you close an anomaly detection job whose datafeed is running, the request first tries to stop the datafeed. This behavior is equivalent to calling stop datafeed API with the same timeout and force parameters as the close job request.\nWhen a datafeed that has a specified end date stops, it automatically closes its associated job.",
      "docId": "ml-close-job",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ml-close-job.html",
      "name": "ml.close_job",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.close_job"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.close_job"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/anomaly_detectors/{job_id}/_close"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.2.0",
          "stability": "stable"
        }
      },
      "description": "Delete a calendar.\nRemoves all scheduled events from a calendar, then deletes it.",
      "docId": "ml-delete-calendar",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ml-delete-calendar.html",
      "name": "ml.delete_calendar",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.delete_calendar"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.delete_calendar"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_ml/calendars/{calendar_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.2.0",
          "stability": "stable"
        }
      },
      "description": "Delete events from a calendar.",
      "docId": "ml-delete-calendar-event",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ml-delete-calendar-event.html",
      "name": "ml.delete_calendar_event",
      "request": {
        "name": "Request",
        "namespace": "ml.delete_calendar_event"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.delete_calendar_event"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_ml/calendars/{calendar_id}/events/{event_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.2.0",
          "stability": "stable"
        }
      },
      "description": "Delete anomaly jobs from a calendar.",
      "docId": "ml-delete-calendar-job",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ml-delete-calendar-job.html",
      "name": "ml.delete_calendar_job",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.delete_calendar_job"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.delete_calendar_job"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_ml/calendars/{calendar_id}/jobs/{job_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.3.0",
          "stability": "stable"
        }
      },
      "description": "Delete a data frame analytics job.",
      "docId": "ml-delete-dfanalytics",
      "docTag": "ml data frame",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/delete-dfanalytics.html",
      "name": "ml.delete_data_frame_analytics",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.delete_data_frame_analytics"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.delete_data_frame_analytics"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_ml/data_frame/analytics/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Delete a datafeed.",
      "docId": "ml-delete-datafeed",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ml-delete-datafeed.html",
      "name": "ml.delete_datafeed",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.delete_datafeed"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.delete_datafeed"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_ml/datafeeds/{datafeed_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Delete a filter.\nIf an anomaly detection job references the filter, you cannot delete the\nfilter. You must update or delete the job before you can delete the filter.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-filter.html",
      "name": "ml.delete_filter",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.delete_filter"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.delete_filter"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_ml/filters/{filter_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Delete an anomaly detection job.\nAll job configuration, model state and results are deleted.\nIt is not currently possible to delete multiple jobs using wildcards or a\ncomma separated list. If you delete a job that has a datafeed, the request\nfirst tries to delete the datafeed. This behavior is equivalent to calling\nthe delete datafeed API with the same timeout and force parameters as the\ndelete job request.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html",
      "name": "ml.delete_job",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.delete_job"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.delete_job"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_ml/anomaly_detectors/{job_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.10.0",
          "stability": "stable"
        }
      },
      "description": "Delete an unreferenced trained model.\nThe request deletes a trained inference model that is not referenced by an ingest pipeline.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-trained-models.html",
      "name": "ml.delete_trained_model",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.delete_trained_model"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.delete_trained_model"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_ml/trained_models/{model_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.13.0",
          "stability": "stable"
        }
      },
      "description": "Delete a trained model alias.\nThis API deletes an existing model alias that refers to a trained model. If\nthe model alias is missing or refers to a model other than the one identified\nby the `model_id`, this API returns an error.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-trained-models-aliases.html",
      "name": "ml.delete_trained_model_alias",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.delete_trained_model_alias"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.delete_trained_model_alias"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_ml/trained_models/{model_id}/model_aliases/{model_alias}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.7.0",
          "stability": "stable"
        }
      },
      "description": "Estimate job model memory usage.\nMakes an estimation of the memory usage for an anomaly detection job model.\nIt is based on analysis configuration details for the job and cardinality\nestimates for the fields it references.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-apis.html",
      "name": "ml.estimate_model_memory",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.estimate_model_memory"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.estimate_model_memory"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/anomaly_detectors/_estimate_model_memory"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.3.0",
          "stability": "stable"
        }
      },
      "description": "Evaluate data frame analytics.\nThe API packages together commonly used evaluation metrics for various types\nof machine learning features. This has been designed for use on indexes\ncreated by data frame analytics. Evaluation requires both a ground truth\nfield and an analytics result field to be present.",
      "docTag": "ml data frame",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/evaluate-dfanalytics.html",
      "name": "ml.evaluate_data_frame",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.evaluate_data_frame"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.evaluate_data_frame"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/data_frame/_evaluate"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Force buffered data to be processed.\nThe flush jobs API is only applicable when sending data for analysis using\nthe post data API. Depending on the content of the buffer, then it might\nadditionally calculate new results. Both flush and close operations are\nsimilar, however the flush is more efficient if you are expecting to send\nmore data for analysis. When flushing, the job remains open and is available\nto continue analyzing data. A close operation additionally prunes and\npersists the model state to disk and the job must be opened again before\nanalyzing further data.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html",
      "name": "ml.flush_job",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.flush_job"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.flush_job"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/anomaly_detectors/{job_id}/_flush"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.2.0",
          "stability": "stable"
        }
      },
      "description": "Get info about events in calendars.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-calendar-event.html",
      "name": "ml.get_calendar_events",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_calendar_events"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.get_calendar_events"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/calendars/{calendar_id}/events"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.2.0",
          "stability": "stable"
        }
      },
      "description": "Get calendar configuration info.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-calendar.html",
      "name": "ml.get_calendars",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_calendars"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.get_calendars"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_ml/calendars"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_ml/calendars/{calendar_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.3.0",
          "stability": "stable"
        }
      },
      "description": "Get data frame analytics job configuration info.\nYou can get information for multiple data frame analytics jobs in a single\nAPI request by using a comma-separated list of data frame analytics jobs or a\nwildcard expression.",
      "docTag": "ml data frame",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-dfanalytics.html",
      "name": "ml.get_data_frame_analytics",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_data_frame_analytics"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.get_data_frame_analytics"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/data_frame/analytics/{id}"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/data_frame/analytics"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.3.0",
          "stability": "stable"
        }
      },
      "description": "Get data frame analytics jobs usage info.",
      "docTag": "ml data frame",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-dfanalytics-stats.html",
      "name": "ml.get_data_frame_analytics_stats",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_data_frame_analytics_stats"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.get_data_frame_analytics_stats"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/data_frame/analytics/_stats"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/data_frame/analytics/{id}/_stats"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.5.0",
          "stability": "stable"
        }
      },
      "description": "Get datafeeds usage info.\nYou can get statistics for multiple datafeeds in a single API request by\nusing a comma-separated list of datafeeds or a wildcard expression. You can\nget statistics for all datafeeds by using `_all`, by specifying `*` as the\n`<feed_id>`, or by omitting the `<feed_id>`. If the datafeed is stopped, the\nonly information you receive is the `datafeed_id` and the `state`.\nThis API returns a maximum of 10,000 datafeeds.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html",
      "name": "ml.get_datafeed_stats",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_datafeed_stats"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.get_datafeed_stats"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/datafeeds/{datafeed_id}/_stats"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/datafeeds/_stats"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.5.0",
          "stability": "stable"
        }
      },
      "description": "Get datafeeds configuration info.\nYou can get information for multiple datafeeds in a single API request by\nusing a comma-separated list of datafeeds or a wildcard expression. You can\nget information for all datafeeds by using `_all`, by specifying `*` as the\n`<feed_id>`, or by omitting the `<feed_id>`.\nThis API returns a maximum of 10,000 datafeeds.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html",
      "name": "ml.get_datafeeds",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_datafeeds"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.get_datafeeds"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/datafeeds/{datafeed_id}"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/datafeeds"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.5.0",
          "stability": "stable"
        }
      },
      "description": "Get filters.\nYou can get a single filter or all filters.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-filter.html",
      "name": "ml.get_filters",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_filters"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.get_filters"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/filters"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/filters/{filter_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.5.0",
          "stability": "stable"
        }
      },
      "description": "Get anomaly detection jobs usage info.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html",
      "name": "ml.get_job_stats",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_job_stats"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.get_job_stats"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/anomaly_detectors/_stats"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/anomaly_detectors/{job_id}/_stats"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.5.0",
          "stability": "stable"
        }
      },
      "description": "Get anomaly detection jobs configuration info.\nYou can get information for multiple anomaly detection jobs in a single API\nrequest by using a group name, a comma-separated list of jobs, or a wildcard\nexpression. You can get information for all anomaly detection jobs by using\n`_all`, by specifying `*` as the `<job_id>`, or by omitting the `<job_id>`.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html",
      "name": "ml.get_jobs",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_jobs"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.get_jobs"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/anomaly_detectors/{job_id}"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/anomaly_detectors"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.1.0",
          "stability": "stable"
        }
      },
      "description": "Get overall bucket results.\n\nRetrievs overall bucket results that summarize the bucket results of\nmultiple anomaly detection jobs.\n\nThe `overall_score` is calculated by combining the scores of all the\nbuckets within the overall bucket span. First, the maximum\n`anomaly_score` per anomaly detection job in the overall bucket is\ncalculated. Then the `top_n` of those scores are averaged to result in\nthe `overall_score`. This means that you can fine-tune the\n`overall_score` so that it is more or less sensitive to the number of\njobs that detect an anomaly at the same time. For example, if you set\n`top_n` to `1`, the `overall_score` is the maximum bucket score in the\noverall bucket. Alternatively, if you set `top_n` to the number of jobs,\nthe `overall_score` is high only when all jobs detect anomalies in that\noverall bucket. If you set the `bucket_span` parameter (to a value\ngreater than its default), the `overall_score` is the maximum\n`overall_score` of the overall buckets that have a span equal to the\njobs' largest bucket span.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html",
      "name": "ml.get_overall_buckets",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_overall_buckets"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.get_overall_buckets"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_ml/anomaly_detectors/{job_id}/results/overall_buckets"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.10.0",
          "stability": "stable"
        }
      },
      "description": "Get trained model configuration info.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-trained-models.html",
      "name": "ml.get_trained_models",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_trained_models"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.get_trained_models"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/trained_models/{model_id}"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/trained_models"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.10.0",
          "stability": "stable"
        }
      },
      "description": "Get trained models usage info.\nYou can get usage information for multiple trained\nmodels in a single API request by using a comma-separated list of model IDs or a wildcard expression.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-trained-models-stats.html",
      "name": "ml.get_trained_models_stats",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.get_trained_models_stats"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.get_trained_models_stats"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/trained_models/{model_id}/_stats"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_ml/trained_models/_stats"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.3.0",
          "stability": "stable"
        }
      },
      "description": "Evaluate a trained model.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/infer-trained-model.html",
      "name": "ml.infer_trained_model",
      "request": {
        "name": "Request",
        "namespace": "ml.infer_trained_model"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.infer_trained_model"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/trained_models/{model_id}/_infer"
        },
        {
          "deprecation": {
            "description": "/_ml/trained_models/{model_id}/deployment/_infer is deprecated. Use /_ml/trained_models/{model_id}/_infer instead",
            "version": "8.3.0"
          },
          "methods": [
            "POST"
          ],
          "path": "/_ml/trained_models/{model_id}/deployment/_infer"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Open anomaly detection jobs.\nAn anomaly detection job must be opened to be ready to receive and analyze\ndata. It can be opened and closed multiple times throughout its lifecycle.\nWhen you open a new job, it starts with an empty model.\nWhen you open an existing job, the most recent model state is automatically\nloaded. The job is ready to resume its analysis from where it left off, once\nnew data is received.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html",
      "name": "ml.open_job",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.open_job"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.open_job"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/anomaly_detectors/{job_id}/_open"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.2.0",
          "stability": "stable"
        }
      },
      "description": "Add scheduled events to the calendar.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-calendar-event.html",
      "name": "ml.post_calendar_events",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.post_calendar_events"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.post_calendar_events"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/calendars/{calendar_id}/events"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.13.0",
          "stability": "stable"
        }
      },
      "description": "Preview features used by data frame analytics.\nPreviews the extracted features used by a data frame analytics config.",
      "docTag": "ml data frame",
      "docUrl": "http://www.elastic.co/guide/en/elasticsearch/reference/current/preview-dfanalytics.html",
      "name": "ml.preview_data_frame_analytics",
      "privileges": {
        "cluster": [
          "monitor_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.preview_data_frame_analytics"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.preview_data_frame_analytics"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_ml/data_frame/analytics/_preview"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_ml/data_frame/analytics/{id}/_preview"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Preview a datafeed.\nThis API returns the first \"page\" of search results from a datafeed.\nYou can preview an existing datafeed or provide configuration details for a datafeed\nand anomaly detection job in the API. The preview shows the structure of the data\nthat will be passed to the anomaly detection engine.\nIMPORTANT: When Elasticsearch security features are enabled, the preview uses the credentials of the user that\ncalled the API. However, when the datafeed starts it uses the roles of the last user that created or updated the\ndatafeed. To get a preview that accurately reflects the behavior of the datafeed, use the appropriate credentials.\nYou can also use secondary authorization headers to supply the credentials.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html",
      "name": "ml.preview_datafeed",
      "privileges": {
        "cluster": [
          "manage_ml"
        ],
        "index": [
          "read"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.preview_datafeed"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.preview_datafeed"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_ml/datafeeds/{datafeed_id}/_preview"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_ml/datafeeds/_preview"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.2.0",
          "stability": "stable"
        }
      },
      "description": "Create a calendar.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-calendar.html",
      "name": "ml.put_calendar",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.put_calendar"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.put_calendar"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_ml/calendars/{calendar_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.2.0",
          "stability": "stable"
        }
      },
      "description": "Add anomaly detection job to calendar.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-calendar-job.html",
      "name": "ml.put_calendar_job",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.put_calendar_job"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.put_calendar_job"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_ml/calendars/{calendar_id}/jobs/{job_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.3.0",
          "stability": "stable"
        }
      },
      "description": "Create a data frame analytics job.\nThis API creates a data frame analytics job that performs an analysis on the\nsource indices and stores the outcome in a destination index.",
      "docId": "put-dfanalytics",
      "docTag": "ml data frame",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/put-dfanalytics.html",
      "name": "ml.put_data_frame_analytics",
      "privileges": {
        "cluster": [
          "manage_ml"
        ],
        "index": [
          "create_index",
          "index",
          "manage",
          "read",
          "view_index_metadata"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.put_data_frame_analytics"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.put_data_frame_analytics"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_ml/data_frame/analytics/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Create a datafeed.\nDatafeeds retrieve data from Elasticsearch for analysis by an anomaly detection job.\nYou can associate only one datafeed with each anomaly detection job.\nThe datafeed contains a query that runs at a defined interval (`frequency`).\nIf you are concerned about delayed data, you can add a delay (`query_delay') at each interval.\nWhen Elasticsearch security features are enabled, your datafeed remembers which roles the user who created it had\nat the time of creation and runs the query using those same roles. If you provide secondary authorization headers,\nthose credentials are used instead.\nYou must use Kibana, this API, or the create anomaly detection jobs API to create a datafeed. Do not add a datafeed\ndirectly to the `.ml-config` index. Do not give users `write` privileges on the `.ml-config` index.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html",
      "name": "ml.put_datafeed",
      "privileges": {
        "cluster": [
          "manage_ml"
        ],
        "index": [
          "read"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.put_datafeed"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.put_datafeed"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_ml/datafeeds/{datafeed_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Create a filter.\nA filter contains a list of strings. It can be used by one or more anomaly detection jobs.\nSpecifically, filters are referenced in the `custom_rules` property of detector configuration objects.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-filter.html",
      "name": "ml.put_filter",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.put_filter"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.put_filter"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_ml/filters/{filter_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Create an anomaly detection job.\nIf you include a `datafeed_config`, you must have read index privileges on the source index.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html",
      "name": "ml.put_job",
      "privileges": {
        "cluster": [
          "manage_ml"
        ],
        "index": [
          "read"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.put_job"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.put_job"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_ml/anomaly_detectors/{job_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.10.0",
          "stability": "stable"
        }
      },
      "description": "Create a trained model.\nEnable you to supply a trained model that is not created by data frame analytics.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-trained-models.html",
      "name": "ml.put_trained_model",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.put_trained_model"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.put_trained_model"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_ml/trained_models/{model_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.13.0",
          "stability": "stable"
        }
      },
      "description": "Create or update a trained model alias.\nA trained model alias is a logical name used to reference a single trained\nmodel.\nYou can use aliases instead of trained model identifiers to make it easier to\nreference your models. For example, you can use aliases in inference\naggregations and processors.\nAn alias must be unique and refer to only a single trained model. However,\nyou can have multiple aliases for each trained model.\nIf you use this API to update an alias such that it references a different\ntrained model ID and the model uses a different type of data frame analytics,\nan error occurs. For example, this situation occurs if you have a trained\nmodel for regression analysis and a trained model for classification\nanalysis; you cannot reassign an alias from one type of trained model to\nanother.\nIf you use this API to update an alias and there are very few input fields in\ncommon between the old and new trained models for the model alias, the API\nreturns a warning.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-trained-models-aliases.html",
      "name": "ml.put_trained_model_alias",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.put_trained_model_alias"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.put_trained_model_alias"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_ml/trained_models/{model_id}/model_aliases/{model_alias}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.0.0",
          "stability": "stable"
        }
      },
      "description": "Create part of a trained model definition.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-trained-model-definition-part.html",
      "name": "ml.put_trained_model_definition_part",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.put_trained_model_definition_part"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.put_trained_model_definition_part"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_ml/trained_models/{model_id}/definition/{part}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.0.0",
          "stability": "stable"
        }
      },
      "description": "Create a trained model vocabulary.\nThis API is supported only for natural language processing (NLP) models.\nThe vocabulary is stored in the index as described in `inference_config.*.vocabulary` of the trained model definition.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-trained-model-vocabulary.html",
      "name": "ml.put_trained_model_vocabulary",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.put_trained_model_vocabulary"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.put_trained_model_vocabulary"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_ml/trained_models/{model_id}/vocabulary"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.14.0",
          "stability": "stable"
        }
      },
      "description": "Reset an anomaly detection job.\nAll model state and results are deleted. The job is ready to start over as if\nit had just been created.\nIt is not currently possible to reset multiple jobs using wildcards or a\ncomma separated list.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-reset-job.html",
      "name": "ml.reset_job",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.reset_job"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "ml.reset_job"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/anomaly_detectors/{job_id}/_reset"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.3.0",
          "stability": "stable"
        }
      },
      "description": "Start a data frame analytics job.\nA data frame analytics job can be started and stopped multiple times\nthroughout its lifecycle.\nIf the destination index does not exist, it is created automatically the\nfirst time you start the data frame analytics job. The\n`index.number_of_shards` and `index.number_of_replicas` settings for the\ndestination index are copied from the source index. If there are multiple\nsource indices, the destination index copies the highest setting values. The\nmappings for the destination index are also copied from the source indices.\nIf there are any mapping conflicts, the job fails to start.\nIf the destination index exists, it is used as is. You can therefore set up\nthe destination index in advance with custom settings and mappings.",
      "docTag": "ml data frame",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/start-dfanalytics.html",
      "name": "ml.start_data_frame_analytics",
      "privileges": {
        "cluster": [
          "manage_ml"
        ],
        "index": [
          "create_index",
          "index",
          "manage",
          "read",
          "view_index_metadata"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.start_data_frame_analytics"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.start_data_frame_analytics"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/data_frame/analytics/{id}/_start"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.5.0",
          "stability": "stable"
        }
      },
      "description": "Start datafeeds.\n\nA datafeed must be started in order to retrieve data from Elasticsearch. A datafeed can be started and stopped\nmultiple times throughout its lifecycle.\n\nBefore you can start a datafeed, the anomaly detection job must be open. Otherwise, an error occurs.\n\nIf you restart a stopped datafeed, it continues processing input data from the next millisecond after it was stopped.\nIf new data was indexed for that exact millisecond between stopping and starting, it will be ignored.\n\nWhen Elasticsearch security features are enabled, your datafeed remembers which roles the last user to create or\nupdate it had at the time of creation or update and runs the query using those same roles. If you provided secondary\nauthorization headers when you created or updated the datafeed, those credentials are used instead.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html",
      "name": "ml.start_datafeed",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.start_datafeed"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.start_datafeed"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/datafeeds/{datafeed_id}/_start"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.0.0",
          "stability": "stable"
        }
      },
      "description": "Start a trained model deployment.\nIt allocates the model to every machine learning node.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trained-model-deployment.html",
      "name": "ml.start_trained_model_deployment",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.start_trained_model_deployment"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.start_trained_model_deployment"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/trained_models/{model_id}/deployment/_start"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.3.0",
          "stability": "stable"
        }
      },
      "description": "Stop data frame analytics jobs.\nA data frame analytics job can be started and stopped multiple times\nthroughout its lifecycle.",
      "docTag": "ml data frame",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/stop-dfanalytics.html",
      "name": "ml.stop_data_frame_analytics",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.stop_data_frame_analytics"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.stop_data_frame_analytics"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/data_frame/analytics/{id}/_stop"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.4.0",
          "stability": "stable"
        }
      },
      "description": "Stop datafeeds.\nA datafeed that is stopped ceases to retrieve data from Elasticsearch. A datafeed can be started and stopped\nmultiple times throughout its lifecycle.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html",
      "name": "ml.stop_datafeed",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.stop_datafeed"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.stop_datafeed"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/datafeeds/{datafeed_id}/_stop"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.0.0",
          "stability": "stable"
        }
      },
      "description": "Stop a trained model deployment.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/stop-trained-model-deployment.html",
      "name": "ml.stop_trained_model_deployment",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.stop_trained_model_deployment"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.stop_trained_model_deployment"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/trained_models/{model_id}/deployment/_stop"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.3.0",
          "stability": "stable"
        }
      },
      "description": "Update a data frame analytics job.",
      "docTag": "ml data frame",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/update-dfanalytics.html",
      "name": "ml.update_data_frame_analytics",
      "privileges": {
        "cluster": [
          "manage_ml"
        ],
        "index": [
          "read",
          "create_index",
          "manage",
          "index",
          "view_index_metadata"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.update_data_frame_analytics"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.update_data_frame_analytics"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/data_frame/analytics/{id}/_update"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.4.0",
          "stability": "stable"
        }
      },
      "description": "Update a datafeed.\nYou must stop and start the datafeed for the changes to be applied.\nWhen Elasticsearch security features are enabled, your datafeed remembers which roles the user who updated it had at\nthe time of the update and runs the query using those same roles. If you provide secondary authorization headers,\nthose credentials are used instead.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html",
      "name": "ml.update_datafeed",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.update_datafeed"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.update_datafeed"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/datafeeds/{datafeed_id}/_update"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.4.0",
          "stability": "stable"
        }
      },
      "description": "Update a filter.\nUpdates the description of a filter, adds items, or removes items from the list.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-filter.html",
      "name": "ml.update_filter",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.update_filter"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.update_filter"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/filters/{filter_id}/_update"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.5.0",
          "stability": "stable"
        }
      },
      "description": "Update an anomaly detection job.\nUpdates certain properties of an anomaly detection job.",
      "docTag": "ml anomaly",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html",
      "name": "ml.update_job",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.update_job"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.update_job"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/anomaly_detectors/{job_id}/_update"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.6.0",
          "stability": "stable"
        }
      },
      "description": "Update a trained model deployment.",
      "docTag": "ml trained model",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/update-trained-model-deployment.html",
      "name": "ml.update_trained_model_deployment",
      "privileges": {
        "cluster": [
          "manage_ml"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "ml.update_trained_model_deployment"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "ml.update_trained_model_deployment"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_ml/trained_models/{model_id}/deployment/_update"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "1.3.0",
          "stability": "stable"
        }
      },
      "description": "Run multiple searches.\n\nThe format of the request is similar to the bulk API format and makes use of the newline delimited JSON (NDJSON) format.\nThe structure is as follows:\n\n```\nheader\\n\nbody\\n\nheader\\n\nbody\\n\n```\n\nThis structure is specifically optimized to reduce parsing if a specific search ends up redirected to another node.\n\nIMPORTANT: The final line of data must end with a newline character `\\n`.\nEach newline character may be preceded by a carriage return `\\r`.\nWhen sending requests to this endpoint the `Content-Type` header should be set to `application/x-ndjson`.",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html",
      "name": "msearch",
      "privileges": {
        "index": [
          "read"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "_global.msearch"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/x-ndjson"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.msearch"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_msearch"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_msearch"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.0.0",
          "stability": "stable"
        }
      },
      "description": "Run multiple templated searches.",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html",
      "extDocId": "search-templates",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-template.html",
      "name": "msearch_template",
      "privileges": {
        "index": [
          "read"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "_global.msearch_template"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/x-ndjson"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.msearch_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_msearch/template"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_msearch/template"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get multiple term vectors.\n\nYou can specify existing documents by index and ID or provide artificial documents in the body of the request.\nYou can specify the index in the request body or request URI.\nThe response contains a `docs` array with all the fetched termvectors.\nEach element has the structure provided by the termvectors API.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html",
      "name": "mtermvectors",
      "request": {
        "name": "Request",
        "namespace": "_global.mtermvectors"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.mtermvectors"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_mtermvectors"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_mtermvectors"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.10.0",
          "stability": "stable"
        }
      },
      "description": "Open a point in time.\n\nA search request by default runs against the most recent visible data of the target indices,\nwhich is called point in time. Elasticsearch pit (point in time) is a lightweight view into the\nstate of the data as it existed when initiated. In some cases, itâ€™s preferred to perform multiple\nsearch requests using the same point in time. For example, if refreshes happen between\n`search_after` requests, then the results of those requests might not be consistent as changes happening\nbetween searches are only visible to the more recent point in time.\n\nA point in time must be opened explicitly before being used in search requests.\nThe `keep_alive` parameter tells Elasticsearch how long it should persist.",
      "docId": "point-in-time-api",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/point-in-time-api.html",
      "name": "open_point_in_time",
      "privileges": {
        "index": [
          "read"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "_global.open_point_in_time"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.open_point_in_time"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/{index}/_pit"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Ping the cluster.\nReturns whether the cluster is running.",
      "docTag": "cluster",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html",
      "name": "ping",
      "request": {
        "name": "Request",
        "namespace": "_global.ping"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "_global.ping"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "HEAD"
          ],
          "path": "/"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Create or update a script or search template.\nCreates or updates a stored script or search template.",
      "docTag": "script",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html",
      "name": "put_script",
      "request": {
        "name": "Request",
        "namespace": "_global.put_script"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.put_script"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT",
            "POST"
          ],
          "path": "/_scripts/{id}"
        },
        {
          "methods": [
            "PUT",
            "POST"
          ],
          "path": "/_scripts/{id}/{context}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.15.0",
          "stability": "stable"
        }
      },
      "description": "Deletes a query rule within a query ruleset.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-query-rule.html",
      "name": "query_rules.delete_rule",
      "request": {
        "name": "Request",
        "namespace": "query_rules.delete_rule"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "query_rules.delete_rule"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_query_rules/{ruleset_id}/_rule/{rule_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Deletes a query ruleset.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-query-ruleset.html",
      "name": "query_rules.delete_ruleset",
      "request": {
        "name": "Request",
        "namespace": "query_rules.delete_ruleset"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "query_rules.delete_ruleset"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_query_rules/{ruleset_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.15.0",
          "stability": "stable"
        }
      },
      "description": "Returns the details about a query rule within a query ruleset",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-query-rule.html",
      "name": "query_rules.get_rule",
      "request": {
        "name": "Request",
        "namespace": "query_rules.get_rule"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "query_rules.get_rule"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_query_rules/{ruleset_id}/_rule/{rule_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Returns the details about a query ruleset",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-query-ruleset.html",
      "name": "query_rules.get_ruleset",
      "request": {
        "name": "Request",
        "namespace": "query_rules.get_ruleset"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "query_rules.get_ruleset"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_query_rules/{ruleset_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Returns summarized information about existing query rulesets.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/list-query-rulesets.html",
      "name": "query_rules.list_rulesets",
      "request": {
        "name": "Request",
        "namespace": "query_rules.list_rulesets"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "query_rules.list_rulesets"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_query_rules"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.15.0",
          "stability": "stable"
        }
      },
      "description": "Creates or updates a query rule within a query ruleset.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/put-query-rule.html",
      "name": "query_rules.put_rule",
      "request": {
        "name": "Request",
        "namespace": "query_rules.put_rule"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "query_rules.put_rule"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_query_rules/{ruleset_id}/_rule/{rule_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Creates or updates a query ruleset.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/put-query-ruleset.html",
      "name": "query_rules.put_ruleset",
      "request": {
        "name": "Request",
        "namespace": "query_rules.put_ruleset"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "query_rules.put_ruleset"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_query_rules/{ruleset_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Creates or updates a query ruleset.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/test-query-ruleset.html",
      "name": "query_rules.test",
      "request": {
        "name": "Request",
        "namespace": "query_rules.test"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "query_rules.test"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_query_rules/{ruleset_id}/_test"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.2.0",
          "stability": "stable"
        }
      },
      "description": "Evaluate ranked search results.\n\nEvaluate the quality of ranked search results over a set of typical search queries.",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-rank-eval.html",
      "name": "rank_eval",
      "privileges": {
        "index": [
          "read"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "_global.rank_eval"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.rank_eval"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_rank_eval"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_rank_eval"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "2.3.0",
          "stability": "stable"
        }
      },
      "description": "Reindex documents.\nCopies documents from a source to a destination. The source can be any existing index, alias, or data stream. The destination must differ from the source. For example, you cannot reindex a data stream into itself.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html",
      "name": "reindex",
      "request": {
        "name": "Request",
        "namespace": "_global.reindex"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.reindex"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_reindex"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Render a search template.\n\nRender a search template as a search request body.",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/render-search-template-api.html",
      "name": "render_search_template",
      "request": {
        "name": "Request",
        "namespace": "_global.render_search_template"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.render_search_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_render/template"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_render/template/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "experimental",
          "visibility": "public"
        },
        "stack": {
          "since": "6.3.0",
          "stability": "experimental"
        }
      },
      "description": "Run a script.\nRuns a script and returns a result.",
      "docTag": "script",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html",
      "name": "scripts_painless_execute",
      "request": {
        "name": "Request",
        "namespace": "_global.scripts_painless_execute"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.scripts_painless_execute"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_scripts/painless/_execute"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Run a scrolling search.\n\nIMPORTANT: The scroll API is no longer recommend for deep pagination. If you need to preserve the index state while paging through more than 10,000 hits, use the `search_after` parameter with a point in time (PIT).\n\nThe scroll API gets large sets of results from a single scrolling search request.\nTo get the necessary scroll ID, submit a search API request that includes an argument for the `scroll` query parameter.\nThe `scroll` parameter indicates how long Elasticsearch should retain the search context for the request.\nThe search response returns a scroll ID in the `_scroll_id` response body parameter.\nYou can then use the scroll ID with the scroll API to retrieve the next batch of results for the request.\nIf the Elasticsearch security features are enabled, the access to the results of a specific scroll ID is restricted to the user or API key that submitted the search.\n\nYou can also use the scroll API to specify a new scroll parameter that extends or shortens the retention period for the search context.\n\nIMPORTANT: Results from a scrolling search reflect the state of the index at the time of the initial search request. Subsequent indexing or document changes only affect later search and scroll requests.",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll",
      "extDocId": "scroll-search-results",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/paginate-search-results.html#scroll-search-results",
      "name": "scroll",
      "request": {
        "name": "Request",
        "namespace": "_global.scroll"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.scroll"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_search/scroll"
        },
        {
          "deprecation": {
            "description": "A scroll id can be quite large and should be specified as part of the body",
            "version": "7.0.0"
          },
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_search/scroll/{scroll_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Run a search.\n\nGet search hits that match the query defined in the request.\nYou can provide search queries using the `q` query string parameter or the request body.\nIf both are specified, only the query parameter is used.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html",
      "name": "search",
      "privileges": {
        "index": [
          "read"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "_global.search"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.search"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_search"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_search"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.8.0",
          "stability": "beta"
        }
      },
      "description": "Delete a search application.\nRemove a search application and its associated alias. Indices attached to the search application are not removed.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-search-application.html",
      "name": "search_application.delete",
      "request": {
        "name": "Request",
        "namespace": "search_application.delete"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "search_application.delete"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_application/search_application/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "experimental",
          "visibility": "public"
        },
        "stack": {
          "since": "8.8.0",
          "stability": "experimental"
        }
      },
      "description": "Delete a behavioral analytics collection.\nThe associated data stream is also deleted.",
      "docTag": "analytics",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-analytics-collection.html",
      "name": "search_application.delete_behavioral_analytics",
      "request": {
        "name": "Request",
        "namespace": "search_application.delete_behavioral_analytics"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "search_application.delete_behavioral_analytics"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_application/analytics/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.8.0",
          "stability": "beta"
        }
      },
      "description": "Get search application details.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-search-application.html",
      "name": "search_application.get",
      "request": {
        "name": "Request",
        "namespace": "search_application.get"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "search_application.get"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_application/search_application/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "experimental",
          "visibility": "public"
        },
        "stack": {
          "since": "8.8.0",
          "stability": "experimental"
        }
      },
      "description": "Get behavioral analytics collections.",
      "docTag": "analytics",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/list-analytics-collection.html",
      "name": "search_application.get_behavioral_analytics",
      "request": {
        "name": "Request",
        "namespace": "search_application.get_behavioral_analytics"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "search_application.get_behavioral_analytics"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_application/analytics"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_application/analytics/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.8.0",
          "stability": "beta"
        }
      },
      "description": "Returns the existing search applications.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/list-search-applications.html",
      "name": "search_application.list",
      "request": {
        "name": "Request",
        "namespace": "search_application.list"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "search_application.list"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_application/search_application"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.8.0",
          "stability": "beta"
        }
      },
      "description": "Create or update a search application.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/put-search-application.html",
      "name": "search_application.put",
      "request": {
        "name": "Request",
        "namespace": "search_application.put"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "search_application.put"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_application/search_application/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "experimental",
          "visibility": "public"
        },
        "stack": {
          "since": "8.8.0",
          "stability": "experimental"
        }
      },
      "description": "Create a behavioral analytics collection.",
      "docTag": "analytics",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/put-analytics-collection.html",
      "name": "search_application.put_behavioral_analytics",
      "request": {
        "name": "Request",
        "namespace": "search_application.put_behavioral_analytics"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "search_application.put_behavioral_analytics"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_application/analytics/{name}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "beta",
          "visibility": "public"
        },
        "stack": {
          "since": "8.8.0",
          "stability": "beta"
        }
      },
      "description": "Run a search application search.\nGenerate and run an Elasticsearch query that uses the specified query parameteter and the search template associated with the search application or default template.\nUnspecified template parameters are assigned their default values if applicable.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-application-search.html",
      "name": "search_application.search",
      "request": {
        "name": "Request",
        "namespace": "search_application.search"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "search_application.search"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_application/search_application/{name}/_search"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.15.0",
          "stability": "stable"
        }
      },
      "description": "Search a vector tile.\n\nSearch a vector tile for geospatial values.",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-vector-tile-api.html",
      "name": "search_mvt",
      "request": {
        "name": "Request",
        "namespace": "_global.search_mvt"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.search_mvt"
      },
      "responseMediaType": [
        "application/vnd.mapbox-vector-tile"
      ],
      "urls": [
        {
          "methods": [
            "POST",
            "GET"
          ],
          "path": "/{index}/_mvt/{field}/{zoom}/{x}/{y}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "2.0.0",
          "stability": "stable"
        }
      },
      "description": "Run a search with a search template.",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html",
      "extDocId": "search-template",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-template.html",
      "name": "search_template",
      "request": {
        "name": "Request",
        "namespace": "_global.search_template"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.search_template"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_search/template"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_search/template"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "5.5.0",
          "stability": "stable"
        }
      },
      "description": "Authenticate a user.\n\nAuthenticates a user and returns information about the authenticated user.\nInclude the user information in a [basic auth header](https://en.wikipedia.org/wiki/Basic_access_authentication).\nA successful call returns a JSON structure that shows user information such as their username, the roles that are assigned to the user, any assigned metadata, and information about the realms that authenticated and authorized the user.\nIf the user cannot be authenticated, this API returns a 401 status code.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html",
      "name": "security.authenticate",
      "request": {
        "name": "Request",
        "namespace": "security.authenticate"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "security.authenticate"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_security/_authenticate"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.7.0",
          "stability": "stable"
        }
      },
      "description": "Create an API key.\n\nCreate an API key for access without requiring basic authentication.\nA successful request returns a JSON structure that contains the API key, its unique id, and its name.\nIf applicable, it also returns expiration information for the API key in milliseconds.\nNOTE: By default, API keys never expire. You can specify expiration information when you create the API keys.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html",
      "name": "security.create_api_key",
      "privileges": {
        "cluster": [
          "manage_own_api_key"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "security.create_api_key"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "security.create_api_key"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT",
            "POST"
          ],
          "path": "/_security/api_key"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.7.0",
          "stability": "stable"
        }
      },
      "description": "Get API key information.\n\nRetrieves information for one or more API keys.\nNOTE: If you have only the `manage_own_api_key` privilege, this API returns only the API keys that you own.\nIf you have `read_security`, `manage_api_key` or greater privileges (including `manage_security`), this API returns all API keys regardless of ownership.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html",
      "name": "security.get_api_key",
      "privileges": {
        "cluster": [
          "manage_own_api_key",
          "read_security"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "security.get_api_key"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "security.get_api_key"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_security/api_key"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.4.0",
          "stability": "stable"
        }
      },
      "description": "Check user privileges.\n\nDetermine whether the specified user has a specified list of privileges.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html",
      "extDocId": "security-privileges",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/security-privileges.html",
      "name": "security.has_privileges",
      "request": {
        "name": "Request",
        "namespace": "security.has_privileges"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "security.has_privileges"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_security/user/_has_privileges"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_security/user/{user}/_has_privileges"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.7.0",
          "stability": "stable"
        }
      },
      "description": "Invalidate API keys.\n\nThis API invalidates API keys created by the create API key or grant API key APIs.\nInvalidated API keys fail authentication, but they can still be viewed using the get API key information and query API key information APIs, for at least the configured retention period, until they are automatically deleted.\nThe `manage_api_key` privilege allows deleting any API keys.\nThe `manage_own_api_key` only allows deleting API keys that are owned by the user.\nIn addition, with the `manage_own_api_key` privilege, an invalidation request must be issued in one of the three formats:\n- Set the parameter `owner=true`.\n- Or, set both `username` and `realm_name` to match the userâ€™s identity.\n- Or, if the request is issued by an API key, that is to say an API key invalidates itself, specify its ID in the `ids` field.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html",
      "name": "security.invalidate_api_key",
      "privileges": {
        "cluster": [
          "manage_api_key",
          "manage_own_api_key"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "security.invalidate_api_key"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "security.invalidate_api_key"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_security/api_key"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.15.0",
          "stability": "stable"
        }
      },
      "description": "Find API keys with a query.\n\nGet a paginated list of API keys and their information. You can optionally filter the results with a query.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-query-api-key.html",
      "name": "security.query_api_keys",
      "privileges": {
        "cluster": [
          "manage_own_api_key",
          "read_security"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "security.query_api_keys"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "security.query_api_keys"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_security/_query/api_key"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.4.0",
          "stability": "stable"
        }
      },
      "description": "Update an API key.\n\nUpdates attributes of an existing API key.\nUsers can only update API keys that they created or that were granted to them.\nUse this API to update API keys created by the create API Key or grant API Key APIs.\nIf you need to apply the same update to many API keys, you can use bulk update API Keys to reduce overhead.\nItâ€™s not possible to update expired API keys, or API keys that have been invalidated by invalidate API Key.\nThis API supports updates to an API keyâ€™s access scope and metadata.\nThe access scope of an API key is derived from the `role_descriptors` you specify in the request, and a snapshot of the owner userâ€™s permissions at the time of the request.\nThe snapshot of the ownerâ€™s permissions is updated automatically on every call.\nIf you donâ€™t specify `role_descriptors` in the request, a call to this API might still change the API keyâ€™s access scope.\nThis change can occur if the owner userâ€™s permissions have changed since the API key was created or last modified.\nTo update another userâ€™s API key, use the `run_as` feature to submit a request on behalf of another user.\nIMPORTANT: Itâ€™s not possible to use an API key as the authentication credential for this API.\nTo update an API key, the owner userâ€™s credentials are required.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-update-api-key.html",
      "name": "security.update_api_key",
      "privileges": {
        "cluster": [
          "manage_own_api_key"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "security.update_api_key"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "security.update_api_key"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_security/api_key/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.3.0",
          "stability": "stable"
        }
      },
      "description": "Clears the SQL cursor",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/clear-sql-cursor-api.html",
      "name": "sql.clear_cursor",
      "request": {
        "name": "Request",
        "namespace": "sql.clear_cursor"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "sql.clear_cursor"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_sql/close"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.15.0",
          "stability": "stable"
        }
      },
      "description": "Deletes an async SQL search or a stored synchronous SQL search. If the search is still running, the API cancels it.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-async-sql-search-api.html",
      "name": "sql.delete_async",
      "request": {
        "name": "Request",
        "namespace": "sql.delete_async"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "sql.delete_async"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_sql/async/delete/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.15.0",
          "stability": "stable"
        }
      },
      "description": "Returns the current status and available results for an async SQL search or stored synchronous SQL search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-async-sql-search-api.html",
      "name": "sql.get_async",
      "request": {
        "name": "Request",
        "namespace": "sql.get_async"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "sql.get_async"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_sql/async/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.15.0",
          "stability": "stable"
        }
      },
      "description": "Returns the current status of an async SQL search or a stored synchronous SQL search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-async-sql-search-status-api.html",
      "name": "sql.get_async_status",
      "request": {
        "name": "Request",
        "namespace": "sql.get_async_status"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "sql.get_async_status"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_sql/async/status/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.3.0",
          "stability": "stable"
        }
      },
      "description": "Executes a SQL request",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-search-api.html",
      "name": "sql.query",
      "request": {
        "name": "Request",
        "namespace": "sql.query"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "sql.query"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST",
            "GET"
          ],
          "path": "/_sql"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "6.3.0",
          "stability": "stable"
        }
      },
      "description": "Translates SQL into Elasticsearch queries",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-translate-api.html",
      "name": "sql.translate",
      "request": {
        "name": "Request",
        "namespace": "sql.translate"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "sql.translate"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST",
            "GET"
          ],
          "path": "/_sql/translate"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Deletes a synonym set",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-synonyms-set.html",
      "name": "synonyms.delete_synonym",
      "request": {
        "name": "Request",
        "namespace": "synonyms.delete_synonym"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "synonyms.delete_synonym"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_synonyms/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Deletes a synonym rule in a synonym set",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-synonym-rule.html",
      "name": "synonyms.delete_synonym_rule",
      "request": {
        "name": "Request",
        "namespace": "synonyms.delete_synonym_rule"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "synonyms.delete_synonym_rule"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_synonyms/{set_id}/{rule_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Retrieves a synonym set",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-synonyms-set.html",
      "name": "synonyms.get_synonym",
      "request": {
        "name": "Request",
        "namespace": "synonyms.get_synonym"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "synonyms.get_synonym"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_synonyms/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Retrieves a synonym rule from a synonym set",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-synonym-rule.html",
      "name": "synonyms.get_synonym_rule",
      "request": {
        "name": "Request",
        "namespace": "synonyms.get_synonym_rule"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "synonyms.get_synonym_rule"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_synonyms/{set_id}/{rule_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Retrieves a summary of all defined synonym sets",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/list-synonyms-sets.html",
      "name": "synonyms.get_synonyms_sets",
      "request": {
        "name": "Request",
        "namespace": "synonyms.get_synonyms_sets"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "synonyms.get_synonyms_sets"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_synonyms"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Creates or updates a synonym set.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/put-synonyms-set.html",
      "name": "synonyms.put_synonym",
      "request": {
        "name": "Request",
        "namespace": "synonyms.put_synonym"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "synonyms.put_synonym"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_synonyms/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.10.0",
          "stability": "stable"
        }
      },
      "description": "Creates or updates a synonym rule in a synonym set",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/put-synonym-rule.html",
      "name": "synonyms.put_synonym_rule",
      "request": {
        "name": "Request",
        "namespace": "synonyms.put_synonym_rule"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "synonyms.put_synonym_rule"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_synonyms/{set_id}/{rule_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "experimental",
          "visibility": "public"
        },
        "stack": {
          "since": "5.0.0",
          "stability": "experimental"
        }
      },
      "description": "Get task information.\nReturns information about the tasks currently executing in the cluster.",
      "docId": "tasks",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/tasks.html",
      "name": "tasks.get",
      "request": {
        "name": "Request",
        "namespace": "tasks.get"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "tasks.get"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_tasks/{task_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.14.0",
          "stability": "stable"
        }
      },
      "description": "Get terms in an index.\n\nDiscover terms that match a partial string in an index.\nThis \"terms enum\" API is designed for low-latency look-ups used in auto-complete scenarios.\n\nIf the `complete` property in the response is false, the returned terms set may be incomplete and should be treated as approximate.\nThis can occur due to a few reasons, such as a request timeout or a node error.\n\nNOTE: The terms enum API may return terms from deleted documents. Deleted documents are initially only marked as deleted. It is not until their segments are merged that documents are actually deleted. Until that happens, the terms enum API will return terms from these documents.",
      "docTag": "search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-terms-enum.html",
      "name": "terms_enum",
      "request": {
        "name": "Request",
        "namespace": "_global.terms_enum"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.terms_enum"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_terms_enum"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Get term vector information.\n\nGet information and statistics about terms in the fields of a particular document.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html",
      "name": "termvectors",
      "request": {
        "name": "Request",
        "namespace": "_global.termvectors"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.termvectors"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_termvectors/{id}"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/{index}/_termvectors"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.5.0",
          "stability": "stable"
        }
      },
      "description": "Delete a transform.\nDeletes a transform.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-transform.html",
      "name": "transform.delete_transform",
      "privileges": {
        "cluster": [
          "manage_transform"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "transform.delete_transform"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "transform.delete_transform"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "DELETE"
          ],
          "path": "/_transform/{transform_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.5.0",
          "stability": "stable"
        }
      },
      "description": "Get transforms.\nRetrieves configuration information for transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-transform.html",
      "name": "transform.get_transform",
      "privileges": {
        "cluster": [
          "monitor_transform"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "transform.get_transform"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "transform.get_transform"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_transform/{transform_id}"
        },
        {
          "methods": [
            "GET"
          ],
          "path": "/_transform"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.5.0",
          "stability": "stable"
        }
      },
      "description": "Get transform stats.\nRetrieves usage information for transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-transform-stats.html",
      "name": "transform.get_transform_stats",
      "privileges": {
        "cluster": [
          "monitor_transform"
        ],
        "index": [
          "read",
          "view_index_metadata"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "transform.get_transform_stats"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "transform.get_transform_stats"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET"
          ],
          "path": "/_transform/{transform_id}/_stats"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.2.0",
          "stability": "stable"
        }
      },
      "description": "Preview a transform.\nGenerates a preview of the results that you will get when you create a transform with the same configuration.\n\nIt returns a maximum of 100 results. The calculations are based on all the current data in the source index. It also\ngenerates a list of mappings and settings for the destination index. These values are determined based on the field\ntypes of the source index and the transform aggregations.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/preview-transform.html",
      "name": "transform.preview_transform",
      "privileges": {
        "cluster": [
          "manage_transform"
        ],
        "index": [
          "read",
          "view_index_metadata"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "transform.preview_transform"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "transform.preview_transform"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_transform/{transform_id}/_preview"
        },
        {
          "methods": [
            "GET",
            "POST"
          ],
          "path": "/_transform/_preview"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.2.0",
          "stability": "stable"
        }
      },
      "description": "Create a transform.\nCreates a transform.\n\nA transform copies data from source indices, transforms it, and persists it into an entity-centric destination index. You can also think of the destination index as a two-dimensional tabular data structure (known as\na data frame). The ID for each document in the data frame is generated from a hash of the entity, so there is a\nunique row per entity.\n\nYou must choose either the latest or pivot method for your transform; you cannot use both in a single transform. If\nyou choose to use the pivot method for your transform, the entities are defined by the set of `group_by` fields in\nthe pivot object. If you choose to use the latest method, the entities are defined by the `unique_key` field values\nin the latest object.\n\nYou must have `create_index`, `index`, and `read` privileges on the destination index and `read` and\n`view_index_metadata` privileges on the source indices. When Elasticsearch security features are enabled, the\ntransform remembers which roles the user that created it had at the time of creation and uses those same roles. If\nthose roles do not have the required privileges on the source and destination indices, the transform fails when it\nattempts unauthorized operations.\n\nNOTE: You must use Kibana or this API to create a transform. Do not add a transform directly into any\n`.transform-internal*` indices using the Elasticsearch index API. If Elasticsearch security features are enabled, do\nnot give users any privileges on `.transform-internal*` indices. If you used transforms prior to 7.5, also do not\ngive users any privileges on `.data-frame-internal*` indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-transform.html",
      "name": "transform.put_transform",
      "privileges": {
        "cluster": [
          "manage_transform"
        ],
        "index": [
          "create_index",
          "read",
          "index",
          "view_index_metadata"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "transform.put_transform"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "transform.put_transform"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "PUT"
          ],
          "path": "/_transform/{transform_id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.1.0",
          "stability": "stable"
        }
      },
      "description": "Reset a transform.\nResets a transform.\nBefore you can reset it, you must stop it; alternatively, use the `force` query parameter.\nIf the destination index was created by the transform, it is deleted.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/reset-transform.html",
      "name": "transform.reset_transform",
      "privileges": {
        "cluster": [
          "manage_transform"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "transform.reset_transform"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "transform.reset_transform"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_transform/{transform_id}/_reset"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "8.7.0",
          "stability": "stable"
        }
      },
      "description": "Schedule a transform to start now.\nInstantly runs a transform to process data.\n\nIf you _schedule_now a transform, it will process the new data instantly,\nwithout waiting for the configured frequency interval. After _schedule_now API is called,\nthe transform will be processed again at now + frequency unless _schedule_now API\nis called again in the meantime.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/schedule-now-transform.html",
      "name": "transform.schedule_now_transform",
      "privileges": {
        "cluster": [
          "manage_transform"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "transform.schedule_now_transform"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "transform.schedule_now_transform"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_transform/{transform_id}/_schedule_now"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.5.0",
          "stability": "stable"
        }
      },
      "description": "Start a transform.\nStarts a transform.\n\nWhen you start a transform, it creates the destination index if it does not already exist. The `number_of_shards` is\nset to `1` and the `auto_expand_replicas` is set to `0-1`. If it is a pivot transform, it deduces the mapping\ndefinitions for the destination index from the source indices and the transform aggregations. If fields in the\ndestination index are derived from scripts (as in the case of `scripted_metric` or `bucket_script` aggregations),\nthe transform uses dynamic mappings unless an index template exists. If it is a latest transform, it does not deduce\nmapping definitions; it uses dynamic mappings. To use explicit mappings, create the destination index before you\nstart the transform. Alternatively, you can create an index template, though it does not affect the deduced mappings\nin a pivot transform.\n\nWhen the transform starts, a series of validations occur to ensure its success. If you deferred validation when you\ncreated the transform, they occur when you start the transformâ€”â€‹with the exception of privilege checks. When\nElasticsearch security features are enabled, the transform remembers which roles the user that created it had at the\ntime of creation and uses those same roles. If those roles do not have the required privileges on the source and\ndestination indices, the transform fails when it attempts unauthorized operations.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/start-transform.html",
      "name": "transform.start_transform",
      "privileges": {
        "cluster": [
          "manage_transform"
        ],
        "index": [
          "read",
          "view_index_metadata"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "transform.start_transform"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "transform.start_transform"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_transform/{transform_id}/_start"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.5.0",
          "stability": "stable"
        }
      },
      "description": "Stop transforms.\nStops one or more transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/stop-transform.html",
      "name": "transform.stop_transform",
      "privileges": {
        "cluster": [
          "manage_transform"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "transform.stop_transform"
      },
      "requestBodyRequired": false,
      "response": {
        "name": "Response",
        "namespace": "transform.stop_transform"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_transform/{transform_id}/_stop"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "7.2.0",
          "stability": "stable"
        }
      },
      "description": "Update a transform.\nUpdates certain properties of a transform.\n\nAll updated properties except `description` do not take effect until after the transform starts the next checkpoint,\nthus there is data consistency in each checkpoint. To use this API, you must have `read` and `view_index_metadata`\nprivileges for the source indices. You must also have `index` and `read` privileges for the destination index. When\nElasticsearch security features are enabled, the transform remembers which roles the user who updated it had at the\ntime of update and runs with those privileges.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/update-transform.html",
      "name": "transform.update_transform",
      "privileges": {
        "cluster": [
          "manage_transform"
        ],
        "index": [
          "read",
          "index",
          "view_index_metadata"
        ]
      },
      "request": {
        "name": "Request",
        "namespace": "transform.update_transform"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "transform.update_transform"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/_transform/{transform_id}/_update"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "stability": "stable"
        }
      },
      "description": "Update a document.\nUpdates a document by running a script or passing a partial document.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html",
      "name": "update",
      "request": {
        "name": "Request",
        "namespace": "_global.update"
      },
      "requestBodyRequired": true,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.update"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/{index}/_update/{id}"
        }
      ]
    },
    {
      "availability": {
        "serverless": {
          "stability": "stable",
          "visibility": "public"
        },
        "stack": {
          "since": "2.4.0",
          "stability": "stable"
        }
      },
      "description": "Update documents.\nUpdates documents that match the specified query.\nIf no query is specified, performs an update on every document in the data stream or index without modifying the source, which is useful for picking up mapping changes.",
      "docTag": "document",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html",
      "name": "update_by_query",
      "request": {
        "name": "Request",
        "namespace": "_global.update_by_query"
      },
      "requestBodyRequired": false,
      "requestMediaType": [
        "application/json"
      ],
      "response": {
        "name": "Response",
        "namespace": "_global.update_by_query"
      },
      "responseMediaType": [
        "application/json"
      ],
      "urls": [
        {
          "methods": [
            "POST"
          ],
          "path": "/{index}/_update_by_query"
        }
      ]
    }
  ],
  "types": [
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete an async search.\n\nIf the asynchronous search is still running, it is cancelled.\nOtherwise, the saved search results are deleted.\nIf the Elasticsearch security features are enabled, the deletion of a specific async search is restricted to: the authenticated user that submitted the original search request; users that have the `cancel_task` cluster privilege.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "async_search.delete"
      },
      "path": [
        {
          "description": "A unique identifier for the async search.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "async_search/delete/AsyncSearchDeleteRequest.ts#L23-L40"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "async_search.delete"
      },
      "specLocation": "async_search/delete/AsyncSearchDeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get async search results.\n\nRetrieve the results of a previously submitted asynchronous search request.\nIf the Elasticsearch security features are enabled, access to the results of a specific async search is restricted to the user or API key that submitted it.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "async_search.get"
      },
      "path": [
        {
          "description": "A unique identifier for the async search.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies how long the async search should be available in the cluster.\nWhen not specified, the `keep_alive` set with the corresponding submit async request will be used.\nOtherwise, it is possible to override the value and extend the validity of the request.\nWhen this period expires, the search, if still running, is cancelled.\nIf the search is completed, its saved results are deleted.",
          "name": "keep_alive",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specify whether aggregation and suggester names should be prefixed by their respective types in the response",
          "name": "typed_keys",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies to wait for the search to be completed up until the provided timeout.\nFinal results will be returned if available before the timeout expires, otherwise the currently available results will be returned once the timeout expires.\nBy default no timeout is set meaning that the currently available results will be returned without any additional wait.",
          "name": "wait_for_completion_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "async_search/get/AsyncSearchGetRequest.ts#L24-L57"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "TDocument",
                "namespace": "async_search.get.Response"
              }
            }
          ],
          "kind": "instance_of",
          "type": {
            "name": "AsyncSearchDocumentResponseBase",
            "namespace": "async_search._types"
          }
        }
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "async_search.get.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "async_search.get"
      },
      "specLocation": "async_search/get/AsyncSearchGetResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get the async search status.\n\nGet the status of a previously submitted async search request given its identifier, without retrieving search results.\nIf the Elasticsearch security features are enabled, use of this API is restricted to the `monitoring_user` role.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "async_search.status"
      },
      "path": [
        {
          "description": "A unique identifier for the async search.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies how long the async search needs to be available.\nOngoing async searches and any saved search results are deleted after this period.",
          "name": "keep_alive",
          "required": false,
          "serverDefault": "5d",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "async_search/status/AsyncSearchStatusRequest.ts#L24-L48"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "StatusResponseBase",
            "namespace": "async_search.status"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "async_search.status"
      },
      "specLocation": "async_search/status/AsyncSearchStatusResponse.ts#L39-L41"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "aliases": [
              "aggs"
            ],
            "name": "aggregations",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "AggregationContainer",
                  "namespace": "_types.aggregations"
                }
              }
            }
          },
          {
            "name": "collapse",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "FieldCollapse",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "If true, returns detailed information about score computation as part of a hit.",
            "name": "explain",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Configuration of search extensions defined by Elasticsearch plugins.",
            "name": "ext",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          },
          {
            "description": "Starting document offset. By default, you cannot page through more than 10,000\nhits using the from and size parameters. To page through more hits, use the\nsearch_after parameter.",
            "name": "from",
            "required": false,
            "serverDefault": 0,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "highlight",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Highlight",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "Number of hits matching the query to count accurately. If true, the exact\nnumber of hits is returned at the cost of some performance. If false, the\nresponse does not include the total number of hits matching the query.\nDefaults to 10,000 hits.",
            "name": "track_total_hits",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TrackHits",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "Boosts the _score of documents from specified indices.",
            "name": "indices_boost",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "name": "IndexName",
                    "namespace": "_types"
                  }
                },
                "kind": "dictionary_of",
                "singleKey": false,
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "double",
                    "namespace": "_types"
                  }
                }
              }
            }
          },
          {
            "description": "Array of wildcard (*) patterns. The request returns doc values for field\nnames matching these patterns in the hits.fields property of the response.",
            "name": "docvalue_fields",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "FieldAndFormat",
                  "namespace": "_types.query_dsl"
                }
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "8.4.0"
              }
            },
            "description": "Defines the approximate kNN search to run.",
            "name": "knn",
            "required": false,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "KnnSearch",
                    "namespace": "_types"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "KnnSearch",
                      "namespace": "_types"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "description": "Minimum _score for matching documents. Documents with a lower _score are\nnot included in the search results.",
            "name": "min_score",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "post_filter",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "name": "profile",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Defines the search definition using the Query DSL.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "name": "rescore",
            "required": false,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "Rescore",
                    "namespace": "_global.search._types"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "Rescore",
                      "namespace": "_global.search._types"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "description": "Retrieve a script evaluation (based on different fields) for each hit.",
            "name": "script_fields",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ScriptField",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "name": "search_after",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SortResults",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The number of hits to return. By default, you cannot page through more\nthan 10,000 hits using the from and size parameters. To page through more\nhits, use the search_after parameter.",
            "name": "size",
            "required": false,
            "serverDefault": 10,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "slice",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SlicedScroll",
                "namespace": "_types"
              }
            }
          },
          {
            "docId": "sort-search-results",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/sort-search-results.html",
            "name": "sort",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Sort",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Indicates which source fields are returned for matching documents. These\nfields are returned in the hits._source property of the search response.",
            "name": "_source",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SourceConfig",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "Array of wildcard (*) patterns. The request returns values for field names\nmatching these patterns in the hits.fields property of the response.",
            "name": "fields",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "FieldAndFormat",
                  "namespace": "_types.query_dsl"
                }
              }
            }
          },
          {
            "name": "suggest",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Suggester",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "Maximum number of documents to collect for each shard. If a query reaches this\nlimit, Elasticsearch terminates the query early. Elasticsearch collects documents\nbefore sorting. Defaults to 0, which does not terminate query execution early.",
            "name": "terminate_after",
            "required": false,
            "serverDefault": 0,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Specifies the period of time to wait for a response from each shard. If no response\nis received before the timeout expires, the request fails and returns an error.\nDefaults to no timeout.",
            "name": "timeout",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If true, calculate and return document scores, even if the scores are not used for sorting.",
            "name": "track_scores",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If true, returns document version as part of a hit.",
            "name": "version",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If true, returns sequence number and primary term of the last modification\nof each hit. See Optimistic concurrency control.",
            "name": "seq_no_primary_term",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "List of stored fields to return as part of a hit. If no fields are specified,\nno stored fields are included in the response. If this field is specified, the _source\nparameter defaults to false. You can pass _source: true to return both source fields\nand stored fields in the search response.",
            "name": "stored_fields",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Fields",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Limits the search to a point in time (PIT). If you provide a PIT, you\ncannot specify an <index> in the request path.",
            "name": "pit",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "PointInTimeReference",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "Defines one or more runtime fields in the search request. These fields take\nprecedence over mapped fields with the same name.",
            "name": "runtime_mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFields",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "Stats groups to associate with the search. Each group maintains a statistics\naggregation for its associated searches. You can retrieve these stats using\nthe indices stats API.",
            "name": "stats",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          }
        ]
      },
      "description": "Run an async search.\n\nWhen the primary sort of the results is an indexed field, shards get sorted based on minimum and maximum value that they hold for that field. Partial results become available following the sort criteria that was requested.\n\nWarning: Asynchronous search does not support scroll or search requests that include only the suggest section.\n\nBy default, Elasticsearch does not allow you to store an async search response larger than 10Mb and an attempt to do this results in an error.\nThe maximum allowed size for a stored async search response can be set by changing the `search.max_async_search_response_size` cluster level setting.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "async_search.submit"
      },
      "path": [
        {
          "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Blocks and waits until the search is completed up to a certain timeout.\nWhen the async search completes within the timeout, the response wonâ€™t include the ID as the results are not stored in the cluster.",
          "name": "wait_for_completion_timeout",
          "required": false,
          "serverDefault": "1s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, results are stored for later retrieval when the search completes within the `wait_for_completion_timeout`.",
          "name": "keep_on_completion",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)",
          "name": "allow_no_indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicate if an error should be returned if there is a partial search failure or timeout",
          "name": "allow_partial_search_results",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The analyzer to use for the query string",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specify whether wildcard and prefix queries should be analyzed (default: false)",
          "name": "analyze_wildcard",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Affects how often partial results become available, which happens whenever shard results are reduced.\nA partial reduction is performed every time the coordinating node has received a certain number of new shard responses (5 by default).",
          "name": "batched_reduce_size",
          "required": false,
          "serverDefault": 5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The default value is the only supported value.",
          "name": "ccs_minimize_roundtrips",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The default operator for query string query (AND or OR)",
          "name": "default_operator",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "The field to use as default where no field prefix is given in the query string",
          "name": "df",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A comma-separated list of fields to return as the docvalue representation of a field for each hit",
          "name": "docvalue_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both.",
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specify whether to return detailed information about score computation as part of a hit",
          "name": "explain",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Whether specified concrete, expanded or aliased indices should be ignored when throttled",
          "name": "ignore_throttled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)",
          "name": "ignore_unavailable",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored",
          "name": "lenient",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests",
          "name": "max_concurrent_shard_requests",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_compatible_shard_node",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specify the node or shard the operation should be performed on (default: random)",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specify if request cache should be used for this request or not, defaults to true",
          "name": "request_cache",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A comma-separated list of specific routing values",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Search operation type",
          "name": "search_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific 'tag' of the request for logging and statistical purposes",
          "name": "stats",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "A comma-separated list of stored fields to return as part of a hit",
          "name": "stored_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies which field to use for suggestions.",
          "name": "suggest_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specify suggest mode",
          "name": "suggest_mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SuggestMode",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "How many suggestions to return in response",
          "name": "suggest_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The source text for which the suggestions should be returned.",
          "name": "suggest_text",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.",
          "name": "terminate_after",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit operation timeout",
          "name": "timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicate if the number of documents that match the query should be tracked. A number can also be specified, to accurately track the total hit count up to the number.",
          "name": "track_total_hits",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrackHits",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Whether to calculate and return scores even if they are not used for sorting",
          "name": "track_scores",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specify whether aggregation and suggester names should be prefixed by their respective types in the response",
          "name": "typed_keys",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates whether hits.total should be rendered as an integer or an object in the rest search response",
          "name": "rest_total_hits_as_int",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specify whether to return document version as part of a hit",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "True or false to return the _source field or not, or a list of fields to return",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfigParam",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A list of fields to exclude from the returned _source field",
          "name": "_source_excludes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A list of fields to extract and return from the _source field",
          "name": "_source_includes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specify whether to return sequence number and primary term of the last modification of each hit",
          "name": "seq_no_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Query in the Lucene query string syntax",
          "name": "q",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Number of hits to return (default: 10)",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Starting offset (default: 0)",
          "name": "from",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of <field>:<direction> pairs",
          "name": "sort",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "async_search/submit/AsyncSearchSubmitRequest.ts#L55-L280"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "TDocument",
                "namespace": "async_search.submit.Response"
              }
            }
          ],
          "kind": "instance_of",
          "type": {
            "name": "AsyncSearchDocumentResponseBase",
            "namespace": "async_search._types"
          }
        }
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "async_search.submit.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "async_search.submit"
      },
      "specLocation": "async_search/submit/AsyncSearchSubmitResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "codegenName": "operations",
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "OperationContainer",
                  "namespace": "_global.bulk"
                }
              },
              {
                "generics": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "name": "TDocument",
                      "namespace": "_global.bulk.Request"
                    }
                  },
                  {
                    "kind": "instance_of",
                    "type": {
                      "name": "TPartialDocument",
                      "namespace": "_global.bulk.Request"
                    }
                  }
                ],
                "kind": "instance_of",
                "type": {
                  "name": "UpdateAction",
                  "namespace": "_global.bulk"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "TDocument",
                  "namespace": "_global.bulk.Request"
                }
              }
            ],
            "kind": "union_of"
          }
        }
      },
      "description": "Bulk index or delete documents.\nPerforms multiple indexing or delete operations in a single API call.\nThis reduces overhead and can greatly increase indexing speed.",
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.bulk.Request"
        },
        {
          "name": "TPartialDocument",
          "namespace": "_global.bulk.Request"
        }
      ],
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.bulk"
      },
      "path": [
        {
          "description": "Name of the data stream, index, or index alias to perform bulk actions on.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "ID of the pipeline to use to preprocess incoming documents.\nIf the index has a default ingest pipeline specified, then setting the value to `_none` disables the default ingest pipeline for this request.\nIf a final pipeline is configured it will always run, regardless of the value of this parameter.",
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, Elasticsearch refreshes the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` do nothing with refreshes.\nValid values: `true`, `false`, `wait_for`.",
          "name": "refresh",
          "required": false,
          "serverDefault": "false",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Refresh",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "`true` or `false` to return the `_source` field or not, or a list of fields to return.",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfigParam",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to exclude from the response.",
          "name": "_source_excludes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to include in the response.",
          "name": "_source_includes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period each action waits for the following operations: automatic index creation, dynamic mapping updates, waiting for active shards.",
          "name": "timeout",
          "required": false,
          "serverDefault": "1m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to all or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
          "name": "wait_for_active_shards",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WaitForActiveShards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the requestâ€™s actions must target an index alias.",
          "name": "require_alias",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/bulk/BulkRequest.ts#L32-L105"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "errors",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "items",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "name": "OperationType",
                    "namespace": "_global.bulk"
                  }
                },
                "kind": "dictionary_of",
                "singleKey": true,
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "ResponseItem",
                    "namespace": "_global.bulk"
                  }
                }
              }
            }
          },
          {
            "name": "took",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "ingest_took",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.bulk"
      },
      "specLocation": "_global/bulk/BulkResponse.ts#L24-L31"
    },
    {
      "attachedBehaviors": [
        "CommonCatQueryParameters",
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get aliases.\nRetrieves the clusterâ€™s index aliases, including filter and routing information.\nThe API does not return data stream aliases.\n\nCAT APIs are only intended for human consumption using the command line or the Kibana console. They are not intended for use by applications. For application consumption, use the aliases API.",
      "inherits": {
        "type": {
          "name": "CatRequestBase",
          "namespace": "cat._types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cat.aliases"
      },
      "path": [
        {
          "description": "A comma-separated list of aliases to retrieve. Supports wildcards (`*`).  To retrieve all aliases, omit this parameter or use `*` or `_all`.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both.",
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cat/aliases/CatAliasesRequest.ts#L23-L43"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "AliasesRecord",
              "namespace": "cat.aliases"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cat.aliases"
      },
      "specLocation": "cat/aliases/CatAliasesResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonCatQueryParameters",
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get component templates.\nReturns information about component templates in a cluster.\nComponent templates are building blocks for constructing index templates that specify index mappings, settings, and aliases.\n\nCAT APIs are only intended for human consumption using the command line or Kibana console.\nThey are not intended for use by applications. For application consumption, use the get component template API.",
      "inherits": {
        "type": {
          "name": "CatRequestBase",
          "namespace": "cat._types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cat.component_templates"
      },
      "path": [
        {
          "description": "The name of the component template. Accepts wildcard expressions. If omitted, all component templates are returned.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "cat/component_templates/CatComponentTemplatesRequest.ts#L22-L39"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "ComponentTemplate",
              "namespace": "cat.component_templates"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cat.component_templates"
      },
      "specLocation": "cat/component_templates/CatComponentTemplatesResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonCatQueryParameters",
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get a document count.\nProvides quick access to a document count for a data stream, an index, or an entire cluster.\nThe document count only includes live documents, not deleted documents which have not yet been removed by the merge process.\n\nCAT APIs are only intended for human consumption using the command line or Kibana console.\nThey are not intended for use by applications. For application consumption, use the count API.",
      "inherits": {
        "type": {
          "name": "CatRequestBase",
          "namespace": "cat._types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cat.count"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases used to limit the request.\nSupports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "cat/count/CatCountRequest.ts#L23-L44"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "CountRecord",
              "namespace": "cat.count"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cat.count"
      },
      "specLocation": "cat/count/CatCountResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonCatQueryParameters",
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get CAT help.\nReturns help for the CAT APIs.",
      "inherits": {
        "type": {
          "name": "CatRequestBase",
          "namespace": "cat._types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cat.help"
      },
      "path": [],
      "query": [],
      "specLocation": "cat/help/CatHelpRequest.ts#L22-L30"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "HelpRecord",
              "namespace": "cat.help"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cat.help"
      },
      "specLocation": "cat/help/CatHelpResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonCatQueryParameters",
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get index information.\nReturns high-level information about indices in a cluster, including backing indices for data streams.\n\nUse this request to get the following information for each index in a cluster:\n- shard count\n- document count\n- deleted document count\n- primary store size\n- total store size of all shards, including shard replicas\n\nThese metrics are retrieved directly from Lucene, which Elasticsearch uses internally to power indexing and search. As a result, all document counts include hidden nested documents.\nTo get an accurate count of Elasticsearch documents, use the cat count or count APIs.\n\nCAT APIs are only intended for human consumption using the command line or Kibana console.\nThey are not intended for use by applications. For application consumption, use an index endpoint.",
      "inherits": {
        "type": {
          "name": "CatRequestBase",
          "namespace": "cat._types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cat.indices"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases used to limit the request.\nSupports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "The unit used to display byte values.",
          "name": "bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Bytes",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The type of index that wildcard patterns can match.",
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The health status used to limit returned indices. By default, the response includes indices of any health status.",
          "name": "health",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HealthStatus",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, the response includes information from segments that are not loaded into memory.",
          "name": "include_unloaded_segments",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, the response only includes information from primary shards.",
          "name": "pri",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The unit used to display time values.",
          "name": "time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeUnit",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cat/indices/CatIndicesRequest.ts#L24-L77"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "IndicesRecord",
              "namespace": "cat.indices"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cat.indices"
      },
      "specLocation": "cat/indices/CatIndicesResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonCatQueryParameters",
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get data frame analytics jobs.\nReturns configuration and usage information about data frame analytics jobs.\n\nCAT APIs are only intended for human consumption using the Kibana\nconsole or command line. They are not intended for use by applications. For\napplication consumption, use the get data frame analytics jobs statistics API.",
      "inherits": {
        "type": {
          "name": "CatRequestBase",
          "namespace": "cat._types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cat.ml_data_frame_analytics"
      },
      "path": [
        {
          "description": "The ID of the data frame analytics to fetch",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Whether to ignore if a wildcard expression matches no configs. (This includes `_all` string or when no configs have been specified)",
          "name": "allow_no_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The unit in which to display byte values",
          "name": "bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Bytes",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Comma-separated list of column names to display.",
          "name": "h",
          "required": false,
          "serverDefault": "create_time,id,state,type",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CatDfaColumns",
              "namespace": "cat._types"
            }
          }
        },
        {
          "description": "Comma-separated list of column names or column aliases used to sort the\nresponse.",
          "name": "s",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CatDfaColumns",
              "namespace": "cat._types"
            }
          }
        },
        {
          "description": "Unit used to display time values.",
          "name": "time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cat/ml_data_frame_analytics/CatDataFrameAnalyticsRequest.ts#L24-L59"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "DataFrameAnalyticsRecord",
              "namespace": "cat.ml_data_frame_analytics"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cat.ml_data_frame_analytics"
      },
      "specLocation": "cat/ml_data_frame_analytics/CatDataFrameAnalyticsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonCatQueryParameters",
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get datafeeds.\nReturns configuration and usage information about datafeeds.\nThis API returns a maximum of 10,000 datafeeds.\nIf the Elasticsearch security features are enabled, you must have `monitor_ml`, `monitor`, `manage_ml`, or `manage`\ncluster privileges to use this API.\n\nCAT APIs are only intended for human consumption using the Kibana\nconsole or command line. They are not intended for use by applications. For\napplication consumption, use the get datafeed statistics API.",
      "inherits": {
        "type": {
          "name": "CatRequestBase",
          "namespace": "cat._types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cat.ml_datafeeds"
      },
      "path": [
        {
          "description": "A numerical character string that uniquely identifies the datafeed.",
          "name": "datafeed_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n* Contains wildcard expressions and there are no datafeeds that match.\n* Contains the `_all` string or no identifiers and there are no matches.\n* Contains wildcard expressions and there are only partial matches.\n\nIf `true`, the API returns an empty datafeeds array when there are no matches and the subset of results when\nthere are partial matches. If `false`, the API returns a 404 status code when there are no matches or only\npartial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Comma-separated list of column names to display.",
          "name": "h",
          "required": false,
          "serverDefault": "['bc', 'id', 'sc', 's']",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CatDatafeedColumns",
              "namespace": "cat._types"
            }
          }
        },
        {
          "description": "Comma-separated list of column names or column aliases used to sort the response.",
          "name": "s",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CatDatafeedColumns",
              "namespace": "cat._types"
            }
          }
        },
        {
          "description": "The unit used to display time values.",
          "name": "time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeUnit",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cat/ml_datafeeds/CatDatafeedsRequest.ts#L24-L74"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "DatafeedsRecord",
              "namespace": "cat.ml_datafeeds"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cat.ml_datafeeds"
      },
      "specLocation": "cat/ml_datafeeds/CatDatafeedsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonCatQueryParameters",
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get anomaly detection jobs.\nReturns configuration and usage information for anomaly detection jobs.\nThis API returns a maximum of 10,000 jobs.\nIf the Elasticsearch security features are enabled, you must have `monitor_ml`,\n`monitor`, `manage_ml`, or `manage` cluster privileges to use this API.\n\nCAT APIs are only intended for human consumption using the Kibana\nconsole or command line. They are not intended for use by applications. For\napplication consumption, use the get anomaly detection job statistics API.",
      "inherits": {
        "type": {
          "name": "CatRequestBase",
          "namespace": "cat._types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cat.ml_jobs"
      },
      "path": [
        {
          "description": "Identifier for the anomaly detection job.",
          "name": "job_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n* Contains wildcard expressions and there are no jobs that match.\n* Contains the `_all` string or no identifiers and there are no matches.\n* Contains wildcard expressions and there are only partial matches.\n\nIf `true`, the API returns an empty jobs array when there are no matches and the subset of results when there\nare partial matches. If `false`, the API returns a 404 status code when there are no matches or only partial\nmatches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The unit used to display byte values.",
          "name": "bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Bytes",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Comma-separated list of column names to display.",
          "name": "h",
          "required": false,
          "serverDefault": "buckets.count,data.processed_records,forecasts.total,id,model.bytes,model.memory_status,state",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CatAnonalyDetectorColumns",
              "namespace": "cat._types"
            }
          }
        },
        {
          "description": "Comma-separated list of column names or column aliases used to sort the response.",
          "name": "s",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CatAnonalyDetectorColumns",
              "namespace": "cat._types"
            }
          }
        },
        {
          "description": "The unit used to display time values.",
          "name": "time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeUnit",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cat/ml_jobs/CatJobsRequest.ts#L24-L78"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "JobsRecord",
              "namespace": "cat.ml_jobs"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cat.ml_jobs"
      },
      "specLocation": "cat/ml_jobs/CatJobsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonCatQueryParameters",
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get trained models.\nReturns configuration and usage information about inference trained models.\n\nCAT APIs are only intended for human consumption using the Kibana\nconsole or command line. They are not intended for use by applications. For\napplication consumption, use the get trained models statistics API.",
      "inherits": {
        "type": {
          "name": "CatRequestBase",
          "namespace": "cat._types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cat.ml_trained_models"
      },
      "path": [
        {
          "description": "A unique identifier for the trained model.",
          "name": "model_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request: contains wildcard expressions and there are no models that match; contains the `_all` string or no identifiers and there are no matches; contains wildcard expressions and there are only partial matches.\nIf `true`, the API returns an empty array when there are no matches and the subset of results when there are partial matches.\nIf `false`, the API returns a 404 status code when there are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The unit used to display byte values.",
          "name": "bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Bytes",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of column names to display.",
          "name": "h",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CatTrainedModelsColumns",
              "namespace": "cat._types"
            }
          }
        },
        {
          "description": "A comma-separated list of column names or aliases used to sort the response.",
          "name": "s",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CatTrainedModelsColumns",
              "namespace": "cat._types"
            }
          }
        },
        {
          "description": "Skips the specified number of transforms.",
          "name": "from",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum number of transforms to display.",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cat/ml_trained_models/CatTrainedModelsRequest.ts#L24-L64"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelsRecord",
              "namespace": "cat.ml_trained_models"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cat.ml_trained_models"
      },
      "specLocation": "cat/ml_trained_models/CatTrainedModelsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonCatQueryParameters",
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get transforms.\nReturns configuration and usage information about transforms.\n\nCAT APIs are only intended for human consumption using the Kibana\nconsole or command line. They are not intended for use by applications. For\napplication consumption, use the get transform statistics API.",
      "inherits": {
        "type": {
          "name": "CatRequestBase",
          "namespace": "cat._types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cat.transforms"
      },
      "path": [
        {
          "description": "A transform identifier or a wildcard expression.\nIf you do not specify one of these options, the API returns information for all transforms.",
          "name": "transform_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request: contains wildcard expressions and there are no transforms that match; contains the `_all` string or no identifiers and there are no matches; contains wildcard expressions and there are only partial matches.\nIf `true`, it returns an empty transforms array when there are no matches and the subset of results when there are partial matches.\nIf `false`, the request returns a 404 status code when there are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Skips the specified number of transforms.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Comma-separated list of column names to display.",
          "name": "h",
          "required": false,
          "serverDefault": "changes_last_detection_time,checkpoint,checkpoint_progress,documents_processed,id,last_search_time,state",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CatTransformColumns",
              "namespace": "cat._types"
            }
          }
        },
        {
          "description": "Comma-separated list of column names or column aliases used to sort the response.",
          "name": "s",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CatTransformColumns",
              "namespace": "cat._types"
            }
          }
        },
        {
          "description": "The unit used to display time values.",
          "name": "time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeUnit",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum number of transforms to obtain.",
          "name": "size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cat/transforms/CatTransformsRequest.ts#L25-L78"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "TransformsRecord",
              "namespace": "cat.transforms"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cat.transforms"
      },
      "specLocation": "cat/transforms/CatTransformsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Scroll IDs to clear.\nTo clear all scroll IDs, use `_all`.",
            "name": "scroll_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ScrollIds",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Clear a scrolling search.\n\nClear the search context and results for a scrolling search.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.clear_scroll"
      },
      "path": [
        {
          "description": "Comma-separated list of scroll IDs to clear.\nTo clear all scroll IDs, use `_all`.",
          "name": "scroll_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScrollIds",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "_global/clear_scroll/ClearScrollRequest.ts#L23-L48"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "succeeded",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "num_freed",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "exceptions": [
        {
          "body": {
            "kind": "properties",
            "properties": [
              {
                "name": "succeeded",
                "required": true,
                "type": {
                  "kind": "instance_of",
                  "type": {
                    "name": "boolean",
                    "namespace": "_builtins"
                  }
                }
              },
              {
                "name": "num_freed",
                "required": true,
                "type": {
                  "kind": "instance_of",
                  "type": {
                    "name": "integer",
                    "namespace": "_types"
                  }
                }
              }
            ]
          },
          "statusCodes": [
            404
          ]
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.clear_scroll"
      },
      "specLocation": "_global/clear_scroll/ClearScrollResponse.ts#L22-L36"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The ID of the point-in-time.",
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Close a point in time.\n\nA point in time must be opened explicitly before being used in search requests.\nThe `keep_alive` parameter tells Elasticsearch how long it should persist.\nA point in time is automatically closed when the `keep_alive` period has elapsed.\nHowever, keeping points in time has a cost; close them as soon as they are no longer required for search requests.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.close_point_in_time"
      },
      "path": [],
      "query": [],
      "specLocation": "_global/close_point_in_time/ClosePointInTimeRequest.ts#L23-L43"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "succeeded",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "num_freed",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "exceptions": [
        {
          "body": {
            "kind": "properties",
            "properties": [
              {
                "name": "succeeded",
                "required": true,
                "type": {
                  "kind": "instance_of",
                  "type": {
                    "name": "boolean",
                    "namespace": "_builtins"
                  }
                }
              },
              {
                "name": "num_freed",
                "required": true,
                "type": {
                  "kind": "instance_of",
                  "type": {
                    "name": "integer",
                    "namespace": "_types"
                  }
                }
              }
            ]
          },
          "statusCodes": [
            404
          ]
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.close_point_in_time"
      },
      "specLocation": "_global/close_point_in_time/ClosePointInTimeResponse.ts#L22-L36"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete component templates.\nDeletes component templates.\nComponent templates are building blocks for constructing index templates that specify index mappings, settings, and aliases.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cluster.delete_component_template"
      },
      "path": [
        {
          "description": "Comma-separated list or wildcard expression of component template names used to limit the request.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cluster/delete_component_template/ClusterDeleteComponentTemplateRequest.ts#L24-L56"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cluster.delete_component_template"
      },
      "specLocation": "cluster/delete_component_template/ClusterDeleteComponentTemplateResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Check component templates.\nReturns information about whether a particular component template exists.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cluster.exists_component_template"
      },
      "path": [
        {
          "description": "Comma-separated list of component template names used to limit the request.\nWildcard (*) expressions are supported.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node. If no response is\nreceived before the timeout expires, the request fails and returns an\nerror.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, the request retrieves information from the local node only.\nDefaults to false, which means information is retrieved from the master node.",
          "name": "local",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "cluster/exists_component_template/ClusterComponentTemplateExistsRequest.ts#L24-L56"
    },
    {
      "body": {
        "kind": "no_body"
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cluster.exists_component_template"
      },
      "specLocation": "cluster/exists_component_template/ClusterComponentTemplateExistsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get component templates.\nRetrieves information about component templates.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cluster.get_component_template"
      },
      "path": [
        {
          "description": "Comma-separated list of component template names used to limit the request.\nWildcard (`*`) expressions are supported.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `true`, returns settings in flat format.",
          "name": "flat_settings",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "stable"
            },
            "stack": {
              "since": "8.11.0",
              "stability": "stable"
            }
          },
          "description": "Return all default configurations for the component template (default: false)",
          "name": "include_defaults",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the request retrieves information from the local node only.\nIf `false`, information is retrieved from the master node.",
          "name": "local",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cluster/get_component_template/ClusterGetComponentTemplateRequest.ts#L24-L67"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "component_templates",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ComponentTemplate",
                  "namespace": "cluster._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cluster.get_component_template"
      },
      "specLocation": "cluster/get_component_template/ClusterGetComponentTemplateResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get cluster info.\nReturns basic information about the cluster.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cluster.info"
      },
      "path": [
        {
          "description": "Limits the information returned to the specific target. Supports a comma-separated list, such as http,ingest.",
          "name": "target",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ClusterInfoTargets",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "cluster/info/ClusterInfoRequest.ts#L23-L36"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "cluster_name",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Name",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "http",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Http",
                "namespace": "nodes._types"
              }
            }
          },
          {
            "name": "ingest",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Ingest",
                "namespace": "nodes._types"
              }
            }
          },
          {
            "name": "thread_pool",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ThreadCount",
                  "namespace": "nodes._types"
                }
              }
            }
          },
          {
            "name": "script",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Scripting",
                "namespace": "nodes._types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cluster.info"
      },
      "specLocation": "cluster/info/ClusterInfoResponse.ts#L26-L34"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The template to be applied which includes mappings, settings, or aliases configuration.",
            "name": "template",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexState",
                "namespace": "indices._types"
              }
            }
          },
          {
            "description": "Version number used to manage component templates externally.\nThis number isn't automatically generated or incremented by Elasticsearch.\nTo unset a version, replace the template without specifying a version.",
            "name": "version",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "VersionNumber",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Optional user metadata about the component template.\nMay have any contents. This map is not automatically generated by Elasticsearch.\nThis information is stored in the cluster state, so keeping it short is preferable.\nTo unset `_meta`, replace the template without specifying this information.",
            "name": "_meta",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Metadata",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Marks this index template as deprecated. When creating or updating a non-deprecated index template\nthat uses deprecated components, Elasticsearch will emit a deprecation warning.",
            "name": "deprecated",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Create or update a component template.\nCreates or updates a component template.\nComponent templates are building blocks for constructing index templates that specify index mappings, settings, and aliases.\n\nAn index template can be composed of multiple component templates.\nTo use a component template, specify it in an index templateâ€™s `composed_of` list.\nComponent templates are only applied to new data streams and indices as part of a matching index template.\n\nSettings and mappings specified directly in the index template or the create index request override any settings or mappings specified in a component template.\n\nComponent templates are only used during index creation.\nFor data streams, this includes data stream creation and the creation of a streamâ€™s backing indices.\nChanges to component templates do not affect existing indices, including a streamâ€™s backing indices.\n\nYou can use C-style `/* *\\/` block comments in component templates.\nYou can include comments anywhere in the request body except before the opening curly bracket.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "cluster.put_component_template"
      },
      "path": [
        {
          "description": "Name of the component template to create.\nElasticsearch includes the following built-in component templates: `logs-mappings`; `logs-settings`; `metrics-mappings`; `metrics-settings`;`synthetics-mapping`; `synthetics-settings`.\nElastic Agent uses these templates to configure backing indices for its data streams.\nIf you use Elastic Agent and want to overwrite one of these templates, set the `version` for your replacement template higher than the current version.\nIf you donâ€™t use Elastic Agent and want to disable all built-in component and index templates, set `stack.templates.enabled` to `false` using the cluster update settings API.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `true`, this request cannot replace or update existing component templates.",
          "name": "create",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cluster/put_component_template/ClusterPutComponentTemplateRequest.ts#L25-L95"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "cluster.put_component_template"
      },
      "specLocation": "cluster/put_component_template/ClusterPutComponentTemplateResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Check in a connector.\n\nUpdate the `last_seen` field in the connector and set it to the current timestamp.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.check_in"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be checked in",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/check_in/ConnectorCheckInRequest.ts#L22-L38"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.check_in"
      },
      "specLocation": "connector/check_in/ConnectorCheckInResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a connector.\n\nRemoves a connector and associated sync jobs.\nThis is a destructive action that is not recoverable.\nNOTE: This action doesnâ€™t delete any API keys, ingest pipelines, or data indices associated with the connector.\nThese need to be removed manually.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.delete"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be deleted",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "A flag indicating if associated sync jobs should be also removed. Defaults to false.",
          "name": "delete_sync_jobs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "connector/delete/ConnectorDeleteRequest.ts#L22-L47"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.delete"
      },
      "specLocation": "connector/delete/ConnectorDeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get a connector.\n\nGet the details about a connector.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.get"
      },
      "path": [
        {
          "description": "The unique identifier of the connector",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/get/ConnectorGetRequest.ts#L22-L38"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "Connector",
            "namespace": "connector._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.get"
      },
      "specLocation": "connector/get/ConnectorGetResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get all connectors.\n\nGet information about all connectors.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.list"
      },
      "path": [],
      "query": [
        {
          "description": "Starting offset (default: 0)",
          "name": "from",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies a max number of results to get",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of connector index names to fetch connector documents for",
          "name": "index_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of connector names to fetch connector documents for",
          "name": "connector_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of connector service types to fetch connector documents for",
          "name": "service_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A wildcard query string that filters connectors with matching name, description or index name",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "connector/list/ConnectorListRequest.ts#L23-L59"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "results",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Connector",
                  "namespace": "connector._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.list"
      },
      "specLocation": "connector/list/ConnectorListResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "index_name",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "is_native",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "language",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "name",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "service_type",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Create a connector.\n\nConnectors are Elasticsearch integrations that bring content from third-party data sources, which can be deployed on Elastic Cloud or hosted on your own infrastructure.\nElastic managed connectors (Native connectors) are a managed service on Elastic Cloud.\nSelf-managed connectors (Connector clients) are self-managed on your infrastructure.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.post"
      },
      "path": [],
      "query": [],
      "specLocation": "connector/post/ConnectorPostRequest.ts#L22-L46"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.post"
      },
      "specLocation": "connector/post/ConnectorPostResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "index_name",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "is_native",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "language",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "name",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "service_type",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Create or update a connector.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.put"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be created or updated. ID is auto-generated if not provided.",
          "name": "connector_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/put/ConnectorPutRequest.ts#L22-L48"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.put"
      },
      "specLocation": "connector/put/ConnectorPutResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Cancel a connector sync job.\n\nCancel a connector sync job, which sets the status to cancelling and updates `cancellation_requested_at` to the current time.\nThe connector service is then responsible for setting the status of connector sync jobs to cancelled.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.sync_job_cancel"
      },
      "path": [
        {
          "description": "The unique identifier of the connector sync job",
          "name": "connector_sync_job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/sync_job_cancel/SyncJobCancelRequest.ts#L22-L39"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.sync_job_cancel"
      },
      "specLocation": "connector/sync_job_cancel/SyncJobCancelResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a connector sync job.\n\nRemove a connector sync job and its associated data.\nThis is a destructive action that is not recoverable.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.sync_job_delete"
      },
      "path": [
        {
          "description": "The unique identifier of the connector sync job to be deleted",
          "name": "connector_sync_job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/sync_job_delete/SyncJobDeleteRequest.ts#L22-L39"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.sync_job_delete"
      },
      "specLocation": "connector/sync_job_delete/SyncJobDeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get a connector sync job.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.sync_job_get"
      },
      "path": [
        {
          "description": "The unique identifier of the connector sync job",
          "name": "connector_sync_job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/sync_job_get/SyncJobGetRequest.ts#L22-L36"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "ConnectorSyncJob",
            "namespace": "connector._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.sync_job_get"
      },
      "specLocation": "connector/sync_job_get/SyncJobGetResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get all connector sync jobs.\n\nGet information about all stored connector sync jobs listed by their creation date in ascending order.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.sync_job_list"
      },
      "path": [],
      "query": [
        {
          "description": "Starting offset (default: 0)",
          "name": "from",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies a max number of results to get",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A sync job status to fetch connector sync jobs for",
          "name": "status",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SyncStatus",
              "namespace": "connector._types"
            }
          }
        },
        {
          "description": "A connector id to fetch connector sync jobs for",
          "name": "connector_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of job types to fetch the sync jobs for",
          "name": "job_type",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "SyncJobType",
                  "namespace": "connector._types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "SyncJobType",
                    "namespace": "connector._types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "connector/sync_job_list/SyncJobListRequest.ts#L25-L57"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "results",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ConnectorSyncJob",
                  "namespace": "connector._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.sync_job_list"
      },
      "specLocation": "connector/sync_job_list/SyncJobListResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The id of the associated connector",
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "job_type",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SyncJobType",
                "namespace": "connector._types"
              }
            }
          },
          {
            "name": "trigger_method",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SyncJobTriggerMethod",
                "namespace": "connector._types"
              }
            }
          }
        ]
      },
      "description": "Create a connector sync job.\n\nCreate a connector sync job document in the internal index and initialize its counters and timestamps with default values.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.sync_job_post"
      },
      "path": [],
      "query": [],
      "specLocation": "connector/sync_job_post/SyncJobPostRequest.ts#L23-L45"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.sync_job_post"
      },
      "specLocation": "connector/sync_job_post/SyncJobPostResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Activate the connector draft filter.\n\nActivates the valid draft filtering for a connector.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_active_filtering"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_active_filtering/ConnectorUpdateActiveFilteringRequest.ts#L22-L38"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_active_filtering"
      },
      "specLocation": "connector/update_active_filtering/ConnectorUpdateActiveFilteringResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "api_key_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "api_key_secret_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Update the connector API key ID.\n\nUpdate the `api_key_id` and `api_key_secret_id` fields of a connector.\nYou can specify the ID of the API key used for authorization and the ID of the connector secret where the API key is stored.\nThe connector secret ID is required only for Elastic managed (native) connectors.\nSelf-managed connectors (connector clients) do not use this field.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_api_key_id"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_api_key_id/ConnectorUpdateAPIKeyIDRequest.ts#L21-L47"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_api_key_id"
      },
      "specLocation": "connector/update_api_key_id/ConnectorUpdateAPIKeyIDResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "configuration",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ConnectorConfiguration",
                "namespace": "connector._types"
              }
            }
          },
          {
            "name": "values",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          }
        ]
      },
      "description": "Update the connector configuration.\n\nUpdate the configuration field in the connector document.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_configuration"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_configuration/ConnectorUpdateConfigurationRequest.ts#L25-L49"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_configuration"
      },
      "specLocation": "connector/update_configuration/ConnectorUpdateConfigurationResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "error",
            "required": true,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "WithNullValue",
                "namespace": "_spec_utils"
              }
            }
          }
        ]
      },
      "description": "Update the connector error field.\n\nSet the error field for the connector.\nIf the error provided in the request body is non-null, the connectorâ€™s status is updated to error.\nOtherwise, if the error is reset to null, the connector status is updated to connected.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_error"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_error/ConnectorUpdateErrorRequest.ts#L23-L48"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_error"
      },
      "specLocation": "connector/update_error/ConnectorUpdateErrorResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "filtering",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "FilteringConfig",
                  "namespace": "connector._types"
                }
              }
            }
          },
          {
            "name": "rules",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "FilteringRule",
                  "namespace": "connector._types"
                }
              }
            }
          },
          {
            "name": "advanced_snippet",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "FilteringAdvancedSnippet",
                "namespace": "connector._types"
              }
            }
          }
        ]
      },
      "description": "Update the connector filtering.\n\nUpdate the draft filtering configuration of a connector and marks the draft validation state as edited.\nThe filtering draft is activated once validated by the running Elastic connector service.\nThe filtering property is used to configure sync rules (both basic and advanced) for a connector.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_filtering"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_filtering/ConnectorUpdateFilteringRequest.ts#L27-L54"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_filtering"
      },
      "specLocation": "connector/update_filtering/ConnectorUpdateFilteringResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "validation",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "FilteringRulesValidation",
                "namespace": "connector._types"
              }
            }
          }
        ]
      },
      "description": "Update the connector draft filtering validation.\n\nUpdate the draft filtering validation info for a connector.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_filtering_validation"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_filtering_validation/ConnectorUpdateFilteringValidationRequest.ts#L23-L42"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_filtering_validation"
      },
      "specLocation": "connector/update_filtering_validation/ConnectorUpdateFilteringValidationResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "index_name",
            "required": true,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "IndexName",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "WithNullValue",
                "namespace": "_spec_utils"
              }
            }
          }
        ]
      },
      "description": "Update the connector index name.\n\nUpdate the `index_name` field of a connector, specifying the index where the data ingested by the connector is stored.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_index_name"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_index_name/ConnectorUpdateIndexNameRequest.ts#L23-L45"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_index_name"
      },
      "specLocation": "connector/update_index_name/ConnectorUpdateIndexNameResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "name",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Update the connector name and description.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_name"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_name/ConnectorUpdateNameRequest.ts#L22-L43"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_name"
      },
      "specLocation": "connector/update_name/ConnectorUpdateNameResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "is_native",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Update the connector is_native flag.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_native"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_native/ConnectorUpdateNativeRequest.ts#L22-L42"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_native"
      },
      "specLocation": "connector/update_native/ConnectorUpdateNativeResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "pipeline",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IngestPipelineParams",
                "namespace": "connector._types"
              }
            }
          }
        ]
      },
      "description": "Update the connector pipeline.\n\nWhen you create a new connector, the configuration of an ingest pipeline is populated with default settings.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_pipeline"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_pipeline/ConnectorUpdatePipelineRequest.ts#L23-L46"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_pipeline"
      },
      "specLocation": "connector/update_pipeline/ConnectorUpdatePipelineResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "scheduling",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SchedulingConfiguration",
                "namespace": "connector._types"
              }
            }
          }
        ]
      },
      "description": "Update the connector scheduling.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_scheduling"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_scheduling/ConnectorUpdateSchedulingRequest.ts#L23-L44"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_scheduling"
      },
      "specLocation": "connector/update_scheduling/ConnectorUpdateSchedulingResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "service_type",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Update the connector service type.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_service_type"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_service_type/ConnectorUpdateServiceTypeRequest.ts#L22-L42"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_service_type"
      },
      "specLocation": "connector/update_service_type/ConnectorUpdateServiceTypeResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "status",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ConnectorStatus",
                "namespace": "connector._types"
              }
            }
          }
        ]
      },
      "description": "Update the connector status.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "connector.update_status"
      },
      "path": [
        {
          "description": "The unique identifier of the connector to be updated",
          "name": "connector_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "connector/update_status/ConnectorUpdateStatusRequest.ts#L23-L43"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "connector.update_status"
      },
      "specLocation": "connector/update_status/ConnectorUpdateStatusResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Defines the search definition using the Query DSL.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          }
        ]
      },
      "description": "Returns number of documents matching a query.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.count"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases to search.\nSupports wildcards (`*`).\nTo search all data streams and indices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Analyzer to use for the query string.\nThis parameter can only be used when the `q` query string parameter is specified.",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, wildcard and prefix queries are analyzed.\nThis parameter can only be used when the `q` query string parameter is specified.",
          "name": "analyze_wildcard",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The default operator for query string query: `AND` or `OR`.\nThis parameter can only be used when the `q` query string parameter is specified.",
          "name": "default_operator",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Field to use as default where no field prefix is given in the query string.\nThis parameter can only be used when the `q` query string parameter is specified.",
          "name": "df",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, concrete, expanded or aliased indices are ignored when frozen.",
          "name": "ignore_throttled",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.",
          "name": "lenient",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Sets the minimum `_score` value that documents must have to be included in the result.",
          "name": "min_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the node or shard the operation should be performed on.\nRandom by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum number of documents to collect for each shard.\nIf a query reaches this limit, Elasticsearch terminates the query early.\nElasticsearch collects documents before sorting.",
          "name": "terminate_after",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query in the Lucene query string syntax.",
          "name": "q",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/count/CountRequest.ts#L26-L121"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "_shards",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ShardStatistics",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.count"
      },
      "specLocation": "_global/count/CountResponse.ts#L23-L25"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "codegenName": "document",
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "TDocument",
            "namespace": "_global.create.Request"
          }
        }
      },
      "description": "Index a document.\nAdds a JSON document to the specified data stream or index and makes it searchable.\nIf the target is an index and the document already exists, the request updates the document and increments its version.",
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.create.Request"
        }
      ],
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.create"
      },
      "path": [
        {
          "description": "Unique identifier for the document.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the data stream or index to target.\nIf the target doesnâ€™t exist and matches the name or wildcard (`*`) pattern of an index template with a `data_stream` definition, this request creates the data stream.\nIf the target doesnâ€™t exist and doesnâ€™t match a data stream template, this request creates the index.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "ID of the pipeline to use to preprocess incoming documents.\nIf the index has a default ingest pipeline specified, then setting the value to `_none` disables the default ingest pipeline for this request.\nIf a final pipeline is configured it will always run, regardless of the value of this parameter.",
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, Elasticsearch refreshes the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` do nothing with refreshes.\nValid values: `true`, `false`, `wait_for`.",
          "name": "refresh",
          "required": false,
          "serverDefault": "false",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Refresh",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period the request waits for the following operations: automatic index creation, dynamic mapping updates, waiting for active shards.",
          "name": "timeout",
          "required": false,
          "serverDefault": "1m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit version number for concurrency control.\nThe specified version must match the current version of the document for the request to succeed.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific version type: `external`, `external_gte`.",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
          "name": "wait_for_active_shards",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WaitForActiveShards",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/create/CreateRequest.ts#L32-L96"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "WriteResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.create"
      },
      "specLocation": "_global/create/CreateResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a document.\nRemoves a JSON document from the specified index.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.delete"
      },
      "path": [
        {
          "description": "Unique identifier for the document.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the target index.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Only perform the operation if the document has this primary term.",
          "name": "if_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Only perform the operation if the document has this sequence number.",
          "name": "if_seq_no",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SequenceNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, Elasticsearch refreshes the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` do nothing with refreshes.\nValid values: `true`, `false`, `wait_for`.",
          "name": "refresh",
          "required": false,
          "serverDefault": "false",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Refresh",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for active shards.",
          "name": "timeout",
          "required": false,
          "serverDefault": "1m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit version number for concurrency control.\nThe specified version must match the current version of the document for the request to succeed.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific version type: `external`, `external_gte`.",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
          "name": "wait_for_active_shards",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WaitForActiveShards",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/delete/DeleteRequest.ts#L34-L93"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "WriteResponseBase",
            "namespace": "_types"
          }
        }
      },
      "exceptions": [
        {
          "body": {
            "kind": "value",
            "value": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "WriteResponseBase",
                    "namespace": "_types"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "ErrorResponseBase",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          "description": "\nIf the index does exist, but the document does not,\nthe response is the same as the successful case, but with a 404.",
          "statusCodes": [
            404
          ]
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.delete"
      },
      "specLocation": "_global/delete/DeleteResponse.ts#L22-L34"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The maximum number of documents to delete.",
            "name": "max_docs",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Specifies the documents to delete using the Query DSL.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "Slice the request manually using the provided slice ID and total number of slices.",
            "name": "slice",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SlicedScroll",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Delete documents.\nDeletes documents that match the specified query.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.delete_by_query"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases to search.\nSupports wildcards (`*`).\nTo search all data streams or indices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.\nFor example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Analyzer to use for the query string.",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, wildcard and prefix queries are analyzed.",
          "name": "analyze_wildcard",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "What to do if delete by query hits version conflicts: `abort` or `proceed`.",
          "name": "conflicts",
          "required": false,
          "serverDefault": "abort",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Conflicts",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The default operator for query string query: `AND` or `OR`.",
          "name": "default_operator",
          "required": false,
          "serverDefault": "OR",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Field to use as default where no field prefix is given in the query string.",
          "name": "df",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`. Valid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Starting offset (default: 0)",
          "name": "from",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.",
          "name": "lenient",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of documents to process.\nDefaults to all documents.",
          "name": "max_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the node or shard the operation should be performed on.\nRandom by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, Elasticsearch refreshes all shards involved in the delete by query after the request completes.",
          "name": "refresh",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the request cache is used for this request.\nDefaults to the index-level setting.",
          "name": "request_cache",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The throttle for this request in sub-requests per second.",
          "name": "requests_per_second",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query in the Lucene query string syntax.",
          "name": "q",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to retain the search context for scrolling.",
          "name": "scroll",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Size of the scroll request that powers the operation.",
          "name": "scroll_size",
          "required": false,
          "serverDefault": 1000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit timeout for each search request.\nDefaults to no timeout.",
          "name": "search_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The type of the search operation.\nAvailable options: `query_then_fetch`, `dfs_query_then_fetch`.",
          "name": "search_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of slices this task should be divided into.",
          "name": "slices",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Slices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of <field>:<direction> pairs.",
          "name": "sort",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Specific `tag` of the request for logging and statistical purposes.",
          "name": "stats",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Maximum number of documents to collect for each shard.\nIf a query reaches this limit, Elasticsearch terminates the query early.\nElasticsearch collects documents before sorting.\nUse with caution.\nElasticsearch applies this parameter to each shard handling the request.\nWhen possible, let Elasticsearch perform early termination automatically.\nAvoid specifying this parameter for requests that target data streams with backing indices across multiple data tiers.",
          "name": "terminate_after",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period each deletion request waits for active shards.",
          "name": "timeout",
          "required": false,
          "serverDefault": "1m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, returns the document version as part of a hit.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to all or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
          "name": "wait_for_active_shards",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WaitForActiveShards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the request blocks until the operation is complete.",
          "name": "wait_for_completion",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/delete_by_query/DeleteByQueryRequest.ts#L36-L211"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "batches",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "deleted",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "failures",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "BulkIndexByScrollFailure",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "name": "noops",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "requests_per_second",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "float",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "retries",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Retries",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "slice_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "task",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TaskId",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "throttled",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "throttled_millis",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "DurationValue",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "throttled_until",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "throttled_until_millis",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "DurationValue",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "timed_out",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "took",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "DurationValue",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "total",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "version_conflicts",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.delete_by_query"
      },
      "specLocation": "_global/delete_by_query/DeleteByQueryResponse.ts#L26-L45"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a script or search template.\nDeletes a stored script or search template.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.delete_script"
      },
      "path": [
        {
          "description": "Identifier for the stored script or search template.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/delete_script/DeleteScriptRequest.ts#L24-L53"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.delete_script"
      },
      "specLocation": "_global/delete_script/DeleteScriptResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete an enrich policy.\nDeletes an existing enrich policy and its enrich index.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "enrich.delete_policy"
      },
      "path": [
        {
          "description": "Enrich policy to delete.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "enrich/delete_policy/DeleteEnrichPolicyRequest.ts#L23-L37"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "enrich.delete_policy"
      },
      "specLocation": "enrich/delete_policy/DeleteEnrichPolicyResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Creates the enrich index for an existing enrich policy.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "enrich.execute_policy"
      },
      "path": [
        {
          "description": "Enrich policy to execute.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `true`, the request blocks other enrich policy execution requests until complete.",
          "name": "wait_for_completion",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "enrich/execute_policy/ExecuteEnrichPolicyRequest.ts#L23-L44"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "status",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ExecuteEnrichPolicyStatus",
                "namespace": "enrich.execute_policy"
              }
            }
          },
          {
            "name": "task_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TaskId",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "enrich.execute_policy"
      },
      "specLocation": "enrich/execute_policy/ExecuteEnrichPolicyResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get an enrich policy.\nReturns information about an enrich policy.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "enrich.get_policy"
      },
      "path": [
        {
          "description": "Comma-separated list of enrich policy names used to limit the request.\nTo return information for all enrich policies, omit this parameter.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "enrich/get_policy/GetEnrichPolicyRequest.ts#L23-L38"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "policies",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Summary",
                  "namespace": "enrich._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "enrich.get_policy"
      },
      "specLocation": "enrich/get_policy/GetEnrichPolicyResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Matches enrich data to incoming documents based on a `geo_shape` query.",
            "name": "geo_match",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Policy",
                "namespace": "enrich._types"
              }
            }
          },
          {
            "description": "Matches enrich data to incoming documents based on a `term` query.",
            "name": "match",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Policy",
                "namespace": "enrich._types"
              }
            }
          },
          {
            "description": "Matches a number, date, or IP address in incoming documents to a range in the enrich index based on a `term` query.",
            "name": "range",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Policy",
                "namespace": "enrich._types"
              }
            }
          }
        ]
      },
      "description": "Create an enrich policy.\nCreates an enrich policy.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "enrich.put_policy"
      },
      "path": [
        {
          "description": "Name of the enrich policy to create or update.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "enrich/put_policy/PutEnrichPolicyRequest.ts#L24-L53"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "enrich.put_policy"
      },
      "specLocation": "enrich/put_policy/PutEnrichPolicyResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get enrich stats.\nReturns enrich coordinator statistics and information about enrich policies that are currently executing.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "enrich.stats"
      },
      "path": [],
      "query": [],
      "specLocation": "enrich/stats/EnrichStatsRequest.ts#L22-L29"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Objects containing information about each coordinating ingest node for configured enrich processors.",
            "name": "coordinator_stats",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "CoordinatorStats",
                  "namespace": "enrich.stats"
                }
              }
            }
          },
          {
            "description": "Objects containing information about each enrich policy that is currently executing.",
            "name": "executing_policies",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ExecutingPolicy",
                  "namespace": "enrich.stats"
                }
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "7.16.0"
              }
            },
            "description": "Objects containing information about the enrich cache stats on each ingest node.",
            "name": "cache_stats",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "CacheStats",
                  "namespace": "enrich.stats"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "enrich.stats"
      },
      "specLocation": "enrich/stats/EnrichStatsResponse.ts#L22-L39"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Deletes an async EQL search or a stored synchronous EQL search.\nThe API also deletes results for the search.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "eql.delete"
      },
      "path": [
        {
          "description": "Identifier for the search to delete.\nA search ID is provided in the EQL search API's response for an async search.\nA search ID is also provided if the requestâ€™s `keep_on_completion` parameter is `true`.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "eql/delete/EqlDeleteRequest.ts#L23-L39"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "eql.delete"
      },
      "specLocation": "eql/delete/EqlDeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Returns the current status and available results for an async EQL search or a stored synchronous EQL search.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "eql.get"
      },
      "path": [
        {
          "description": "Identifier for the search.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period for which the search and its results are stored on the cluster.\nDefaults to the keep_alive value set by the searchâ€™s EQL search API request.",
          "name": "keep_alive",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Timeout duration to wait for the request to finish.\nDefaults to no timeout, meaning the request waits for complete search results.",
          "name": "wait_for_completion_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "eql/get/EqlGetRequest.ts#L24-L50"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "TEvent",
                "namespace": "eql.get.Response"
              }
            }
          ],
          "kind": "instance_of",
          "type": {
            "name": "EqlSearchResponseBase",
            "namespace": "eql._types"
          }
        }
      },
      "generics": [
        {
          "name": "TEvent",
          "namespace": "eql.get.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "eql.get"
      },
      "specLocation": "eql/get/EqlGetResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Returns the current status for an async EQL search or a stored synchronous EQL search without returning results.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "eql.get_status"
      },
      "path": [
        {
          "description": "Identifier for the search.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "eql/get_status/EqlGetStatusRequest.ts#L23-L35"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Identifier for the search.",
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "If true, the search request is still executing. If false, the search is completed.",
            "name": "is_partial",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If true, the response does not contain complete search results. This could be because either the search is still running (is_running status is false), or because it is already completed (is_running status is true) and results are partial due to failures or timeouts.",
            "name": "is_running",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "For a running search shows a timestamp when the eql search started, in milliseconds since the Unix epoch.",
            "name": "start_time_in_millis",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "EpochTime",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Shows a timestamp when the eql search will be expired, in milliseconds since the Unix epoch. When this time is reached, the search and its results are deleted, even if the search is still ongoing.",
            "name": "expiration_time_in_millis",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "EpochTime",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "For a completed search shows the http status code of the completed search.",
            "name": "completion_status",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "eql.get_status"
      },
      "specLocation": "eql/get_status/EqlGetStatusResponse.ts#L24-L51"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "EQL query you wish to run.",
            "docId": "eql-syntax",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/eql-syntax.html",
            "name": "query",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "case_sensitive",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Field containing the event classification, such as process, file, or network.",
            "name": "event_category_field",
            "required": false,
            "serverDefault": "event.category",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Field used to sort hits with the same timestamp in ascending order",
            "docId": "sort-tiebreaker",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/eql.html#eql-search-specify-a-sort-tiebreaker",
            "name": "tiebreaker_field",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Field containing event timestamp. Default \"@timestamp\"",
            "name": "timestamp_field",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Maximum number of events to search at a time for sequence queries.",
            "name": "fetch_size",
            "required": false,
            "serverDefault": 1000,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "uint",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Query, written in Query DSL, used to filter the events on which the EQL query runs.",
            "name": "filter",
            "required": false,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "QueryContainer",
                    "namespace": "_types.query_dsl"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "QueryContainer",
                      "namespace": "_types.query_dsl"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "name": "keep_alive",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "keep_on_completion",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "wait_for_completion_timeout",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "For basic queries, the maximum number of matching events to return. Defaults to 10",
            "docId": "eql-basic-syntax",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/eql-syntax.html#eql-basic-syntax",
            "name": "size",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "uint",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Array of wildcard (*) patterns. The response returns values for field names matching these patterns in the fields property of each hit.",
            "name": "fields",
            "required": false,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "FieldAndFormat",
                    "namespace": "_types.query_dsl"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "FieldAndFormat",
                      "namespace": "_types.query_dsl"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "name": "result_position",
            "required": false,
            "serverDefault": "tail",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ResultPosition",
                "namespace": "eql.search"
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "8.0.0"
              }
            },
            "name": "runtime_mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFields",
                "namespace": "_types.mapping"
              }
            }
          }
        ]
      },
      "description": "Returns results matching a query expressed in Event Query Language (EQL)",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "eql.search"
      },
      "path": [
        {
          "description": "The name of the index to scope the operation",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, missing or closed indices are not included in the response.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period for which the search and its results are stored on the cluster.",
          "name": "keep_alive",
          "required": false,
          "serverDefault": "5d",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, the search and its results are stored on the cluster.",
          "name": "keep_on_completion",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Timeout duration to wait for the request to finish. Defaults to no timeout, meaning the request waits for complete search results.",
          "name": "wait_for_completion_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "eql/search/EqlSearchRequest.ts#L28-L118"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "TEvent",
                "namespace": "eql.search.Response"
              }
            }
          ],
          "kind": "instance_of",
          "type": {
            "name": "EqlSearchResponseBase",
            "namespace": "eql._types"
          }
        }
      },
      "generics": [
        {
          "name": "TEvent",
          "namespace": "eql.search.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "eql.search"
      },
      "specLocation": "eql/search/EqlSearchResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "By default, ES|QL returns results as rows. For example, FROM returns each individual document as one row. For the JSON, YAML, CBOR and smile formats, ES|QL can return the results in a columnar fashion where one row represents all the values of a certain column in the results.",
            "name": "columnar",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Specify a Query DSL query in the filter parameter to filter the set of documents that an ES|QL query runs on.",
            "name": "filter",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "name": "locale",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "To avoid any attempts of hacking or code injection, extract the values in a separate list of parameters. Use question mark placeholders (?) in the query string for each of the parameters.",
            "docId": "esql-query-params",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/esql-rest.html#esql-rest-params",
            "name": "params",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "FieldValue",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "description": "If provided and `true` the response will include an extra `profile` object\nwith information on how the query was executed. This information is for human debugging\nand its format can change at any time but it can give some insight into the performance\nof each part of the query.",
            "name": "profile",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The ES|QL query API accepts an ES|QL query string in the query parameter, runs it, and returns the results.",
            "name": "query",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Tables to use with the LOOKUP operation. The top level key is the table\nname and the next level key is the column name.",
            "name": "tables",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                },
                "kind": "dictionary_of",
                "singleKey": false,
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "TableValuesContainer",
                    "namespace": "esql._types"
                  }
                }
              }
            }
          }
        ]
      },
      "description": "Executes an ES|QL request",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "esql.query"
      },
      "path": [],
      "query": [
        {
          "description": "A short version of the Accept header, e.g. json, yaml.",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "EsqlFormat",
              "namespace": "esql.query"
            }
          }
        },
        {
          "description": "The character to use between values within a CSV row. Only valid for the CSV format.",
          "name": "delimiter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Should columns that are entirely `null` be removed from the `columns` and `values` portion of the results?\nDefaults to `false`. If `true` then the response will include an extra section under the name `all_columns` which has the name of all columns.",
          "name": "drop_null_columns",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "esql/query/QueryRequest.ts#L26-L89"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "EsqlColumns",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "esql.query"
      },
      "specLocation": "esql/query/QueryResponse.ts#L22-L25"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Check a document.\nChecks if a specified document exists.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.exists"
      },
      "path": [
        {
          "description": "Identifier of the document.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Comma-separated list of data streams, indices, and aliases.\nSupports wildcards (`*`).",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies the node or shard the operation should be performed on.\nRandom by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the request is real-time as opposed to near-real-time.",
          "docId": "realtime",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/docs-get.html#realtime",
          "name": "realtime",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, Elasticsearch refreshes all shards involved in the delete by query after the request completes.",
          "name": "refresh",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Target the specified primary shard.",
          "docId": "routing",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/docs-get.html#get-routing",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "`true` or `false` to return the `_source` field or not, or a list of fields to return.",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfigParam",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to exclude in the response.",
          "name": "_source_excludes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to include in the response.",
          "name": "_source_includes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "List of stored fields to return as part of a hit.\nIf no fields are specified, no stored fields are included in the response.\nIf this field is specified, the `_source` parameter defaults to false.",
          "name": "stored_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit version number for concurrency control.\nThe specified version must match the current version of the document for the request to succeed.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific version type: `external`, `external_gte`.",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/exists/DocumentExistsRequest.ts#L31-L101"
    },
    {
      "body": {
        "kind": "no_body"
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.exists"
      },
      "specLocation": "_global/exists/DocumentExistsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Check for a document source.\nChecks if a document's `_source` is stored.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.exists_source"
      },
      "path": [
        {
          "description": "Identifier of the document.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Comma-separated list of data streams, indices, and aliases.\nSupports wildcards (`*`).",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies the node or shard the operation should be performed on.\nRandom by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, the request is real-time as opposed to near-real-time.",
          "docId": "realtime",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/docs-get.html#realtime",
          "name": "realtime",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, Elasticsearch refreshes all shards involved in the delete by query after the request completes.",
          "name": "refresh",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Target the specified primary shard.",
          "docId": "routing",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/docs-get.html#get-routing",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "`true` or `false` to return the `_source` field or not, or a list of fields to return.",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfigParam",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to exclude in the response.",
          "name": "_source_excludes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to include in the response.",
          "name": "_source_includes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit version number for concurrency control.\nThe specified version must match the current version of the document for the request to succeed.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific version type: `external`, `external_gte`.",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/exists_source/SourceExistsRequest.ts#L31-L95"
    },
    {
      "body": {
        "kind": "no_body"
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.exists_source"
      },
      "specLocation": "_global/exists_source/SourceExistsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Defines the search definition using the Query DSL.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          }
        ]
      },
      "description": "Explain a document match result.\nReturns information about why a specific document matches, or doesnâ€™t match, a query.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.explain"
      },
      "path": [
        {
          "description": "Defines the document ID.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Index names used to limit the request.\nOnly a single index name can be provided to this parameter.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Analyzer to use for the query string.\nThis parameter can only be used when the `q` query string parameter is specified.",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, wildcard and prefix queries are analyzed.",
          "name": "analyze_wildcard",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The default operator for query string query: `AND` or `OR`.",
          "name": "default_operator",
          "required": false,
          "serverDefault": "OR",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Field to use as default where no field prefix is given in the query string.",
          "name": "df",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.",
          "name": "lenient",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies the node or shard the operation should be performed on.\nRandom by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "True or false to return the `_source` field or not, or a list of fields to return.",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfigParam",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to exclude from the response.",
          "name": "_source_excludes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to include in the response.",
          "name": "_source_includes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of stored fields to return in the response.",
          "name": "stored_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query in the Lucene query string syntax.",
          "name": "q",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/explain/ExplainRequest.ts#L26-L107"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "_index",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "matched",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "explanation",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ExplanationDetail",
                "namespace": "_global.explain"
              }
            }
          },
          {
            "name": "get",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "TDocument",
                    "namespace": "_global.explain.Response"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "InlineGet",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.explain.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.explain"
      },
      "specLocation": "_global/explain/ExplainResponse.ts#L23-L31"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "8.5.0"
              }
            },
            "description": "List of fields to retrieve capabilities for. Wildcard (`*`) expressions are supported.",
            "name": "fields",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Fields",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Allows to filter indices if the provided query rewrites to match_none on every shard.",
            "name": "index_filter",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "7.12.0"
              }
            },
            "description": "Defines ad-hoc runtime fields in the request similar to the way it is done in search requests.\nThese fields exist only as part of the query and take precedence over fields defined with the same name in the index mappings.",
            "docId": "runtime-search-request",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/runtime-search-request.html",
            "name": "runtime_mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFields",
                "namespace": "_types.mapping"
              }
            }
          }
        ]
      },
      "description": "Get the field capabilities.\n\nGet information about the capabilities of fields among multiple indices.\n\nFor data streams, the API returns field capabilities among the streamâ€™s backing indices.\nIt returns runtime fields like any other field.\nFor example, a runtime field with a type of keyword is returned the same as any other field that belongs to the `keyword` family.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.field_caps"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (*). To target all data streams and indices, omit this parameter or use * or _all.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If false, the request returns an error if any wildcard expression, index alias,\nor `_all` value targets only missing or closed indices. This behavior applies even if the request targets other open indices. For example, a request\ntargeting `foo*,bar*` returns an error if an index starts with foo but no index starts with bar.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match. If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams. Supports comma-separated values, such as `open,hidden`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Comma-separated list of fields to retrieve capabilities for. Wildcard (`*`) expressions are supported.",
          "name": "fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, missing or closed indices are not included in the response.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, unmapped fields are included in the response.",
          "name": "include_unmapped",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.2.0"
            }
          },
          "description": "An optional set of filters: can include +metadata,-metadata,-nested,-multifield,-parent",
          "name": "filters",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.2.0"
            }
          },
          "description": "Only return results for fields that have one of the types in the list",
          "name": "types",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.13.0"
            }
          },
          "description": "If false, empty fields are not included in the response.",
          "name": "include_empty_fields",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/field_caps/FieldCapabilitiesRequest.ts#L25-L111"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "indices",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Indices",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "fields",
            "required": true,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "Field",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                },
                "kind": "dictionary_of",
                "singleKey": false,
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "FieldCapability",
                    "namespace": "_global.field_caps"
                  }
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.field_caps"
      },
      "specLocation": "_global/field_caps/FieldCapabilitiesResponse.ts#L24-L35"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get a document by its ID.\nRetrieves the document with the specified ID from an index.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.get"
      },
      "path": [
        {
          "description": "Unique identifier of the document.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the index that contains the document.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies the node or shard the operation should be performed on. Random by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the request is real-time as opposed to near-real-time.",
          "docId": "realtime",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/docs-get.html#realtime",
          "name": "realtime",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, Elasticsearch refreshes the affected shards to make this operation visible to search. If false, do nothing with refreshes.",
          "name": "refresh",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Target the specified primary shard.",
          "docId": "routing",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/docs-get.html#get-routing",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "True or false to return the _source field or not, or a list of fields to return.",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfigParam",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to exclude in the response.",
          "name": "_source_excludes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to include in the response.",
          "name": "_source_includes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "List of stored fields to return as part of a hit.\nIf no fields are specified, no stored fields are included in the response.\nIf this field is specified, the `_source` parameter defaults to false.",
          "name": "stored_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit version number for concurrency control. The specified version must match the current version of the document for the request to succeed.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific version type: internal, external, external_gte.",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/get/GetRequest.ts#L31-L101"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "TDocument",
                "namespace": "_global.get.Response"
              }
            }
          ],
          "kind": "instance_of",
          "type": {
            "name": "GetResult",
            "namespace": "_global.get"
          }
        }
      },
      "exceptions": [
        {
          "body": {
            "kind": "value",
            "value": {
              "items": [
                {
                  "generics": [
                    {
                      "kind": "instance_of",
                      "type": {
                        "name": "TDocument",
                        "namespace": "_global.get.Response"
                      }
                    }
                  ],
                  "kind": "instance_of",
                  "type": {
                    "name": "GetResult",
                    "namespace": "_global.get"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "ErrorResponseBase",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          "statusCodes": [
            404
          ]
        }
      ],
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.get.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.get"
      },
      "specLocation": "_global/get/GetResponse.ts#L23-L34"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get a script or search template.\nRetrieves a stored script or search template.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.get_script"
      },
      "path": [
        {
          "description": "Identifier for the stored script or search template.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specify timeout for connection to master",
          "name": "master_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/get_script/GetScriptRequest.ts#L24-L43"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "found",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "script",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "StoredScript",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.get_script"
      },
      "specLocation": "_global/get_script/GetScriptResponse.ts#L23-L29"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get a document's source.\nReturns the source of a document.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.get_source"
      },
      "path": [
        {
          "description": "Unique identifier of the document.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the index that contains the document.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies the node or shard the operation should be performed on. Random by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Boolean) If true, the request is real-time as opposed to near-real-time.",
          "docId": "realtiime",
          "name": "realtime",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, Elasticsearch refreshes the affected shards to make this operation visible to search. If false, do nothing with refreshes.",
          "name": "refresh",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Target the specified primary shard.",
          "docId": "routing",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/docs-get.html#get-routing",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "True or false to return the _source field or not, or a list of fields to return.",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfigParam",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to exclude in the response.",
          "name": "_source_excludes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to include in the response.",
          "name": "_source_includes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "stored_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit version number for concurrency control. The specified version must match the current version of the document for the request to succeed.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific version type: internal, external, external_gte.",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/get_source/SourceRequest.ts#L31-L89"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "TDocument",
            "namespace": "_global.get_source.Response"
          }
        }
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.get_source.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.get_source"
      },
      "specLocation": "_global/get_source/SourceResponse.ts#L20-L23"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Specifies or more fields from which you want to extract terms that are associated with the specified vertices.",
            "name": "connections",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Hop",
                "namespace": "graph._types"
              }
            }
          },
          {
            "description": "Direct the Graph API how to build the graph.",
            "name": "controls",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ExploreControls",
                "namespace": "graph._types"
              }
            }
          },
          {
            "description": "A seed query that identifies the documents of interest. Can be any valid Elasticsearch query.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "Specifies one or more fields that contain the terms you want to include in the graph as vertices.",
            "name": "vertices",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "VertexDefinition",
                  "namespace": "graph._types"
                }
              }
            }
          }
        ]
      },
      "description": "Extracts and summarizes information about the documents and terms in an Elasticsearch data stream or index.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "graph.explore"
      },
      "path": [
        {
          "description": "Name of the index.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the period of time to wait for a response from each shard.\nIf no response is received before the timeout expires, the request fails and returns an error.\nDefaults to no timeout.",
          "name": "timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "graph/explore/GraphExploreRequest.ts#L28-L72"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "connections",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Connection",
                  "namespace": "graph._types"
                }
              }
            }
          },
          {
            "name": "failures",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ShardFailure",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "name": "timed_out",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "took",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "vertices",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Vertex",
                  "namespace": "graph._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "graph.explore"
      },
      "specLocation": "graph/explore/GraphExploreResponse.ts#L25-L33"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "codegenName": "document",
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "TDocument",
            "namespace": "_global.index.Request"
          }
        }
      },
      "description": "Index a document.\nAdds a JSON document to the specified data stream or index and makes it searchable.\nIf the target is an index and the document already exists, the request updates the document and increments its version.",
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.index.Request"
        }
      ],
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.index"
      },
      "path": [
        {
          "description": "Unique identifier for the document.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the data stream or index to target.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Only perform the operation if the document has this primary term.",
          "name": "if_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Only perform the operation if the document has this sequence number.",
          "name": "if_seq_no",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SequenceNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Set to create to only index the document if it does not already exist (put if absent).\nIf a document with the specified `_id` already exists, the indexing operation will fail.\nSame as using the `<index>/_create` endpoint.\nValid values: `index`, `create`.\nIf document id is specified, it defaults to `index`.\nOtherwise, it defaults to `create`.",
          "name": "op_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "OpType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "ID of the pipeline to use to preprocess incoming documents.\nIf the index has a default ingest pipeline specified, then setting the value to `_none` disables the default ingest pipeline for this request.\nIf a final pipeline is configured it will always run, regardless of the value of this parameter.",
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, Elasticsearch refreshes the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` do nothing with refreshes.\nValid values: `true`, `false`, `wait_for`.",
          "name": "refresh",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Refresh",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period the request waits for the following operations: automatic index creation, dynamic mapping updates, waiting for active shards.",
          "name": "timeout",
          "required": false,
          "serverDefault": "1m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit version number for concurrency control.\nThe specified version must match the current version of the document for the request to succeed.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific version type: `external`, `external_gte`.",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to all or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
          "name": "wait_for_active_shards",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WaitForActiveShards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the destination must be an index alias.",
          "name": "require_alias",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/index/IndexRequest.ts#L35-L119"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "WriteResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.index"
      },
      "specLocation": "_global/index/IndexResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Add an index block.\nLimits the operations allowed on an index by blocking specific operation types.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.add_block"
      },
      "path": [
        {
          "description": "A comma separated list of indices to add a block to",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The block to add (one of read, write, read_only or metadata)",
          "name": "block",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndicesBlockOptions",
              "namespace": "indices.add_block"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)",
          "name": "allow_no_indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both.",
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)",
          "name": "ignore_unavailable",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specify timeout for connection to master",
          "name": "master_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit operation timeout",
          "name": "timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/add_block/IndicesAddBlockRequest.ts#L24-L43"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "acknowledged",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "shards_acknowledged",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "indices",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "IndicesBlockStatus",
                  "namespace": "indices.add_block"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.add_block"
      },
      "specLocation": "indices/add_block/IndicesAddBlockResponse.ts#L22-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The name of the analyzer that should be applied to the provided `text`.\nThis could be a built-in analyzer, or an analyzer thatâ€™s been configured in the index.",
            "docId": "analysis-analyzers",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis-analyzers.html",
            "name": "analyzer",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Array of token attributes used to filter the output of the `explain` parameter.",
            "name": "attributes",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "description": "Array of character filters used to preprocess characters before the tokenizer.",
            "docId": "analysis-charfilters",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis-charfilters.html",
            "name": "char_filter",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "CharFilter",
                  "namespace": "_types.analysis"
                }
              }
            }
          },
          {
            "description": "If `true`, the response includes token attributes and additional details.",
            "name": "explain",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Field used to derive the analyzer.\nTo use this parameter, you must specify an index.\nIf specified, the `analyzer` parameter overrides this value.",
            "name": "field",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Array of token filters used to apply after the tokenizer.",
            "docId": "analysis-tokenfilters",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis-tokenfilters.html",
            "name": "filter",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "TokenFilter",
                  "namespace": "_types.analysis"
                }
              }
            }
          },
          {
            "description": "Normalizer to use to convert text into a single token.",
            "docId": "analysis-normalizers",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis-normalizers.html",
            "name": "normalizer",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Text to analyze.\nIf an array of strings is provided, it is analyzed as a multi-value field.",
            "name": "text",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TextToAnalyze",
                "namespace": "indices.analyze"
              }
            }
          },
          {
            "description": "Tokenizer to use to convert text into tokens.",
            "docId": "analysis-tokenizers",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis-tokenizers.html",
            "name": "tokenizer",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Tokenizer",
                "namespace": "_types.analysis"
              }
            }
          }
        ]
      },
      "description": "Get tokens from text analysis.\nThe analyze API performs [analysis](https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html) on a text string and returns the resulting tokens.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.analyze"
      },
      "path": [
        {
          "description": "Index used to derive the analyzer.\nIf specified, the `analyzer` or field parameter overrides this value.\nIf no index is specified or the index does not have a default analyzer, the analyze API uses the standard analyzer.",
          "docId": "analysis-standard-analyzer",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis-standard-analyzer.html",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "indices/analyze/IndicesAnalyzeRequest.ts#L27-L93"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "detail",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "AnalyzeDetail",
                "namespace": "indices.analyze"
              }
            }
          },
          {
            "name": "tokens",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "AnalyzeToken",
                  "namespace": "indices.analyze"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.analyze"
      },
      "specLocation": "indices/analyze/IndicesAnalyzeResponse.ts#L22-L27"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Aliases for the index.",
            "name": "aliases",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "Name",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Alias",
                  "namespace": "indices._types"
                }
              }
            }
          },
          {
            "description": "Mapping for fields in the index. If specified, this mapping can include:\n- Field names\n- Field data types\n- Mapping parameters",
            "docId": "mapping",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping.html",
            "name": "mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TypeMapping",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "Configuration options for the index.",
            "name": "settings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexSettings",
                "namespace": "indices._types"
              }
            }
          }
        ]
      },
      "description": "Create an index.\nCreates a new index.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.create"
      },
      "path": [
        {
          "description": "Name of the index you wish to create.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
          "name": "wait_for_active_shards",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WaitForActiveShards",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/create/IndicesCreateRequest.ts#L28-L82"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "index",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "shards_acknowledged",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "acknowledged",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.create"
      },
      "specLocation": "indices/create/IndicesCreateResponse.ts#L22-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Create a data stream.\nCreates a data stream.\nYou must have a matching index template with data stream enabled.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.create_data_stream"
      },
      "path": [
        {
          "description": "Name of the data stream, which must meet the following criteria:\nLowercase only;\nCannot include `\\`, `/`, `*`, `?`, `\"`, `<`, `>`, `|`, `,`, `#`, `:`, or a space character;\nCannot start with `-`, `_`, `+`, or `.ds-`;\nCannot be `.` or `..`;\nCannot be longer than 255 bytes. Multi-byte characters count towards this limit faster.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/create_data_stream/IndicesCreateDataStreamRequest.ts#L24-L58"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.create_data_stream"
      },
      "specLocation": "indices/create_data_stream/IndicesCreateDataStreamResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get data stream stats.\nRetrieves statistics for one or more data streams.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.data_streams_stats"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams used to limit the request.\nWildcard expressions (`*`) are supported.\nTo target all data streams in a cluster, omit this parameter or use `*`.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Type of data stream that wildcard patterns can match.\nSupports comma-separated values, such as `open,hidden`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/data_streams_stats/IndicesDataStreamsStatsRequest.ts#L23-L49"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Contains information about shards that attempted to execute the request.",
            "name": "_shards",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ShardStatistics",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Total number of backing indices for the selected data streams.",
            "name": "backing_indices",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Total number of selected data streams.",
            "name": "data_stream_count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Contains statistics for the selected data streams.",
            "name": "data_streams",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "DataStreamsStatsItem",
                  "namespace": "indices.data_streams_stats"
                }
              }
            }
          },
          {
            "description": "Total size of all shards for the selected data streams.\nThis property is included only if the `human` query parameter is `true`",
            "name": "total_store_sizes",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ByteSize",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Total size, in bytes, of all shards for the selected data streams.",
            "name": "total_store_size_bytes",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.data_streams_stats"
      },
      "specLocation": "indices/data_streams_stats/IndicesDataStreamsStatsResponse.ts#L25-L43"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete indices.\nDeletes one or more indices.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.delete"
      },
      "path": [
        {
          "description": "Comma-separated list of indices to delete.\nYou cannot specify index aliases.\nBy default, this parameter does not support wildcards (`*`) or `_all`.\nTo use wildcards or `_all`, set the `action.destructive_requires_name` cluster setting to `false`.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/delete/IndicesDeleteRequest.ts#L24-L74"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "IndicesResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.delete"
      },
      "specLocation": "indices/delete/IndicesDeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete an alias.\nRemoves a data stream or index from an alias.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.delete_alias"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams or indices used to limit the request.\nSupports wildcards (`*`).",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Comma-separated list of aliases to remove.\nSupports wildcards (`*`). To remove all aliases, use `*` or `_all`.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/delete_alias/IndicesDeleteAliasRequest.ts#L24-L58"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.delete_alias"
      },
      "specLocation": "indices/delete_alias/IndicesDeleteAliasResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete data stream lifecycles.\nRemoves the data stream lifecycle from a data stream, rendering it not managed by the data stream lifecycle.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.delete_data_lifecycle"
      },
      "path": [
        {
          "description": "A comma-separated list of data streams of which the data stream lifecycle will be deleted; use `*` to get all data streams",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamNames",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Whether wildcard expressions should get expanded to open or closed indices (default: open)",
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specify timeout for connection to master",
          "name": "master_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit timestamp for the document",
          "name": "timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/delete_data_lifecycle/IndicesDeleteDataLifecycleRequest.ts#L24-L40"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.delete_data_lifecycle"
      },
      "specLocation": "indices/delete_data_lifecycle/IndicesDeleteDataLifecycleResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete data streams.\nDeletes one or more data streams and their backing indices.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.delete_data_stream"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams to delete. Wildcard (`*`) expressions are supported.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamNames",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Type of data stream that wildcard patterns can match. Supports comma-separated values,such as `open,hidden`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/delete_data_stream/IndicesDeleteDataStreamRequest.ts#L24-L51"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.delete_data_stream"
      },
      "specLocation": "indices/delete_data_stream/IndicesDeleteDataStreamResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete an index template.\nThe provided <index-template> may contain multiple template names separated by a comma. If multiple template\nnames are specified then there is no wildcard support and the provided names should match completely with\nexisting templates.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.delete_index_template"
      },
      "path": [
        {
          "description": "Comma-separated list of index template names used to limit the request. Wildcard (*) expressions are supported.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/delete_index_template/IndicesDeleteIndexTemplateRequest.ts#L24-L53"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.delete_index_template"
      },
      "specLocation": "indices/delete_index_template/IndicesDeleteIndexTemplateResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Check indices.\nChecks if one or more indices, index aliases, or data streams exist.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.exists"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases. Supports wildcards (`*`).",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, returns settings in flat format.",
          "name": "flat_settings",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, return all default settings in the response.",
          "name": "include_defaults",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the request retrieves information from the local node only.",
          "name": "local",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/exists/IndicesExistsRequest.ts#L23-L73"
    },
    {
      "body": {
        "kind": "no_body"
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.exists"
      },
      "specLocation": "indices/exists/IndicesExistsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Check aliases.\nChecks if one or more data stream or index aliases exist.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.exists_alias"
      },
      "path": [
        {
          "description": "Comma-separated list of aliases to check. Supports wildcards (`*`).",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Comma-separated list of data streams or indices used to limit the request. Supports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, requests that include a missing data stream or index in the target indices or data streams return an error.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "deprecation": {
            "description": "",
            "version": "8.12.0"
          },
          "description": "If `true`, the request retrieves information from the local node only.",
          "name": "local",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/exists_alias/IndicesExistsAliasRequest.ts#L23-L69"
    },
    {
      "body": {
        "kind": "no_body"
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.exists_alias"
      },
      "specLocation": "indices/exists_alias/IndicesExistsAliasResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Returns information about whether a particular index template exists.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.exists_index_template"
      },
      "path": [
        {
          "description": "Comma-separated list of index template names used to limit the request. Wildcard (*) expressions are supported.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/exists_index_template/IndicesExistsIndexTemplateRequest.ts#L24-L41"
    },
    {
      "body": {
        "kind": "no_body"
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.exists_index_template"
      },
      "specLocation": "indices/exists_index_template/IndicesExistsIndexTemplateResponse.ts#L22-L29"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get the status for a data stream lifecycle.\nRetrieves information about an index or data streamâ€™s current data stream lifecycle status, such as time since index creation, time since rollover, the lifecycle configuration managing the index, or any errors encountered during lifecycle execution.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.explain_data_lifecycle"
      },
      "path": [
        {
          "description": "The name of the index to explain",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "indicates if the API should return the default values the system uses for the index's lifecycle",
          "name": "include_defaults",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specify timeout for connection to master",
          "name": "master_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/explain_data_lifecycle/IndicesExplainDataLifecycleRequest.ts#L24-L39"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "indices",
            "required": true,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "IndexName",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "DataStreamLifecycleExplain",
                  "namespace": "indices.explain_data_lifecycle"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.explain_data_lifecycle"
      },
      "specLocation": "indices/explain_data_lifecycle/IndicesExplainDataLifecycleResponse.ts#L25-L29"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get index information.\nReturns information about one or more indices. For data streams, the API returns information about the\nstreamâ€™s backing indices.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.get"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and index aliases used to limit the request.\nWildcard expressions (*) are supported.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If false, the request returns an error if any wildcard expression, index alias, or _all value targets only\nmissing or closed indices. This behavior applies even if the request targets other open indices. For example,\na request targeting foo*,bar* returns an error if an index starts with foo but no index starts with bar.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard expressions can match. If the request can target data streams, this argument\ndetermines whether wildcard expressions match hidden data streams. Supports comma-separated values,\nsuch as open,hidden.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, returns settings in flat format.",
          "name": "flat_settings",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If false, requests that target a missing index return an error.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, return all default settings in the response.",
          "name": "include_defaults",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, the request retrieves information from the local node only. Defaults to false, which means information is retrieved from the master node.",
          "name": "local",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.1.0"
            }
          },
          "description": "Return only information on specified index features",
          "name": "features",
          "required": false,
          "serverDefault": "['aliases', 'mappings', 'settings']",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Features",
              "namespace": "indices.get"
            }
          }
        }
      ],
      "specLocation": "indices/get/IndicesGetRequest.ts#L24-L89"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "key": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          },
          "kind": "dictionary_of",
          "singleKey": false,
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "IndexState",
              "namespace": "indices._types"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.get"
      },
      "specLocation": "indices/get/IndicesGetResponse.ts#L24-L27"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get aliases.\nRetrieves information for one or more data stream or index aliases.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.get_alias"
      },
      "path": [
        {
          "description": "Comma-separated list of aliases to retrieve.\nSupports wildcards (`*`).\nTo retrieve all aliases, omit this parameter or use `*` or `_all`.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Comma-separated list of data streams or indices used to limit the request.\nSupports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "deprecation": {
            "description": "",
            "version": "8.12.0"
          },
          "description": "If `true`, the request retrieves information from the local node only.",
          "name": "local",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/get_alias/IndicesGetAliasRequest.ts#L23-L72"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "key": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          },
          "kind": "dictionary_of",
          "singleKey": false,
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "IndexAliases",
              "namespace": "indices.get_alias"
            }
          }
        }
      },
      "exceptions": [
        {
          "body": {
            "kind": "value",
            "value": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "NotFoundAliases",
                    "namespace": "indices.get_alias"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "ErrorResponseBase",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          "statusCodes": [
            404
          ]
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.get_alias"
      },
      "specLocation": "indices/get_alias/IndicesGetAliasResponse.ts#L26-L35"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get data stream lifecycles.\nRetrieves the data stream lifecycle configuration of one or more data streams.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.get_data_lifecycle"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams to limit the request.\nSupports wildcards (`*`).\nTo target all data streams, omit this parameter or use `*` or `_all`.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamNames",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Type of data stream that wildcard patterns can match.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, return all default settings in the response.",
          "name": "include_defaults",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/get_data_lifecycle/IndicesGetDataLifecycleRequest.ts#L24-L60"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "data_streams",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "DataStreamWithLifecycle",
                  "namespace": "indices.get_data_lifecycle"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.get_data_lifecycle"
      },
      "specLocation": "indices/get_data_lifecycle/IndicesGetDataLifecycleResponse.ts#L23-L25"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get data streams.\nRetrieves information about one or more data streams.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.get_data_stream"
      },
      "path": [
        {
          "description": "Comma-separated list of data stream names used to limit the request.\nWildcard (`*`) expressions are supported. If omitted, all data streams are returned.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamNames",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Type of data stream that wildcard patterns can match.\nSupports comma-separated values, such as `open,hidden`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "stable"
            },
            "stack": {
              "since": "8.11.0",
              "stability": "stable"
            }
          },
          "description": "If true, returns all relevant default configurations for the index template.",
          "name": "include_defaults",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Whether the maximum timestamp for each data stream should be calculated and returned.",
          "name": "verbose",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/get_data_stream/IndicesGetDataStreamRequest.ts#L24-L66"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "data_streams",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "DataStream",
                  "namespace": "indices._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.get_data_stream"
      },
      "specLocation": "indices/get_data_stream/IndicesGetDataStreamResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get index templates.\nReturns information about one or more index templates.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.get_index_template"
      },
      "path": [
        {
          "description": "Comma-separated list of index template names used to limit the request. Wildcard (*) expressions are supported.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If true, the request retrieves information from the local node only. Defaults to false, which means information is retrieved from the master node.",
          "name": "local",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, returns settings in flat format.",
          "name": "flat_settings",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "stable"
            },
            "stack": {
              "since": "8.11.0",
              "stability": "stable"
            }
          },
          "description": "If true, returns all relevant default configurations for the index template.",
          "name": "include_defaults",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/get_index_template/IndicesGetIndexTemplateRequest.ts#L24-L61"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "index_templates",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "IndexTemplateItem",
                  "namespace": "indices.get_index_template"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.get_index_template"
      },
      "specLocation": "indices/get_index_template/IndicesGetIndexTemplateResponse.ts#L23-L27"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get mapping definitions.\nRetrieves mapping definitions for one or more indices.\nFor data streams, the API retrieves mappings for the streamâ€™s backing indices.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.get_mapping"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases used to limit the request.\nSupports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the request retrieves information from the local node only.",
          "name": "local",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/get_mapping/IndicesGetMappingRequest.ts#L24-L73"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "key": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          },
          "kind": "dictionary_of",
          "singleKey": false,
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "IndexMappingRecord",
              "namespace": "indices.get_mapping"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.get_mapping"
      },
      "specLocation": "indices/get_mapping/IndicesGetMappingResponse.ts#L24-L27"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get index settings.\nReturns setting information for one or more indices. For data streams,\nreturns setting information for the streamâ€™s backing indices.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.get_settings"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases used to limit\nthe request. Supports wildcards (`*`). To target all data streams and\nindices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Comma-separated list or wildcard expression of settings to retrieve.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index\nalias, or `_all` value targets only missing or closed indices. This\nbehavior applies even if the request targets other open indices. For\nexample, a request targeting `foo*,bar*` returns an error if an index\nstarts with foo but no index starts with `bar`.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, returns settings in flat format.",
          "name": "flat_settings",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, return all default settings in the response.",
          "name": "include_defaults",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the request retrieves information from the local node only. If\n`false`, information is retrieved from the master node.",
          "name": "local",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node. If no response is\nreceived before the timeout expires, the request fails and returns an\nerror.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/get_settings/IndicesGetSettingsRequest.ts#L24-L92"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "key": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          },
          "kind": "dictionary_of",
          "singleKey": false,
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "IndexState",
              "namespace": "indices._types"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.get_settings"
      },
      "specLocation": "indices/get_settings/IndicesGetSettingsResponse.ts#L24-L27"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Convert an index alias to a data stream.\nConverts an index alias to a data stream.\nYou must have a matching index template that is data stream enabled.\nThe alias must meet the following criteria:\nThe alias must have a write index;\nAll indices for the alias must have a `@timestamp` field mapping of a `date` or `date_nanos` field type;\nThe alias must not have any filters;\nThe alias must not use custom routing.\nIf successful, the request removes the alias and creates a data stream with the same name.\nThe indices for the alias become hidden backing indices for the stream.\nThe write index for the alias becomes the write index for the stream.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.migrate_to_data_stream"
      },
      "path": [
        {
          "description": "Name of the index alias to convert to a data stream.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/migrate_to_data_stream/IndicesMigrateToDataStreamRequest.ts#L24-L59"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.migrate_to_data_stream"
      },
      "specLocation": "indices/migrate_to_data_stream/IndicesMigrateToDataStreamResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Actions to perform.",
            "name": "actions",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Action",
                  "namespace": "indices.modify_data_stream"
                }
              }
            }
          }
        ]
      },
      "description": "Update data streams.\nPerforms one or more data stream modification actions in a single atomic operation.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.modify_data_stream"
      },
      "path": [],
      "query": [],
      "specLocation": "indices/modify_data_stream/IndicesModifyDataStreamRequest.ts#L23-L38"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.modify_data_stream"
      },
      "specLocation": "indices/modify_data_stream/IndicesModifyDataStreamResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Query used to limit documents the alias can access.",
            "name": "filter",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "Value used to route indexing operations to a specific shard.\nIf specified, this overwrites the `routing` value for indexing operations.\nData stream aliases donâ€™t support this parameter.",
            "name": "index_routing",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Routing",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "If `true`, sets the write index or data stream for the alias.\nIf an alias points to multiple indices or data streams and `is_write_index` isnâ€™t set, the alias rejects write requests.\nIf an index alias points to one index and `is_write_index` isnâ€™t set, the index automatically acts as the write index.\nData stream aliases donâ€™t automatically set a write data stream, even if the alias points to one data stream.",
            "name": "is_write_index",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Value used to route indexing and search operations to a specific shard.\nData stream aliases donâ€™t support this parameter.",
            "name": "routing",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Routing",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Value used to route search operations to a specific shard.\nIf specified, this overwrites the `routing` value for search operations.\nData stream aliases donâ€™t support this parameter.",
            "name": "search_routing",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Routing",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Create or update an alias.\nAdds a data stream or index to an alias.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.put_alias"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams or indices to add.\nSupports wildcards (`*`).\nWildcard patterns that match both data streams and indices return an error.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Alias to update.\nIf the alias doesnâ€™t exist, the request creates it.\nIndex alias names support date math.",
          "docId": "api-date-math-index-names",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/api-conventions.html#api-date-math-index-names",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/put_alias/IndicesPutAliasRequest.ts#L25-L92"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.put_alias"
      },
      "specLocation": "indices/put_alias/IndicesPutAliasResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "If defined, every document added to this data stream will be stored at least for this time frame.\nAny time after this duration the document could be deleted.\nWhen empty, every document in this data stream will be stored indefinitely.",
            "name": "data_retention",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "If defined, every backing index will execute the configured downsampling configuration after the backing\nindex is not the data stream write index anymore.",
            "name": "downsampling",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataStreamLifecycleDownsampling",
                "namespace": "indices._types"
              }
            }
          }
        ]
      },
      "description": "Update data stream lifecycles.\nUpdate the data stream lifecycle of the specified data streams.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.put_data_lifecycle"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams used to limit the request.\nSupports wildcards (`*`).\nTo target all data streams use `*` or `_all`.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamNames",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Type of data stream that wildcard patterns can match.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `hidden`, `open`, `closed`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node. If no response is\nreceived before the timeout expires, the request fails and returns an\nerror.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/put_data_lifecycle/IndicesPutDataLifecycleRequest.ts#L25-L76"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.put_data_lifecycle"
      },
      "specLocation": "indices/put_data_lifecycle/IndicesPutDataLifecycleResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Name of the index template to create.",
            "name": "index_patterns",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Indices",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "An ordered list of component template names.\nComponent templates are merged in the order specified, meaning that the last component template specified has the highest precedence.",
            "name": "composed_of",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Name",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "description": "Template to be applied.\nIt may optionally include an `aliases`, `mappings`, or `settings` configuration.",
            "name": "template",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexTemplateMapping",
                "namespace": "indices.put_index_template"
              }
            }
          },
          {
            "description": "If this object is included, the template is used to create data streams and their backing indices.\nSupports an empty object.\nData streams require a matching index template with a `data_stream` object.",
            "name": "data_stream",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataStreamVisibility",
                "namespace": "indices._types"
              }
            }
          },
          {
            "description": "Priority to determine index template precedence when a new data stream or index is created.\nThe index template with the highest priority is chosen.\nIf no priority is specified the template is treated as though it is of priority 0 (lowest priority).\nThis number is not automatically generated by Elasticsearch.",
            "name": "priority",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Version number used to manage index templates externally.\nThis number is not automatically generated by Elasticsearch.",
            "name": "version",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "VersionNumber",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Optional user metadata about the index template.\nMay have any contents.\nThis map is not automatically generated by Elasticsearch.",
            "docId": "mapping-meta-field",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-meta-field.html",
            "name": "_meta",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Metadata",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "This setting overrides the value of the `action.auto_create_index` cluster setting.\nIf set to `true` in a template, then indices can be automatically created using that template even if auto-creation of indices is disabled via `actions.auto_create_index`.\nIf set to `false`, then indices or data streams matching the template must always be explicitly created, and may never be automatically created.",
            "name": "allow_auto_create",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The configuration option ignore_missing_component_templates can be used when an index template\nreferences a component template that might not exist",
            "name": "ignore_missing_component_templates",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "description": "Marks this index template as deprecated. When creating or updating a non-deprecated index template\nthat uses deprecated components, Elasticsearch will emit a deprecation warning.",
            "name": "deprecated",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Create or update an index template.\nIndex templates define settings, mappings, and aliases that can be applied automatically to new indices.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.put_index_template"
      },
      "path": [
        {
          "description": "Index or template name",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `true`, this request cannot replace or update existing index templates.",
          "name": "create",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "User defined reason for creating/updating the index template",
          "name": "cause",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/put_index_template/IndicesPutIndexTemplateRequest.ts#L37-L119"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.put_index_template"
      },
      "specLocation": "indices/put_index_template/IndicesPutIndexTemplateResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Controls whether dynamic date detection is enabled.",
            "name": "date_detection",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Controls whether new fields are added dynamically.",
            "name": "dynamic",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DynamicMapping",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "If date detection is enabled then new string fields are checked\nagainst 'dynamic_date_formats' and if the value matches then\na new date field is added instead of string.",
            "name": "dynamic_date_formats",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "description": "Specify dynamic templates for the mapping.",
            "name": "dynamic_templates",
            "required": false,
            "type": {
              "items": [
                {
                  "key": {
                    "kind": "instance_of",
                    "type": {
                      "name": "string",
                      "namespace": "_builtins"
                    }
                  },
                  "kind": "dictionary_of",
                  "singleKey": false,
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "DynamicTemplate",
                      "namespace": "_types.mapping"
                    }
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "key": {
                      "kind": "instance_of",
                      "type": {
                        "name": "string",
                        "namespace": "_builtins"
                      }
                    },
                    "kind": "dictionary_of",
                    "singleKey": false,
                    "value": {
                      "kind": "instance_of",
                      "type": {
                        "name": "DynamicTemplate",
                        "namespace": "_types.mapping"
                      }
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "description": "Control whether field names are enabled for the index.",
            "name": "_field_names",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "FieldNamesField",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "A mapping type can have custom meta data associated with it. These are\nnot used at all by Elasticsearch, but can be used to store\napplication-specific metadata.",
            "name": "_meta",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Metadata",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Automatically map strings into numeric data types for all fields.",
            "name": "numeric_detection",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Mapping for a field. For new fields, this mapping can include:\n\n- Field name\n- Field data type\n- Mapping parameters",
            "name": "properties",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "PropertyName",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Property",
                  "namespace": "_types.mapping"
                }
              }
            }
          },
          {
            "description": "Enable making a routing value required on indexed documents.",
            "name": "_routing",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RoutingField",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "Control whether the _source field is enabled on the index.",
            "name": "_source",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SourceField",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "Mapping of runtime fields for the index.",
            "name": "runtime",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFields",
                "namespace": "_types.mapping"
              }
            }
          }
        ]
      },
      "description": "Update field mappings.\nAdds new fields to an existing data stream or index.\nYou can also use this API to change the search settings of existing fields.\nFor data streams, these changes are applied to all backing indices by default.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.put_mapping"
      },
      "path": [
        {
          "description": "A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the mappings are applied only to the current write index for the target.",
          "name": "write_index_only",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/put_mapping/IndicesPutMappingRequest.ts#L41-L149"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "IndicesResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.put_mapping"
      },
      "specLocation": "indices/put_mapping/IndicesPutMappingResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "codegenName": "settings",
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "IndexSettings",
            "namespace": "indices._types"
          }
        }
      },
      "description": "Update index settings.\nChanges dynamic index settings in real time. For data streams, index setting\nchanges are applied to all backing indices by default.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.put_settings"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases used to limit\nthe request. Supports wildcards (`*`). To target all data streams and\nindices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index\nalias, or `_all` value targets only missing or closed indices. This\nbehavior applies even if the request targets other open indices. For\nexample, a request targeting `foo*,bar*` returns an error if an index\nstarts with `foo` but no index starts with `bar`.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match. If the request can target\ndata streams, this argument determines whether wildcard expressions match\nhidden data streams. Supports comma-separated values, such as\n`open,hidden`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, returns settings in flat format.",
          "name": "flat_settings",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, returns settings in flat format.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node. If no response is\nreceived before the timeout expires, the request fails and returns an\nerror.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, existing index settings remain unchanged.",
          "name": "preserve_existing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a response. If no response is received before the\n timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/put_settings/IndicesPutSettingsRequest.ts#L25-L93"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.put_settings"
      },
      "specLocation": "indices/put_settings/IndicesPutSettingsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Aliases for the index.",
            "name": "aliases",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "IndexName",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Alias",
                  "namespace": "indices._types"
                }
              }
            }
          },
          {
            "description": "Array of wildcard expressions used to match the names\nof indices during creation.",
            "name": "index_patterns",
            "required": false,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "string",
                      "namespace": "_builtins"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "description": "Mapping for fields in the index.",
            "name": "mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TypeMapping",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "Order in which Elasticsearch applies this template if index\nmatches multiple templates.\n\nTemplates with lower 'order' values are merged first. Templates with higher\n'order' values are merged later, overriding templates with lower values.",
            "name": "order",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Configuration options for the index.",
            "name": "settings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexSettings",
                "namespace": "indices._types"
              }
            }
          },
          {
            "description": "Version number used to manage index templates externally. This number\nis not automatically generated by Elasticsearch.",
            "name": "version",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "VersionNumber",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Create or update an index template.\nIndex templates define settings, mappings, and aliases that can be applied automatically to new indices.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.put_template"
      },
      "path": [
        {
          "description": "The name of the template",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If true, this request cannot replace or update existing index templates.",
          "name": "create",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node. If no response is\nreceived before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Order in which Elasticsearch applies this template if index\nmatches multiple templates.\n\nTemplates with lower 'order' values are merged first. Templates with higher\n'order' values are merged later, overriding templates with lower values.",
          "name": "order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "cause",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/put_template/IndicesPutTemplateRequest.ts#L29-L95"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.put_template"
      },
      "specLocation": "indices/put_template/IndicesPutTemplateResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Refresh an index.\nA refresh makes recent operations performed on one or more indices available for search.\nFor data streams, the API runs the refresh operation on the streamâ€™s backing indices.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.refresh"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases used to limit the request.\nSupports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/refresh/IndicesRefreshRequest.ts#L23-L61"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "ShardsOperationResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.refresh"
      },
      "specLocation": "indices/refresh/IndicesRefreshResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Resolves the specified name(s) and/or index patterns for indices, aliases, and data streams.\nMultiple patterns and remote clusters are supported.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.resolve_index"
      },
      "path": [
        {
          "description": "Comma-separated name(s) or index pattern(s) of the indices, aliases, and data streams to resolve.\nResources on remote clusters can be specified using the `<cluster>`:`<name>` syntax.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.\nFor example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/resolve_index/ResolveIndexRequest.ts#L23-L60"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "indices",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ResolveIndexItem",
                  "namespace": "indices.resolve_index"
                }
              }
            }
          },
          {
            "name": "aliases",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ResolveIndexAliasItem",
                  "namespace": "indices.resolve_index"
                }
              }
            }
          },
          {
            "name": "data_streams",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ResolveIndexDataStreamsItem",
                  "namespace": "indices.resolve_index"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.resolve_index"
      },
      "specLocation": "indices/resolve_index/ResolveIndexResponse.ts#L22-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Aliases for the target index.\nData streams do not support this parameter.",
            "name": "aliases",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "IndexName",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Alias",
                  "namespace": "indices._types"
                }
              }
            }
          },
          {
            "description": "Conditions for the rollover.\nIf specified, Elasticsearch only performs the rollover if the current index satisfies these conditions.\nIf this parameter is not specified, Elasticsearch performs the rollover unconditionally.\nIf conditions are specified, at least one of them must be a `max_*` condition.\nThe index will rollover if any `max_*` condition is satisfied and all `min_*` conditions are satisfied.",
            "name": "conditions",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RolloverConditions",
                "namespace": "indices.rollover"
              }
            }
          },
          {
            "description": "Mapping for fields in the index.\nIf specified, this mapping can include field names, field data types, and mapping paramaters.",
            "name": "mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TypeMapping",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "Configuration options for the index.\nData streams do not support this parameter.",
            "name": "settings",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          }
        ]
      },
      "description": "Roll over to a new index.\nCreates a new index for a data stream or index alias.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.rollover"
      },
      "path": [
        {
          "description": "Name of the data stream or index alias to roll over.",
          "name": "alias",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexAlias",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the index to create.\nSupports date math.\nData streams do not support this parameter.",
          "name": "new_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `true`, checks whether the current index satisfies the specified conditions but does not perform a rollover.",
          "name": "dry_run",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to all or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
          "name": "wait_for_active_shards",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WaitForActiveShards",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/rollover/IndicesRolloverRequest.ts#L29-L100"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "acknowledged",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "conditions",
            "required": true,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "name": "dry_run",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "new_index",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "old_index",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "rolled_over",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "shards_acknowledged",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.rollover"
      },
      "specLocation": "indices/rollover/IndicesRolloverResponse.ts#L22-L32"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Simulate an index.\nReturns the index configuration that would be applied to the specified index from an existing index template.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.simulate_index_template"
      },
      "path": [
        {
          "description": "Name of the index to simulate",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "stable"
            },
            "stack": {
              "since": "8.11.0",
              "stability": "stable"
            }
          },
          "description": "If true, returns all relevant default configurations for the index template.",
          "name": "include_defaults",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/simulate_index_template/IndicesSimulateIndexTemplateRequest.ts#L24-L50"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "overlapping",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Overlapping",
                  "namespace": "indices.simulate_template"
                }
              }
            }
          },
          {
            "name": "template",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Template",
                "namespace": "indices.simulate_template"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.simulate_index_template"
      },
      "specLocation": "indices/simulate_index_template/IndicesSimulateIndexTemplateResponse.ts#L25-L30"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "This setting overrides the value of the `action.auto_create_index` cluster setting.\nIf set to `true` in a template, then indices can be automatically created using that template even if auto-creation of indices is disabled via `actions.auto_create_index`.\nIf set to `false`, then indices or data streams matching the template must always be explicitly created, and may never be automatically created.",
            "name": "allow_auto_create",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Array of wildcard (`*`) expressions used to match the names of data streams and indices during creation.",
            "docId": "avoid-index-pattern-collisions",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/index-templates.html#avoid-index-pattern-collisions",
            "name": "index_patterns",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Indices",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "An ordered list of component template names.\nComponent templates are merged in the order specified, meaning that the last component template specified has the highest precedence.",
            "name": "composed_of",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Name",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "description": "Template to be applied.\nIt may optionally include an `aliases`, `mappings`, or `settings` configuration.",
            "name": "template",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexTemplateMapping",
                "namespace": "indices.put_index_template"
              }
            }
          },
          {
            "description": "If this object is included, the template is used to create data streams and their backing indices.\nSupports an empty object.\nData streams require a matching index template with a `data_stream` object.",
            "name": "data_stream",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataStreamVisibility",
                "namespace": "indices._types"
              }
            }
          },
          {
            "description": "Priority to determine index template precedence when a new data stream or index is created.\nThe index template with the highest priority is chosen.\nIf no priority is specified the template is treated as though it is of priority 0 (lowest priority).\nThis number is not automatically generated by Elasticsearch.",
            "name": "priority",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Version number used to manage index templates externally.\nThis number is not automatically generated by Elasticsearch.",
            "name": "version",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "VersionNumber",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Optional user metadata about the index template.\nMay have any contents.\nThis map is not automatically generated by Elasticsearch.",
            "docId": "mapping-meta-field",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-meta-field.html",
            "name": "_meta",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Metadata",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The configuration option ignore_missing_component_templates can be used when an index template\nreferences a component template that might not exist",
            "name": "ignore_missing_component_templates",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "description": "Marks this index template as deprecated. When creating or updating a non-deprecated index template\nthat uses deprecated components, Elasticsearch will emit a deprecation warning.",
            "name": "deprecated",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Simulate an index template.\nReturns the index configuration that would be applied by a particular index template.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.simulate_template"
      },
      "path": [
        {
          "description": "Name of the index template to simulate. To test a template configuration before you add it to the cluster, omit\nthis parameter and specify the template configuration in the request body.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If true, the template passed in the body is only used if no existing templates match the same index patterns. If false, the simulation uses the template with the highest priority. Note that the template is not permanently added or updated in either case; it is only used for the simulation.",
          "name": "create",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "stable"
            },
            "stack": {
              "since": "8.11.0",
              "stability": "stable"
            }
          },
          "description": "If true, returns all relevant default configurations for the index template.",
          "name": "include_defaults",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/simulate_template/IndicesSimulateTemplateRequest.ts#L27-L120"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "overlapping",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Overlapping",
                  "namespace": "indices.simulate_template"
                }
              }
            }
          },
          {
            "name": "template",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Template",
                "namespace": "indices.simulate_template"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.simulate_template"
      },
      "specLocation": "indices/simulate_template/IndicesSimulateTemplateResponse.ts#L26-L31"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Actions to perform.",
            "name": "actions",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Action",
                  "namespace": "indices.update_aliases"
                }
              }
            }
          }
        ]
      },
      "description": "Create or update an alias.\nAdds a data stream or index to an alias.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.update_aliases"
      },
      "path": [],
      "query": [
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/update_aliases/IndicesUpdateAliasesRequest.ts#L24-L52"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.update_aliases"
      },
      "specLocation": "indices/update_aliases/IndicesUpdateAliasesResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Query in the Lucene query string syntax.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          }
        ]
      },
      "description": "Validate a query.\nValidates a query without running it.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "indices.validate_query"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases to search.\nSupports wildcards (`*`).\nTo search all data streams or indices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the validation is executed on all shards instead of one random shard per index.",
          "name": "all_shards",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Analyzer to use for the query string.\nThis parameter can only be used when the `q` query string parameter is specified.",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, wildcard and prefix queries are analyzed.",
          "name": "analyze_wildcard",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The default operator for query string query: `AND` or `OR`.",
          "name": "default_operator",
          "required": false,
          "serverDefault": "OR",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Field to use as default where no field prefix is given in the query string.\nThis parameter can only be used when the `q` query string parameter is specified.",
          "name": "df",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the response returns detailed information if an error has occurred.",
          "name": "explain",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.",
          "name": "lenient",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, returns a more detailed explanation showing the actual Lucene query that will be executed.",
          "name": "rewrite",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Query in the Lucene query string syntax.",
          "name": "q",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/validate_query/IndicesValidateQueryRequest.ts#L25-L112"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "explanations",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "IndicesValidationExplanation",
                  "namespace": "indices.validate_query"
                }
              }
            }
          },
          {
            "name": "_shards",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ShardStatistics",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "valid",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "error",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "indices.validate_query"
      },
      "specLocation": "indices/validate_query/IndicesValidateQueryResponse.ts#L23-L30"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete an inference endpoint",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "inference.delete"
      },
      "path": [
        {
          "description": "The task type",
          "name": "task_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TaskType",
              "namespace": "inference._types"
            }
          }
        },
        {
          "description": "The inference Id",
          "name": "inference_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "When true, the endpoint is not deleted, and a list of ingest processors which reference this endpoint is returned",
          "name": "dry_run",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "When true, the inference endpoint is forcefully deleted even if it is still being used by ingest processors or semantic text fields",
          "name": "force",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "inference/delete/DeleteRequest.ts#L24-L55"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "DeleteInferenceEndpointResult",
            "namespace": "inference._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "inference.delete"
      },
      "specLocation": "inference/delete/DeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get an inference endpoint",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "inference.get"
      },
      "path": [
        {
          "description": "The task type",
          "name": "task_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TaskType",
              "namespace": "inference._types"
            }
          }
        },
        {
          "description": "The inference Id",
          "name": "inference_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "inference/get/GetRequest.ts#L24-L41"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "endpoints",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "InferenceEndpointInfo",
                  "namespace": "inference._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "inference.get"
      },
      "specLocation": "inference/get/GetResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Query input, required for rerank task.\nNot required for other tasks.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Inference input.\nEither a string or an array of strings.",
            "name": "input",
            "required": true,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "string",
                      "namespace": "_builtins"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "description": "Optional task settings",
            "name": "task_settings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TaskSettings",
                "namespace": "inference._types"
              }
            }
          }
        ]
      },
      "description": "Perform inference on the service",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "inference.inference"
      },
      "path": [
        {
          "description": "The task type",
          "name": "task_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TaskType",
              "namespace": "inference._types"
            }
          }
        },
        {
          "description": "The inference Id",
          "name": "inference_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies the amount of time to wait for the inference request to complete.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "inference/inference/InferenceRequest.ts#L26-L66"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "InferenceResult",
            "namespace": "inference._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "inference.inference"
      },
      "specLocation": "inference/inference/InferenceResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "codegenName": "inference_config",
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "InferenceEndpoint",
            "namespace": "inference._types"
          }
        }
      },
      "description": "Create an inference endpoint",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "inference.put"
      },
      "path": [
        {
          "description": "The task type",
          "name": "task_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TaskType",
              "namespace": "inference._types"
            }
          }
        },
        {
          "description": "The inference Id",
          "name": "inference_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "inference/put/PutRequest.ts#L25-L44"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "InferenceEndpointInfo",
            "namespace": "inference._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "inference.put"
      },
      "specLocation": "inference/put/PutResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get cluster info.\nReturns basic information about the cluster.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.info"
      },
      "path": [],
      "query": [],
      "specLocation": "_global/info/RootNodeInfoRequest.ts#L22-L29"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "cluster_name",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Name",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "cluster_uuid",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Uuid",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "name",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Name",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "tagline",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "version",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ElasticsearchVersionInfo",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.info"
      },
      "specLocation": "_global/info/RootNodeInfoResponse.ts#L23-L31"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Deletes one or more existing ingest pipeline.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ingest.delete_pipeline"
      },
      "path": [
        {
          "description": "Pipeline ID or wildcard expression of pipeline IDs used to limit the request.\nTo delete all ingest pipelines in a cluster, use a value of `*`.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/delete_pipeline/DeletePipelineRequest.ts#L24-L52"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ingest.delete_pipeline"
      },
      "specLocation": "ingest/delete_pipeline/DeletePipelineResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Returns information about one or more ingest pipelines.\nThis API returns a local reference of the pipeline.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ingest.get_pipeline"
      },
      "path": [
        {
          "description": "Comma-separated list of pipeline IDs to retrieve.\nWildcard (`*`) expressions are supported.\nTo get all ingest pipelines, omit this parameter or use `*`.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Return pipelines without their definitions (default: false)",
          "name": "summary",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/get_pipeline/GetPipelineRequest.ts#L24-L50"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "key": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          "kind": "dictionary_of",
          "singleKey": false,
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "Pipeline",
              "namespace": "ingest._types"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ingest.get_pipeline"
      },
      "specLocation": "ingest/get_pipeline/GetPipelineResponse.ts#L23-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Extracts structured fields out of a single text field within a document.\nYou choose which field to extract matched fields from, as well as the grok pattern you expect will match.\nA grok pattern is like a regular expression that supports aliased expressions that can be reused.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ingest.processor_grok"
      },
      "path": [],
      "query": [],
      "specLocation": "ingest/processor_grok/GrokProcessorPatternsRequest.ts#L22-L31"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "patterns",
            "required": true,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ingest.processor_grok"
      },
      "specLocation": "ingest/processor_grok/GrokProcessorPatternsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Optional metadata about the ingest pipeline. May have any contents. This map is not automatically generated by Elasticsearch.",
            "name": "_meta",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Metadata",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Description of the ingest pipeline.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Processors to run immediately after a processor failure. Each processor supports a processor-level `on_failure` value. If a processor without an `on_failure` value fails, Elasticsearch uses this pipeline-level parameter as a fallback. The processors in this parameter run sequentially in the order specified. Elasticsearch will not attempt to run the pipeline's remaining processors.",
            "name": "on_failure",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ProcessorContainer",
                  "namespace": "ingest._types"
                }
              }
            }
          },
          {
            "description": "Processors used to perform transformations on documents before indexing. Processors run sequentially in the order specified.",
            "name": "processors",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ProcessorContainer",
                  "namespace": "ingest._types"
                }
              }
            }
          },
          {
            "description": "Version number used by external systems to track ingest pipelines. This parameter is intended for external systems only. Elasticsearch does not use or validate pipeline version numbers.",
            "name": "version",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "VersionNumber",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Marks this ingest pipeline as deprecated.\nWhen a deprecated ingest pipeline is referenced as the default or final pipeline when creating or updating a non-deprecated index template, Elasticsearch will emit a deprecation warning.",
            "name": "deprecated",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Creates or updates an ingest pipeline.\nChanges made using this API take effect immediately.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ingest.put_pipeline"
      },
      "path": [
        {
          "description": "ID of the ingest pipeline to create or update.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Required version for optimistic concurrency control for pipeline updates",
          "name": "if_version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/put_pipeline/PutPipelineRequest.ts#L25-L83"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ingest.put_pipeline"
      },
      "specLocation": "ingest/put_pipeline/PutPipelineResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Sample documents to test in the pipeline.",
            "name": "docs",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Document",
                  "namespace": "ingest.simulate"
                }
              }
            }
          },
          {
            "description": "Pipeline to test.\nIf you donâ€™t specify the `pipeline` request path parameter, this parameter is required.\nIf you specify both this and the request path parameter, the API only uses the request path parameter.",
            "name": "pipeline",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Pipeline",
                "namespace": "ingest._types"
              }
            }
          }
        ]
      },
      "description": "Executes an ingest pipeline against a set of provided documents.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ingest.simulate"
      },
      "path": [
        {
          "description": "Pipeline to test.\nIf you donâ€™t specify a `pipeline` in the request body, this parameter is required.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `true`, the response includes output data for each processor in the executed pipeline.",
          "name": "verbose",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/simulate/SimulatePipelineRequest.ts#L25-L57"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "docs",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "SimulateDocumentResult",
                  "namespace": "ingest.simulate"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ingest.simulate"
      },
      "specLocation": "ingest/simulate/SimulatePipelineResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get license information.\nReturns information about your Elastic license, including its type, its status, when it was issued, and when it expires.\nFor more information about the different types of licenses, refer to [Elastic Stack subscriptions](https://www.elastic.co/subscriptions).",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "license.get"
      },
      "path": [],
      "query": [
        {
          "deprecation": {
            "description": "",
            "version": "7.6.0"
          },
          "description": "If `true`, this parameter returns enterprise for Enterprise license types. If `false`, this parameter returns platinum for both platinum and enterprise license types. This behavior is maintained for backwards compatibility.\nThis parameter is deprecated and will always be set to true in 8.x.",
          "name": "accept_enterprise",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies whether to retrieve local information. The default value is `false`, which means the information is retrieved from the master node.",
          "name": "local",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "license/get/GetLicenseRequest.ts#L22-L45"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "license",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "LicenseInformation",
                "namespace": "license.get"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "license.get"
      },
      "specLocation": "license/get/GetLicenseResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Deletes a pipeline used for Logstash Central Management.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "logstash.delete_pipeline"
      },
      "path": [
        {
          "description": "Identifier for the pipeline.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "logstash/delete_pipeline/LogstashDeletePipelineRequest.ts#L23-L37"
    },
    {
      "body": {
        "kind": "no_body"
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "logstash.delete_pipeline"
      },
      "specLocation": "logstash/delete_pipeline/LogstashDeletePipelineResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Retrieves pipelines used for Logstash Central Management.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "logstash.get_pipeline"
      },
      "path": [
        {
          "description": "Comma-separated list of pipeline identifiers.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ids",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "logstash/get_pipeline/LogstashGetPipelineRequest.ts#L23-L37"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "key": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          },
          "kind": "dictionary_of",
          "singleKey": false,
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "Pipeline",
              "namespace": "logstash._types"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "logstash.get_pipeline"
      },
      "specLocation": "logstash/get_pipeline/LogstashGetPipelineResponse.ts#L24-L27"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "codegenName": "pipeline",
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "Pipeline",
            "namespace": "logstash._types"
          }
        }
      },
      "description": "Creates or updates a pipeline used for Logstash Central Management.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "logstash.put_pipeline"
      },
      "path": [
        {
          "description": "Identifier for the pipeline.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "logstash/put_pipeline/LogstashPutPipelineRequest.ts#L24-L39"
    },
    {
      "body": {
        "kind": "no_body"
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "logstash.put_pipeline"
      },
      "specLocation": "logstash/put_pipeline/LogstashPutPipelineResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The documents you want to retrieve. Required if no index is specified in the request URI.",
            "name": "docs",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Operation",
                  "namespace": "_global.mget"
                }
              }
            }
          },
          {
            "description": "The IDs of the documents you want to retrieve. Allowed when the index is specified in the request URI.",
            "name": "ids",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Ids",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Get multiple documents.\n\nGet multiple JSON documents by ID from one or more indices.\nIf you specify an index in the request URI, you only need to specify the document IDs in the request body.\nTo ensure fast responses, this multi get (mget) API responds with partial results if one or more shards fail.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.mget"
      },
      "path": [
        {
          "description": "Name of the index to retrieve documents from when `ids` are specified, or when a document in the `docs` array does not specify an index.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies the node or shard the operation should be performed on. Random by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the request is real-time as opposed to near-real-time.",
          "docId": "realtime",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/docs-get.html#realtime",
          "name": "realtime",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the request refreshes relevant shards before retrieving documents.",
          "name": "refresh",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "True or false to return the `_source` field or not, or a list of fields to return.",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfigParam",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to exclude from the response.\nYou can also use this parameter to exclude fields from the subset specified in `_source_includes` query parameter.",
          "docId": "mapping-source-field",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-source-field.html",
          "name": "_source_excludes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to include in the response.\nIf this parameter is specified, only these source fields are returned. You can exclude fields from this subset using the `_source_excludes` query parameter.\nIf the `_source` parameter is `false`, this parameter is ignored.",
          "docId": "mapping-source-field",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-source-field.html",
          "name": "_source_includes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, retrieves the document fields stored in the index rather than the document `_source`.",
          "name": "stored_fields",
          "required": false,
          "serverDefault": "false",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/mget/MultiGetRequest.ts#L25-L104"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "docs",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "generics": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "name": "TDocument",
                      "namespace": "_global.mget.Response"
                    }
                  }
                ],
                "kind": "instance_of",
                "type": {
                  "name": "ResponseItem",
                  "namespace": "_global.mget"
                }
              }
            }
          }
        ]
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.mget.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.mget"
      },
      "specLocation": "_global/mget/MultiGetResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Refer to the description for the `allow_no_match` query parameter.",
            "name": "allow_no_match",
            "required": false,
            "serverDefault": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Refer to the descriptiion for the `force` query parameter.",
            "name": "force",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Refer to the description for the `timeout` query parameter.",
            "name": "timeout",
            "required": false,
            "serverDefault": "30m",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Close anomaly detection jobs.\nA job can be opened and closed multiple times throughout its lifecycle. A closed job cannot receive data or perform analysis operations, but you can still explore and navigate results.\nWhen you close a job, it runs housekeeping tasks such as pruning the model history, flushing buffers, calculating final results and persisting the model snapshots. Depending upon the size of the job, it could take several minutes to close and the equivalent time to re-open. After it is closed, the job has a minimal overhead on the cluster except for maintaining its meta data. Therefore it is a best practice to close jobs that are no longer required to process data.\nIf you close an anomaly detection job whose datafeed is running, the request first tries to stop the datafeed. This behavior is equivalent to calling stop datafeed API with the same timeout and force parameters as the close job request.\nWhen a datafeed that has a specified end date stops, it automatically closes its associated job.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.close_job"
      },
      "path": [
        {
          "description": "Identifier for the anomaly detection job. It can be a job identifier, a group name, or a wildcard expression. You can close multiple anomaly detection jobs in a single API request by using a group name, a comma-separated list of jobs, or a wildcard expression. You can close all jobs by using `_all` or by specifying `*` as the job identifier.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request: contains wildcard expressions and there are no jobs that match; contains the  `_all` string or no identifiers and there are no matches; or contains wildcard expressions and there are only partial matches. By default, it returns an empty jobs array when there are no matches and the subset of results when there are partial matches.\nIf `false`, the request returns a 404 status code when there are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Use to close a failed job, or to forcefully close a job which has not responded to its initial close request; the request returns without performing the associated actions such as flushing buffers and persisting the model snapshots.\nIf you want the job to be in a consistent state after the close job API returns, do not set to `true`. This parameter should be used only in situations where the job has already failed or where you are not interested in results the job might have recently produced or might produce in the future.",
          "name": "force",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Controls the time to wait until a job has closed.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/close_job/MlCloseJobRequest.ts#L24-L78"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "closed",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.close_job"
      },
      "specLocation": "ml/close_job/MlCloseJobResponse.ts#L20-L22"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a calendar.\nRemoves all scheduled events from a calendar, then deletes it.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.delete_calendar"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a calendar.",
          "name": "calendar_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/delete_calendar/MlDeleteCalendarRequest.ts#L23-L38"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.delete_calendar"
      },
      "specLocation": "ml/delete_calendar/MlDeleteCalendarResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete events from a calendar.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.delete_calendar_event"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a calendar.",
          "name": "calendar_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Identifier for the scheduled event.\nYou can obtain this identifier by using the get calendar events API.",
          "name": "event_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/delete_calendar_event/MlDeleteCalendarEventRequest.ts#L23-L43"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.delete_calendar_event"
      },
      "specLocation": "ml/delete_calendar_event/MlDeleteCalendarEventResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete anomaly jobs from a calendar.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.delete_calendar_job"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a calendar.",
          "name": "calendar_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An identifier for the anomaly detection jobs. It can be a job identifier, a group name, or a\ncomma-separated list of jobs or groups.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ids",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/delete_calendar_job/MlDeleteCalendarJobRequest.ts#L23-L44"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "A string that uniquely identifies a calendar.",
            "name": "calendar_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "A description of the calendar.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "A list of anomaly detection job identifiers or group names.",
            "name": "job_ids",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Ids",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.delete_calendar_job"
      },
      "specLocation": "ml/delete_calendar_job/MlDeleteCalendarJobResponse.ts#L22-L31"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a data frame analytics job.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.delete_data_frame_analytics"
      },
      "path": [
        {
          "description": "Identifier for the data frame analytics job.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `true`, it deletes a job that is not stopped; this method is quicker than stopping and deleting the job.",
          "name": "force",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The time to wait for the job to be deleted.",
          "name": "timeout",
          "required": false,
          "serverDefault": "1m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/delete_data_frame_analytics/MlDeleteDataFrameAnalyticsRequest.ts#L24-L52"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.delete_data_frame_analytics"
      },
      "specLocation": "ml/delete_data_frame_analytics/MlDeleteDataFrameAnalyticsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a datafeed.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.delete_datafeed"
      },
      "path": [
        {
          "description": "A numerical character string that uniquely identifies the datafeed. This\nidentifier can contain lowercase alphanumeric characters (a-z and 0-9),\nhyphens, and underscores. It must start and end with alphanumeric\ncharacters.",
          "name": "datafeed_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Use to forcefully delete a started datafeed; this method is quicker than\nstopping and deleting the datafeed.",
          "name": "force",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/delete_datafeed/MlDeleteDatafeedRequest.ts#L23-L49"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.delete_datafeed"
      },
      "specLocation": "ml/delete_datafeed/MlDeleteDatafeedResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a filter.\nIf an anomaly detection job references the filter, you cannot delete the\nfilter. You must update or delete the job before you can delete the filter.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.delete_filter"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a filter.",
          "name": "filter_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/delete_filter/MlDeleteFilterRequest.ts#L23-L40"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.delete_filter"
      },
      "specLocation": "ml/delete_filter/MlDeleteFilterResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete an anomaly detection job.\nAll job configuration, model state and results are deleted.\nIt is not currently possible to delete multiple jobs using wildcards or a\ncomma separated list. If you delete a job that has a datafeed, the request\nfirst tries to delete the datafeed. This behavior is equivalent to calling\nthe delete datafeed API with the same timeout and force parameters as the\ndelete job request.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.delete_job"
      },
      "path": [
        {
          "description": "Identifier for the anomaly detection job.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Use to forcefully delete an opened job; this method is quicker than\nclosing and deleting the job.",
          "name": "force",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies whether annotations that have been added by the\nuser should be deleted along with any auto-generated annotations when the job is\nreset.",
          "name": "delete_user_annotations",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies whether the request should return immediately or wait until the\njob deletion completes.",
          "name": "wait_for_completion",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/delete_job/MlDeleteJobRequest.ts#L23-L64"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.delete_job"
      },
      "specLocation": "ml/delete_job/MlDeleteJobResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete an unreferenced trained model.\nThe request deletes a trained inference model that is not referenced by an ingest pipeline.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.delete_trained_model"
      },
      "path": [
        {
          "description": "The unique identifier of the trained model.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Forcefully deletes a trained model that is referenced by ingest pipelines or has a started deployment.",
          "name": "force",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/delete_trained_model/MlDeleteTrainedModelRequest.ts#L23-L43"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.delete_trained_model"
      },
      "specLocation": "ml/delete_trained_model/MlDeleteTrainedModelResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a trained model alias.\nThis API deletes an existing model alias that refers to a trained model. If\nthe model alias is missing or refers to a model other than the one identified\nby the `model_id`, this API returns an error.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.delete_trained_model_alias"
      },
      "path": [
        {
          "description": "The model alias to delete.",
          "name": "model_alias",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The trained model ID to which the model alias refers.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/delete_trained_model_alias/MlDeleteTrainedModelAliasRequest.ts#L23-L45"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.delete_trained_model_alias"
      },
      "specLocation": "ml/delete_trained_model_alias/MlDeleteTrainedModelAliasResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "For a list of the properties that you can specify in the\n`analysis_config` component of the body of this API.",
            "name": "analysis_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "AnalysisConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "Estimates of the highest cardinality in a single bucket that is observed\nfor influencer fields over the time period that the job analyzes data.\nTo produce a good answer, values must be provided for all influencer\nfields. Providing values for fields that are not listed as `influencers`\nhas no effect on the estimation.",
            "name": "max_bucket_cardinality",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "Field",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "long",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "description": "Estimates of the cardinality that is observed for fields over the whole\ntime period that the job analyzes data. To produce a good answer, values\nmust be provided for fields referenced in the `by_field_name`,\n`over_field_name` and `partition_field_name` of any detectors. Providing\nvalues for other fields has no effect on the estimation. It can be\nomitted from the request if no detectors have a `by_field_name`,\n`over_field_name` or `partition_field_name`.",
            "name": "overall_cardinality",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "Field",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "long",
                  "namespace": "_types"
                }
              }
            }
          }
        ]
      },
      "description": "Estimate job model memory usage.\nMakes an estimation of the memory usage for an anomaly detection job model.\nIt is based on analysis configuration details for the job and cardinality\nestimates for the fields it references.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.estimate_model_memory"
      },
      "path": [],
      "query": [],
      "specLocation": "ml/estimate_model_memory/MlEstimateModelMemoryRequest.ts#L26-L63"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "model_memory_estimate",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.estimate_model_memory"
      },
      "specLocation": "ml/estimate_model_memory/MlEstimateModelMemoryResponse.ts#L20-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Defines the type of evaluation you want to perform.",
            "name": "evaluation",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeEvaluationContainer",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "Defines the `index` in which the evaluation will be performed.",
            "name": "index",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "A query clause that retrieves a subset of data from the source index.",
            "docId": "query-dsl",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl.html",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          }
        ]
      },
      "description": "Evaluate data frame analytics.\nThe API packages together commonly used evaluation metrics for various types\nof machine learning features. This has been designed for use on indexes\ncreated by data frame analytics. Evaluation requires both a ground truth\nfield and an analytics result field to be present.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.evaluate_data_frame"
      },
      "path": [],
      "query": [],
      "specLocation": "ml/evaluate_data_frame/MlEvaluateDataFrameRequest.ts#L25-L53"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "classification",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeClassificationSummary",
                "namespace": "ml.evaluate_data_frame"
              }
            }
          },
          {
            "name": "outlier_detection",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeOutlierDetectionSummary",
                "namespace": "ml.evaluate_data_frame"
              }
            }
          },
          {
            "name": "regression",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeRegressionSummary",
                "namespace": "ml.evaluate_data_frame"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.evaluate_data_frame"
      },
      "specLocation": "ml/evaluate_data_frame/MlEvaluateDataFrameResponse.ts#L26-L33"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Refer to the description for the `advance_time` query parameter.",
            "name": "advance_time",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DateTime",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Refer to the description for the `calc_interim` query parameter.",
            "name": "calc_interim",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Refer to the description for the `end` query parameter.",
            "name": "end",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DateTime",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Refer to the description for the `skip_time` query parameter.",
            "name": "skip_time",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DateTime",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Refer to the description for the `start` query parameter.",
            "name": "start",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DateTime",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Force buffered data to be processed.\nThe flush jobs API is only applicable when sending data for analysis using\nthe post data API. Depending on the content of the buffer, then it might\nadditionally calculate new results. Both flush and close operations are\nsimilar, however the flush is more efficient if you are expecting to send\nmore data for analysis. When flushing, the job remains open and is available\nto continue analyzing data. A close operation additionally prunes and\npersists the model state to disk and the job must be opened again before\nanalyzing further data.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.flush_job"
      },
      "path": [
        {
          "description": "Identifier for the anomaly detection job.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies to advance to a particular time value. Results are generated\nand the model is updated for data from the specified time interval.",
          "name": "advance_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, calculates the interim results for the most recent bucket or all\nbuckets within the latency period.",
          "name": "calc_interim",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "When used in conjunction with `calc_interim` and `start`, specifies the\nrange of buckets on which to calculate interim results.",
          "name": "end",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies to skip to a particular time value. Results are not generated\nand the model is not updated for data from the specified time interval.",
          "name": "skip_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "When used in conjunction with `calc_interim`, specifies the range of\nbuckets on which to calculate interim results.",
          "name": "start",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/flush_job/MlFlushJobRequest.ts#L24-L100"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "flushed",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Provides the timestamp (in milliseconds since the epoch) of the end of\nthe last bucket that was processed.",
            "name": "last_finalized_bucket_end",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.flush_job"
      },
      "specLocation": "ml/flush_job/MlFlushJobResponse.ts#L22-L31"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get info about events in calendars.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_calendar_events"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a calendar. You can get information for multiple calendars by using a comma-separated list of ids or a wildcard expression. You can get information for all calendars by using `_all` or `*` or by omitting the calendar identifier.",
          "name": "calendar_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies to get events with timestamps earlier than this time.",
          "name": "end",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Skips the specified number of events.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies to get events for a specific anomaly detection job identifier or job group. It must be used with a calendar identifier of `_all` or `*`.",
          "name": "job_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of events to obtain.",
          "name": "size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies to get events with timestamps after this time.",
          "name": "start",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/get_calendar_events/MlGetCalendarEventsRequest.ts#L25-L54"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "events",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "CalendarEvent",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_calendar_events"
      },
      "specLocation": "ml/get_calendar_events/MlGetCalendarEventsResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "This object is supported only when you omit the calendar identifier.",
            "name": "page",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Page",
                "namespace": "ml._types"
              }
            }
          }
        ]
      },
      "description": "Get calendar configuration info.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_calendars"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a calendar. You can get information for multiple calendars by using a comma-separated list of ids or a wildcard expression. You can get information for all calendars by using `_all` or `*` or by omitting the calendar identifier.",
          "name": "calendar_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Skips the specified number of calendars. This parameter is supported only when you omit the calendar identifier.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of calendars to obtain. This parameter is supported only when you omit the calendar identifier.",
          "name": "size",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/get_calendars/MlGetCalendarsRequest.ts#L25-L52"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "calendars",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Calendar",
                  "namespace": "ml.get_calendars"
                }
              }
            }
          },
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_calendars"
      },
      "specLocation": "ml/get_calendars/MlGetCalendarsResponse.ts#L23-L25"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get data frame analytics job configuration info.\nYou can get information for multiple data frame analytics jobs in a single\nAPI request by using a comma-separated list of data frame analytics jobs or a\nwildcard expression.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_data_frame_analytics"
      },
      "path": [
        {
          "description": "Identifier for the data frame analytics job. If you do not specify this\noption, the API returns information for the first hundred data frame\nanalytics jobs.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n1. Contains wildcard expressions and there are no data frame analytics\njobs that match.\n2. Contains the `_all` string or no identifiers and there are no matches.\n3. Contains wildcard expressions and there are only partial matches.\n\nThe default value returns an empty data_frame_analytics array when there\nare no matches and the subset of results when there are partial matches.\nIf this parameter is `false`, the request returns a 404 status code when\nthere are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Skips the specified number of data frame analytics jobs.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of data frame analytics jobs to obtain.",
          "name": "size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates if certain fields should be removed from the configuration on\nretrieval. This allows the configuration to be in an acceptable format to\nbe retrieved and then added to another cluster.",
          "name": "exclude_generated",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/get_data_frame_analytics/MlGetDataFrameAnalyticsRequest.ts#L24-L78"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "An array of data frame analytics job resources, which are sorted by the id value in ascending order.",
            "name": "data_frame_analytics",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "DataframeAnalyticsSummary",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_data_frame_analytics"
      },
      "specLocation": "ml/get_data_frame_analytics/MlGetDataFrameAnalyticsResponse.ts#L23-L29"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get data frame analytics jobs usage info.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_data_frame_analytics_stats"
      },
      "path": [
        {
          "description": "Identifier for the data frame analytics job. If you do not specify this\noption, the API returns information for the first hundred data frame\nanalytics jobs.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n1. Contains wildcard expressions and there are no data frame analytics\njobs that match.\n2. Contains the `_all` string or no identifiers and there are no matches.\n3. Contains wildcard expressions and there are only partial matches.\n\nThe default value returns an empty data_frame_analytics array when there\nare no matches and the subset of results when there are partial matches.\nIf this parameter is `false`, the request returns a 404 status code when\nthere are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Skips the specified number of data frame analytics jobs.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of data frame analytics jobs to obtain.",
          "name": "size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines whether the stats response should be verbose.",
          "name": "verbose",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/get_data_frame_analytics_stats/MlGetDataFrameAnalyticsStatsRequest.ts#L24-L73"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "An array of objects that contain usage information for data frame analytics jobs, which are sorted by the id value in ascending order.",
            "name": "data_frame_analytics",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "DataframeAnalytics",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_data_frame_analytics_stats"
      },
      "specLocation": "ml/get_data_frame_analytics_stats/MlGetDataFrameAnalyticsStatsResponse.ts#L23-L29"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get datafeeds usage info.\nYou can get statistics for multiple datafeeds in a single API request by\nusing a comma-separated list of datafeeds or a wildcard expression. You can\nget statistics for all datafeeds by using `_all`, by specifying `*` as the\n`<feed_id>`, or by omitting the `<feed_id>`. If the datafeed is stopped, the\nonly information you receive is the `datafeed_id` and the `state`.\nThis API returns a maximum of 10,000 datafeeds.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_datafeed_stats"
      },
      "path": [
        {
          "description": "Identifier for the datafeed. It can be a datafeed identifier or a\nwildcard expression. If you do not specify one of these options, the API\nreturns information about all datafeeds.",
          "name": "datafeed_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ids",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n1. Contains wildcard expressions and there are no datafeeds that match.\n2. Contains the `_all` string or no identifiers and there are no matches.\n3. Contains wildcard expressions and there are only partial matches.\n\nThe default value is `true`, which returns an empty `datafeeds` array\nwhen there are no matches and the subset of results when there are\npartial matches. If this parameter is `false`, the request returns a\n`404` status code when there are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/get_datafeed_stats/MlGetDatafeedStatsRequest.ts#L23-L61"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "datafeeds",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "DatafeedStats",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_datafeed_stats"
      },
      "specLocation": "ml/get_datafeed_stats/MlGetDatafeedStatsResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get datafeeds configuration info.\nYou can get information for multiple datafeeds in a single API request by\nusing a comma-separated list of datafeeds or a wildcard expression. You can\nget information for all datafeeds by using `_all`, by specifying `*` as the\n`<feed_id>`, or by omitting the `<feed_id>`.\nThis API returns a maximum of 10,000 datafeeds.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_datafeeds"
      },
      "path": [
        {
          "description": "Identifier for the datafeed. It can be a datafeed identifier or a\nwildcard expression. If you do not specify one of these options, the API\nreturns information about all datafeeds.",
          "name": "datafeed_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ids",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n1. Contains wildcard expressions and there are no datafeeds that match.\n2. Contains the `_all` string or no identifiers and there are no matches.\n3. Contains wildcard expressions and there are only partial matches.\n\nThe default value is `true`, which returns an empty `datafeeds` array\nwhen there are no matches and the subset of results when there are\npartial matches. If this parameter is `false`, the request returns a\n`404` status code when there are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates if certain fields should be removed from the configuration on\nretrieval. This allows the configuration to be in an acceptable format to\nbe retrieved and then added to another cluster.",
          "name": "exclude_generated",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/get_datafeeds/MlGetDatafeedsRequest.ts#L23-L67"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "datafeeds",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Datafeed",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_datafeeds"
      },
      "specLocation": "ml/get_datafeeds/MlGetDatafeedsResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get filters.\nYou can get a single filter or all filters.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_filters"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a filter.",
          "name": "filter_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ids",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Skips the specified number of filters.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of filters to obtain.",
          "name": "size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/get_filters/MlGetFiltersRequest.ts#L24-L52"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "filters",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Filter",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_filters"
      },
      "specLocation": "ml/get_filters/MlGetFiltersResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get anomaly detection jobs usage info.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_job_stats"
      },
      "path": [
        {
          "description": "Identifier for the anomaly detection job. It can be a job identifier, a\ngroup name, a comma-separated list of jobs, or a wildcard expression. If\nyou do not specify one of these options, the API returns information for\nall anomaly detection jobs.",
          "name": "job_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n1. Contains wildcard expressions and there are no jobs that match.\n2. Contains the _all string or no identifiers and there are no matches.\n3. Contains wildcard expressions and there are only partial matches.\n\nIf `true`, the API returns an empty `jobs` array when\nthere are no matches and the subset of results when there are partial\nmatches. If `false`, the API returns a `404` status\ncode when there are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/get_job_stats/MlGetJobStatsRequest.ts#L23-L57"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "jobs",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "JobStats",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_job_stats"
      },
      "specLocation": "ml/get_job_stats/MlGetJobStatsResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get anomaly detection jobs configuration info.\nYou can get information for multiple anomaly detection jobs in a single API\nrequest by using a group name, a comma-separated list of jobs, or a wildcard\nexpression. You can get information for all anomaly detection jobs by using\n`_all`, by specifying `*` as the `<job_id>`, or by omitting the `<job_id>`.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_jobs"
      },
      "path": [
        {
          "description": "Identifier for the anomaly detection job. It can be a job identifier, a\ngroup name, or a wildcard expression. If you do not specify one of these\noptions, the API returns information for all anomaly detection jobs.",
          "name": "job_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ids",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n1. Contains wildcard expressions and there are no jobs that match.\n2. Contains the _all string or no identifiers and there are no matches.\n3. Contains wildcard expressions and there are only partial matches.\n\nThe default value is `true`, which returns an empty `jobs` array when\nthere are no matches and the subset of results when there are partial\nmatches. If this parameter is `false`, the request returns a `404` status\ncode when there are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates if certain fields should be removed from the configuration on\nretrieval. This allows the configuration to be in an acceptable format to\nbe retrieved and then added to another cluster.",
          "name": "exclude_generated",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/get_jobs/MlGetJobsRequest.ts#L23-L67"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "jobs",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Job",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_jobs"
      },
      "specLocation": "ml/get_jobs/MlGetJobsResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Refer to the description for the `allow_no_match` query parameter.",
            "name": "allow_no_match",
            "required": false,
            "serverDefault": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Refer to the description for the `bucket_span` query parameter.",
            "name": "bucket_span",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Refer to the description for the `end` query parameter.",
            "name": "end",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DateTime",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Refer to the description for the `exclude_interim` query parameter.",
            "name": "exclude_interim",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Refer to the description for the `overall_score` query parameter.",
            "name": "overall_score",
            "required": false,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "double",
                    "namespace": "_types"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "description": "Refer to the description for the `start` query parameter.",
            "name": "start",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DateTime",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Refer to the description for the `top_n` query parameter.",
            "name": "top_n",
            "required": false,
            "serverDefault": 1,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Get overall bucket results.\n\nRetrievs overall bucket results that summarize the bucket results of\nmultiple anomaly detection jobs.\n\nThe `overall_score` is calculated by combining the scores of all the\nbuckets within the overall bucket span. First, the maximum\n`anomaly_score` per anomaly detection job in the overall bucket is\ncalculated. Then the `top_n` of those scores are averaged to result in\nthe `overall_score`. This means that you can fine-tune the\n`overall_score` so that it is more or less sensitive to the number of\njobs that detect an anomaly at the same time. For example, if you set\n`top_n` to `1`, the `overall_score` is the maximum bucket score in the\noverall bucket. Alternatively, if you set `top_n` to the number of jobs,\nthe `overall_score` is high only when all jobs detect anomalies in that\noverall bucket. If you set the `bucket_span` parameter (to a value\ngreater than its default), the `overall_score` is the maximum\n`overall_score` of the overall buckets that have a span equal to the\njobs' largest bucket span.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_overall_buckets"
      },
      "path": [
        {
          "description": "Identifier for the anomaly detection job. It can be a job identifier, a\ngroup name, a comma-separated list of jobs or groups, or a wildcard\nexpression.\n\nYou can summarize the bucket results for all anomaly detection jobs by\nusing `_all` or by specifying `*` as the `<job_id>`.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n1. Contains wildcard expressions and there are no jobs that match.\n2. Contains the `_all` string or no identifiers and there are no matches.\n3. Contains wildcard expressions and there are only partial matches.\n\nIf `true`, the request returns an empty `jobs` array when there are no\nmatches and the subset of results when there are partial matches. If this\nparameter is `false`, the request returns a `404` status code when there\nare no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The span of the overall buckets. Must be greater or equal to the largest\nbucket span of the specified anomaly detection jobs, which is the default\nvalue.\n\nBy default, an overall bucket has a span equal to the largest bucket span\nof the specified anomaly detection jobs. To override that behavior, use\nthe optional `bucket_span` parameter.",
          "name": "bucket_span",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Returns overall buckets with timestamps earlier than this time.",
          "name": "end",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the output excludes interim results.",
          "name": "exclude_interim",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Returns overall buckets with overall scores greater than or equal to this\nvalue.",
          "name": "overall_score",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Returns overall buckets with timestamps after this time.",
          "name": "start",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of top anomaly detection job bucket scores to be used in the\n`overall_score` calculation.",
          "name": "top_n",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/get_overall_buckets/MlGetOverallBucketsRequest.ts#L25-L146"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Array of overall bucket objects",
            "name": "overall_buckets",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "OverallBucket",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_overall_buckets"
      },
      "specLocation": "ml/get_overall_buckets/MlGetOverallBucketsResponse.ts#L23-L29"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get trained model configuration info.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_trained_models"
      },
      "path": [
        {
          "description": "The unique identifier of the trained model or a model alias.\n\nYou can get information for multiple trained models in a single API\nrequest by using a comma-separated list of model IDs or a wildcard\nexpression.",
          "name": "model_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ids",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n- Contains wildcard expressions and there are no models that match.\n- Contains the _all string or no identifiers and there are no matches.\n- Contains wildcard expressions and there are only partial matches.\n\nIf true, it returns an empty array when there are no matches and the\nsubset of results when there are partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies whether the included model definition should be returned as a\nJSON map (true) or in a custom compressed format (false).",
          "name": "decompress_definition",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates if certain fields should be removed from the configuration on\nretrieval. This allows the configuration to be in an acceptable format to\nbe retrieved and then added to another cluster.",
          "name": "exclude_generated",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Skips the specified number of models.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma delimited string of optional fields to include in the response\nbody.",
          "name": "include",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Include",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of models to obtain.",
          "name": "size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma delimited string of tags. A trained model can have many tags, or\nnone. When supplied, only trained models that contain all the supplied\ntags are returned.",
          "name": "tags",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "ml/get_trained_models/MlGetTrainedModelRequest.ts#L25-L92"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "An array of trained model resources, which are sorted by the model_id value in ascending order.",
            "name": "trained_model_configs",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "TrainedModelConfig",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_trained_models"
      },
      "specLocation": "ml/get_trained_models/MlGetTrainedModelResponse.ts#L23-L34"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get trained models usage info.\nYou can get usage information for multiple trained\nmodels in a single API request by using a comma-separated list of model IDs or a wildcard expression.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.get_trained_models_stats"
      },
      "path": [
        {
          "description": "The unique identifier of the trained model or a model alias. It can be a\ncomma-separated list or a wildcard expression.",
          "name": "model_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ids",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n- Contains wildcard expressions and there are no models that match.\n- Contains the _all string or no identifiers and there are no matches.\n- Contains wildcard expressions and there are only partial matches.\n\nIf true, it returns an empty array when there are no matches and the\nsubset of results when there are partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Skips the specified number of models.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of models to obtain.",
          "name": "size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/get_trained_models_stats/MlGetTrainedModelStatsRequest.ts#L24-L66"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The total number of trained model statistics that matched the requested ID patterns. Could be higher than the number of items in the trained_model_stats array as the size of the array is restricted by the supplied size parameter.",
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "An array of trained model statistics, which are sorted by the model_id value in ascending order.",
            "name": "trained_model_stats",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "TrainedModelStats",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.get_trained_models_stats"
      },
      "specLocation": "ml/get_trained_models_stats/MlGetTrainedModelStatsResponse.ts#L23-L33"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "An array of objects to pass to the model for inference. The objects should contain a fields matching your\nconfigured trained model input. Typically, for NLP models, the field name is `text_field`.\nCurrently, for NLP models, only a single value is allowed.",
            "name": "docs",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                },
                "kind": "dictionary_of",
                "singleKey": false,
                "value": {
                  "kind": "user_defined_value"
                }
              }
            }
          },
          {
            "description": "The inference configuration updates to apply on the API call",
            "name": "inference_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "InferenceConfigUpdateContainer",
                "namespace": "ml._types"
              }
            }
          }
        ]
      },
      "description": "Evaluate a trained model.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.infer_trained_model"
      },
      "path": [
        {
          "description": "The unique identifier of the trained model.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Controls the amount of time to wait for inference results.",
          "name": "timeout",
          "required": false,
          "serverDefault": "10s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/infer_trained_model/MlInferTrainedModelRequest.ts#L27-L60"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "inference_results",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "InferenceResponseResult",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.infer_trained_model"
      },
      "specLocation": "ml/infer_trained_model/MlInferTrainedModelResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Refer to the description for the `timeout` query parameter.",
            "name": "timeout",
            "required": false,
            "serverDefault": "30m",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Open anomaly detection jobs.\nAn anomaly detection job must be opened to be ready to receive and analyze\ndata. It can be opened and closed multiple times throughout its lifecycle.\nWhen you open a new job, it starts with an empty model.\nWhen you open an existing job, the most recent model state is automatically\nloaded. The job is ready to resume its analysis from where it left off, once\nnew data is received.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.open_job"
      },
      "path": [
        {
          "description": "Identifier for the anomaly detection job.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Controls the time to wait until a job has opened.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/open_job/MlOpenJobRequest.ts#L24-L59"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "opened",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The ID of the node that the job was started on. In serverless this will be the \"serverless\".\nIf the job is allowed to open lazily and has not yet been assigned to a node, this value is an empty string.",
            "name": "node",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "NodeId",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.open_job"
      },
      "specLocation": "ml/open_job/MlOpenJobResponse.ts#L22-L31"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "A list of one of more scheduled events. The eventâ€™s start and end times can be specified as integer milliseconds since the epoch or as a string in ISO 8601 format.",
            "name": "events",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "CalendarEvent",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "description": "Add scheduled events to the calendar.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.post_calendar_events"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a calendar.",
          "name": "calendar_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/post_calendar_events/MlPostCalendarEventsRequest.ts#L24-L41"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "events",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "CalendarEvent",
                  "namespace": "ml._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.post_calendar_events"
      },
      "specLocation": "ml/post_calendar_events/MlPostCalendarEventsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "A data frame analytics config as described in create data frame analytics\njobs. Note that `id` and `dest` donâ€™t need to be provided in the context of\nthis API.",
            "docId": "put-dfanalytics",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/put-dfanalytics.html",
            "name": "config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframePreviewConfig",
                "namespace": "ml.preview_data_frame_analytics"
              }
            }
          }
        ]
      },
      "description": "Preview features used by data frame analytics.\nPreviews the extracted features used by a data frame analytics config.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.preview_data_frame_analytics"
      },
      "path": [
        {
          "description": "Identifier for the data frame analytics job.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/preview_data_frame_analytics/MlPreviewDataFrameAnalyticsRequest.ts#L24-L49"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "An array of objects that contain feature name and value pairs. The features have been processed and indicate what will be sent to the model for training.",
            "name": "feature_values",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "name": "Field",
                    "namespace": "_types"
                  }
                },
                "kind": "dictionary_of",
                "singleKey": false,
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.preview_data_frame_analytics"
      },
      "specLocation": "ml/preview_data_frame_analytics/MlPreviewDataFrameAnalyticsResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The datafeed definition to preview.",
            "name": "datafeed_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DatafeedConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "The configuration details for the anomaly detection job that is associated with the datafeed. If the\n`datafeed_config` object does not include a `job_id` that references an existing anomaly detection job, you must\nsupply this `job_config` object. If you include both a `job_id` and a `job_config`, the latter information is\nused. You cannot specify a `job_config` object unless you also supply a `datafeed_config` object.",
            "name": "job_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "JobConfig",
                "namespace": "ml._types"
              }
            }
          }
        ]
      },
      "description": "Preview a datafeed.\nThis API returns the first \"page\" of search results from a datafeed.\nYou can preview an existing datafeed or provide configuration details for a datafeed\nand anomaly detection job in the API. The preview shows the structure of the data\nthat will be passed to the anomaly detection engine.\nIMPORTANT: When Elasticsearch security features are enabled, the preview uses the credentials of the user that\ncalled the API. However, when the datafeed starts it uses the roles of the last user that created or updated the\ndatafeed. To get a preview that accurately reflects the behavior of the datafeed, use the appropriate credentials.\nYou can also use secondary authorization headers to supply the credentials.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.preview_datafeed"
      },
      "path": [
        {
          "description": "A numerical character string that uniquely identifies the datafeed. This identifier can contain lowercase\nalphanumeric characters (a-z and 0-9), hyphens, and underscores. It must start and end with alphanumeric\ncharacters. NOTE: If you use this path parameter, you cannot provide datafeed or anomaly detection job\nconfiguration details in the request body.",
          "name": "datafeed_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "The start time from where the datafeed preview should begin",
          "name": "start",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The end time when the datafeed preview should stop",
          "name": "end",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/preview_datafeed/MlPreviewDatafeedRequest.ts#L26-L70"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "TDocument",
              "namespace": "ml.preview_datafeed.Response"
            }
          }
        }
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "ml.preview_datafeed.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.preview_datafeed"
      },
      "specLocation": "ml/preview_datafeed/MlPreviewDatafeedResponse.ts#L20-L23"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "An array of anomaly detection job identifiers.",
            "name": "job_ids",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Id",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "description": "A description of the calendar.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Create a calendar.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.put_calendar"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a calendar.",
          "name": "calendar_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/put_calendar/MlPutCalendarRequest.ts#L23-L44"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "A string that uniquely identifies a calendar.",
            "name": "calendar_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "A description of the calendar.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "A list of anomaly detection job identifiers or group names.",
            "name": "job_ids",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Ids",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.put_calendar"
      },
      "specLocation": "ml/put_calendar/MlPutCalendarResponse.ts#L22-L31"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Add anomaly detection job to calendar.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.put_calendar_job"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a calendar.",
          "name": "calendar_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An identifier for the anomaly detection jobs. It can be a job identifier, a group name, or a comma-separated list of jobs or groups.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ids",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/put_calendar_job/MlPutCalendarJobRequest.ts#L23-L38"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "A string that uniquely identifies a calendar.",
            "name": "calendar_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "A description of the calendar.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "A list of anomaly detection job identifiers or group names.",
            "name": "job_ids",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Ids",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.put_calendar_job"
      },
      "specLocation": "ml/put_calendar_job/MlPutCalendarJobResponse.ts#L22-L31"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Specifies whether this job can start when there is insufficient machine\nlearning node capacity for it to be immediately assigned to a node. If\nset to `false` and a machine learning node with capacity to run the job\ncannot be immediately found, the API returns an error. If set to `true`,\nthe API does not return an error; the job waits in the `starting` state\nuntil sufficient machine learning node capacity is available. This\nbehavior is also affected by the cluster-wide\n`xpack.ml.max_lazy_ml_nodes` setting.",
            "docId": "ml-settings",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ml-settings.html",
            "name": "allow_lazy_start",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The analysis configuration, which contains the information necessary to\nperform one of the following types of analysis: classification, outlier\ndetection, or regression.",
            "name": "analysis",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalysisContainer",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "Specifies `includes` and/or `excludes` patterns to select which fields\nwill be included in the analysis. The patterns specified in `excludes`\nare applied last, therefore `excludes` takes precedence. In other words,\nif the same field is specified in both `includes` and `excludes`, then\nthe field will not be included in the analysis. If `analyzed_fields` is\nnot set, only the relevant fields will be included. For example, all the\nnumeric fields for outlier detection.\nThe supported fields vary for each type of analysis. Outlier detection\nrequires numeric or `boolean` data to analyze. The algorithms donâ€™t\nsupport missing values therefore fields that have data types other than\nnumeric or boolean are ignored. Documents where included fields contain\nmissing values, null values, or an array are also ignored. Therefore the\n`dest` index may contain documents that donâ€™t have an outlier score.\nRegression supports fields that are numeric, `boolean`, `text`,\n`keyword`, and `ip` data types. It is also tolerant of missing values.\nFields that are supported are included in the analysis, other fields are\nignored. Documents where included fields contain an array with two or\nmore values are also ignored. Documents in the `dest` index that donâ€™t\ncontain a results field are not included in the regression analysis.\nClassification supports fields that are numeric, `boolean`, `text`,\n`keyword`, and `ip` data types. It is also tolerant of missing values.\nFields that are supported are included in the analysis, other fields are\nignored. Documents where included fields contain an array with two or\nmore values are also ignored. Documents in the `dest` index that donâ€™t\ncontain a results field are not included in the classification analysis.\nClassification analysis can be improved by mapping ordinal variable\nvalues to a single number. For example, in case of age ranges, you can\nmodel the values as `0-14 = 0`, `15-24 = 1`, `25-34 = 2`, and so on.",
            "name": "analyzed_fields",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalysisAnalyzedFields",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "A description of the job.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The destination configuration.",
            "name": "dest",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalyticsDestination",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "The maximum number of threads to be used by the analysis. Using more\nthreads may decrease the time necessary to complete the analysis at the\ncost of using more CPU. Note that the process may use additional threads\nfor operational functionality other than the analysis itself.",
            "name": "max_num_threads",
            "required": false,
            "serverDefault": 1,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The approximate maximum amount of memory resources that are permitted for\nanalytical processing. If your `elasticsearch.yml` file contains an\n`xpack.ml.max_model_memory_limit` setting, an error occurs when you try\nto create data frame analytics jobs that have `model_memory_limit` values\ngreater than that setting.",
            "name": "model_memory_limit",
            "required": false,
            "serverDefault": "1gb",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The configuration of how to source the analysis data.",
            "name": "source",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalyticsSource",
                "namespace": "ml._types"
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "8.0.0"
              }
            },
            "name": "headers",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "HttpHeaders",
                "namespace": "_types"
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "7.16.0"
              }
            },
            "name": "version",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "VersionString",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Create a data frame analytics job.\nThis API creates a data frame analytics job that performs an analysis on the\nsource indices and stores the outcome in a destination index.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.put_data_frame_analytics"
      },
      "path": [
        {
          "description": "Identifier for the data frame analytics job. This identifier can contain\nlowercase alphanumeric characters (a-z and 0-9), hyphens, and\nunderscores. It must start and end with alphanumeric characters.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/put_data_frame_analytics/MlPutDataFrameAnalyticsRequest.ts#L30-L142"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "authorization",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalyticsAuthorization",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "allow_lazy_start",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "analysis",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalysisContainer",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "analyzed_fields",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalysisAnalyzedFields",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "create_time",
            "required": true,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "EpochTime",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "dest",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalyticsDestination",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "max_num_threads",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "model_memory_limit",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "source",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalyticsSource",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "version",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "VersionString",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.put_data_frame_analytics"
      },
      "specLocation": "ml/put_data_frame_analytics/MlPutDataFrameAnalyticsResponse.ts#L31-L46"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "If set, the datafeed performs aggregation searches.\nSupport for aggregations is limited and should be used only with low cardinality data.",
            "name": "aggregations",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "AggregationContainer",
                  "namespace": "_types.aggregations"
                }
              }
            }
          },
          {
            "description": "Datafeeds might be required to search over long time periods, for several months or years.\nThis search is split into time chunks in order to ensure the load on Elasticsearch is managed.\nChunking configuration controls how the size of these time chunks are calculated;\nit is an advanced configuration option.",
            "name": "chunking_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ChunkingConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "Specifies whether the datafeed checks for missing data and the size of the window.\nThe datafeed can optionally search over indices that have already been read in an effort to determine whether\nany data has subsequently been added to the index. If missing data is found, it is a good indication that the\n`query_delay` is set too low and the data is being indexed after the datafeed has passed that moment in time.\nThis check runs only on real-time datafeeds.",
            "name": "delayed_data_check_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DelayedDataCheckConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "The interval at which scheduled queries are made while the datafeed runs in real time.\nThe default value is either the bucket span for short bucket spans, or, for longer bucket spans, a sensible\nfraction of the bucket span. When `frequency` is shorter than the bucket span, interim results for the last\n(partial) bucket are written then eventually overwritten by the full bucket results. If the datafeed uses\naggregations, this value must be divisible by the interval of the date histogram aggregation.",
            "name": "frequency",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "aliases": [
              "indexes"
            ],
            "description": "An array of index names. Wildcards are supported. If any of the indices are in remote clusters, the machine\nlearning nodes must have the `remote_cluster_client` role.",
            "name": "indices",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Indices",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Specifies index expansion options that are used during search",
            "name": "indices_options",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndicesOptions",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Identifier for the anomaly detection job.",
            "name": "job_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "If a real-time datafeed has never seen any data (including during any initial training period), it automatically\nstops and closes the associated job after this many real-time searches return no documents. In other words,\nit stops after `frequency` times `max_empty_searches` of real-time operation. If not set, a datafeed with no\nend time that sees no data remains started until it is explicitly stopped. By default, it is not set.",
            "name": "max_empty_searches",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The Elasticsearch query domain-specific language (DSL). This value corresponds to the query object in an\nElasticsearch search POST body. All the options that are supported by Elasticsearch can be used, as this\nobject is passed verbatim to Elasticsearch.",
            "name": "query",
            "required": false,
            "serverDefault": "{\"match_all\": {\"boost\": 1}}",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "The number of seconds behind real time that data is queried. For example, if data from 10:04 a.m. might\nnot be searchable in Elasticsearch until 10:06 a.m., set this property to 120 seconds. The default\nvalue is randomly selected between `60s` and `120s`. This randomness improves the query performance\nwhen there are multiple jobs running on the same node.",
            "name": "query_delay",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Specifies runtime fields for the datafeed search.",
            "name": "runtime_mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFields",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "Specifies scripts that evaluate custom expressions and returns script fields to the datafeed.\nThe detector configuration objects in a job can contain functions that use these script fields.",
            "name": "script_fields",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ScriptField",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "description": "The size parameter that is used in Elasticsearch searches when the datafeed does not use aggregations.\nThe maximum value is the value of `index.max_result_window`, which is 10,000 by default.",
            "name": "scroll_size",
            "required": false,
            "serverDefault": 1000,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "8.0.0"
              }
            },
            "name": "headers",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "HttpHeaders",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Create a datafeed.\nDatafeeds retrieve data from Elasticsearch for analysis by an anomaly detection job.\nYou can associate only one datafeed with each anomaly detection job.\nThe datafeed contains a query that runs at a defined interval (`frequency`).\nIf you are concerned about delayed data, you can add a delay (`query_delay') at each interval.\nWhen Elasticsearch security features are enabled, your datafeed remembers which roles the user who created it had\nat the time of creation and runs the query using those same roles. If you provide secondary authorization headers,\nthose credentials are used instead.\nYou must use Kibana, this API, or the create anomaly detection jobs API to create a datafeed. Do not add a datafeed\ndirectly to the `.ml-config` index. Do not give users `write` privileges on the `.ml-config` index.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.put_datafeed"
      },
      "path": [
        {
          "description": "A numerical character string that uniquely identifies the datafeed.\nThis identifier can contain lowercase alphanumeric characters (a-z and 0-9), hyphens, and underscores.\nIt must start and end with alphanumeric characters.",
          "name": "datafeed_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If true, wildcard indices expressions that resolve into no concrete indices are ignored. This includes the `_all`\nstring or when no indices are specified.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match. If the request can target data streams, this argument determines\nwhether wildcard expressions match hidden data streams. Supports comma-separated values.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "deprecation": {
            "description": "",
            "version": "7.16.0"
          },
          "description": "If true, concrete, expanded, or aliased indices are ignored when frozen.",
          "name": "ignore_throttled",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, unavailable indices (missing or closed) are ignored.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/put_datafeed/MlPutDatafeedRequest.ts#L37-L173"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aggregations",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "AggregationContainer",
                  "namespace": "_types.aggregations"
                }
              }
            }
          },
          {
            "name": "authorization",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DatafeedAuthorization",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "chunking_config",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ChunkingConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "delayed_data_check_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DelayedDataCheckConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "datafeed_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "frequency",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "indices",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "name": "job_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "indices_options",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndicesOptions",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "max_empty_searches",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "query",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "name": "query_delay",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "runtime_mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFields",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "name": "script_fields",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ScriptField",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "name": "scroll_size",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.put_datafeed"
      },
      "specLocation": "ml/put_datafeed/MlPutDatafeedResponse.ts#L31-L49"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "A description of the filter.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The items of the filter. A wildcard `*` can be used at the beginning or the end of an item.\nUp to 10000 items are allowed in each filter.",
            "name": "items",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          }
        ]
      },
      "description": "Create a filter.\nA filter contains a list of strings. It can be used by one or more anomaly detection jobs.\nSpecifically, filters are referenced in the `custom_rules` property of detector configuration objects.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.put_filter"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a filter.",
          "name": "filter_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/put_filter/MlPutFilterRequest.ts#L23-L51"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "description",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "filter_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "items",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.put_filter"
      },
      "specLocation": "ml/put_filter/MlPutFilterResponse.ts#L22-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Advanced configuration option. Specifies whether this job can open when there is insufficient machine learning node capacity for it to be immediately assigned to a node. By default, if a machine learning node with capacity to run the job cannot immediately be found, the open anomaly detection jobs API returns an error. However, this is also subject to the cluster-wide `xpack.ml.max_lazy_ml_nodes` setting. If this option is set to true, the open anomaly detection jobs API does not return an error and the job waits in the opening state until sufficient machine learning node capacity is available.",
            "name": "allow_lazy_open",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Specifies how to analyze the data. After you create a job, you cannot change the analysis configuration; all the properties are informational.",
            "name": "analysis_config",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "AnalysisConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "Limits can be applied for the resources required to hold the mathematical models in memory. These limits are approximate and can be set per job. They do not control the memory used by other processes, for example the Elasticsearch Java processes.",
            "name": "analysis_limits",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "AnalysisLimits",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "Advanced configuration option. The time between each periodic persistence of the model. The default value is a randomized value between 3 to 4 hours, which avoids all jobs persisting at exactly the same time. The smallest allowed value is 1 hour. For very large models (several GB), persistence could take 10-20 minutes, so do not set the `background_persist_interval` value too low.",
            "name": "background_persist_interval",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Advanced configuration option. Contains custom meta data about the job.",
            "name": "custom_settings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "CustomSettings",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "Advanced configuration option, which affects the automatic removal of old model snapshots for this job. It specifies a period of time (in days) after which only the first snapshot per day is retained. This period is relative to the timestamp of the most recent snapshot for this job. Valid values range from 0 to `model_snapshot_retention_days`.",
            "name": "daily_model_snapshot_retention_after_days",
            "required": false,
            "serverDefault": 1,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Defines the format of the input data when you send data to the job by using the post data API. Note that when configure a datafeed, these properties are automatically set. When data is received via the post data API, it is not stored in Elasticsearch. Only the results for anomaly detection are retained.",
            "name": "data_description",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataDescription",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "Defines a datafeed for the anomaly detection job. If Elasticsearch security features are enabled, your datafeed remembers which roles the user who created it had at the time of creation and runs the query using those same roles. If you provide secondary authorization headers, those credentials are used instead.",
            "name": "datafeed_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DatafeedConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "A description of the job.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "A list of job groups. A job can belong to no groups or many.",
            "name": "groups",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "description": "This advanced configuration option stores model information along with the results. It provides a more detailed view into anomaly detection. If you enable model plot it can add considerable overhead to the performance of the system; it is not feasible for jobs with many entities. Model plot provides a simplified and indicative view of the model and its bounds. It does not display complex features such as multivariate correlations or multimodal data. As such, anomalies may occasionally be reported which cannot be seen in the model plot. Model plot config can be configured when the job is created or updated later. It must be disabled if performance issues are experienced.",
            "name": "model_plot_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ModelPlotConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "Advanced configuration option, which affects the automatic removal of old model snapshots for this job. It specifies the maximum period of time (in days) that snapshots are retained. This period is relative to the timestamp of the most recent snapshot for this job. By default, snapshots ten days older than the newest snapshot are deleted.",
            "name": "model_snapshot_retention_days",
            "required": false,
            "serverDefault": 10,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Advanced configuration option. The period over which adjustments to the score are applied, as new data is seen. The default value is the longer of 30 days or 100 bucket spans.",
            "name": "renormalization_window_days",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "A text string that affects the name of the machine learning results index. By default, the job generates an index named `.ml-anomalies-shared`.",
            "name": "results_index_name",
            "required": false,
            "serverDefault": "shared",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Advanced configuration option. The period of time (in days) that results are retained. Age is calculated relative to the timestamp of the latest bucket result. If this property has a non-null value, once per day at 00:30 (server time), results that are the specified number of days older than the latest bucket result are deleted from Elasticsearch. The default value is null, which means all results are retained. Annotations generated by the system also count as results for retention purposes; they are deleted after the same number of days as results. Annotations added by users are retained forever.",
            "name": "results_retention_days",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Create an anomaly detection job.\nIf you include a `datafeed_config`, you must have read index privileges on the source index.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.put_job"
      },
      "path": [
        {
          "description": "The identifier for the anomaly detection job. This identifier can contain lowercase alphanumeric characters (a-z and 0-9), hyphens, and underscores. It must start and end with alphanumeric characters.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/put_job/MlPutJobRequest.ts#L30-L113"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "allow_lazy_open",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "analysis_config",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "AnalysisConfigRead",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "analysis_limits",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "AnalysisLimits",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "background_persist_interval",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "create_time",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DateTime",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "custom_settings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "CustomSettings",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "daily_model_snapshot_retention_after_days",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "data_description",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataDescription",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "datafeed_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Datafeed",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "groups",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "name": "job_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "job_type",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "job_version",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "model_plot_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ModelPlotConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "model_snapshot_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "model_snapshot_retention_days",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "renormalization_window_days",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "results_index_name",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "results_retention_days",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.put_job"
      },
      "specLocation": "ml/put_job/MlPutJobResponse.ts#L29-L52"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The compressed (GZipped and Base64 encoded) inference definition of the\nmodel. If compressed_definition is specified, then definition cannot be\nspecified.",
            "name": "compressed_definition",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The inference definition for the model. If definition is specified, then\ncompressed_definition cannot be specified.",
            "name": "definition",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Definition",
                "namespace": "ml.put_trained_model"
              }
            }
          },
          {
            "description": "A human-readable description of the inference trained model.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The default configuration for inference. This can be either a regression\nor classification configuration. It must match the underlying\ndefinition.trained_model's target_type. For pre-packaged models such as\nELSER the config is not required.",
            "name": "inference_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "InferenceConfigCreateContainer",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "The input field names for the model definition.",
            "name": "input",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Input",
                "namespace": "ml.put_trained_model"
              }
            }
          },
          {
            "description": "An object map that contains metadata about the model.",
            "name": "metadata",
            "required": false,
            "type": {
              "kind": "user_defined_value"
            }
          },
          {
            "description": "The model type.",
            "name": "model_type",
            "required": false,
            "serverDefault": "tree_ensemble",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TrainedModelType",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "The estimated memory usage in bytes to keep the trained model in memory.\nThis property is supported only if defer_definition_decompression is true\nor the model definition is not supplied.",
            "name": "model_size_bytes",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The platform architecture (if applicable) of the trained mode. If the model\nonly works on one platform, because it is heavily optimized for a particular\nprocessor architecture and OS combination, then this field specifies which.\nThe format of the string must match the platform identifiers used by Elasticsearch,\nso one of, `linux-x86_64`, `linux-aarch64`, `darwin-x86_64`, `darwin-aarch64`,\nor `windows-x86_64`. For portable models (those that work independent of processor\narchitecture or OS features), leave this field unset.",
            "name": "platform_architecture",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "An array of tags to organize the model.",
            "name": "tags",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "8.12.0"
              }
            },
            "description": "Optional prefix strings applied at inference",
            "name": "prefix_strings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TrainedModelPrefixStrings",
                "namespace": "ml._types"
              }
            }
          }
        ]
      },
      "description": "Create a trained model.\nEnable you to supply a trained model that is not created by data frame analytics.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.put_trained_model"
      },
      "path": [
        {
          "description": "The unique identifier of the trained model.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.0.0"
            }
          },
          "description": "If set to `true` and a `compressed_definition` is provided,\nthe request defers definition decompression and skips relevant\nvalidations.",
          "name": "defer_definition_decompression",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.8.0"
            }
          },
          "description": "Whether to wait for all child operations (e.g. model download)\nto complete.",
          "name": "wait_for_completion",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/MlPutTrainedModelRequest.ts#L31-L128"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "TrainedModelConfig",
            "namespace": "ml._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.put_trained_model"
      },
      "specLocation": "ml/put_trained_model/MlPutTrainedModelResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Create or update a trained model alias.\nA trained model alias is a logical name used to reference a single trained\nmodel.\nYou can use aliases instead of trained model identifiers to make it easier to\nreference your models. For example, you can use aliases in inference\naggregations and processors.\nAn alias must be unique and refer to only a single trained model. However,\nyou can have multiple aliases for each trained model.\nIf you use this API to update an alias such that it references a different\ntrained model ID and the model uses a different type of data frame analytics,\nan error occurs. For example, this situation occurs if you have a trained\nmodel for regression analysis and a trained model for classification\nanalysis; you cannot reassign an alias from one type of trained model to\nanother.\nIf you use this API to update an alias and there are very few input fields in\ncommon between the old and new trained models for the model alias, the API\nreturns a warning.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.put_trained_model_alias"
      },
      "path": [
        {
          "description": "The alias to create or update. This value cannot end in numbers.",
          "name": "model_alias",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The identifier for the trained model that the alias refers to.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies whether the alias gets reassigned to the specified trained\nmodel if it is already assigned to a different model. If the alias is\nalready assigned and this parameter is false, the API returns an error.",
          "name": "reassign",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model_alias/MlPutTrainedModelAliasRequest.ts#L23-L67"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.put_trained_model_alias"
      },
      "specLocation": "ml/put_trained_model_alias/MlPutTrainedModelAliasResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The definition part for the model. Must be a base64 encoded string.",
            "name": "definition",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The total uncompressed definition length in bytes. Not base64 encoded.",
            "name": "total_definition_length",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The total number of parts that will be uploaded. Must be greater than 0.",
            "name": "total_parts",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Create part of a trained model definition.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.put_trained_model_definition_part"
      },
      "path": [
        {
          "description": "The unique identifier of the trained model.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The definition part number. When the definition is loaded for inference the definition parts are streamed in the\norder of their part number. The first part must be `0` and the final part must be `total_parts - 1`.",
          "name": "part",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/put_trained_model_definition_part/MlPutTrainedModelDefinitionPartRequest.ts#L24-L58"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.put_trained_model_definition_part"
      },
      "specLocation": "ml/put_trained_model_definition_part/MlPutTrainedModelDefinitionPartResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The model vocabulary, which must not be empty.",
            "name": "vocabulary",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "8.2.0"
              }
            },
            "description": "The optional model merges if required by the tokenizer.",
            "name": "merges",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "8.9.0"
              }
            },
            "description": "The optional vocabulary value scores if required by the tokenizer.",
            "name": "scores",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              }
            }
          }
        ]
      },
      "description": "Create a trained model vocabulary.\nThis API is supported only for natural language processing (NLP) models.\nThe vocabulary is stored in the index as described in `inference_config.*.vocabulary` of the trained model definition.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.put_trained_model_vocabulary"
      },
      "path": [
        {
          "description": "The unique identifier of the trained model.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/put_trained_model_vocabulary/MlPutTrainedModelVocabularyRequest.ts#L24-L61"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.put_trained_model_vocabulary"
      },
      "specLocation": "ml/put_trained_model_vocabulary/MlPutTrainedModelVocabularyResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Reset an anomaly detection job.\nAll model state and results are deleted. The job is ready to start over as if\nit had just been created.\nIt is not currently possible to reset multiple jobs using wildcards or a\ncomma separated list.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.reset_job"
      },
      "path": [
        {
          "description": "The ID of the job to reset.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Should this request wait until the operation has completed before\nreturning.",
          "name": "wait_for_completion",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies whether annotations that have been added by the\nuser should be deleted along with any auto-generated annotations when the job is\nreset.",
          "name": "delete_user_annotations",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/reset_job/MlResetJobRequest.ts#L23-L58"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.reset_job"
      },
      "specLocation": "ml/reset_job/MlResetJobResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Start a data frame analytics job.\nA data frame analytics job can be started and stopped multiple times\nthroughout its lifecycle.\nIf the destination index does not exist, it is created automatically the\nfirst time you start the data frame analytics job. The\n`index.number_of_shards` and `index.number_of_replicas` settings for the\ndestination index are copied from the source index. If there are multiple\nsource indices, the destination index copies the highest setting values. The\nmappings for the destination index are also copied from the source indices.\nIf there are any mapping conflicts, the job fails to start.\nIf the destination index exists, it is used as is. You can therefore set up\nthe destination index in advance with custom settings and mappings.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.start_data_frame_analytics"
      },
      "path": [
        {
          "description": "Identifier for the data frame analytics job. This identifier can contain\nlowercase alphanumeric characters (a-z and 0-9), hyphens, and\nunderscores. It must start and end with alphanumeric characters.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Controls the amount of time to wait until the data frame analytics job\nstarts.",
          "name": "timeout",
          "required": false,
          "serverDefault": "20s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/start_data_frame_analytics/MlStartDataFrameAnalyticsRequest.ts#L24-L61"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "acknowledged",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The ID of the node that the job was started on. If the job is allowed to open lazily and has not yet been assigned to a node, this value is an empty string.\nThe node ID of the node the job has been assigned to, or\nan empty string if it hasn't been assigned to a node. In\nserverless if the job has been assigned to run then the\nnode ID will be \"serverless\".",
            "name": "node",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "NodeId",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.start_data_frame_analytics"
      },
      "specLocation": "ml/start_data_frame_analytics/MlStartDataFrameAnalyticsResponse.ts#L22-L34"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Refer to the description for the `end` query parameter.",
            "name": "end",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DateTime",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Refer to the description for the `start` query parameter.",
            "name": "start",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DateTime",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Refer to the description for the `timeout` query parameter.",
            "name": "timeout",
            "required": false,
            "serverDefault": "20s",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Start datafeeds.\n\nA datafeed must be started in order to retrieve data from Elasticsearch. A datafeed can be started and stopped\nmultiple times throughout its lifecycle.\n\nBefore you can start a datafeed, the anomaly detection job must be open. Otherwise, an error occurs.\n\nIf you restart a stopped datafeed, it continues processing input data from the next millisecond after it was stopped.\nIf new data was indexed for that exact millisecond between stopping and starting, it will be ignored.\n\nWhen Elasticsearch security features are enabled, your datafeed remembers which roles the last user to create or\nupdate it had at the time of creation or update and runs the query using those same roles. If you provided secondary\nauthorization headers when you created or updated the datafeed, those credentials are used instead.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.start_datafeed"
      },
      "path": [
        {
          "description": "A numerical character string that uniquely identifies the datafeed. This identifier can contain lowercase\nalphanumeric characters (a-z and 0-9), hyphens, and underscores. It must start and end with alphanumeric\ncharacters.",
          "name": "datafeed_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "The time that the datafeed should end, which can be specified by using one of the following formats:\n\n* ISO 8601 format with milliseconds, for example `2017-01-22T06:00:00.000Z`\n* ISO 8601 format without milliseconds, for example `2017-01-22T06:00:00+00:00`\n* Milliseconds since the epoch, for example `1485061200000`\n\nDate-time arguments using either of the ISO 8601 formats must have a time zone designator, where `Z` is accepted\nas an abbreviation for UTC time. When a URL is expected (for example, in browsers), the `+` used in time zone\ndesignators must be encoded as `%2B`.\nThe end time value is exclusive. If you do not specify an end time, the datafeed\nruns continuously.",
          "name": "end",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The time that the datafeed should begin, which can be specified by using the same formats as the `end` parameter.\nThis value is inclusive.\nIf you do not specify a start time and the datafeed is associated with a new anomaly detection job, the analysis\nstarts from the earliest time for which data is available.\nIf you restart a stopped datafeed and specify a start value that is earlier than the timestamp of the latest\nprocessed record, the datafeed continues from 1 millisecond after the timestamp of the latest processed record.",
          "name": "start",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the amount of time to wait until a datafeed starts.",
          "name": "timeout",
          "required": false,
          "serverDefault": "20s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/start_datafeed/MlStartDatafeedRequest.ts#L24-L92"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The ID of the node that the job was started on. In serverless this will be the \"serverless\".\nIf the job is allowed to open lazily and has not yet been assigned to a node, this value is an empty string.",
            "name": "node",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "NodeIds",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "For a successful response, this value is always `true`. On failure, an exception is returned instead.",
            "name": "started",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.start_datafeed"
      },
      "specLocation": "ml/start_datafeed/MlStartDatafeedResponse.ts#L22-L34"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Start a trained model deployment.\nIt allocates the model to every machine learning node.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.start_trained_model_deployment"
      },
      "path": [
        {
          "description": "The unique identifier of the trained model. Currently, only PyTorch models are supported.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "The inference cache size (in memory outside the JVM heap) per node for the model.\nThe default value is the same size as the `model_size_bytes`. To disable the cache,\n`0b` can be provided.",
          "name": "cache_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of model allocations on each node where the model is deployed.\nAll allocations on a node share the same copy of the model in memory but use\na separate set of threads to evaluate the model.\nIncreasing this value generally increases the throughput.\nIf this setting is greater than the number of hardware threads\nit will automatically be changed to a value less than the number of hardware threads.",
          "name": "number_of_allocations",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The deployment priority.",
          "name": "priority",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainingPriority",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Specifies the number of inference requests that are allowed in the queue. After the number of requests exceeds\nthis value, new requests are rejected with a 429 error.",
          "name": "queue_capacity",
          "required": false,
          "serverDefault": 1024,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Sets the number of threads used by each model allocation during inference. This generally increases\nthe inference speed. The inference process is a compute-bound process; any number\ngreater than the number of available hardware threads on the machine does not increase the\ninference speed. If this setting is greater than the number of hardware threads\nit will automatically be changed to a value less than the number of hardware threads.",
          "name": "threads_per_allocation",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the amount of time to wait for the model to deploy.",
          "name": "timeout",
          "required": false,
          "serverDefault": "20s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the allocation status to wait for before returning.",
          "name": "wait_for",
          "required": false,
          "serverDefault": "started",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DeploymentAllocationState",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/start_trained_model_deployment/MlStartTrainedModelDeploymentRequest.ts#L29-L94"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "assignment",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TrainedModelAssignment",
                "namespace": "ml._types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.start_trained_model_deployment"
      },
      "specLocation": "ml/start_trained_model_deployment/MlStartTrainedModelDeploymentResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Stop data frame analytics jobs.\nA data frame analytics job can be started and stopped multiple times\nthroughout its lifecycle.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.stop_data_frame_analytics"
      },
      "path": [
        {
          "description": "Identifier for the data frame analytics job. This identifier can contain\nlowercase alphanumeric characters (a-z and 0-9), hyphens, and\nunderscores. It must start and end with alphanumeric characters.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n1. Contains wildcard expressions and there are no data frame analytics\njobs that match.\n2. Contains the _all string or no identifiers and there are no matches.\n3. Contains wildcard expressions and there are only partial matches.\n\nThe default value is true, which returns an empty data_frame_analytics\narray when there are no matches and the subset of results when there are\npartial matches. If this parameter is false, the request returns a 404\nstatus code when there are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, the data frame analytics job is stopped forcefully.",
          "name": "force",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Controls the amount of time to wait until the data frame analytics job\nstops. Defaults to 20 seconds.",
          "name": "timeout",
          "required": false,
          "serverDefault": "20s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/stop_data_frame_analytics/MlStopDataFrameAnalyticsRequest.ts#L24-L71"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "stopped",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.stop_data_frame_analytics"
      },
      "specLocation": "ml/stop_data_frame_analytics/MlStopDataFrameAnalyticsResponse.ts#L20-L22"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Refer to the description for the `allow_no_match` query parameter.",
            "name": "allow_no_match",
            "required": false,
            "serverDefault": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Refer to the description for the `force` query parameter.",
            "name": "force",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Refer to the description for the `timeout` query parameter.",
            "name": "timeout",
            "required": false,
            "serverDefault": "20s",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Stop datafeeds.\nA datafeed that is stopped ceases to retrieve data from Elasticsearch. A datafeed can be started and stopped\nmultiple times throughout its lifecycle.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.stop_datafeed"
      },
      "path": [
        {
          "description": "Identifier for the datafeed. You can stop multiple datafeeds in a single API request by using a comma-separated\nlist of datafeeds or a wildcard expression. You can close all datafeeds by using `_all` or by specifying `*` as\nthe identifier.",
          "name": "datafeed_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n* Contains wildcard expressions and there are no datafeeds that match.\n* Contains the `_all` string or no identifiers and there are no matches.\n* Contains wildcard expressions and there are only partial matches.\n\nIf `true`, the API returns an empty datafeeds array when there are no matches and the subset of results when\nthere are partial matches. If `false`, the API returns a 404 status code when there are no matches or only\npartial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the datafeed is stopped forcefully.",
          "name": "force",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies the amount of time to wait until a datafeed stops.",
          "name": "timeout",
          "required": false,
          "serverDefault": "20s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/stop_datafeed/MlStopDatafeedRequest.ts#L24-L79"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "stopped",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.stop_datafeed"
      },
      "specLocation": "ml/stop_datafeed/MlStopDatafeedResponse.ts#L20-L22"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Stop a trained model deployment.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.stop_trained_model_deployment"
      },
      "path": [
        {
          "description": "The unique identifier of the trained model.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request: contains wildcard expressions and there are no deployments that match;\ncontains the  `_all` string or no identifiers and there are no matches; or contains wildcard expressions and\nthere are only partial matches. By default, it returns an empty array when there are no matches and the subset of results when there are partial matches.\nIf `false`, the request returns a 404 status code when there are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Forcefully stops the deployment, even if it is used by ingest pipelines. You can't use these pipelines until you\nrestart the model deployment.",
          "name": "force",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/stop_trained_model_deployment/MlStopTrainedModelDeploymentRequest.ts#L23-L54"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "stopped",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.stop_trained_model_deployment"
      },
      "specLocation": "ml/stop_trained_model_deployment/MlStopTrainedModelDeploymentResponse.ts#L20-L22"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "A description of the job.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The approximate maximum amount of memory resources that are permitted for\nanalytical processing. If your `elasticsearch.yml` file contains an\n`xpack.ml.max_model_memory_limit` setting, an error occurs when you try\nto create data frame analytics jobs that have `model_memory_limit` values\ngreater than that setting.",
            "docId": "ml-settings",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ml-settings.html",
            "name": "model_memory_limit",
            "required": false,
            "serverDefault": "1gb",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The maximum number of threads to be used by the analysis. Using more\nthreads may decrease the time necessary to complete the analysis at the\ncost of using more CPU. Note that the process may use additional threads\nfor operational functionality other than the analysis itself.",
            "name": "max_num_threads",
            "required": false,
            "serverDefault": 1,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Specifies whether this job can start when there is insufficient machine\nlearning node capacity for it to be immediately assigned to a node.",
            "docId": "ml-settings",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ml-settings.html",
            "name": "allow_lazy_start",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Update a data frame analytics job.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.update_data_frame_analytics"
      },
      "path": [
        {
          "description": "Identifier for the data frame analytics job. This identifier can contain\nlowercase alphanumeric characters (a-z and 0-9), hyphens, and\nunderscores. It must start and end with alphanumeric characters.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/update_data_frame_analytics/MlUpdateDataFrameAnalyticsRequest.ts#L24-L73"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "authorization",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalyticsAuthorization",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "allow_lazy_start",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "analysis",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalysisContainer",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "analyzed_fields",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalysisAnalyzedFields",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "create_time",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "dest",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalyticsDestination",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "max_num_threads",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "model_memory_limit",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "source",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalyticsSource",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "version",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "VersionString",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.update_data_frame_analytics"
      },
      "specLocation": "ml/update_data_frame_analytics/MlUpdateDataFrameAnalyticsResponse.ts#L30-L45"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "If set, the datafeed performs aggregation searches. Support for aggregations is limited and should be used only\nwith low cardinality data.",
            "name": "aggregations",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "AggregationContainer",
                  "namespace": "_types.aggregations"
                }
              }
            }
          },
          {
            "description": "Datafeeds might search over long time periods, for several months or years. This search is split into time\nchunks in order to ensure the load on Elasticsearch is managed. Chunking configuration controls how the size of\nthese time chunks are calculated; it is an advanced configuration option.",
            "name": "chunking_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ChunkingConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "Specifies whether the datafeed checks for missing data and the size of the window. The datafeed can optionally\nsearch over indices that have already been read in an effort to determine whether any data has subsequently been\nadded to the index. If missing data is found, it is a good indication that the `query_delay` is set too low and\nthe data is being indexed after the datafeed has passed that moment in time. This check runs only on real-time\ndatafeeds.",
            "name": "delayed_data_check_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DelayedDataCheckConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "The interval at which scheduled queries are made while the datafeed runs in real time. The default value is\neither the bucket span for short bucket spans, or, for longer bucket spans, a sensible fraction of the bucket\nspan. When `frequency` is shorter than the bucket span, interim results for the last (partial) bucket are\nwritten then eventually overwritten by the full bucket results. If the datafeed uses aggregations, this value\nmust be divisible by the interval of the date histogram aggregation.",
            "name": "frequency",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "aliases": [
              "indexes"
            ],
            "description": "An array of index names. Wildcards are supported. If any of the indices are in remote clusters, the machine\nlearning nodes must have the `remote_cluster_client` role.",
            "name": "indices",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "description": "Specifies index expansion options that are used during search.",
            "name": "indices_options",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndicesOptions",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "job_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "If a real-time datafeed has never seen any data (including during any initial training period), it automatically\nstops and closes the associated job after this many real-time searches return no documents. In other words,\nit stops after `frequency` times `max_empty_searches` of real-time operation. If not set, a datafeed with no\nend time that sees no data remains started until it is explicitly stopped. By default, it is not set.",
            "name": "max_empty_searches",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The Elasticsearch query domain-specific language (DSL). This value corresponds to the query object in an\nElasticsearch search POST body. All the options that are supported by Elasticsearch can be used, as this\nobject is passed verbatim to Elasticsearch. Note that if you change the query, the analyzed data is also\nchanged. Therefore, the time required to learn might be long and the understandability of the results is\nunpredictable. If you want to make significant changes to the source data, it is recommended that you\nclone the job and datafeed and make the amendments in the clone. Let both run in parallel and close one\nwhen you are satisfied with the results of the job.",
            "name": "query",
            "required": false,
            "serverDefault": "{\"match_all\": {\"boost\": 1}}",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "The number of seconds behind real time that data is queried. For example, if data from 10:04 a.m. might\nnot be searchable in Elasticsearch until 10:06 a.m., set this property to 120 seconds. The default\nvalue is randomly selected between `60s` and `120s`. This randomness improves the query performance\nwhen there are multiple jobs running on the same node.",
            "name": "query_delay",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Specifies runtime fields for the datafeed search.",
            "name": "runtime_mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFields",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "Specifies scripts that evaluate custom expressions and returns script fields to the datafeed.\nThe detector configuration objects in a job can contain functions that use these script fields.",
            "name": "script_fields",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ScriptField",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "description": "The size parameter that is used in Elasticsearch searches when the datafeed does not use aggregations.\nThe maximum value is the value of `index.max_result_window`.",
            "name": "scroll_size",
            "required": false,
            "serverDefault": 1000,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Update a datafeed.\nYou must stop and start the datafeed for the changes to be applied.\nWhen Elasticsearch security features are enabled, your datafeed remembers which roles the user who updated it had at\nthe time of the update and runs the query using those same roles. If you provide secondary authorization headers,\nthose credentials are used instead.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.update_datafeed"
      },
      "path": [
        {
          "description": "A numerical character string that uniquely identifies the datafeed.\nThis identifier can contain lowercase alphanumeric characters (a-z and 0-9), hyphens, and underscores.\nIt must start and end with alphanumeric characters.",
          "name": "datafeed_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `true`, wildcard indices expressions that resolve into no concrete indices are ignored. This includes the\n`_all` string or when no indices are specified.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match. If the request can target data streams, this argument determines\nwhether wildcard expressions match hidden data streams. Supports comma-separated values. Valid values are:\n\n* `all`: Match any data stream or index, including hidden ones.\n* `closed`: Match closed, non-hidden indices. Also matches any non-hidden data stream. Data streams cannot be closed.\n* `hidden`: Match hidden data streams and hidden indices. Must be combined with `open`, `closed`, or both.\n* `none`: Wildcard patterns are not accepted.\n* `open`: Match open, non-hidden indices. Also matches any non-hidden data stream.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "deprecation": {
            "description": "",
            "version": "7.16.0"
          },
          "description": "If `true`, concrete, expanded or aliased indices are ignored when frozen.",
          "name": "ignore_throttled",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, unavailable indices (missing or closed) are ignored.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/update_datafeed/MlUpdateDatafeedRequest.ts#L31-L163"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "authorization",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DatafeedAuthorization",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "aggregations",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "AggregationContainer",
                  "namespace": "_types.aggregations"
                }
              }
            }
          },
          {
            "name": "chunking_config",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ChunkingConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "delayed_data_check_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DelayedDataCheckConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "datafeed_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "frequency",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "indices",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "name": "indices_options",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndicesOptions",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "job_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "max_empty_searches",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "query",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "name": "query_delay",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "runtime_mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFields",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "name": "script_fields",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ScriptField",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "name": "scroll_size",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.update_datafeed"
      },
      "specLocation": "ml/update_datafeed/MlUpdateDatafeedResponse.ts#L31-L49"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The items to add to the filter.",
            "name": "add_items",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "description": "A description for the filter.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The items to remove from the filter.",
            "name": "remove_items",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          }
        ]
      },
      "description": "Update a filter.\nUpdates the description of a filter, adds items, or removes items from the list.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.update_filter"
      },
      "path": [
        {
          "description": "A string that uniquely identifies a filter.",
          "name": "filter_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/update_filter/MlUpdateFilterRequest.ts#L23-L53"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "description",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "filter_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "items",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.update_filter"
      },
      "specLocation": "ml/update_filter/MlUpdateFilterResponse.ts#L22-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Advanced configuration option. Specifies whether this job can open when\nthere is insufficient machine learning node capacity for it to be\nimmediately assigned to a node. If `false` and a machine learning node\nwith capacity to run the job cannot immediately be found, the open\nanomaly detection jobs API returns an error. However, this is also\nsubject to the cluster-wide `xpack.ml.max_lazy_ml_nodes` setting. If this\noption is set to `true`, the open anomaly detection jobs API does not\nreturn an error and the job waits in the opening state until sufficient\nmachine learning node capacity is available.",
            "docId": "ml-settings",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ml-settings.html",
            "name": "allow_lazy_open",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "analysis_limits",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "AnalysisMemoryLimit",
                "namespace": "ml._types"
              }
            }
          },
          {
            "description": "Advanced configuration option. The time between each periodic persistence\nof the model.\nThe default value is a randomized value between 3 to 4 hours, which\navoids all jobs persisting at exactly the same time. The smallest allowed\nvalue is 1 hour.\nFor very large models (several GB), persistence could take 10-20 minutes,\nso do not set the value too low.\nIf the job is open when you make the update, you must stop the datafeed,\nclose the job, then reopen the job and restart the datafeed for the\nchanges to take effect.",
            "name": "background_persist_interval",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Advanced configuration option. Contains custom meta data about the job.\nFor example, it can contain custom URL information as shown in Adding\ncustom URLs to machine learning results.",
            "docId": "ml.customUrls",
            "name": "custom_settings",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          },
          {
            "name": "categorization_filters",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "description": "A description of the job.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "model_plot_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ModelPlotConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "model_prune_window",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Advanced configuration option, which affects the automatic removal of old\nmodel snapshots for this job. It specifies a period of time (in days)\nafter which only the first snapshot per day is retained. This period is\nrelative to the timestamp of the most recent snapshot for this job. Valid\nvalues range from 0 to `model_snapshot_retention_days`. For jobs created\nbefore version 7.8.0, the default value matches\n`model_snapshot_retention_days`.",
            "docId": "ml-model-snapshots",
            "docUrl": "https://www.elastic.co/guide/en/machine-learning/{branch}/ml-ad-run-jobs.html#ml-ad-model-snapshots",
            "name": "daily_model_snapshot_retention_after_days",
            "required": false,
            "serverDefault": 1,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Advanced configuration option, which affects the automatic removal of old\nmodel snapshots for this job. It specifies the maximum period of time (in\ndays) that snapshots are retained. This period is relative to the\ntimestamp of the most recent snapshot for this job.",
            "docId": "ml-model-snapshots",
            "docUrl": "https://www.elastic.co/guide/en/machine-learning/{branch}/ml-ad-run-jobs.html#ml-ad-model-snapshots",
            "name": "model_snapshot_retention_days",
            "required": false,
            "serverDefault": 10,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Advanced configuration option. The period over which adjustments to the\nscore are applied, as new data is seen.",
            "name": "renormalization_window_days",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Advanced configuration option. The period of time (in days) that results\nare retained. Age is calculated relative to the timestamp of the latest\nbucket result. If this property has a non-null value, once per day at\n00:30 (server time), results that are the specified number of days older\nthan the latest bucket result are deleted from Elasticsearch. The default\nvalue is null, which means all results are retained.",
            "name": "results_retention_days",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "A list of job groups. A job can belong to no groups or many.",
            "name": "groups",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "description": "An array of detector update objects.",
            "name": "detectors",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Detector",
                  "namespace": "ml._types"
                }
              }
            }
          },
          {
            "description": "Settings related to how categorization interacts with partition fields.",
            "name": "per_partition_categorization",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "PerPartitionCategorization",
                "namespace": "ml._types"
              }
            }
          }
        ]
      },
      "description": "Update an anomaly detection job.\nUpdates certain properties of an anomaly detection job.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.update_job"
      },
      "path": [
        {
          "description": "Identifier for the job.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "ml/update_job/MlUpdateJobRequest.ts#L33-L140"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "allow_lazy_open",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "analysis_config",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "AnalysisConfigRead",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "analysis_limits",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "AnalysisLimits",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "background_persist_interval",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "create_time",
            "required": true,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "EpochTime",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "finished_time",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "EpochTime",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "custom_settings",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "name": "daily_model_snapshot_retention_after_days",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "data_description",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "DataDescription",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "datafeed_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Datafeed",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "groups",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "name": "job_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "job_type",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "job_version",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "VersionString",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "model_plot_config",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ModelPlotConfig",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "model_snapshot_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "model_snapshot_retention_days",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "renormalization_window_days",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "results_index_name",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "results_retention_days",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.update_job"
      },
      "specLocation": "ml/update_job/MlUpdateJobResponse.ts#L29-L53"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The number of model allocations on each node where the model is deployed.\nAll allocations on a node share the same copy of the model in memory but use\na separate set of threads to evaluate the model.\nIncreasing this value generally increases the throughput.\nIf this setting is greater than the number of hardware threads\nit will automatically be changed to a value less than the number of hardware threads.",
            "name": "number_of_allocations",
            "required": false,
            "serverDefault": 1,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Update a trained model deployment.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "ml.update_trained_model_deployment"
      },
      "path": [
        {
          "description": "The unique identifier of the trained model. Currently, only PyTorch models are supported.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "The number of model allocations on each node where the model is deployed.\nAll allocations on a node share the same copy of the model in memory but use\na separate set of threads to evaluate the model.\nIncreasing this value generally increases the throughput.\nIf this setting is greater than the number of hardware threads\nit will automatically be changed to a value less than the number of hardware threads.",
          "name": "number_of_allocations",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/update_trained_model_deployment/MlUpdateTrainedModelDeploymentRequest.ts#L24-L63"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "assignment",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TrainedModelAssignment",
                "namespace": "ml._types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "ml.update_trained_model_deployment"
      },
      "specLocation": "ml/update_trained_model_deployment/MlUpdateTrainedModelDeploymentResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "codegenName": "searches",
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "RequestItem",
              "namespace": "_global.msearch"
            }
          }
        }
      },
      "description": "Run multiple searches.\n\nThe format of the request is similar to the bulk API format and makes use of the newline delimited JSON (NDJSON) format.\nThe structure is as follows:\n\n```\nheader\\n\nbody\\n\nheader\\n\nbody\\n\n```\n\nThis structure is specifically optimized to reduce parsing if a specific search ends up redirected to another node.\n\nIMPORTANT: The final line of data must end with a newline character `\\n`.\nEach newline character may be preceded by a carriage return `\\r`.\nWhen sending requests to this endpoint the `Content-Type` header should be set to `application/x-ndjson`.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.msearch"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and index aliases to search.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If false, the request returns an error if any wildcard expression, index alias, or _all value targets only missing or closed indices. This behavior applies even if the request targets other open indices. For example, a request targeting foo*,bar* returns an error if an index starts with foo but no index starts with bar.",
          "name": "allow_no_indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, network roundtrips between the coordinating node and remote clusters are minimized for cross-cluster search requests.",
          "docId": "ccs-network-delays",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/modules-cross-cluster-search.html#ccs-network-delays",
          "name": "ccs_minimize_roundtrips",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard expressions can match. If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.",
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, concrete, expanded or aliased indices are ignored when frozen.",
          "name": "ignore_throttled",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, missing or closed indices are not included in the response.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates whether hit.matched_queries should be rendered as a map that includes\nthe name of the matched query associated with its score (true)\nor as an array containing the name of the matched queries (false)\nThis functionality reruns each named query on every hit in a search response.\nTypically, this adds a small overhead to a request.\nHowever, using computationally expensive named queries on a large number of hits may add significant overhead.",
          "name": "include_named_queries_score",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of concurrent searches the multi search API can execute.",
          "name": "max_concurrent_searches",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum number of concurrent shard requests that each sub-search request executes per node.",
          "name": "max_concurrent_shard_requests",
          "required": false,
          "serverDefault": 5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines a threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method i.e., if date filters are mandatory to match but the shard bounds and the query are disjoint.",
          "name": "pre_filter_shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, hits.total are returned as an integer in the response. Defaults to false, which returns an object.",
          "name": "rest_total_hits_as_int",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Custom routing value used to route search operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates whether global term and document frequencies should be used when scoring returned documents.",
          "name": "search_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies whether aggregation and suggester names should be prefixed by their respective types in the response.",
          "name": "typed_keys",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/msearch/MultiSearchRequest.ts#L25-L124"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "TDocument",
                "namespace": "_global.msearch.Response"
              }
            }
          ],
          "kind": "instance_of",
          "type": {
            "name": "MultiSearchResult",
            "namespace": "_global.msearch"
          }
        }
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.msearch.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.msearch"
      },
      "specLocation": "_global/msearch/MultiSearchResponse.ts#L25-L27"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "codegenName": "search_templates",
        "kind": "value",
        "value": {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "RequestItem",
              "namespace": "_global.msearch_template"
            }
          }
        }
      },
      "description": "Run multiple templated searches.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.msearch_template"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases to search.\nSupports wildcards (`*`).\nTo search all data streams and indices, omit this parameter or use `*`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `true`, network round-trips are minimized for cross-cluster search requests.",
          "name": "ccs_minimize_roundtrips",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of concurrent searches the API can run.",
          "name": "max_concurrent_searches",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The type of the search operation.\nAvailable options: `query_then_fetch`, `dfs_query_then_fetch`.",
          "name": "search_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the response returns `hits.total` as an integer.\nIf `false`, it returns `hits.total` as an object.",
          "name": "rest_total_hits_as_int",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the response prefixes aggregation and suggester names with their respective types.",
          "name": "typed_keys",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/msearch_template/MultiSearchTemplateRequest.ts#L25-L72"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "TDocument",
                "namespace": "_global.msearch_template.Response"
              }
            }
          ],
          "kind": "instance_of",
          "type": {
            "name": "MultiSearchResult",
            "namespace": "_global.msearch"
          }
        }
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.msearch_template.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.msearch_template"
      },
      "specLocation": "_global/msearch_template/MultiSearchTemplateResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Array of existing or artificial documents.",
            "name": "docs",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Operation",
                  "namespace": "_global.mtermvectors"
                }
              }
            }
          },
          {
            "description": "Simplified syntax to specify documents by their ID if they're in the same index.",
            "name": "ids",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Id",
                  "namespace": "_types"
                }
              }
            }
          }
        ]
      },
      "description": "Get multiple term vectors.\n\nYou can specify existing documents by index and ID or provide artificial documents in the body of the request.\nYou can specify the index in the request body or request URI.\nThe response contains a `docs` array with all the fetched termvectors.\nEach element has the structure provided by the termvectors API.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.mtermvectors"
      },
      "path": [
        {
          "description": "Name of the index that contains the documents.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body",
          "name": "ids",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Comma-separated list or wildcard expressions of fields to include in the statistics.\nUsed as the default list unless a specific field list is provided in the `completion_fields` or `fielddata_fields` parameters.",
          "name": "fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the response includes the document count, sum of document frequencies, and sum of total term frequencies.",
          "name": "field_statistics",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the response includes term offsets.",
          "name": "offsets",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the response includes term payloads.",
          "name": "payloads",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the response includes term positions.",
          "name": "positions",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies the node or shard the operation should be performed on.\nRandom by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, the request is real-time as opposed to near-real-time.",
          "docId": "realtime",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/docs-get.html#realtime",
          "name": "realtime",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, the response includes term frequency and document frequency.",
          "name": "term_statistics",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, returns the document version as part of a hit.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific version type.",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/mtermvectors/MultiTermVectorsRequest.ts#L31-L116"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "docs",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "TermVectorsResult",
                  "namespace": "_global.mtermvectors"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.mtermvectors"
      },
      "specLocation": "_global/mtermvectors/MultiTermVectorsResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Allows to filter indices if the provided query rewrites to `match_none` on every shard.",
            "name": "index_filter",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          }
        ]
      },
      "description": "Open a point in time.\n\nA search request by default runs against the most recent visible data of the target indices,\nwhich is called point in time. Elasticsearch pit (point in time) is a lightweight view into the\nstate of the data as it existed when initiated. In some cases, itâ€™s preferred to perform multiple\nsearch requests using the same point in time. For example, if refreshes happen between\n`search_after` requests, then the results of those requests might not be consistent as changes happening\nbetween searches are only visible to the more recent point in time.\n\nA point in time must be opened explicitly before being used in search requests.\nThe `keep_alive` parameter tells Elasticsearch how long it should persist.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.open_point_in_time"
      },
      "path": [
        {
          "description": "A comma-separated list of index names to open point in time; use `_all` or empty string to perform the operation on all indices",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Extends the time to live of the corresponding point in time.",
          "name": "keep_alive",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies the node or shard the operation should be performed on.\nRandom by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`. Valid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "serverDefault": "open",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, creating a point in time request when a shard is missing or unavailable will throw an exception.\nIf `true`, the point in time will contain all the shards that are available at the time of the request.",
          "name": "allow_partial_search_results",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/open_point_in_time/OpenPointInTimeRequest.ts#L25-L87"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Shards used to create the PIT",
            "name": "_shards",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ShardStatistics",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.open_point_in_time"
      },
      "specLocation": "_global/open_point_in_time/OpenPointInTimeResponse.ts#L23-L29"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Ping the cluster.\nReturns whether the cluster is running.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.ping"
      },
      "path": [],
      "query": [],
      "specLocation": "_global/ping/PingRequest.ts#L22-L30"
    },
    {
      "body": {
        "kind": "no_body"
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.ping"
      },
      "specLocation": "_global/ping/PingResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Contains the script or search template, its parameters, and its language.",
            "name": "script",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "StoredScript",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Create or update a script or search template.\nCreates or updates a stored script or search template.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.put_script"
      },
      "path": [
        {
          "description": "Identifier for the stored script or search template.\nMust be unique within the cluster.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Context in which the script or search template should run.\nTo prevent errors, the API immediately compiles the script or template in this context.",
          "name": "context",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/put_script/PutScriptRequest.ts#L25-L66"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.put_script"
      },
      "specLocation": "_global/put_script/PutScriptResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Deletes a query rule within a query ruleset.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "query_rules.delete_rule"
      },
      "path": [
        {
          "description": "The unique identifier of the query ruleset containing the rule to delete",
          "name": "ruleset_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The unique identifier of the query rule within the specified ruleset to delete",
          "name": "rule_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "query_rules/delete_rule/QueryRuleDeleteRequest.ts#L22-L40"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "query_rules.delete_rule"
      },
      "specLocation": "query_rules/delete_rule/QueryRuleDeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Deletes a query ruleset.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "query_rules.delete_ruleset"
      },
      "path": [
        {
          "description": "The unique identifier of the query ruleset to delete",
          "name": "ruleset_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "query_rules/delete_ruleset/QueryRulesetDeleteRequest.ts#L22-L35"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "query_rules.delete_ruleset"
      },
      "specLocation": "query_rules/delete_ruleset/QueryRulesetDeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Returns the details about a query rule within a query ruleset",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "query_rules.get_rule"
      },
      "path": [
        {
          "description": "The unique identifier of the query ruleset containing the rule to retrieve",
          "name": "ruleset_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The unique identifier of the query rule within the specified ruleset to retrieve",
          "name": "rule_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "query_rules/get_rule/QueryRuleGetRequest.ts#L22-L40"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "QueryRule",
            "namespace": "query_rules._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "query_rules.get_rule"
      },
      "specLocation": "query_rules/get_rule/QueryRuleGetResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Returns the details about a query ruleset",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "query_rules.get_ruleset"
      },
      "path": [
        {
          "description": "The unique identifier of the query ruleset",
          "name": "ruleset_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "query_rules/get_ruleset/QueryRulesetGetRequest.ts#L22-L35"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "QueryRuleset",
            "namespace": "query_rules._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "query_rules.get_ruleset"
      },
      "specLocation": "query_rules/get_ruleset/QueryRulesetGetResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Returns summarized information about existing query rulesets.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "query_rules.list_rulesets"
      },
      "path": [],
      "query": [
        {
          "description": "Starting offset (default: 0)",
          "name": "from",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "specifies a max number of results to get",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "query_rules/list_rulesets/QueryRulesetListRequest.ts#L22-L39"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "results",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "QueryRulesetListItem",
                  "namespace": "query_rules.list_rulesets"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "query_rules.list_rulesets"
      },
      "specLocation": "query_rules/list_rulesets/QueryRulesetListResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "type",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryRuleType",
                "namespace": "query_rules._types"
              }
            }
          },
          {
            "name": "criteria",
            "required": true,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "QueryRuleCriteria",
                    "namespace": "query_rules._types"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "QueryRuleCriteria",
                      "namespace": "query_rules._types"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "name": "actions",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryRuleActions",
                "namespace": "query_rules._types"
              }
            }
          },
          {
            "name": "priority",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Creates or updates a query rule within a query ruleset.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "query_rules.put_rule"
      },
      "path": [
        {
          "description": "The unique identifier of the query ruleset containing the rule to be created or updated",
          "name": "ruleset_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The unique identifier of the query rule within the specified ruleset to be created or updated",
          "name": "rule_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "query_rules/put_rule/QueryRulePutRequest.ts#L28-L56"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "query_rules.put_rule"
      },
      "specLocation": "query_rules/put_rule/QueryRulePutResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "rules",
            "required": true,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "QueryRule",
                    "namespace": "query_rules._types"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "QueryRule",
                      "namespace": "query_rules._types"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          }
        ]
      },
      "description": "Creates or updates a query ruleset.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "query_rules.put_ruleset"
      },
      "path": [
        {
          "description": "The unique identifier of the query ruleset to be created or updated",
          "name": "ruleset_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "query_rules/put_ruleset/QueryRulesetPutRequest.ts#L23-L43"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "query_rules.put_ruleset"
      },
      "specLocation": "query_rules/put_ruleset/QueryRulesetPutResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "match_criteria",
            "required": true,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          }
        ]
      },
      "description": "Creates or updates a query ruleset.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "query_rules.test"
      },
      "path": [
        {
          "description": "The unique identifier of the query ruleset to be created or updated",
          "name": "ruleset_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "query_rules/test/QueryRulesetTestRequest.ts#L24-L44"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "total_matched_rules",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "matched_rules",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "QueryRulesetMatchedRule",
                  "namespace": "query_rules.test"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "query_rules.test"
      },
      "specLocation": "query_rules/test/QueryRulesetTestResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "A set of typical search requests, together with their provided ratings.",
            "name": "requests",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "RankEvalRequestItem",
                  "namespace": "_global.rank_eval"
                }
              }
            }
          },
          {
            "description": "Definition of the evaluation metric to calculate.",
            "name": "metric",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RankEvalMetric",
                "namespace": "_global.rank_eval"
              }
            }
          }
        ]
      },
      "description": "Evaluate ranked search results.\n\nEvaluate the quality of ranked search results over a set of typical search queries.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.rank_eval"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and index aliases used to limit the request. Wildcard (`*`) expressions are supported.\nTo target all data streams and indices in a cluster, omit this parameter or use `_all` or `*`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices. This behavior applies even if the request targets other open indices. For example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both.",
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, missing or closed indices are not included in the response.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Search operation type",
          "name": "search_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/RankEvalRequest.ts#L24-L64"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The overall evaluation quality calculated by the defined metric",
            "name": "metric_score",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The details section contains one entry for every query in the original requests section, keyed by the search request id",
            "name": "details",
            "required": true,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "Id",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "RankEvalMetricDetail",
                  "namespace": "_global.rank_eval"
                }
              }
            }
          },
          {
            "name": "failures",
            "required": true,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.rank_eval"
      },
      "specLocation": "_global/rank_eval/RankEvalResponse.ts#L26-L34"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Set to proceed to continue reindexing even if there are conflicts.",
            "name": "conflicts",
            "required": false,
            "serverDefault": "abort",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Conflicts",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The destination you are copying to.",
            "name": "dest",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Destination",
                "namespace": "_global.reindex"
              }
            }
          },
          {
            "description": "The maximum number of documents to reindex.",
            "name": "max_docs",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The script to run to update the document source or metadata when reindexing.",
            "name": "script",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Script",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "size",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The source you are copying from.",
            "name": "source",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Source",
                "namespace": "_global.reindex"
              }
            }
          }
        ]
      },
      "description": "Reindex documents.\nCopies documents from a source to a destination. The source can be any existing index, alias, or data stream. The destination must differ from the source. For example, you cannot reindex a data stream into itself.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.reindex"
      },
      "path": [],
      "query": [
        {
          "description": "If `true`, the request refreshes affected shards to make this operation visible to search.",
          "name": "refresh",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The throttle for this request in sub-requests per second.\nDefaults to no throttle.",
          "name": "requests_per_second",
          "required": false,
          "serverDefault": -1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies how long a consistent view of the index should be maintained for scrolled search.",
          "name": "scroll",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of slices this task should be divided into.\nDefaults to 1 slice, meaning the task isnâ€™t sliced into subtasks.",
          "name": "slices",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Slices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period each indexing waits for automatic index creation, dynamic mapping updates, and waiting for active shards.",
          "name": "timeout",
          "required": false,
          "serverDefault": "1m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
          "name": "wait_for_active_shards",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WaitForActiveShards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the request blocks until the operation is complete.",
          "name": "wait_for_completion",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the destination must be an index alias.",
          "name": "require_alias",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/reindex/ReindexRequest.ts#L27-L104"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "batches",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "created",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "deleted",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "failures",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "BulkIndexByScrollFailure",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "name": "noops",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "retries",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Retries",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "requests_per_second",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "float",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "slice_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "task",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TaskId",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "throttled_millis",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "EpochTime",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "throttled_until_millis",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "EpochTime",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "timed_out",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "took",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "DurationValue",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "total",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "updated",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "version_conflicts",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.reindex"
      },
      "specLocation": "_global/reindex/ReindexResponse.ts#L26-L45"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "file",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Key-value pairs used to replace Mustache variables in the template.\nThe key is the variable name.\nThe value is the variable value.",
            "name": "params",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          },
          {
            "description": "An inline search template.\nSupports the same parameters as the search API's request body.\nThese parameters also support Mustache variables.\nIf no `id` or `<templated-id>` is specified, this parameter is required.",
            "name": "source",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Render a search template.\n\nRender a search template as a search request body.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.render_search_template"
      },
      "path": [
        {
          "description": "ID of the search template to render.\nIf no `source` is specified, this or the `id` request body parameter is required.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "_global/render_search_template/RenderSearchTemplateRequest.ts#L25-L58"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "template_output",
            "required": true,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.render_search_template"
      },
      "specLocation": "_global/render_search_template/RenderSearchTemplateResponse.ts#L23-L25"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The context that the script should run in.",
            "name": "context",
            "required": false,
            "serverDefault": "painless_test",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Additional parameters for the `context`.",
            "name": "context_setup",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "PainlessContextSetup",
                "namespace": "_global.scripts_painless_execute"
              }
            }
          },
          {
            "description": "The Painless script to execute.",
            "name": "script",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Script",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Run a script.\nRuns a script and returns a result.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.scripts_painless_execute"
      },
      "path": [],
      "query": [],
      "specLocation": "_global/scripts_painless_execute/ExecutePainlessScriptRequest.ts#L24-L48"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TResult",
                "namespace": "_global.scripts_painless_execute.Response"
              }
            }
          }
        ]
      },
      "generics": [
        {
          "name": "TResult",
          "namespace": "_global.scripts_painless_execute.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.scripts_painless_execute"
      },
      "specLocation": "_global/scripts_painless_execute/ExecutePainlessScriptResponse.ts#L20-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Period to retain the search context for scrolling.",
            "docId": "scroll-search-results",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/paginate-search-results.html#scroll-search-results",
            "name": "scroll",
            "required": false,
            "serverDefault": "1d",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Scroll ID of the search.",
            "name": "scroll_id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ScrollId",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Run a scrolling search.\n\nIMPORTANT: The scroll API is no longer recommend for deep pagination. If you need to preserve the index state while paging through more than 10,000 hits, use the `search_after` parameter with a point in time (PIT).\n\nThe scroll API gets large sets of results from a single scrolling search request.\nTo get the necessary scroll ID, submit a search API request that includes an argument for the `scroll` query parameter.\nThe `scroll` parameter indicates how long Elasticsearch should retain the search context for the request.\nThe search response returns a scroll ID in the `_scroll_id` response body parameter.\nYou can then use the scroll ID with the scroll API to retrieve the next batch of results for the request.\nIf the Elasticsearch security features are enabled, the access to the results of a specific scroll ID is restricted to the user or API key that submitted the search.\n\nYou can also use the scroll API to specify a new scroll parameter that extends or shortens the retention period for the search context.\n\nIMPORTANT: Results from a scrolling search reflect the state of the index at the time of the initial search request. Subsequent indexing or document changes only affect later search and scroll requests.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.scroll"
      },
      "path": [
        {
          "deprecation": {
            "description": "",
            "version": "7.0.0"
          },
          "description": "The scroll ID",
          "name": "scroll_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScrollId",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to retain the search context for scrolling.",
          "docId": "scroll-search-results",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/paginate-search-results.html#scroll-search-results",
          "name": "scroll",
          "required": false,
          "serverDefault": "1d",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "deprecation": {
            "description": "",
            "version": "7.0.0"
          },
          "description": "The scroll ID for scrolled search",
          "name": "scroll_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScrollId",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, the API responseâ€™s hit.total property is returned as an integer. If false, the API responseâ€™s hit.total property is returned as an object.",
          "name": "rest_total_hits_as_int",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/scroll/ScrollRequest.ts#L24-L75"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "TDocument",
                "namespace": "_global.scroll.Response"
              }
            }
          ],
          "kind": "instance_of",
          "type": {
            "name": "ResponseBody",
            "namespace": "_global.search"
          }
        }
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.scroll.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.scroll"
      },
      "specLocation": "_global/scroll/ScrollResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "aliases": [
              "aggs"
            ],
            "description": "Defines the aggregations that are run as part of the search request.",
            "name": "aggregations",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "AggregationContainer",
                  "namespace": "_types.aggregations"
                }
              }
            }
          },
          {
            "description": "Collapses search results the values of the specified field.",
            "name": "collapse",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "FieldCollapse",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "If true, returns detailed information about score computation as part of a hit.",
            "name": "explain",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Configuration of search extensions defined by Elasticsearch plugins.",
            "name": "ext",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          },
          {
            "description": "Starting document offset.\nNeeds to be non-negative.\nBy default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.\nTo page through more hits, use the `search_after` parameter.",
            "name": "from",
            "required": false,
            "serverDefault": 0,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Specifies the highlighter to use for retrieving highlighted snippets from one or more fields in your search results.",
            "name": "highlight",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Highlight",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "Number of hits matching the query to count accurately.\nIf `true`, the exact number of hits is returned at the cost of some performance.\nIf `false`, the  response does not include the total number of hits matching the query.",
            "name": "track_total_hits",
            "required": false,
            "serverDefault": "10000",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TrackHits",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "Boosts the _score of documents from specified indices.",
            "name": "indices_boost",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "name": "IndexName",
                    "namespace": "_types"
                  }
                },
                "kind": "dictionary_of",
                "singleKey": false,
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "double",
                    "namespace": "_types"
                  }
                }
              }
            }
          },
          {
            "description": "Array of wildcard (`*`) patterns.\nThe request returns doc values for field names matching these patterns in the `hits.fields` property of the response.",
            "name": "docvalue_fields",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "FieldAndFormat",
                  "namespace": "_types.query_dsl"
                }
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "8.4.0"
              }
            },
            "description": "Defines the approximate kNN search to run.",
            "name": "knn",
            "required": false,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "KnnSearch",
                    "namespace": "_types"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "KnnSearch",
                      "namespace": "_types"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "description": "Minimum `_score` for matching documents.\nDocuments with a lower `_score` are not included in the search results.",
            "name": "min_score",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Use the `post_filter` parameter to filter search results.\nThe search hits are filtered after the aggregations are calculated.\nA post filter has no impact on the aggregation results.",
            "name": "post_filter",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "Set to `true` to return detailed timing information about the execution of individual components in a search request.\nNOTE: This is a debugging tool and adds significant overhead to search execution.",
            "name": "profile",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Defines the search definition using the Query DSL.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "Can be used to improve precision by reordering just the top (for example 100 - 500) documents returned by the `query` and `post_filter` phases.",
            "name": "rescore",
            "required": false,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "Rescore",
                    "namespace": "_global.search._types"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "Rescore",
                      "namespace": "_global.search._types"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "availability": {
              "serverless": {
                "stability": "stable"
              },
              "stack": {
                "since": "8.14.0",
                "stability": "stable"
              }
            },
            "description": "A retriever is a specification to describe top documents returned from a search. A retriever replaces other elements of the search API that also return top documents such as query and knn.",
            "name": "retriever",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RetrieverContainer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Retrieve a script evaluation (based on different fields) for each hit.",
            "name": "script_fields",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ScriptField",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "description": "Used to retrieve the next page of hits using a set of sort values from the previous page.",
            "name": "search_after",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SortResults",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The number of hits to return.\nBy default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.\nTo page through more hits, use the `search_after` parameter.",
            "name": "size",
            "required": false,
            "serverDefault": 10,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Can be used to split a scrolled search into multiple slices that can be consumed independently.",
            "name": "slice",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SlicedScroll",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "A comma-separated list of <field>:<direction> pairs.",
            "docId": "sort-search-results",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/sort-search-results.html",
            "name": "sort",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Sort",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Indicates which source fields are returned for matching documents.\nThese fields are returned in the hits._source property of the search response.",
            "name": "_source",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SourceConfig",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "Array of wildcard (`*`) patterns.\nThe request returns values for field names matching these patterns in the `hits.fields` property of the response.",
            "name": "fields",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "FieldAndFormat",
                  "namespace": "_types.query_dsl"
                }
              }
            }
          },
          {
            "description": "Defines a suggester that provides similar looking terms based on a provided text.",
            "name": "suggest",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Suggester",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "Maximum number of documents to collect for each shard.\nIf a query reaches this limit, Elasticsearch terminates the query early.\nElasticsearch collects documents before sorting.\nUse with caution.\nElasticsearch applies this parameter to each shard handling the request.\nWhen possible, let Elasticsearch perform early termination automatically.\nAvoid specifying this parameter for requests that target data streams with backing indices across multiple data tiers.\nIf set to `0` (default), the query does not terminate early.",
            "name": "terminate_after",
            "required": false,
            "serverDefault": 0,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Specifies the period of time to wait for a response from each shard.\nIf no response is received before the timeout expires, the request fails and returns an error.\nDefaults to no timeout.",
            "name": "timeout",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If true, calculate and return document scores, even if the scores are not used for sorting.",
            "name": "track_scores",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If true, returns document version as part of a hit.",
            "name": "version",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If `true`, returns sequence number and primary term of the last modification of each hit.",
            "name": "seq_no_primary_term",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "List of stored fields to return as part of a hit.\nIf no fields are specified, no stored fields are included in the response.\nIf this field is specified, the `_source` parameter defaults to `false`.\nYou can pass `_source: true` to return both source fields and stored fields in the search response.",
            "name": "stored_fields",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Fields",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Limits the search to a point in time (PIT).\nIf you provide a PIT, you cannot specify an `<index>` in the request path.",
            "name": "pit",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "PointInTimeReference",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "Defines one or more runtime fields in the search request.\nThese fields take precedence over mapped fields with the same name.",
            "name": "runtime_mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFields",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "Stats groups to associate with the search.\nEach group maintains a statistics aggregation for its associated searches.\nYou can retrieve these stats using the indices stats API.",
            "name": "stats",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          }
        ]
      },
      "description": "Run a search.\n\nGet search hits that match the query defined in the request.\nYou can provide search queries using the `q` query string parameter or the request body.\nIf both are specified, only the query parameter is used.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.search"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases to search.\nSupports wildcards (`*`).\nTo search all data streams and indices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.\nFor example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, returns partial results if there are shard request timeouts or shard failures. If false, returns an error with no partial results.",
          "name": "allow_partial_search_results",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Analyzer to use for the query string.\nThis parameter can only be used when the q query string parameter is specified.",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, wildcard and prefix queries are analyzed.\nThis parameter can only be used when the q query string parameter is specified.",
          "name": "analyze_wildcard",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The number of shard results that should be reduced at once on the coordinating node.\nThis value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.",
          "name": "batched_reduce_size",
          "required": false,
          "serverDefault": 512,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, network round-trips between the coordinating node and the remote clusters are minimized when executing cross-cluster search (CCS) requests.",
          "docId": "ccs-network-delays",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/modules-cross-cluster-search.html#ccs-network-delays",
          "name": "ccs_minimize_roundtrips",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The default operator for query string query: AND or OR.\nThis parameter can only be used when the `q` query string parameter is specified.",
          "name": "default_operator",
          "required": false,
          "serverDefault": "OR",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Field to use as default where no field prefix is given in the query string.\nThis parameter can only be used when the q query string parameter is specified.",
          "name": "df",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A comma-separated list of fields to return as the docvalue representation for each hit.",
          "name": "docvalue_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.",
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, returns detailed information about score computation as part of a hit.",
          "name": "explain",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, concrete, expanded or aliased indices will be ignored when frozen.",
          "name": "ignore_throttled",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates whether hit.matched_queries should be rendered as a map that includes\nthe name of the matched query associated with its score (true)\nor as an array containing the name of the matched queries (false)\nThis functionality reruns each named query on every hit in a search response.\nTypically, this adds a small overhead to a request.\nHowever, using computationally expensive named queries on a large number of hits may add significant overhead.",
          "name": "include_named_queries_score",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.\nThis parameter can only be used when the `q` query string parameter is specified.",
          "name": "lenient",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Defines the number of concurrent shard requests per node this search executes concurrently.\nThis value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests.",
          "name": "max_concurrent_shard_requests",
          "required": false,
          "serverDefault": 5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum version of the node that can handle the request\nAny handling node with a lower version will fail the request.",
          "name": "min_compatible_shard_node",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Nodes and shards used for the search.\nBy default, Elasticsearch selects from eligible nodes and shards using adaptive replica selection, accounting for allocation awareness. Valid values are:\n`_only_local` to run the search only on shards on the local node;\n`_local` to, if possible, run the search on shards on the local node, or if not, select shards using the default method;\n`_only_nodes:<node-id>,<node-id>` to run the search on only the specified nodes IDs, where, if suitable shards exist on more than one selected node, use shards on those nodes using the default method, or if none of the specified nodes are available, select shards from any available node using the default method;\n`_prefer_nodes:<node-id>,<node-id>` to if possible, run the search on the specified nodes IDs, or if not, select shards using the default method;\n`_shards:<shard>,<shard>` to run the search only on the specified shards;\n`<custom-string>` (any string that does not start with `_`) to route searches with the same `<custom-string>` to the same shards in the same order.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Defines a threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold.\nThis filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method (if date filters are mandatory to match but the shard bounds and the query are disjoint).\nWhen unspecified, the pre-filter phase is executed if any of these conditions is met:\nthe request targets more than 128 shards;\nthe request targets one or more read-only index;\nthe primary sort of the query targets an indexed field.",
          "name": "pre_filter_shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the caching of search results is enabled for requests where `size` is `0`.\nDefaults to index level settings.",
          "name": "request_cache",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to retain the search context for scrolling. See Scroll search results.\nBy default, this value cannot exceed `1d` (24 hours).\nYou can change this limit using the `search.max_keep_alive` cluster-level setting.",
          "docId": "scroll-search-results",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/paginate-search-results.html#scroll-search-results",
          "name": "scroll",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "How distributed term frequencies are calculated for relevance scoring.",
          "name": "search_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific `tag` of the request for logging and statistical purposes.",
          "name": "stats",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "A comma-separated list of stored fields to return as part of a hit.\nIf no fields are specified, no stored fields are included in the response.\nIf this field is specified, the `_source` parameter defaults to `false`.\nYou can pass `_source: true` to return both source fields and stored fields in the search response.",
          "name": "stored_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies which field to use for suggestions.",
          "name": "suggest_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the suggest mode.\nThis parameter can only be used when the `suggest_field` and `suggest_text` query string parameters are specified.",
          "name": "suggest_mode",
          "required": false,
          "serverDefault": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SuggestMode",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of suggestions to return.\nThis parameter can only be used when the `suggest_field` and `suggest_text` query string parameters are specified.",
          "name": "suggest_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The source text for which the suggestions should be returned.\nThis parameter can only be used when the `suggest_field` and `suggest_text` query string parameters are specified.",
          "name": "suggest_text",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of documents to collect for each shard.\nIf a query reaches this limit, Elasticsearch terminates the query early.\nElasticsearch collects documents before sorting.\nUse with caution.\nElasticsearch applies this parameter to each shard handling the request.\nWhen possible, let Elasticsearch perform early termination automatically.\nAvoid specifying this parameter for requests that target data streams with backing indices across multiple data tiers.\nIf set to `0` (default), the query does not terminate early.",
          "name": "terminate_after",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the period of time to wait for a response from each shard.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of hits matching the query to count accurately.\nIf `true`, the exact number of hits is returned at the cost of some performance.\nIf `false`, the response does not include the total number of hits matching the query.",
          "name": "track_total_hits",
          "required": false,
          "serverDefault": "10000",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrackHits",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "If `true`, calculate and return document scores, even if the scores are not used for sorting.",
          "name": "track_scores",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, aggregation and suggester names are be prefixed by their respective types in the response.",
          "name": "typed_keys",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates whether `hits.total` should be rendered as an integer or an object in the rest search response.",
          "name": "rest_total_hits_as_int",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, returns document version as part of a hit.",
          "name": "version",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates which source fields are returned for matching documents.\nThese fields are returned in the `hits._source` property of the search response.\nValid values are:\n`true` to return the entire document source;\n`false` to not return the document source;\n`<string>` to return the source fields that are specified as a comma-separated list (supports wildcard (`*`) patterns).",
          "name": "_source",
          "required": false,
          "serverDefault": "true",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfigParam",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to exclude from the response.\nYou can also use this parameter to exclude fields from the subset specified in `_source_includes` query parameter.\nIf the `_source` parameter is `false`, this parameter is ignored.",
          "name": "_source_excludes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of source fields to include in the response.\nIf this parameter is specified, only these source fields are returned.\nYou can exclude fields from this subset using the `_source_excludes` query parameter.\nIf the `_source` parameter is `false`, this parameter is ignored.",
          "name": "_source_includes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, returns sequence number and primary term of the last modification of each hit.",
          "name": "seq_no_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Query in the Lucene query string syntax using query parameter search.\nQuery parameter searches do not support the full Elasticsearch Query DSL but are handy for testing.",
          "name": "q",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Defines the number of hits to return.\nBy default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.\nTo page through more hits, use the `search_after` parameter.",
          "name": "size",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Starting document offset.\nNeeds to be non-negative.\nBy default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.\nTo page through more hits, use the `search_after` parameter.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of <field>:<direction> pairs.",
          "docId": "sort-search-results",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/sort-search-results.html",
          "name": "sort",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_global/search/SearchRequest.ts#L54-L531"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "TDocument",
                "namespace": "_global.search.Response"
              }
            }
          ],
          "kind": "instance_of",
          "type": {
            "name": "ResponseBody",
            "namespace": "_global.search"
          }
        }
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.search.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.search"
      },
      "specLocation": "_global/search/SearchResponse.ts#L34-L36"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a search application.\nRemove a search application and its associated alias. Indices attached to the search application are not removed.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "search_application.delete"
      },
      "path": [
        {
          "description": "The name of the search application to delete",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "search_application/delete/SearchApplicationsDeleteRequest.ts#L22-L36"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "search_application.delete"
      },
      "specLocation": "search_application/delete/SearchApplicationsDeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a behavioral analytics collection.\nThe associated data stream is also deleted.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "search_application.delete_behavioral_analytics"
      },
      "path": [
        {
          "description": "The name of the analytics collection to be deleted",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "search_application/delete_behavioral_analytics/BehavioralAnalyticsDeleteRequest.ts#L22-L37"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "search_application.delete_behavioral_analytics"
      },
      "specLocation": "search_application/delete_behavioral_analytics/BehavioralAnalyticsDeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get search application details.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "search_application.get"
      },
      "path": [
        {
          "description": "The name of the search application",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "search_application/get/SearchApplicationsGetRequest.ts#L22-L35"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "SearchApplication",
            "namespace": "search_application._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "search_application.get"
      },
      "specLocation": "search_application/get/SearchApplicationsGetResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get behavioral analytics collections.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "search_application.get_behavioral_analytics"
      },
      "path": [
        {
          "description": "A list of analytics collections to limit the returned information",
          "name": "name",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Name",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "query": [],
      "specLocation": "search_application/get_behavioral_analytics/BehavioralAnalyticsGetRequest.ts#L22-L36"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "key": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          },
          "kind": "dictionary_of",
          "singleKey": false,
          "value": {
            "kind": "instance_of",
            "type": {
              "name": "AnalyticsCollection",
              "namespace": "search_application._types"
            }
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "search_application.get_behavioral_analytics"
      },
      "specLocation": "search_application/get_behavioral_analytics/BehavioralAnalyticsGetResponse.ts#L24-L27"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Returns the existing search applications.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "search_application.list"
      },
      "path": [],
      "query": [
        {
          "description": "Query in the Lucene query string syntax.",
          "name": "q",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Starting offset.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies a max number of results to get.",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "search_application/list/SearchApplicationsListRequest.ts#L22-L44"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "results",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "SearchApplicationListItem",
                  "namespace": "search_application.list"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "search_application.list"
      },
      "specLocation": "search_application/list/SearchApplicationsListResponse.ts#L24-L29"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "codegenName": "search_application",
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "SearchApplication",
            "namespace": "search_application._types"
          }
        }
      },
      "description": "Create or update a search application.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "search_application.put"
      },
      "path": [
        {
          "description": "The name of the search application to be created or updated.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `true`, this request cannot replace or update existing Search Applications.",
          "name": "create",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "search_application/put/SearchApplicationsPutRequest.ts#L23-L48"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "search_application.put"
      },
      "specLocation": "search_application/put/SearchApplicationsPutResponse.ts#L22-L26"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Create a behavioral analytics collection.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "search_application.put_behavioral_analytics"
      },
      "path": [
        {
          "description": "The name of the analytics collection to be created or updated.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "search_application/put_behavioral_analytics/BehavioralAnalyticsPutRequest.ts#L22-L36"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AnalyticsAcknowledgeResponseBase",
            "namespace": "search_application.put_behavioral_analytics"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "search_application.put_behavioral_analytics"
      },
      "specLocation": "search_application/put_behavioral_analytics/BehavioralAnalyticsPutResponse.ts#L23-L25"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Query parameters specific to this request, which will override any defaults specified in the template.",
            "name": "params",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          }
        ]
      },
      "description": "Run a search application search.\nGenerate and run an Elasticsearch query that uses the specified query parameteter and the search template associated with the search application or default template.\nUnspecified template parameters are assigned their default values if applicable.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "search_application.search"
      },
      "path": [
        {
          "description": "The name of the search application to be searched.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.14.0"
            }
          },
          "description": "Determines whether aggregation names are prefixed by their respective types in the response.",
          "name": "typed_keys",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "search_application/search/SearchApplicationsSearchRequest.ts#L24-L54"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "TDocument",
                "namespace": "search_application.search.Response"
              }
            }
          ],
          "kind": "instance_of",
          "type": {
            "name": "ResponseBody",
            "namespace": "_global.search"
          }
        }
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "search_application.search.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "search_application.search"
      },
      "specLocation": "search_application/search/SearchApplicationsSearchResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Sub-aggregations for the geotile_grid.\n\nSupports the following aggregation types:\n- avg\n- cardinality\n- max\n- min\n- sum",
            "name": "aggs",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "AggregationContainer",
                  "namespace": "_types.aggregations"
                }
              }
            }
          },
          {
            "description": "Size, in pixels, of a clipping buffer outside the tile. This allows renderers\nto avoid outline artifacts from geometries that extend past the extent of the tile.",
            "name": "buffer",
            "required": false,
            "serverDefault": 5,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "If false, the meta layerâ€™s feature is the bounding box of the tile.\nIf true, the meta layerâ€™s feature is a bounding box resulting from a\ngeo_bounds aggregation. The aggregation runs on <field> values that intersect\nthe <zoom>/<x>/<y> tile with wrap_longitude set to false. The resulting\nbounding box may be larger than the vector tile.",
            "name": "exact_bounds",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Size, in pixels, of a side of the tile. Vector tiles are square with equal sides.",
            "name": "extent",
            "required": false,
            "serverDefault": 4096,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Fields to return in the `hits` layer. Supports wildcards (`*`).\nThis parameter does not support fields with array values. Fields with array\nvalues may return inconsistent results.",
            "name": "fields",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Fields",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Aggregation used to create a grid for the `field`.",
            "name": "grid_agg",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "GridAggregationType",
                "namespace": "_global.search_mvt._types"
              }
            }
          },
          {
            "description": "Additional zoom levels available through the aggs layer. For example, if <zoom> is 7\nand grid_precision is 8, you can zoom in up to level 15. Accepts 0-8. If 0, results\ndonâ€™t include the aggs layer.",
            "name": "grid_precision",
            "required": false,
            "serverDefault": 8,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Determines the geometry type for features in the aggs layer. In the aggs layer,\neach feature represents a geotile_grid cell. If 'grid' each feature is a Polygon\nof the cells bounding box. If 'point' each feature is a Point that is the centroid\nof the cell.",
            "name": "grid_type",
            "required": false,
            "serverDefault": "grid",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "GridType",
                "namespace": "_global.search_mvt._types"
              }
            }
          },
          {
            "description": "Query DSL used to filter documents for the search.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "Defines one or more runtime fields in the search request. These fields take\nprecedence over mapped fields with the same name.",
            "name": "runtime_mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFields",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "Maximum number of features to return in the hits layer. Accepts 0-10000.\nIf 0, results donâ€™t include the hits layer.",
            "name": "size",
            "required": false,
            "serverDefault": 10000,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Sorts features in the hits layer. By default, the API calculates a bounding\nbox for each feature. It sorts features based on this boxâ€™s diagonal length,\nfrom longest to shortest.",
            "name": "sort",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Sort",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Number of hits matching the query to count accurately. If `true`, the exact number\nof hits is returned at the cost of some performance. If `false`, the response does\nnot include the total number of hits matching the query.",
            "name": "track_total_hits",
            "required": false,
            "serverDefault": "10000",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TrackHits",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "If `true`, the hits and aggs layers will contain additional point features representing\nsuggested label positions for the original features.",
            "name": "with_labels",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Search a vector tile.\n\nSearch a vector tile for geospatial values.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.search_mvt"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, or aliases to search",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field containing geospatial data to return",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Zoom level for the vector tile to search",
          "name": "zoom",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ZoomLevel",
              "namespace": "_global.search_mvt._types"
            }
          }
        },
        {
          "description": "X coordinate for the vector tile to search",
          "name": "x",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Coordinate",
              "namespace": "_global.search_mvt._types"
            }
          }
        },
        {
          "description": "Y coordinate for the vector tile to search",
          "name": "y",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Coordinate",
              "namespace": "_global.search_mvt._types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If false, the meta layerâ€™s feature is the bounding box of the tile.\nIf true, the meta layerâ€™s feature is a bounding box resulting from a\ngeo_bounds aggregation. The aggregation runs on <field> values that intersect\nthe <zoom>/<x>/<y> tile with wrap_longitude set to false. The resulting\nbounding box may be larger than the vector tile.",
          "name": "exact_bounds",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Size, in pixels, of a side of the tile. Vector tiles are square with equal sides.",
          "name": "extent",
          "required": false,
          "serverDefault": 4096,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Aggregation used to create a grid for `field`.",
          "name": "grid_agg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GridAggregationType",
              "namespace": "_global.search_mvt._types"
            }
          }
        },
        {
          "description": "Additional zoom levels available through the aggs layer. For example, if <zoom> is 7\nand grid_precision is 8, you can zoom in up to level 15. Accepts 0-8. If 0, results\ndonâ€™t include the aggs layer.",
          "name": "grid_precision",
          "required": false,
          "serverDefault": 8,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Determines the geometry type for features in the aggs layer. In the aggs layer,\neach feature represents a geotile_grid cell. If 'grid' each feature is a Polygon\nof the cells bounding box. If 'point' each feature is a Point that is the centroid\nof the cell.",
          "name": "grid_type",
          "required": false,
          "serverDefault": "grid",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GridType",
              "namespace": "_global.search_mvt._types"
            }
          }
        },
        {
          "description": "Maximum number of features to return in the hits layer. Accepts 0-10000.\nIf 0, results donâ€™t include the hits layer.",
          "name": "size",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the hits and aggs layers will contain additional point features representing\nsuggested label positions for the original features.",
          "name": "with_labels",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search_mvt/SearchMvtRequest.ts#L33-L193"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "MapboxVectorTiles",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.search_mvt"
      },
      "specLocation": "_global/search_mvt/SearchMvtResponse.ts#L22-L25"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "If `true`, returns detailed information about score calculation as part of each hit.",
            "name": "explain",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "ID of the search template to use. If no source is specified,\nthis parameter is required.",
            "name": "id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Key-value pairs used to replace Mustache variables in the template.\nThe key is the variable name.\nThe value is the variable value.",
            "name": "params",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          },
          {
            "description": "If `true`, the query execution is profiled.",
            "name": "profile",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "An inline search template. Supports the same parameters as the search API's\nrequest body. Also supports Mustache variables. If no id is specified, this\nparameter is required.",
            "name": "source",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Run a search with a search template.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.search_template"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices,\nand aliases to search. Supports wildcards (*).",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.\nFor example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, network round-trips are minimized for cross-cluster search requests.",
          "name": "ccs_minimize_roundtrips",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the response includes additional details about score computation as part of a hit.",
          "name": "explain",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, specified concrete, expanded, or aliased indices are not included in the response when throttled.",
          "name": "ignore_throttled",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies the node or shard the operation should be performed on.\nRandom by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the query execution is profiled.",
          "name": "profile",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies how long a consistent view of the index\nshould be maintained for scrolled search.",
          "name": "scroll",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The type of the search operation.",
          "name": "search_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchType",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.0.0"
            }
          },
          "description": "If true, hits.total are rendered as an integer in the response.",
          "name": "rest_total_hits_as_int",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the response prefixes aggregation and suggester names with their respective types.",
          "name": "typed_keys",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search_template/SearchTemplateRequest.ts#L32-L136"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "took",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "timed_out",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "_shards",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ShardStatistics",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "hits",
            "required": true,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "TDocument",
                    "namespace": "_global.search_template.Response"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "HitsMetadata",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "name": "aggregations",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "AggregateName",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Aggregate",
                  "namespace": "_types.aggregations"
                }
              }
            }
          },
          {
            "name": "_clusters",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ClusterStatistics",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "fields",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          },
          {
            "name": "max_score",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "num_reduce_phases",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "profile",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Profile",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "name": "pit_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "_scroll_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ScrollId",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "suggest",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "SuggestionName",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "array_of",
                "value": {
                  "generics": [
                    {
                      "kind": "instance_of",
                      "type": {
                        "name": "TDocument",
                        "namespace": "_global.search_template.Response"
                      }
                    }
                  ],
                  "kind": "instance_of",
                  "type": {
                    "name": "Suggest",
                    "namespace": "_global.search._types"
                  }
                }
              }
            }
          },
          {
            "name": "terminated_early",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.search_template.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.search_template"
      },
      "specLocation": "_global/search_template/SearchTemplateResponse.ts#L30-L48"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Authenticate a user.\n\nAuthenticates a user and returns information about the authenticated user.\nInclude the user information in a [basic auth header](https://en.wikipedia.org/wiki/Basic_access_authentication).\nA successful call returns a JSON structure that shows user information such as their username, the roles that are assigned to the user, any assigned metadata, and information about the realms that authenticated and authorized the user.\nIf the user cannot be authenticated, this API returns a 401 status code.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "security.authenticate"
      },
      "path": [],
      "query": [],
      "specLocation": "security/authenticate/SecurityAuthenticateRequest.ts#L22-L33"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "api_key",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "AuthenticateApiKey",
                "namespace": "security.authenticate"
              }
            }
          },
          {
            "name": "authentication_realm",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RealmInfo",
                "namespace": "security._types"
              }
            }
          },
          {
            "name": "email",
            "required": false,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "null",
                    "namespace": "_builtins"
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "name": "full_name",
            "required": false,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "Name",
                    "namespace": "_types"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "null",
                    "namespace": "_builtins"
                  }
                }
              ],
              "kind": "union_of"
            }
          },
          {
            "name": "lookup_realm",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RealmInfo",
                "namespace": "security._types"
              }
            }
          },
          {
            "name": "metadata",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Metadata",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "roles",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "name": "username",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Username",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "enabled",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "authentication_type",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "7.14.0"
              }
            },
            "name": "token",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Token",
                "namespace": "security.authenticate"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "security.authenticate"
      },
      "specLocation": "security/authenticate/SecurityAuthenticateResponse.ts#L24-L42"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Expiration time for the API key. By default, API keys never expire.",
            "name": "expiration",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Specifies the name for this API key.",
            "name": "name",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Name",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "An array of role descriptors for this API key. This parameter is optional. When it is not specified or is an empty array, then the API key will have a point in time snapshot of permissions of the authenticated user. If you supply role descriptors then the resultant permissions would be an intersection of API keys permissions and authenticated userâ€™s permissions thereby limiting the access scope for API keys. The structure of role descriptor is the same as the request for create role API. For more details, see create or update roles API.",
            "docId": "security-api-put-role",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/security-api-put-role.html",
            "name": "role_descriptors",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "RoleDescriptor",
                  "namespace": "security._types"
                }
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "7.13.0"
              }
            },
            "description": "Arbitrary metadata that you want to associate with the API key. It supports nested data structure. Within the metadata object, keys beginning with `_` are reserved for system usage.",
            "name": "metadata",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Metadata",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Create an API key.\n\nCreate an API key for access without requiring basic authentication.\nA successful request returns a JSON structure that contains the API key, its unique id, and its name.\nIf applicable, it also returns expiration information for the API key in milliseconds.\nNOTE: By default, API keys never expire. You can specify expiration information when you create the API keys.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "security.create_api_key"
      },
      "path": [],
      "query": [
        {
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.",
          "name": "refresh",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Refresh",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "security/create_api_key/SecurityCreateApiKeyRequest.ts#L26-L60"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Generated API key.",
            "name": "api_key",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Expiration in milliseconds for the API key.",
            "name": "expiration",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Unique ID for this API key.",
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Specifies the name for this API key.",
            "name": "name",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Name",
                "namespace": "_types"
              }
            }
          },
          {
            "availability": {
              "serverless": {},
              "stack": {
                "since": "7.16.0"
              }
            },
            "description": "API key credentials which is the base64-encoding of\nthe UTF-8 representation of `id` and `api_key` joined\nby a colon (`:`).",
            "name": "encoded",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "security.create_api_key"
      },
      "specLocation": "security/create_api_key/SecurityCreateApiKeyResponse.ts#L23-L50"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get API key information.\n\nRetrieves information for one or more API keys.\nNOTE: If you have only the `manage_own_api_key` privilege, this API returns only the API keys that you own.\nIf you have `read_security`, `manage_api_key` or greater privileges (including `manage_security`), this API returns all API keys regardless of ownership.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "security.get_api_key"
      },
      "path": [],
      "query": [
        {
          "description": "An API key id.\nThis parameter cannot be used with any of `name`, `realm_name` or `username`.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An API key name.\nThis parameter cannot be used with any of `id`, `realm_name` or `username`.\nIt supports prefix search with wildcard.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A boolean flag that can be used to query API keys owned by the currently authenticated user.\nThe `realm_name` or `username` parameters cannot be specified when this parameter is set to `true` as they are assumed to be the currently authenticated ones.",
          "name": "owner",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The name of an authentication realm.\nThis parameter cannot be used with either `id` or `name` or when `owner` flag is set to `true`.",
          "name": "realm_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The username of a user.\nThis parameter cannot be used with either `id` or `name` or when `owner` flag is set to `true`.",
          "name": "username",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Username",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.5.0"
            }
          },
          "description": "Return the snapshot of the owner user's role descriptors\nassociated with the API key. An API key's actual\npermission is the intersection of its assigned role\ndescriptors and the owner user's role descriptors.",
          "name": "with_limited_by",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.10.0"
            }
          },
          "description": "A boolean flag that can be used to query API keys that are currently active. An API key is considered active if it is neither invalidated, nor expired at query time. You can specify this together with other parameters such as `owner` or `name`. If `active_only` is false, the response will include both active and inactive (expired or invalidated) keys.",
          "name": "active_only",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.14.0"
            }
          },
          "description": "Determines whether to also retrieve the profile uid, for the API key owner principal, if it exists.",
          "name": "with_profile_uid",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "security/get_api_key/SecurityGetApiKeyRequest.ts#L23-L88"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "api_keys",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ApiKey",
                  "namespace": "security._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "security.get_api_key"
      },
      "specLocation": "security/get_api_key/SecurityGetApiKeyResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "application",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ApplicationPrivilegesCheck",
                  "namespace": "security.has_privileges"
                }
              }
            }
          },
          {
            "description": "A list of the cluster privileges that you want to check.",
            "name": "cluster",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ClusterPrivilege",
                  "namespace": "security._types"
                }
              }
            }
          },
          {
            "name": "index",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "IndexPrivilegesCheck",
                  "namespace": "security.has_privileges"
                }
              }
            }
          }
        ]
      },
      "description": "Check user privileges.\n\nDetermine whether the specified user has a specified list of privileges.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "security.has_privileges"
      },
      "path": [
        {
          "description": "Username",
          "name": "user",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "security/has_privileges/SecurityHasPrivilegesRequest.ts#L25-L46"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "application",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ApplicationsPrivileges",
                "namespace": "security.has_privileges"
              }
            }
          },
          {
            "name": "cluster",
            "required": true,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "name": "has_all_requested",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "index",
            "required": true,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "IndexName",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Privileges",
                  "namespace": "security.has_privileges"
                }
              }
            }
          },
          {
            "name": "username",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Username",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "security.has_privileges"
      },
      "specLocation": "security/has_privileges/SecurityHasPrivilegesResponse.ts#L24-L32"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "A list of API key ids.\nThis parameter cannot be used with any of `name`, `realm_name`, or `username`.",
            "name": "ids",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Id",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "description": "An API key name.\nThis parameter cannot be used with any of `ids`, `realm_name` or `username`.",
            "name": "name",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Name",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Can be used to query API keys owned by the currently authenticated user.\nThe `realm_name` or `username` parameters cannot be specified when this parameter is set to `true` as they are assumed to be the currently authenticated ones.",
            "name": "owner",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The name of an authentication realm.\nThis parameter cannot be used with either `ids` or `name`, or when `owner` flag is set to `true`.",
            "name": "realm_name",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The username of a user.\nThis parameter cannot be used with either `ids` or `name`, or when `owner` flag is set to `true`.",
            "name": "username",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Username",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Invalidate API keys.\n\nThis API invalidates API keys created by the create API key or grant API key APIs.\nInvalidated API keys fail authentication, but they can still be viewed using the get API key information and query API key information APIs, for at least the configured retention period, until they are automatically deleted.\nThe `manage_api_key` privilege allows deleting any API keys.\nThe `manage_own_api_key` only allows deleting API keys that are owned by the user.\nIn addition, with the `manage_own_api_key` privilege, an invalidation request must be issued in one of the three formats:\n- Set the parameter `owner=true`.\n- Or, set both `username` and `realm_name` to match the userâ€™s identity.\n- Or, if the request is issued by an API key, that is to say an API key invalidates itself, specify its ID in the `ids` field.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "security.invalidate_api_key"
      },
      "path": [],
      "query": [],
      "specLocation": "security/invalidate_api_key/SecurityInvalidateApiKeyRequest.ts#L23-L69"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "error_count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "error_details",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ErrorCause",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "name": "invalidated_api_keys",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "name": "previously_invalidated_api_keys",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "security.invalidate_api_key"
      },
      "specLocation": "security/invalidate_api_key/SecurityInvalidateApiKeyResponse.ts#L23-L30"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "aliases": [
              "aggs"
            ],
            "description": "Any aggregations to run over the corpus of returned API keys.\nAggregations and queries work together. Aggregations are computed only on the API keys that match the query.\nThis supports only a subset of aggregation types, namely: `terms`, `range`, `date_range`, `missing`,\n`cardinality`, `value_count`, `composite`, `filter`, and `filters`.\nAdditionally, aggregations only run over the same subset of fields that query works with.",
            "name": "aggregations",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ApiKeyAggregationContainer",
                  "namespace": "security.query_api_keys"
                }
              }
            }
          },
          {
            "description": "A query to filter which API keys to return.\nIf the query parameter is missing, it is equivalent to a `match_all` query.\nThe query supports a subset of query types, including `match_all`, `bool`, `term`, `terms`, `match`,\n`ids`, `prefix`, `wildcard`, `exists`, `range`, and `simple_query_string`.\nYou can query the following public information associated with an API key: `id`, `type`, `name`,\n`creation`, `expiration`, `invalidated`, `invalidation`, `username`, `realm`, and `metadata`.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ApiKeyQueryContainer",
                "namespace": "security.query_api_keys"
              }
            }
          },
          {
            "description": "Starting document offset.\nBy default, you cannot page through more than 10,000 hits using the from and size parameters.\nTo page through more hits, use the `search_after` parameter.",
            "name": "from",
            "required": false,
            "serverDefault": 0,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Other than `id`, all public fields of an API key are eligible for sorting.\nIn addition, sort can also be applied to the `_doc` field to sort by index order.",
            "docId": "sort-search-results",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/sort-search-results.html",
            "name": "sort",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Sort",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The number of hits to return.\nBy default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.\nTo page through more hits, use the `search_after` parameter.",
            "name": "size",
            "required": false,
            "serverDefault": 10,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Search after definition",
            "name": "search_after",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SortResults",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Find API keys with a query.\n\nGet a paginated list of API keys and their information. You can optionally filter the results with a query.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "security.query_api_keys"
      },
      "path": [],
      "query": [
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.5.0"
            }
          },
          "description": "Return the snapshot of the owner user's role descriptors associated with the API key.\nAn API key's actual permission is the intersection of its assigned role descriptors and the owner user's role descriptors.",
          "name": "with_limited_by",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.14.0"
            }
          },
          "description": "Determines whether to also retrieve the profile uid, for the API key owner principal, if it exists.",
          "name": "with_profile_uid",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.14.0"
            }
          },
          "description": "Determines whether aggregation names are prefixed by their respective types in the response.",
          "name": "typed_keys",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "security/query_api_keys/QueryApiKeysRequest.ts#L26-L101"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The total number of API keys found.",
            "name": "total",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The number of API keys returned in the response.",
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "A list of API key information.",
            "name": "api_keys",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ApiKey",
                  "namespace": "security._types"
                }
              }
            }
          },
          {
            "description": "The aggregations result, if requested.",
            "name": "aggregations",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "AggregateName",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ApiKeyAggregate",
                  "namespace": "security.query_api_keys"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "security.query_api_keys"
      },
      "specLocation": "security/query_api_keys/QueryApiKeysResponse.ts#L26-L45"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "An array of role descriptors for this API key. This parameter is optional. When it is not specified or is an empty array, then the API key will have a point in time snapshot of permissions of the authenticated user. If you supply role descriptors then the resultant permissions would be an intersection of API keys permissions and authenticated userâ€™s permissions thereby limiting the access scope for API keys. The structure of role descriptor is the same as the request for create role API. For more details, see create or update roles API.",
            "docId": "security-api-put-role",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/security-api-put-role.html",
            "name": "role_descriptors",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "RoleDescriptor",
                  "namespace": "security._types"
                }
              }
            }
          },
          {
            "description": "Arbitrary metadata that you want to associate with the API key. It supports nested data structure. Within the metadata object, keys beginning with _ are reserved for system usage.",
            "name": "metadata",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Metadata",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Expiration time for the API key.",
            "name": "expiration",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Update an API key.\n\nUpdates attributes of an existing API key.\nUsers can only update API keys that they created or that were granted to them.\nUse this API to update API keys created by the create API Key or grant API Key APIs.\nIf you need to apply the same update to many API keys, you can use bulk update API Keys to reduce overhead.\nItâ€™s not possible to update expired API keys, or API keys that have been invalidated by invalidate API Key.\nThis API supports updates to an API keyâ€™s access scope and metadata.\nThe access scope of an API key is derived from the `role_descriptors` you specify in the request, and a snapshot of the owner userâ€™s permissions at the time of the request.\nThe snapshot of the ownerâ€™s permissions is updated automatically on every call.\nIf you donâ€™t specify `role_descriptors` in the request, a call to this API might still change the API keyâ€™s access scope.\nThis change can occur if the owner userâ€™s permissions have changed since the API key was created or last modified.\nTo update another userâ€™s API key, use the `run_as` feature to submit a request on behalf of another user.\nIMPORTANT: Itâ€™s not possible to use an API key as the authentication credential for this API.\nTo update an API key, the owner userâ€™s credentials are required.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "security.update_api_key"
      },
      "path": [
        {
          "description": "The ID of the API key to update.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "security/update_api_key/Request.ts#L26-L67"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "If `true`, the API key was updated.\nIf `false`, the API key didnâ€™t change because no change was detected.",
            "name": "updated",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "security.update_api_key"
      },
      "specLocation": "security/update_api_key/Response.ts#L20-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Cursor to clear.",
            "name": "cursor",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Clears the SQL cursor",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "sql.clear_cursor"
      },
      "path": [],
      "query": [],
      "specLocation": "sql/clear_cursor/ClearSqlCursorRequest.ts#L22-L34"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "succeeded",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "sql.clear_cursor"
      },
      "specLocation": "sql/clear_cursor/ClearSqlCursorResponse.ts#L20-L22"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Deletes an async SQL search or a stored synchronous SQL search. If the search is still running, the API cancels it.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "sql.delete_async"
      },
      "path": [
        {
          "description": "Identifier for the search.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "sql/delete_async/SqlDeleteAsyncRequest.ts#L23-L35"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "sql.delete_async"
      },
      "specLocation": "sql/delete_async/SqlDeleteAsyncResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Returns the current status and available results for an async SQL search or stored synchronous SQL search",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "sql.get_async"
      },
      "path": [
        {
          "description": "Identifier for the search.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Separator for CSV results. The API only supports this parameter for CSV responses.",
          "name": "delimiter",
          "required": false,
          "serverDefault": ",",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Format for the response. You must specify a format using this parameter or the\nAccept HTTP header. If you specify both, the API uses this parameter.",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Retention period for the search and its results. Defaults\nto the `keep_alive` period for the original SQL search.",
          "name": "keep_alive",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for complete results. Defaults to no timeout,\nmeaning the request waits for complete search results.",
          "name": "wait_for_completion_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "sql/get_async/SqlGetAsyncRequest.ts#L24-L58"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Identifier for the search. This value is only returned for async and saved\nsynchronous searches. For CSV, TSV, and TXT responses, this value is returned\nin the `Async-ID` HTTP header.",
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "If `true`, the search is still running. If false, the search has finished.\nThis value is only returned for async and saved synchronous searches. For\nCSV, TSV, and TXT responses, this value is returned in the `Async-partial`\nHTTP header.",
            "name": "is_running",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If `true`, the response does not contain complete search results. If `is_partial`\nis `true` and `is_running` is `true`, the search is still running. If `is_partial`\nis `true` but `is_running` is `false`, the results are partial due to a failure or\ntimeout. This value is only returned for async and saved synchronous searches.\nFor CSV, TSV, and TXT responses, this value is returned in the `Async-partial` HTTP header.",
            "name": "is_partial",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Column headings for the search results. Each object is a column.",
            "name": "columns",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Column",
                  "namespace": "sql"
                }
              }
            }
          },
          {
            "description": "Cursor for the next set of paginated results. For CSV, TSV, and\nTXT responses, this value is returned in the `Cursor` HTTP header.",
            "name": "cursor",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Values for the search results.",
            "name": "rows",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Row",
                  "namespace": "sql"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "sql.get_async"
      },
      "specLocation": "sql/get_async/SqlGetAsyncResponse.ts#L23-L60"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Returns the current status of an async SQL search or a stored synchronous SQL search",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "sql.get_async_status"
      },
      "path": [
        {
          "description": "Identifier for the search.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "sql/get_async_status/SqlGetAsyncStatusRequest.ts#L23-L35"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Identifier for the search.",
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If `true`, the search is still running. If `false`, the search has finished.",
            "name": "is_running",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If `true`, the response does not contain complete search results. If `is_partial`\nis `true` and `is_running` is `true`, the search is still running. If `is_partial`\nis `true` but `is_running` is `false`, the results are partial due to a failure or\ntimeout.",
            "name": "is_partial",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Timestamp, in milliseconds since the Unix epoch, when the search started.\nThe API only returns this property for running searches.",
            "name": "start_time_in_millis",
            "required": true,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "EpochTime",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Timestamp, in milliseconds since the Unix epoch, when Elasticsearch will delete\nthe search and its results, even if the search is still running.",
            "name": "expiration_time_in_millis",
            "required": true,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "EpochTime",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "HTTP status code for the search. The API only returns this property for completed searches.",
            "name": "completion_status",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "uint",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "sql.get_async_status"
      },
      "specLocation": "sql/get_async_status/SqlGetAsyncStatusResponse.ts#L23-L55"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Default catalog (cluster) for queries. If unspecified, the queries execute on the data in the local cluster only.",
            "name": "catalog",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If true, the results in a columnar fashion: one row represents all the values of a certain column from the current page of results.",
            "name": "columnar",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Cursor used to retrieve a set of paginated results.\nIf you specify a cursor, the API only uses the `columnar` and `time_zone` request body parameters.\nIt ignores other request body parameters.",
            "name": "cursor",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The maximum number of rows (or entries) to return in one response",
            "name": "fetch_size",
            "required": false,
            "serverDefault": 1000,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Elasticsearch query DSL for additional filtering.",
            "docId": "sql-rest-filtering",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/sql-rest-filtering.html",
            "name": "filter",
            "required": false,
            "serverDefault": "none",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "SQL query to run.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The timeout before the request fails.",
            "name": "request_timeout",
            "required": false,
            "serverDefault": "90s",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The timeout before a pagination request fails.",
            "name": "page_timeout",
            "required": false,
            "serverDefault": "45s",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "ISO-8601 time zone ID for the search.",
            "docUrl": "https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html",
            "name": "time_zone",
            "required": false,
            "serverDefault": "Z",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TimeZone",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Throw an exception when encountering multiple values for a field (default) or be lenient and return the first value from the list (without any guarantees of what that will be - typically the first in natural ascending order).",
            "name": "field_multi_value_leniency",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Defines one or more runtime fields in the search request. These fields take\nprecedence over mapped fields with the same name.",
            "name": "runtime_mappings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFields",
                "namespace": "_types.mapping"
              }
            }
          },
          {
            "description": "Period to wait for complete results. Defaults to no timeout, meaning the request waits for complete search results. If the search doesnâ€™t finish within this period, the search becomes async.",
            "name": "wait_for_completion_timeout",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Values for parameters in the query.",
            "name": "params",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          },
          {
            "description": "Retention period for an async or saved synchronous search.",
            "name": "keep_alive",
            "required": false,
            "serverDefault": "5d",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "If true, Elasticsearch stores synchronous searches if you also specify the wait_for_completion_timeout parameter. If false, Elasticsearch only stores async searches that donâ€™t finish before the wait_for_completion_timeout.",
            "name": "keep_on_completion",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If true, the search can run on frozen indices. Defaults to false.",
            "name": "index_using_frozen",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Executes a SQL request",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "sql.query"
      },
      "path": [],
      "query": [
        {
          "description": "Format for the response.",
          "docId": "sql-rest-format",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/sql-rest-format.html",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SqlFormat",
              "namespace": "sql.query"
            }
          }
        }
      ],
      "specLocation": "sql/query/QuerySqlRequest.ts#L28-L122"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Identifier for the search. This value is only returned for async and saved\nsynchronous searches. For CSV, TSV, and TXT responses, this value is returned\nin the `Async-ID` HTTP header.",
            "name": "id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "If `true`, the search is still running. If false, the search has finished.\nThis value is only returned for async and saved synchronous searches. For\nCSV, TSV, and TXT responses, this value is returned in the `Async-partial`\nHTTP header.",
            "name": "is_running",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "If `true`, the response does not contain complete search results. If `is_partial`\nis `true` and `is_running` is `true`, the search is still running. If `is_partial`\nis `true` but `is_running` is `false`, the results are partial due to a failure or\ntimeout. This value is only returned for async and saved synchronous searches.\nFor CSV, TSV, and TXT responses, this value is returned in the `Async-partial` HTTP header.",
            "name": "is_partial",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Column headings for the search results. Each object is a column.",
            "name": "columns",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Column",
                  "namespace": "sql"
                }
              }
            }
          },
          {
            "description": "Cursor for the next set of paginated results. For CSV, TSV, and\nTXT responses, this value is returned in the `Cursor` HTTP header.",
            "name": "cursor",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Values for the search results.",
            "name": "rows",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Row",
                  "namespace": "sql"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "sql.query"
      },
      "specLocation": "sql/query/QuerySqlResponse.ts#L23-L60"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The maximum number of rows (or entries) to return in one response.",
            "name": "fetch_size",
            "required": false,
            "serverDefault": 1000,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Elasticsearch query DSL for additional filtering.",
            "docId": "sql-rest-filtering",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/sql-rest-filtering.html",
            "name": "filter",
            "required": false,
            "serverDefault": "none",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "SQL query to run.",
            "name": "query",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "ISO-8601 time zone ID for the search.",
            "docUrl": "https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html",
            "name": "time_zone",
            "required": false,
            "serverDefault": "Z",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TimeZone",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Translates SQL into Elasticsearch queries",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "sql.translate"
      },
      "path": [],
      "query": [],
      "specLocation": "sql/translate/TranslateSqlRequest.ts#L25-L54"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aggregations",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "AggregationContainer",
                  "namespace": "_types.aggregations"
                }
              }
            }
          },
          {
            "name": "size",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "_source",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SourceConfig",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "name": "fields",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "FieldAndFormat",
                  "namespace": "_types.query_dsl"
                }
              }
            }
          },
          {
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Sort",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "sql.translate"
      },
      "specLocation": "sql/translate/TranslateSqlResponse.ts#L27-L37"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Deletes a synonym set",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "synonyms.delete_synonym"
      },
      "path": [
        {
          "description": "The id of the synonyms set to be deleted",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "synonyms/delete_synonym/SynonymsDeleteRequest.ts#L22-L35"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "synonyms.delete_synonym"
      },
      "specLocation": "synonyms/delete_synonym/SynonymsDeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Deletes a synonym rule in a synonym set",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "synonyms.delete_synonym_rule"
      },
      "path": [
        {
          "description": "The id of the synonym set to be updated",
          "name": "set_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The id of the synonym rule to be deleted",
          "name": "rule_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "synonyms/delete_synonym_rule/SynonymRuleDeleteRequest.ts#L22-L40"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "SynonymsUpdateResult",
            "namespace": "synonyms._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "synonyms.delete_synonym_rule"
      },
      "specLocation": "synonyms/delete_synonym_rule/SynonymRuleDeleteResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Retrieves a synonym set",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "synonyms.get_synonym"
      },
      "path": [
        {
          "description": "\"The id of the synonyms set to be retrieved",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Starting offset for query rules to be retrieved",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "specifies a max number of query rules to retrieve",
          "name": "size",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "synonyms/get_synonym/SynonymsGetRequest.ts#L23-L48"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "synonyms_set",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "SynonymRuleRead",
                  "namespace": "synonyms._types"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "synonyms.get_synonym"
      },
      "specLocation": "synonyms/get_synonym/SynonymsGetResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Retrieves a synonym rule from a synonym set",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "synonyms.get_synonym_rule"
      },
      "path": [
        {
          "description": "The id of the synonym set to retrieve the synonym rule from",
          "name": "set_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The id of the synonym rule to retrieve",
          "name": "rule_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "synonyms/get_synonym_rule/SynonymRuleGetRequest.ts#L22-L40"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "SynonymRuleRead",
            "namespace": "synonyms._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "synonyms.get_synonym_rule"
      },
      "specLocation": "synonyms/get_synonym_rule/SynonymRuleGetResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Retrieves a summary of all defined synonym sets",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "synonyms.get_synonyms_sets"
      },
      "path": [],
      "query": [
        {
          "description": "Starting offset",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "specifies a max number of results to get",
          "name": "size",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "synonyms/get_synonyms_sets/SynonymsSetsGetRequest.ts#L22-L41"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "results",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "SynonymsSetItem",
                  "namespace": "synonyms.get_synonyms_sets"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "synonyms.get_synonyms_sets"
      },
      "specLocation": "synonyms/get_synonyms_sets/SynonymsSetsGetResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The synonym set information to update",
            "name": "synonyms_set",
            "required": true,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "SynonymRule",
                    "namespace": "synonyms._types"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "SynonymRule",
                      "namespace": "synonyms._types"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          }
        ]
      },
      "description": "Creates or updates a synonym set.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "synonyms.put_synonym"
      },
      "path": [
        {
          "description": "The id of the synonyms set to be created or updated",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "synonyms/put_synonym/SynonymsPutRequest.ts#L23-L42"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "result",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Result",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "reload_analyzers_details",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ReloadResult",
                "namespace": "indices.reload_search_analyzers"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "synonyms.put_synonym"
      },
      "specLocation": "synonyms/put_synonym/SynonymsPutResponse.ts#L23-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "synonyms",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SynonymString",
                "namespace": "synonyms._types"
              }
            }
          }
        ]
      },
      "description": "Creates or updates a synonym rule in a synonym set",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "synonyms.put_synonym_rule"
      },
      "path": [
        {
          "description": "The id of the synonym set to be updated with the synonym rule",
          "name": "set_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The id of the synonym rule to be updated or created",
          "name": "rule_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "synonyms/put_synonym_rule/SynonymRulePutRequest.ts#L23-L47"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "SynonymsUpdateResult",
            "namespace": "synonyms._types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "synonyms.put_synonym_rule"
      },
      "specLocation": "synonyms/put_synonym_rule/SynonymRulePutResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get task information.\nReturns information about the tasks currently executing in the cluster.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "tasks.get"
      },
      "path": [
        {
          "description": "ID of the task.",
          "name": "task_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the request blocks until the task has completed.",
          "name": "wait_for_completion",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "tasks/get/GetTaskRequest.ts#L24-L52"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "completed",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "task",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TaskInfo",
                "namespace": "tasks._types"
              }
            }
          },
          {
            "name": "response",
            "required": false,
            "type": {
              "kind": "user_defined_value"
            }
          },
          {
            "name": "error",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ErrorCause",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "tasks.get"
      },
      "specLocation": "tasks/get/GetTaskResponse.ts#L24-L31"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The string to match at the start of indexed terms. If not provided, all terms in the field are considered.",
            "name": "field",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "How many matching terms to return.",
            "name": "size",
            "required": false,
            "serverDefault": 10,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The maximum length of time to spend collecting results. Defaults to \"1s\" (one second). If the timeout is exceeded the complete flag set to false in the response and the results may be partial or empty.",
            "name": "timeout",
            "required": false,
            "serverDefault": "1s",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "When true the provided search string is matched against index terms without case sensitivity.",
            "name": "case_insensitive",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Allows to filter an index shard if the provided query rewrites to match_none.",
            "docId": "query-dsl",
            "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl.html",
            "name": "index_filter",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "The string after which terms in the index should be returned. Allows for a form of pagination if the last result from one request is passed as the search_after parameter for a subsequent request.",
            "name": "string",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "search_after",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "description": "Get terms in an index.\n\nDiscover terms that match a partial string in an index.\nThis \"terms enum\" API is designed for low-latency look-ups used in auto-complete scenarios.\n\nIf the `complete` property in the response is false, the returned terms set may be incomplete and should be treated as approximate.\nThis can occur due to a few reasons, such as a request timeout or a node error.\n\nNOTE: The terms enum API may return terms from deleted documents. Deleted documents are initially only marked as deleted. It is not until their segments are merged that documents are actually deleted. Until that happens, the terms enum API will return terms from these documents.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.terms_enum"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and index aliases to search. Wildcard (*) expressions are supported.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [],
      "specLocation": "_global/terms_enum/TermsEnumRequest.ts#L26-L75"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "_shards",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "ShardStatistics",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "terms",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          },
          {
            "name": "complete",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.terms_enum"
      },
      "specLocation": "_global/terms_enum/TermsEnumResponse.ts#L22-L28"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "An artificial document (a document not present in the index) for which you want to retrieve term vectors.",
            "name": "doc",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TDocument",
                "namespace": "_global.termvectors.Request"
              }
            }
          },
          {
            "description": "Filter terms based on their tf-idf scores.",
            "name": "filter",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Filter",
                "namespace": "_global.termvectors"
              }
            }
          },
          {
            "description": "Overrides the default per-field analyzer.",
            "name": "per_field_analyzer",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "Field",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          }
        ]
      },
      "description": "Get term vector information.\n\nGet information and statistics about terms in the fields of a particular document.",
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.termvectors.Request"
        }
      ],
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.termvectors"
      },
      "path": [
        {
          "description": "Name of the index that contains the document.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Unique identifier of the document.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Comma-separated list or wildcard expressions of fields to include in the statistics.\nUsed as the default list unless a specific field list is provided in the `completion_fields` or `fielddata_fields` parameters.",
          "name": "fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the response includes the document count, sum of document frequencies, and sum of total term frequencies.",
          "name": "field_statistics",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the response includes term offsets.",
          "name": "offsets",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the response includes term payloads.",
          "name": "payloads",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the response includes term positions.",
          "name": "positions",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies the node or shard the operation should be performed on.\nRandom by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, the request is real-time as opposed to near-real-time.",
          "docId": "realtime",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/docs-get.html#realtime",
          "name": "realtime",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the response includes term frequency and document frequency.",
          "name": "term_statistics",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, returns the document version as part of a hit.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific version type.",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/termvectors/TermVectorsRequest.ts#L33-L122"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "found",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "_id",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "_index",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "term_vectors",
            "required": false,
            "type": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "Field",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "TermVector",
                  "namespace": "_global.termvectors"
                }
              }
            }
          },
          {
            "name": "took",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "_version",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "VersionNumber",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.termvectors"
      },
      "specLocation": "_global/termvectors/TermVectorsResponse.ts#L25-L34"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Delete a transform.\nDeletes a transform.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "transform.delete_transform"
      },
      "path": [
        {
          "description": "Identifier for the transform.",
          "name": "transform_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If this value is false, the transform must be stopped before it can be deleted. If true, the transform is\ndeleted regardless of its current state.",
          "name": "force",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If this value is true, the destination index is deleted together with the transform. If false, the destination\nindex will not be deleted",
          "name": "delete_dest_index",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/delete_transform/DeleteTransformRequest.ts#L24-L58"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "transform.delete_transform"
      },
      "specLocation": "transform/delete_transform/DeleteTransformResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get transforms.\nRetrieves configuration information for transforms.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "transform.get_transform"
      },
      "path": [
        {
          "description": "Identifier for the transform. It can be a transform identifier or a\nwildcard expression. You can get information for all transforms by using\n`_all`, by specifying `*` as the `<transform_id>`, or by omitting the\n`<transform_id>`.",
          "name": "transform_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n1. Contains wildcard expressions and there are no transforms that match.\n2. Contains the _all string or no identifiers and there are no matches.\n3. Contains wildcard expressions and there are only partial matches.\n\nIf this parameter is false, the request returns a 404 status code when\nthere are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Skips the specified number of transforms.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of transforms to obtain.",
          "name": "size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Excludes fields that were automatically added when creating the\ntransform. This allows the configuration to be in an acceptable format to\nbe retrieved and then added to another cluster.",
          "name": "exclude_generated",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "transform/get_transform/GetTransformRequest.ts#L24-L73"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "transforms",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "TransformSummary",
                  "namespace": "transform.get_transform"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "transform.get_transform"
      },
      "specLocation": "transform/get_transform/GetTransformResponse.ts#L23-L25"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Get transform stats.\nRetrieves usage information for transforms.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "transform.get_transform_stats"
      },
      "path": [
        {
          "description": "Identifier for the transform. It can be a transform identifier or a\nwildcard expression. You can get information for all transforms by using\n`_all`, by specifying `*` as the `<transform_id>`, or by omitting the\n`<transform_id>`.",
          "name": "transform_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request:\n\n1. Contains wildcard expressions and there are no transforms that match.\n2. Contains the _all string or no identifiers and there are no matches.\n3. Contains wildcard expressions and there are only partial matches.\n\nIf this parameter is false, the request returns a 404 status code when\nthere are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Skips the specified number of transforms.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of transforms to obtain.",
          "name": "size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Controls the time to wait for the stats",
          "name": "timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/get_transform_stats/GetTransformStatsRequest.ts#L25-L69"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "count",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "transforms",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "TransformStats",
                  "namespace": "transform.get_transform_stats"
                }
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "transform.get_transform_stats"
      },
      "specLocation": "transform/get_transform_stats/GetTransformStatsResponse.ts#L23-L25"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The destination for the transform.",
            "name": "dest",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Destination",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Free text description of the transform.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The interval between checks for changes in the source indices when the\ntransform is running continuously. Also determines the retry interval in\nthe event of transient failures while the transform is searching or\nindexing. The minimum value is 1s and the maximum is 1h.",
            "name": "frequency",
            "required": false,
            "serverDefault": "1m",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The pivot method transforms the data by aggregating and grouping it.\nThese objects define the group by fields and the aggregation to reduce\nthe data.",
            "name": "pivot",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Pivot",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "The source of the data for the transform.",
            "name": "source",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Source",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Defines optional transform settings.",
            "name": "settings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Settings",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Defines the properties transforms require to run continuously.",
            "name": "sync",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SyncContainer",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Defines a retention policy for the transform. Data that meets the defined\ncriteria is deleted from the destination index.",
            "name": "retention_policy",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RetentionPolicyContainer",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "The latest method transforms the data by finding the latest document for\neach unique key.",
            "name": "latest",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Latest",
                "namespace": "transform._types"
              }
            }
          }
        ]
      },
      "description": "Preview a transform.\nGenerates a preview of the results that you will get when you create a transform with the same configuration.\n\nIt returns a maximum of 100 results. The calculations are based on all the current data in the source index. It also\ngenerates a list of mappings and settings for the destination index. These values are determined based on the field\ntypes of the source index and the transform aggregations.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "transform.preview_transform"
      },
      "path": [
        {
          "description": "Identifier for the transform to preview. If you specify this path parameter, you cannot provide transform\nconfiguration details in the request body.",
          "name": "transform_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a response. If no response is received before the\ntimeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/preview_transform/PreviewTransformRequest.ts#L33-L108"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "generated_dest_index",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "IndexState",
                "namespace": "indices._types"
              }
            }
          },
          {
            "name": "preview",
            "required": true,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "TTransform",
                  "namespace": "transform.preview_transform.Response"
                }
              }
            }
          }
        ]
      },
      "generics": [
        {
          "name": "TTransform",
          "namespace": "transform.preview_transform.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "transform.preview_transform"
      },
      "specLocation": "transform/preview_transform/PreviewTransformResponse.ts#L22-L27"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The destination for the transform.",
            "name": "dest",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Destination",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Free text description of the transform.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The interval between checks for changes in the source indices when the transform is running continuously. Also\ndetermines the retry interval in the event of transient failures while the transform is searching or indexing.\nThe minimum value is `1s` and the maximum is `1h`.",
            "name": "frequency",
            "required": false,
            "serverDefault": "1m",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The latest method transforms the data by finding the latest document for each unique key.",
            "name": "latest",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Latest",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Defines optional transform metadata.",
            "name": "_meta",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Metadata",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The pivot method transforms the data by aggregating and grouping it. These objects define the group by fields\nand the aggregation to reduce the data.",
            "name": "pivot",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Pivot",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Defines a retention policy for the transform. Data that meets the defined criteria is deleted from the\ndestination index.",
            "name": "retention_policy",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RetentionPolicyContainer",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Defines optional transform settings.",
            "name": "settings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Settings",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "The source of the data for the transform.",
            "name": "source",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Source",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Defines the properties transforms require to run continuously.",
            "name": "sync",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SyncContainer",
                "namespace": "transform._types"
              }
            }
          }
        ]
      },
      "description": "Create a transform.\nCreates a transform.\n\nA transform copies data from source indices, transforms it, and persists it into an entity-centric destination index. You can also think of the destination index as a two-dimensional tabular data structure (known as\na data frame). The ID for each document in the data frame is generated from a hash of the entity, so there is a\nunique row per entity.\n\nYou must choose either the latest or pivot method for your transform; you cannot use both in a single transform. If\nyou choose to use the pivot method for your transform, the entities are defined by the set of `group_by` fields in\nthe pivot object. If you choose to use the latest method, the entities are defined by the `unique_key` field values\nin the latest object.\n\nYou must have `create_index`, `index`, and `read` privileges on the destination index and `read` and\n`view_index_metadata` privileges on the source indices. When Elasticsearch security features are enabled, the\ntransform remembers which roles the user that created it had at the time of creation and uses those same roles. If\nthose roles do not have the required privileges on the source and destination indices, the transform fails when it\nattempts unauthorized operations.\n\nNOTE: You must use Kibana or this API to create a transform. Do not add a transform directly into any\n`.transform-internal*` indices using the Elasticsearch index API. If Elasticsearch security features are enabled, do\nnot give users any privileges on `.transform-internal*` indices. If you used transforms prior to 7.5, also do not\ngive users any privileges on `.data-frame-internal*` indices.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "transform.put_transform"
      },
      "path": [
        {
          "description": "Identifier for the transform. This identifier can contain lowercase alphanumeric characters (a-z and 0-9),\nhyphens, and underscores. It has a 64 character limit and must start and end with alphanumeric characters.",
          "name": "transform_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "When the transform is created, a series of validations occur to ensure its success. For example, there is a\ncheck for the existence of the source indices and a check that the destination index is not part of the source\nindex pattern. You can use this parameter to skip the checks, for example when the source index does not exist\nuntil after the transform is created. The validations are always run when you start the transform, however, with\nthe exception of privilege checks.",
          "name": "defer_validation",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/put_transform/PutTransformRequest.ts#L33-L123"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "transform.put_transform"
      },
      "specLocation": "transform/put_transform/PutTransformResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Reset a transform.\nResets a transform.\nBefore you can reset it, you must stop it; alternatively, use the `force` query parameter.\nIf the destination index was created by the transform, it is deleted.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "transform.reset_transform"
      },
      "path": [
        {
          "description": "Identifier for the transform. This identifier can contain lowercase alphanumeric characters (a-z and 0-9),\nhyphens, and underscores. It has a 64 character limit and must start and end with alphanumeric characters.",
          "name": "transform_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If this value is `true`, the transform is reset regardless of its current state. If it's `false`, the transform\nmust be stopped before it can be reset.",
          "name": "force",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "transform/reset_transform/ResetTransformRequest.ts#L23-L49"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "transform.reset_transform"
      },
      "specLocation": "transform/reset_transform/ResetTransformResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Schedule a transform to start now.\nInstantly runs a transform to process data.\n\nIf you _schedule_now a transform, it will process the new data instantly,\nwithout waiting for the configured frequency interval. After _schedule_now API is called,\nthe transform will be processed again at now + frequency unless _schedule_now API\nis called again in the meantime.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "transform.schedule_now_transform"
      },
      "path": [
        {
          "description": "Identifier for the transform.",
          "name": "transform_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Controls the time to wait for the scheduling to take place",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/schedule_now_transform/ScheduleNowTransformRequest.ts#L23-L50"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "transform.schedule_now_transform"
      },
      "specLocation": "transform/schedule_now_transform/ScheduleNowTransformResponse.ts#L21-L23"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Start a transform.\nStarts a transform.\n\nWhen you start a transform, it creates the destination index if it does not already exist. The `number_of_shards` is\nset to `1` and the `auto_expand_replicas` is set to `0-1`. If it is a pivot transform, it deduces the mapping\ndefinitions for the destination index from the source indices and the transform aggregations. If fields in the\ndestination index are derived from scripts (as in the case of `scripted_metric` or `bucket_script` aggregations),\nthe transform uses dynamic mappings unless an index template exists. If it is a latest transform, it does not deduce\nmapping definitions; it uses dynamic mappings. To use explicit mappings, create the destination index before you\nstart the transform. Alternatively, you can create an index template, though it does not affect the deduced mappings\nin a pivot transform.\n\nWhen the transform starts, a series of validations occur to ensure its success. If you deferred validation when you\ncreated the transform, they occur when you start the transformâ€”â€‹with the exception of privilege checks. When\nElasticsearch security features are enabled, the transform remembers which roles the user that created it had at the\ntime of creation and uses those same roles. If those roles do not have the required privileges on the source and\ndestination indices, the transform fails when it attempts unauthorized operations.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "transform.start_transform"
      },
      "path": [
        {
          "description": "Identifier for the transform.",
          "name": "transform_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Restricts the set of transformed entities to those changed after this time. Relative times like now-30d are supported. Only applicable for continuous transforms.",
          "name": "from",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "transform/start_transform/StartTransformRequest.ts#L24-L66"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "transform.start_transform"
      },
      "specLocation": "transform/start_transform/StartTransformResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "no_body"
      },
      "description": "Stop transforms.\nStops one or more transforms.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "transform.stop_transform"
      },
      "path": [
        {
          "description": "Identifier for the transform. To stop multiple transforms, use a comma-separated list or a wildcard expression.\nTo stop all transforms, use `_all` or `*` as the identifier.",
          "name": "transform_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Specifies what to do when the request: contains wildcard expressions and there are no transforms that match;\ncontains the `_all` string or no identifiers and there are no matches; contains wildcard expressions and there\nare only partial matches.\n\nIf it is true, the API returns a successful acknowledgement message when there are no matches. When there are\nonly partial matches, the API stops the appropriate transforms.\n\nIf it is false, the request returns a 404 status code when there are no matches or only partial matches.",
          "name": "allow_no_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If it is true, the API forcefully stops the transforms.",
          "name": "force",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a response when `wait_for_completion` is `true`. If no response is received before the\ntimeout expires, the request returns a timeout exception. However, the request continues processing and\neventually moves the transform to a STOPPED state.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If it is true, the transform does not completely stop until the current checkpoint is completed. If it is false,\nthe transform stops as soon as possible.",
          "name": "wait_for_checkpoint",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If it is true, the API blocks until the indexer state completely stops. If it is false, the API returns\nimmediately and the indexer is stopped asynchronously in the background.",
          "name": "wait_for_completion",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "transform/stop_transform/StopTransformRequest.ts#L24-L77"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "AcknowledgedResponseBase",
            "namespace": "_types"
          }
        }
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "transform.stop_transform"
      },
      "specLocation": "transform/stop_transform/StopTransformResponse.ts#L22-L24"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The destination for the transform.",
            "name": "dest",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Destination",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Free text description of the transform.",
            "name": "description",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "The interval between checks for changes in the source indices when the\ntransform is running continuously. Also determines the retry interval in\nthe event of transient failures while the transform is searching or\nindexing. The minimum value is 1s and the maximum is 1h.",
            "name": "frequency",
            "required": false,
            "serverDefault": "1m",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Defines optional transform metadata.",
            "name": "_meta",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Metadata",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "The source of the data for the transform.",
            "name": "source",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Source",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Defines optional transform settings.",
            "name": "settings",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Settings",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Defines the properties transforms require to run continuously.",
            "name": "sync",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SyncContainer",
                "namespace": "transform._types"
              }
            }
          },
          {
            "description": "Defines a retention policy for the transform. Data that meets the defined\ncriteria is deleted from the destination index.",
            "name": "retention_policy",
            "required": false,
            "type": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "RetentionPolicyContainer",
                    "namespace": "transform._types"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "null",
                    "namespace": "_builtins"
                  }
                }
              ],
              "kind": "union_of"
            }
          }
        ]
      },
      "description": "Update a transform.\nUpdates certain properties of a transform.\n\nAll updated properties except `description` do not take effect until after the transform starts the next checkpoint,\nthus there is data consistency in each checkpoint. To use this API, you must have `read` and `view_index_metadata`\nprivileges for the source indices. You must also have `index` and `read` privileges for the destination index. When\nElasticsearch security features are enabled, the transform remembers which roles the user who updated it had at the\ntime of update and runs with those privileges.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "transform.update_transform"
      },
      "path": [
        {
          "description": "Identifier for the transform.",
          "name": "transform_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "When true, deferrable validations are not run. This behavior may be\ndesired if the source index does not exist until after the transform is\ncreated.",
          "name": "defer_validation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a response. If no response is received before the\ntimeout expires, the request fails and returns an error.",
          "name": "timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/update_transform/UpdateTransformRequest.ts#L31-L106"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "authorization",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TransformAuthorization",
                "namespace": "ml._types"
              }
            }
          },
          {
            "name": "create_time",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "description",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "dest",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Destination",
                "namespace": "_global.reindex"
              }
            }
          },
          {
            "name": "frequency",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "id",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "latest",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Latest",
                "namespace": "transform._types"
              }
            }
          },
          {
            "name": "pivot",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Pivot",
                "namespace": "transform._types"
              }
            }
          },
          {
            "name": "retention_policy",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "RetentionPolicyContainer",
                "namespace": "transform._types"
              }
            }
          },
          {
            "name": "settings",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Settings",
                "namespace": "transform._types"
              }
            }
          },
          {
            "name": "source",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Source",
                "namespace": "_global.reindex"
              }
            }
          },
          {
            "name": "sync",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SyncContainer",
                "namespace": "transform._types"
              }
            }
          },
          {
            "name": "version",
            "required": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "VersionString",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "_meta",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Metadata",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "transform.update_transform"
      },
      "specLocation": "transform/update_transform/UpdateTransformResponse.ts#L33-L51"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "Set to false to disable setting 'result' in the response\nto 'noop' if no change to the document occurred.",
            "name": "detect_noop",
            "required": false,
            "serverDefault": true,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "A partial update to an existing document.",
            "name": "doc",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TPartialDocument",
                "namespace": "_global.update.Request"
              }
            }
          },
          {
            "description": "Set to true to use the contents of 'doc' as the value of 'upsert'",
            "name": "doc_as_upsert",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Script to execute to update the document.",
            "name": "script",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Script",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Set to true to execute the script whether or not the document exists.",
            "name": "scripted_upsert",
            "required": false,
            "serverDefault": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "description": "Set to false to disable source retrieval. You can also specify a comma-separated\nlist of the fields you want to retrieve.",
            "name": "_source",
            "required": false,
            "serverDefault": "true",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SourceConfig",
                "namespace": "_global.search._types"
              }
            }
          },
          {
            "description": "If the document does not already exist, the contents of 'upsert' are inserted as a\nnew document. If the document exists, the 'script' is executed.",
            "name": "upsert",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TDocument",
                "namespace": "_global.update.Request"
              }
            }
          }
        ]
      },
      "description": "Update a document.\nUpdates a document by running a script or passing a partial document.",
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.update.Request"
        },
        {
          "name": "TPartialDocument",
          "namespace": "_global.update.Request"
        }
      ],
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.update"
      },
      "path": [
        {
          "description": "Document ID",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The name of the index",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "Only perform the operation if the document has this primary term.",
          "name": "if_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Only perform the operation if the document has this sequence number.",
          "name": "if_seq_no",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SequenceNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The script language.",
          "name": "lang",
          "required": false,
          "serverDefault": "painless",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If 'true', Elasticsearch refreshes the affected shards to make this operation\nvisible to search, if 'wait_for' then wait for a refresh to make this operation\nvisible to search, if 'false' do nothing with refreshes.",
          "name": "refresh",
          "required": false,
          "serverDefault": "false",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Refresh",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, the destination must be an index alias.",
          "name": "require_alias",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specify how many times should the operation be retried when a conflict occurs.",
          "name": "retry_on_conflict",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to wait for dynamic mapping updates and active shards.\nThis guarantees Elasticsearch waits for at least the timeout before failing.\nThe actual wait time could be longer, particularly when multiple waits occur.",
          "name": "timeout",
          "required": false,
          "serverDefault": "1m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of shard copies that must be active before proceeding with the operations.\nSet to 'all' or any positive integer up to the total number of shards in the index\n(number_of_replicas+1). Defaults to 1 meaning the primary shard.",
          "name": "wait_for_active_shards",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WaitForActiveShards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Set to false to disable source retrieval. You can also specify a comma-separated\nlist of the fields you want to retrieve.",
          "name": "_source",
          "required": false,
          "serverDefault": "true",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfigParam",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Specify the source fields you want to exclude.",
          "name": "_source_excludes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specify the source fields you want to retrieve.",
          "name": "_source_includes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/update/UpdateRequest.ts#L38-L154"
    },
    {
      "body": {
        "kind": "value",
        "value": {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "TDocument",
                "namespace": "_global.update.Response"
              }
            }
          ],
          "kind": "instance_of",
          "type": {
            "name": "UpdateWriteResponseBase",
            "namespace": "_global.update"
          }
        }
      },
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.update.Response"
        }
      ],
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.update"
      },
      "specLocation": "_global/update/UpdateResponse.ts#L27-L29"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "description": "The maximum number of documents to update.",
            "name": "max_docs",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Specifies the documents to update using the Query DSL.",
            "name": "query",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          },
          {
            "description": "The script to run to update the document source or metadata when updating.",
            "name": "script",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Script",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "Slice the request manually using the provided slice ID and total number of slices.",
            "name": "slice",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "SlicedScroll",
                "namespace": "_types"
              }
            }
          },
          {
            "description": "What to do if update by query hits version conflicts: `abort` or `proceed`.",
            "name": "conflicts",
            "required": false,
            "serverDefault": "abort",
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Conflicts",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "description": "Update documents.\nUpdates documents that match the specified query.\nIf no query is specified, performs an update on every document in the data stream or index without modifying the source, which is useful for picking up mapping changes.",
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "request",
      "name": {
        "name": "Request",
        "namespace": "_global.update_by_query"
      },
      "path": [
        {
          "description": "Comma-separated list of data streams, indices, and aliases to search.\nSupports wildcards (`*`).\nTo search all data streams or indices, omit this parameter or use `*` or `_all`.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "query": [
        {
          "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.\nFor example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.",
          "name": "allow_no_indices",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Analyzer to use for the query string.",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, wildcard and prefix queries are analyzed.",
          "name": "analyze_wildcard",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "What to do if update by query hits version conflicts: `abort` or `proceed`.",
          "name": "conflicts",
          "required": false,
          "serverDefault": "abort",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Conflicts",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The default operator for query string query: `AND` or `OR`.",
          "name": "default_operator",
          "required": false,
          "serverDefault": "OR",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Field to use as default where no field prefix is given in the query string.",
          "name": "df",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Starting offset (default: 0)",
          "name": "from",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, the request returns an error if it targets a missing or closed index.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.",
          "name": "lenient",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of documents to process.\nDefaults to all documents.",
          "name": "max_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "ID of the pipeline to use to preprocess incoming documents.\nIf the index has a default ingest pipeline specified, then setting the value to `_none` disables the default ingest pipeline for this request.\nIf a final pipeline is configured it will always run, regardless of the value of this parameter.",
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies the node or shard the operation should be performed on.\nRandom by default.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Query in the Lucene query string syntax.",
          "name": "q",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, Elasticsearch refreshes affected shards to make the operation visible to search.",
          "name": "refresh",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the request cache is used for this request.",
          "name": "request_cache",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The throttle for this request in sub-requests per second.",
          "name": "requests_per_second",
          "required": false,
          "serverDefault": -1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period to retain the search context for scrolling.",
          "name": "scroll",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Size of the scroll request that powers the operation.",
          "name": "scroll_size",
          "required": false,
          "serverDefault": 1000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Explicit timeout for each search request.",
          "name": "search_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The type of the search operation. Available options: `query_then_fetch`, `dfs_query_then_fetch`.",
          "name": "search_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of slices this task should be divided into.",
          "name": "slices",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Slices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A comma-separated list of <field>:<direction> pairs.",
          "name": "sort",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Specific `tag` of the request for logging and statistical purposes.",
          "name": "stats",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Maximum number of documents to collect for each shard.\nIf a query reaches this limit, Elasticsearch terminates the query early.\nElasticsearch collects documents before sorting.\nUse with caution.\nElasticsearch applies this parameter to each shard handling the request.\nWhen possible, let Elasticsearch perform early termination automatically.\nAvoid specifying this parameter for requests that target data streams with backing indices across multiple data tiers.",
          "name": "terminate_after",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Period each update request waits for the following operations: dynamic mapping updates, waiting for active shards.",
          "name": "timeout",
          "required": false,
          "serverDefault": "1m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, returns the document version as part of a hit.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Should the document increment the version number (internal) on hit or not (reindex)",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
          "name": "wait_for_active_shards",
          "required": false,
          "serverDefault": "1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WaitForActiveShards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the request blocks until the operation is complete.",
          "name": "wait_for_completion",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/update_by_query/UpdateByQueryRequest.ts#L37-L227"
    },
    {
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "batches",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "failures",
            "required": false,
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "BulkIndexByScrollFailure",
                  "namespace": "_types"
                }
              }
            }
          },
          {
            "name": "noops",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "deleted",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "requests_per_second",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "float",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "retries",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Retries",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "task",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "TaskId",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "timed_out",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "boolean",
                "namespace": "_builtins"
              }
            }
          },
          {
            "name": "took",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "DurationValue",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "total",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "updated",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "version_conflicts",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "throttled",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "throttled_millis",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "DurationValue",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "throttled_until",
            "required": false,
            "type": {
              "kind": "instance_of",
              "type": {
                "name": "Duration",
                "namespace": "_types"
              }
            }
          },
          {
            "name": "throttled_until_millis",
            "required": false,
            "type": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "UnitMillis",
                    "namespace": "_types"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "DurationValue",
                "namespace": "_types"
              }
            }
          }
        ]
      },
      "kind": "response",
      "name": {
        "name": "Response",
        "namespace": "_global.update_by_query"
      },
      "specLocation": "_global/update_by_query/UpdateByQueryResponse.ts#L26-L45"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "index"
        },
        {
          "name": "create"
        },
        {
          "name": "update"
        },
        {
          "name": "delete"
        }
      ],
      "name": {
        "name": "OperationType",
        "namespace": "_global.bulk"
      },
      "specLocation": "_global/bulk/types.ts#L83-L88"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "search"
        },
        {
          "name": "ingest"
        },
        {
          "name": "backup"
        },
        {
          "name": "deployment_management"
        }
      ],
      "name": {
        "name": "ImpactArea",
        "namespace": "_global.health_report"
      },
      "specLocation": "_global/health_report/types.ts#L73-L78"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "green"
        },
        {
          "name": "yellow"
        },
        {
          "name": "red"
        },
        {
          "name": "unknown"
        }
      ],
      "name": {
        "name": "IndicatorHealthStatus",
        "namespace": "_global.health_report"
      },
      "specLocation": "_global/health_report/types.ts#L25-L30"
    },
    {
      "codegenNames": [
        "result",
        "failure"
      ],
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.mget.ResponseItem"
        }
      ],
      "kind": "type_alias",
      "name": {
        "name": "ResponseItem",
        "namespace": "_global.mget"
      },
      "specLocation": "_global/mget/types.ts#L57-L60",
      "type": {
        "items": [
          {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TDocument",
                  "namespace": "_global.mget.ResponseItem"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "GetResult",
              "namespace": "_global.get"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MultiGetError",
              "namespace": "_global.mget"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.get.GetResult"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "GetResult",
        "namespace": "_global.get"
      },
      "properties": [
        {
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "_ignored",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "found",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "_seq_no",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SequenceNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TDocument",
              "namespace": "_global.get.GetResult"
            }
          }
        },
        {
          "name": "_version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/get/types.ts#L25-L36"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "IndexName",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L66-L66",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Id",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L61-L61",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "long",
        "namespace": "_types"
      },
      "specLocation": "_types/Numeric.ts#L24-L24",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "number",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "SequenceNumber",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L129-L129",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "long",
          "namespace": "_types"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "VersionNumber",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L103-L103",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "long",
          "namespace": "_types"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "MultiGetError",
        "namespace": "_global.mget"
      },
      "properties": [
        {
          "name": "error",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ErrorCause",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/mget/types.ts#L62-L66"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            {
              "kind": "user_defined_value"
            }
          ],
          "meta": {
            "description": "Additional details about the error",
            "fieldname": "metadata"
          },
          "type": {
            "name": "AdditionalProperties",
            "namespace": "_spec_utils"
          }
        }
      ],
      "description": "Cause and details about a request failure. This class defines the properties common to all error types.\nAdditional details are also provided, that depend on the error type.",
      "kind": "interface",
      "name": {
        "name": "ErrorCause",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "The type of error",
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A human-readable explanation of the error, in english",
          "name": "reason",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The server stack trace. Present only if the `error_trace=true` parameter was sent with the request.",
          "name": "stack_trace",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "caused_by",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ErrorCause",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "root_cause",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ErrorCause",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "suppressed",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ErrorCause",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_types/Errors.ts#L25-L50"
    },
    {
      "description": "In some places in the specification an object consists of the union of a set of known properties\nand a set of runtime injected properties. Meaning that object should theoretically extend Dictionary but expose\na set of known keys and possibly. The object might already be part of an object graph and have a parent class.\nThis puts it into a bind that needs a client specific solution.\nWe therefore document the requirement to behave like a dictionary for unknown properties with this interface.",
      "generics": [
        {
          "name": "TKey",
          "namespace": "_spec_utils.AdditionalProperties"
        },
        {
          "name": "TValue",
          "namespace": "_spec_utils.AdditionalProperties"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "AdditionalProperties",
        "namespace": "_spec_utils"
      },
      "properties": [],
      "specLocation": "_spec_utils/behaviors.ts#L29-L37"
    },
    {
      "codegenNames": [
        "header",
        "body"
      ],
      "kind": "type_alias",
      "name": {
        "name": "RequestItem",
        "namespace": "_global.msearch"
      },
      "specLocation": "_global/msearch/types.ts#L47-L50",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "MultisearchHeader",
              "namespace": "_global.msearch"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MultisearchBody",
              "namespace": "_global.msearch"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "description": "Contains parameters used to limit or change the subsequent search body request.",
      "kind": "interface",
      "name": {
        "name": "MultisearchHeader",
        "namespace": "_global.msearch"
      },
      "properties": [
        {
          "name": "allow_no_indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "ignore_unavailable",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "request_cache",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "search_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchType",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "ccs_minimize_roundtrips",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "allow_partial_search_results",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_throttled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/msearch/types.ts#L52-L67"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ExpandWildcards",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L218-L218",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcard",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ExpandWildcard",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Match any data stream or index, including hidden ones.",
          "name": "all"
        },
        {
          "description": "Match open, non-hidden indices. Also matches any non-hidden data stream.",
          "name": "open"
        },
        {
          "description": "Match closed, non-hidden indices. Also matches any non-hidden data stream. Data streams cannot be closed.",
          "name": "closed"
        },
        {
          "description": "Match hidden data streams and hidden indices. Must be combined with open, closed, or both.",
          "name": "hidden"
        },
        {
          "description": "Wildcard expressions are not accepted.",
          "name": "none"
        }
      ],
      "name": {
        "name": "ExpandWildcard",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L202-L216"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Indices",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L67-L67",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Routing",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L72-L72",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Documents are scored using local term and document frequencies for the shard. This is usually faster but less accurate.",
          "name": "query_then_fetch"
        },
        {
          "description": "Documents are scored using global term and document frequencies across all shards. This is usually slower but more accurate.",
          "name": "dfs_query_then_fetch"
        }
      ],
      "name": {
        "name": "SearchType",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L276-L281"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MultisearchBody",
        "namespace": "_global.msearch"
      },
      "properties": [
        {
          "aliases": [
            "aggs"
          ],
          "extDocId": "search-aggregations",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations.html",
          "name": "aggregations",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AggregationContainer",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "name": "collapse",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldCollapse",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Defines the search definition using the Query DSL.",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "If true, returns detailed information about score computation as part of a hit.",
          "name": "explain",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Configuration of search extensions defined by Elasticsearch plugins.",
          "name": "ext",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "List of stored fields to return as part of a hit. If no fields are specified,\nno stored fields are included in the response. If this field is specified, the _source\nparameter defaults to false. You can pass _source: true to return both source fields\nand stored fields in the search response.",
          "name": "stored_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Array of wildcard (*) patterns. The request returns doc values for field\nnames matching these patterns in the hits.fields property of the response.",
          "name": "docvalue_fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FieldAndFormat",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.4.0"
            }
          },
          "description": "Defines the approximate kNN search to run.",
          "name": "knn",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "KnnSearch",
                  "namespace": "_types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "KnnSearch",
                    "namespace": "_types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Starting document offset. By default, you cannot page through more than 10,000\nhits using the from and size parameters. To page through more hits, use the\nsearch_after parameter.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "highlight",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Highlight",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Boosts the _score of documents from specified indices.",
          "name": "indices_boost",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "IndexName",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              }
            }
          }
        },
        {
          "description": "Minimum _score for matching documents. Documents with a lower _score are\nnot included in the search results.",
          "name": "min_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "post_filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "name": "profile",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "rescore",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "Rescore",
                  "namespace": "_global.search._types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "Rescore",
                    "namespace": "_global.search._types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Retrieve a script evaluation (based on different fields) for each hit.",
          "name": "script_fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ScriptField",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "search_after",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortResults",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of hits to return. By default, you cannot page through more\nthan 10,000 hits using the from and size parameters. To page through more\nhits, use the search_after parameter.",
          "name": "size",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "docId": "sort-search-results",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/sort-search-results.html",
          "name": "sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Sort",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates which source fields are returned for matching documents. These\nfields are returned in the hits._source property of the search response.",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfig",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Array of wildcard (*) patterns. The request returns values for field names\nmatching these patterns in the hits.fields property of the response.",
          "name": "fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FieldAndFormat",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Maximum number of documents to collect for each shard. If a query reaches this\nlimit, Elasticsearch terminates the query early. Elasticsearch collects documents\nbefore sorting. Defaults to 0, which does not terminate query execution early.",
          "name": "terminate_after",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Stats groups to associate with the search. Each group maintains a statistics\naggregation for its associated searches. You can retrieve these stats using\nthe indices stats API.",
          "name": "stats",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Specifies the period of time to wait for a response from each shard. If no response\nis received before the timeout expires, the request fails and returns an error.\nDefaults to no timeout.",
          "name": "timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, calculate and return document scores, even if the scores are not used for sorting.",
          "name": "track_scores",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Number of hits matching the query to count accurately. If true, the exact\nnumber of hits is returned at the cost of some performance. If false, the\nresponse does not include the total number of hits matching the query.\nDefaults to 10,000 hits.",
          "name": "track_total_hits",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrackHits",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "If true, returns document version as part of a hit.",
          "name": "version",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Defines one or more runtime fields in the search request. These fields take\nprecedence over mapped fields with the same name.",
          "name": "runtime_mappings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RuntimeFields",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "description": "If true, returns sequence number and primary term of the last modification\nof each hit. See Optimistic concurrency control.",
          "name": "seq_no_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Limits the search to a point in time (PIT). If you provide a PIT, you\ncannot specify an <index> in the request path.",
          "name": "pit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PointInTimeReference",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "suggest",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Suggester",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_global/msearch/types.ts#L70-L204"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AggregationContainer",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "aliases": [
            "aggs"
          ],
          "containerProperty": true,
          "description": "Sub-aggregations for this aggregation.\nOnly applies to bucket aggregations.",
          "name": "aggregations",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AggregationContainer",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "containerProperty": true,
          "name": "meta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A bucket aggregation returning a form of adjacency matrix.\nThe request provides a collection of named filter expressions, similar to the `filters` aggregation.\nEach bucket in the response represents a non-empty cell in the matrix of intersecting filters.",
          "extDocId": "search-aggregations-bucket-adjacency-matrix-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-adjacency-matrix-aggregation.html",
          "name": "adjacency_matrix",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AdjacencyMatrixAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket aggregation similar to the date histogram, except instead of providing an interval to use as the width of each bucket, a target number of buckets is provided.",
          "extDocId": "search-aggregations-bucket-autodatehistogram-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-autodatehistogram-aggregation.html",
          "name": "auto_date_histogram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AutoDateHistogramAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single-value metrics aggregation that computes the average of numeric values that are extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-avg-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-avg-aggregation.html",
          "name": "avg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AverageAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A sibling pipeline aggregation which calculates the mean value of a specified metric in a sibling aggregation.\nThe specified metric must be numeric and the sibling aggregation must be a multi-bucket aggregation.",
          "extDocId": "search-aggregations-pipeline-avg-bucket-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-avg-bucket-aggregation.html",
          "name": "avg_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AverageBucketAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A metrics aggregation that computes a box plot of numeric values extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-boxplot-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-boxplot-aggregation.html",
          "name": "boxplot",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BoxplotAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A parent pipeline aggregation which runs a script which can perform per bucket computations on metrics in the parent multi-bucket aggregation.",
          "extDocId": "search-aggregations-pipeline-bucket-script-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-bucket-script-aggregation.html",
          "name": "bucket_script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BucketScriptAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A parent pipeline aggregation which runs a script to determine whether the current bucket will be retained in the parent multi-bucket aggregation.",
          "extDocId": "search-aggregations-pipeline-bucket-selector-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-bucket-selector-aggregation.html",
          "name": "bucket_selector",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BucketSelectorAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A parent pipeline aggregation which sorts the buckets of its parent multi-bucket aggregation.",
          "extDocId": "search-aggregations-pipeline-bucket-sort-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-bucket-sort-aggregation.html",
          "name": "bucket_sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BucketSortAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "stability": "experimental"
            }
          },
          "description": "A sibling pipeline aggregation which runs a two sample Kolmogorovâ€“Smirnov test (\"K-S test\") against a provided distribution and the distribution implied by the documents counts in the configured sibling aggregation.",
          "extDocId": "search-aggregations-bucket-count-ks-test-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-count-ks-test-aggregation.html",
          "name": "bucket_count_ks_test",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BucketKsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "stability": "experimental"
            }
          },
          "description": "A sibling pipeline aggregation which runs a correlation function on the configured sibling multi-bucket aggregation.",
          "extDocId": "search-aggregations-bucket-correlation-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-correlation-aggregation.html",
          "name": "bucket_correlation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BucketCorrelationAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single-value metrics aggregation that calculates an approximate count of distinct values.",
          "extDocId": "search-aggregations-metrics-cardinality-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-cardinality-aggregation.html",
          "name": "cardinality",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CardinalityAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "stability": "experimental"
            }
          },
          "description": "A multi-bucket aggregation that groups semi-structured text into buckets.",
          "extDocId": "search-aggregations-bucket-categorize-text-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-categorize-text-aggregation.html",
          "name": "categorize_text",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CategorizeTextAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single bucket aggregation that selects child documents that have the specified type, as defined in a `join` field.",
          "extDocId": "search-aggregations-bucket-children-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-children-aggregation.html",
          "name": "children",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ChildrenAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket aggregation that creates composite buckets from different sources.\nUnlike the other multi-bucket aggregations, you can use the `composite` aggregation to paginate *all* buckets from a multi-level aggregation efficiently.",
          "name": "composite",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CompositeAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A parent pipeline aggregation which calculates the cumulative cardinality in a parent `histogram` or `date_histogram` aggregation.",
          "extDocId": "search-aggregations-pipeline-cumulative-cardinality-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-cumulative-cardinality-aggregation.html",
          "name": "cumulative_cardinality",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CumulativeCardinalityAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A parent pipeline aggregation which calculates the cumulative sum of a specified metric in a parent `histogram` or `date_histogram` aggregation.",
          "extDocId": "search-aggregations-pipeline-cumulative-sum-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-cumulative-sum-aggregation.html",
          "name": "cumulative_sum",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CumulativeSumAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket values source based aggregation that can be applied on date values or date range values extracted from the documents.\nIt dynamically builds fixed size (interval) buckets over the values.",
          "extDocId": "search-aggregations-bucket-datehistogram-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-datehistogram-aggregation.html",
          "name": "date_histogram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateHistogramAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket value source based aggregation that enables the user to define a set of date ranges - each representing a bucket.",
          "extDocId": "search-aggregations-bucket-daterange-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-daterange-aggregation.html",
          "name": "date_range",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateRangeAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A parent pipeline aggregation which calculates the derivative of a specified metric in a parent `histogram` or `date_histogram` aggregation.",
          "extDocId": "search-aggregations-pipeline-derivative-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-derivative-aggregation.html",
          "name": "derivative",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DerivativeAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A filtering aggregation used to limit any sub aggregations' processing to a sample of the top-scoring documents.\nSimilar to the `sampler` aggregation, but adds the ability to limit the number of matches that share a common value.",
          "extDocId": "search-aggregations-bucket-diversified-sampler-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-diversified-sampler-aggregation.html",
          "name": "diversified_sampler",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DiversifiedSamplerAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-value metrics aggregation that computes stats over numeric values extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-extendedstats-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-extendedstats-aggregation.html",
          "name": "extended_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExtendedStatsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A sibling pipeline aggregation which calculates a variety of stats across all bucket of a specified metric in a sibling aggregation.",
          "extDocId": "search-aggregations-pipeline-extended-stats-bucket-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-extended-stats-bucket-aggregation.html",
          "name": "extended_stats_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExtendedStatsBucketAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A bucket aggregation which finds frequent item sets, a form of association rules mining that identifies items that often occur together.",
          "extDocId": "search-aggregations-bucket-frequent-item-sets-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-frequent-item-sets-aggregation.html",
          "name": "frequent_item_sets",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FrequentItemSetsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single bucket aggregation that narrows the set of documents to those that match a query.",
          "extDocId": "search-aggregations-bucket-filter-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-filter-aggregation.html",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "A multi-bucket aggregation where each bucket contains the documents that match a query.",
          "extDocId": "search-aggregations-bucket-filters-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-filters-aggregation.html",
          "name": "filters",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FiltersAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A metric aggregation that computes the geographic bounding box containing all values for a Geopoint or Geoshape field.",
          "extDocId": "search-aggregations-metrics-geobounds-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-geobounds-aggregation.html",
          "name": "geo_bounds",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoBoundsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A metric aggregation that computes the weighted centroid from all coordinate values for geo fields.",
          "extDocId": "search-aggregations-metrics-geocentroid-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-geocentroid-aggregation.html",
          "name": "geo_centroid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoCentroidAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket aggregation that works on `geo_point` fields.\nEvaluates the distance of each document value from an origin point and determines the buckets it belongs to, based on ranges defined in the request.",
          "extDocId": "search-aggregations-bucket-geodistance-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-geodistance-aggregation.html",
          "name": "geo_distance",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoDistanceAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket aggregation that groups `geo_point` and `geo_shape` values into buckets that represent a grid.\nEach cell is labeled using a geohash which is of user-definable precision.",
          "extDocId": "search-aggregations-bucket-geohashgrid-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-geohashgrid-aggregation.html",
          "name": "geohash_grid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoHashGridAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Aggregates all `geo_point` values within a bucket into a `LineString` ordered by the chosen sort field.",
          "extDocId": "search-aggregations-metrics-geo-line",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-geo-line.html",
          "name": "geo_line",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLineAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket aggregation that groups `geo_point` and `geo_shape` values into buckets that represent a grid.\nEach cell corresponds to a map tile as used by many online map sites.",
          "extDocId": "search-aggregations-bucket-geotilegrid-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-geotilegrid-aggregation.html",
          "name": "geotile_grid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoTileGridAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket aggregation that groups `geo_point` and `geo_shape` values into buckets that represent a grid.\nEach cell corresponds to a H3 cell index and is labeled using the H3Index representation.",
          "extDocId": "search-aggregations-bucket-geohexgrid-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-geohexgrid-aggregation.html",
          "name": "geohex_grid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeohexGridAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Defines a single bucket of all the documents within the search execution context.\nThis context is defined by the indices and the document types youâ€™re searching on, but is not influenced by the search query itself.",
          "extDocId": "search-aggregations-bucket-global-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-global-aggregation.html",
          "name": "global",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GlobalAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket values source based aggregation that can be applied on numeric values or numeric range values extracted from the documents.\nIt dynamically builds fixed size (interval) buckets over the values.",
          "extDocId": "search-aggregations-bucket-histogram-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-histogram-aggregation.html",
          "name": "histogram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HistogramAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket value source based aggregation that enables the user to define a set of IP ranges - each representing a bucket.",
          "extDocId": "search-aggregations-bucket-iprange-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-iprange-aggregation.html",
          "name": "ip_range",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IpRangeAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A bucket aggregation that groups documents based on the network or sub-network of an IP address.",
          "extDocId": "search-aggregations-bucket-ipprefix-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-ipprefix-aggregation.html",
          "name": "ip_prefix",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IpPrefixAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A parent pipeline aggregation which loads a pre-trained model and performs inference on the collated result fields from the parent bucket aggregation.",
          "extDocId": "search-aggregations-pipeline-inference-bucket-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-inference-bucket-aggregation.html",
          "name": "inference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "InferenceAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "line",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLineAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A numeric aggregation that computes the following statistics over a set of document fields: `count`, `mean`, `variance`, `skewness`, `kurtosis`, `covariance`, and `covariance`.",
          "extDocId": "search-aggregations-matrix-stats-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-matrix-stats-aggregation.html",
          "name": "matrix_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MatrixStatsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single-value metrics aggregation that returns the maximum value among the numeric values extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-max-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-max-aggregation.html",
          "name": "max",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MaxAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A sibling pipeline aggregation which identifies the bucket(s) with the maximum value of a specified metric in a sibling aggregation and outputs both the value and the key(s) of the bucket(s).",
          "extDocId": "search-aggregations-pipeline-max-bucket-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-max-bucket-aggregation.html",
          "name": "max_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MaxBucketAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single-value aggregation that approximates the median absolute deviation of its search results.",
          "extDocId": "search-aggregations-metrics-median-absolute-deviation-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-median-absolute-deviation-aggregation.html",
          "name": "median_absolute_deviation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MedianAbsoluteDeviationAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single-value metrics aggregation that returns the minimum value among numeric values extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-min-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-min-aggregation.html",
          "name": "min",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A sibling pipeline aggregation which identifies the bucket(s) with the minimum value of a specified metric in a sibling aggregation and outputs both the value and the key(s) of the bucket(s).",
          "extDocId": "search-aggregations-pipeline-min-bucket-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-min-bucket-aggregation.html",
          "name": "min_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinBucketAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A field data based single bucket aggregation, that creates a bucket of all documents in the current document set context that are missing a field value (effectively, missing a field or having the configured NULL value set).",
          "extDocId": "search-aggregations-bucket-missing-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-missing-aggregation.html",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MissingAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "moving_avg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MovingAverageAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Given an ordered series of percentiles, \"slides\" a window across those percentiles and computes cumulative percentiles.",
          "extDocId": "search-aggregations-pipeline-moving-percentiles-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-moving-percentiles-aggregation.html",
          "name": "moving_percentiles",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MovingPercentilesAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Given an ordered series of data, \"slides\" a window across the data and runs a custom script on each window of data.\nFor convenience, a number of common functions are predefined such as `min`, `max`, and moving averages.",
          "extDocId": "search-aggregations-pipeline-movfn-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-movfn-aggregation.html",
          "name": "moving_fn",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MovingFunctionAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket value source based aggregation where buckets are dynamically built - one per unique set of values.",
          "extDocId": "search-aggregations-bucket-multi-terms-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-multi-terms-aggregation.html",
          "name": "multi_terms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A special single bucket aggregation that enables aggregating nested documents.",
          "extDocId": "search-aggregations-bucket-nested-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-nested-aggregation.html",
          "name": "nested",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NestedAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A parent pipeline aggregation which calculates the specific normalized/rescaled value for a specific bucket value.",
          "extDocId": "search-aggregations-pipeline-normalize-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-normalize-aggregation.html",
          "name": "normalize",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NormalizeAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A special single bucket aggregation that selects parent documents that have the specified type, as defined in a `join` field.",
          "extDocId": "search-aggregations-bucket-parent-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-parent-aggregation.html",
          "name": "parent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ParentAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-value metrics aggregation that calculates one or more percentile ranks over numeric values extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-percentile-rank-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-percentile-rank-aggregation.html",
          "name": "percentile_ranks",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PercentileRanksAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-value metrics aggregation that calculates one or more percentiles over numeric values extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-percentile-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-percentile-aggregation.html",
          "name": "percentiles",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PercentilesAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A sibling pipeline aggregation which calculates percentiles across all bucket of a specified metric in a sibling aggregation.",
          "extDocId": "search-aggregations-pipeline-percentiles-bucket-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-percentiles-bucket-aggregation.html",
          "name": "percentiles_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PercentilesBucketAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket value source based aggregation that enables the user to define a set of ranges - each representing a bucket.",
          "extDocId": "search-aggregations-bucket-range-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-range-aggregation.html",
          "name": "range",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RangeAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket value source based aggregation which finds \"rare\" termsâ€‰â€”â€‰terms that are at the long-tail of the distribution and are not frequent.",
          "extDocId": "search-aggregations-bucket-rare-terms-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-rare-terms-aggregation.html",
          "name": "rare_terms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RareTermsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Calculates a rate of documents or a field in each bucket.\nCan only be used inside a `date_histogram` or `composite` aggregation.",
          "extDocId": "search-aggregations-metrics-rate-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-rate-aggregation.html",
          "name": "rate",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RateAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A special single bucket aggregation that enables aggregating on parent documents from nested documents.\nShould only be defined inside a `nested` aggregation.",
          "extDocId": "search-aggregations-bucket-reverse-nested-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-reverse-nested-aggregation.html",
          "name": "reverse_nested",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ReverseNestedAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A filtering aggregation used to limit any sub aggregations' processing to a sample of the top-scoring documents.",
          "extDocId": "search-aggregations-bucket-sampler-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-sampler-aggregation.html",
          "name": "sampler",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SamplerAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A metric aggregation that uses scripts to provide a metric output.",
          "extDocId": "search-aggregations-metrics-scripted-metric-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-scripted-metric-aggregation.html",
          "name": "scripted_metric",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptedMetricAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "An aggregation that subtracts values in a time series from themselves at different time lags or periods.",
          "extDocId": "search-aggregations-pipeline-serialdiff-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-serialdiff-aggregation.html",
          "name": "serial_diff",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SerialDifferencingAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Returns interesting or unusual occurrences of terms in a set.",
          "extDocId": "search-aggregations-bucket-significantterms-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-significantterms-aggregation.html",
          "name": "significant_terms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SignificantTermsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Returns interesting or unusual occurrences of free-text terms in a set.",
          "extDocId": "search-aggregations-bucket-significanttext-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-significanttext-aggregation.html",
          "name": "significant_text",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SignificantTextAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-value metrics aggregation that computes stats over numeric values extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-stats-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-stats-aggregation.html",
          "name": "stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StatsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A sibling pipeline aggregation which calculates a variety of stats across all bucket of a specified metric in a sibling aggregation.",
          "extDocId": "search-aggregations-pipeline-stats-bucket-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-stats-bucket-aggregation.html",
          "name": "stats_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StatsBucketAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-value metrics aggregation that computes statistics over string values extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-string-stats-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-string-stats-aggregation.html",
          "name": "string_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StringStatsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single-value metrics aggregation that sums numeric values that are extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-sum-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-sum-aggregation.html",
          "name": "sum",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SumAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A sibling pipeline aggregation which calculates the sum of a specified metric across all buckets in a sibling aggregation.",
          "extDocId": "search-aggregations-pipeline-sum-bucket-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-sum-bucket-aggregation.html",
          "name": "sum_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SumBucketAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket value source based aggregation where buckets are dynamically built - one per unique value.",
          "extDocId": "search-aggregations-bucket-terms-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-terms-aggregation.html",
          "name": "terms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "stability": "experimental"
            }
          },
          "description": "The time series aggregation queries data created using a time series index.\nThis is typically data such as metrics or other data streams with a time component, and requires creating an index using the time series mode.",
          "extDocId": "search-aggregations-bucket-time-series-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-time-series-aggregation.html",
          "name": "time_series",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeSeriesAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A metric aggregation that returns the top matching documents per bucket.",
          "extDocId": "search-aggregations-metrics-top-hits-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-top-hits-aggregation.html",
          "name": "top_hits",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TopHitsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A metrics aggregation that performs a statistical hypothesis test in which the test statistic follows a Studentâ€™s t-distribution under the null hypothesis on numeric values extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-ttest-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-ttest-aggregation.html",
          "name": "t_test",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TTestAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A metric aggregation that selects metrics from the document with the largest or smallest sort value.",
          "extDocId": "search-aggregations-metrics-top-metrics",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-top-metrics.html",
          "name": "top_metrics",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TopMetricsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single-value metrics aggregation that counts the number of values that are extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-valuecount-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-valuecount-aggregation.html",
          "name": "value_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ValueCountAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single-value metrics aggregation that computes the weighted average of numeric values that are extracted from the aggregated documents.",
          "extDocId": "search-aggregations-metrics-weight-avg-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-weight-avg-aggregation.html",
          "name": "weighted_avg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WeightedAverageAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket aggregation similar to the histogram, except instead of providing an interval to use as the width of each bucket, a target number of buckets is provided.",
          "extDocId": "search-aggregations-bucket-variablewidthhistogram-aggregation",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-variablewidthhistogram-aggregation.html",
          "name": "variable_width_histogram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VariableWidthHistogramAggregation",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/AggregationContainer.ts#L107-L533",
      "variants": {
        "kind": "container",
        "nonExhaustive": true
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Metadata",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L100-L100",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "string",
            "namespace": "_builtins"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "kind": "user_defined_value"
        }
      }
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AdjacencyMatrixAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Filters used to create buckets.\nAt least one filter is required.",
          "name": "filters",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Separator used to concatenate filter names. Defaults to &.",
          "name": "separator",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L60-L70"
    },
    {
      "description": "Base type for bucket aggregations. These aggregations also accept sub-aggregations.",
      "inherits": {
        "type": {
          "name": "Aggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BucketAggregationBase",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/bucket.ts#L53-L58"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Aggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregation.ts#L20-L20"
    },
    {
      "extDocId": "query-dsl",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl.html",
      "kind": "interface",
      "name": {
        "name": "QueryContainer",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "matches documents matching boolean combinations of other queries.",
          "extDocId": "query-dsl-bool-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-bool-query.html",
          "name": "bool",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BoolQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents matching a `positive` query while reducing the relevance score of documents that also match a `negative` query.",
          "extDocId": "query-dsl-boosting-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-boosting-query.html",
          "name": "boosting",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BoostingQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "deprecation": {
            "description": "",
            "version": "7.3.0"
          },
          "name": "common",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "CommonTermsQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.13.0"
            }
          },
          "description": "The `combined_fields` query supports searching multiple text fields as if their contents had been indexed into one combined field.",
          "extDocId": "query-dsl-combined-fields-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-combined-fields-query.html",
          "name": "combined_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CombinedFieldsQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Wraps a filter query and returns every matching document with a relevance score equal to the `boost` parameter value.",
          "extDocId": "query-dsl-constant-score-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-constant-score-query.html",
          "name": "constant_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConstantScoreQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents matching one or more wrapped queries, called query clauses or clauses.\nIf a returned document matches multiple query clauses, the `dis_max` query assigns the document the highest relevance score from any matching clause, plus a tie breaking increment for any additional matching subqueries.",
          "extDocId": "query-dsl-dis-max-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-dis-max-query.html",
          "name": "dis_max",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DisMaxQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Boosts the relevance score of documents closer to a provided origin date or point.\nFor example, you can use this query to give more weight to documents closer to a certain date or location.",
          "extDocId": "query-dsl-distance-feature-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-distance-feature-query.html",
          "name": "distance_feature",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DistanceFeatureQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that contain an indexed value for a field.",
          "extDocId": "query-dsl-exists-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-exists-query.html",
          "name": "exists",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExistsQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "The `function_score` enables you to modify the score of documents that are retrieved by a query.",
          "extDocId": "query-dsl-function-score-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-function-score-query.html",
          "name": "function_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FunctionScoreQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that contain terms similar to the search term, as measured by a Levenshtein edit distance.",
          "extDocId": "query-dsl-fuzzy-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-fuzzy-query.html",
          "name": "fuzzy",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FuzzyQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Matches geo_point and geo_shape values that intersect a bounding box.",
          "extDocId": "query-dsl-geo-bounding-box-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-geo-bounding-box-query.html",
          "name": "geo_bounding_box",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoBoundingBoxQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches `geo_point` and `geo_shape` values within a given distance of a geopoint.",
          "extDocId": "query-dsl-geo-distance-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-geo-distance-query.html",
          "name": "geo_distance",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoDistanceQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "deprecation": {
            "description": "Use geo-shape instead.",
            "version": "7.12.0"
          },
          "name": "geo_polygon",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoPolygonQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Filter documents indexed using either the `geo_shape` or the `geo_point` type.",
          "extDocId": "query-dsl-geo-shape-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-geo-shape-query.html",
          "name": "geo_shape",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoShapeQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns parent documents whose joined child documents match a provided query.",
          "extDocId": "query-dsl-has-child-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-has-child-query.html",
          "name": "has_child",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HasChildQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns child documents whose joined parent document matches a provided query.",
          "extDocId": "query-dsl-has-parent-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-has-parent-query.html",
          "name": "has_parent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HasParentQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents based on their IDs.\nThis query uses document IDs stored in the `_id` field.",
          "extDocId": "query-dsl-ids-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-ids-query.html",
          "name": "ids",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IdsQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents based on the order and proximity of matching terms.",
          "extDocId": "query-dsl-intervals-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-intervals-query.html",
          "name": "intervals",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IntervalsQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Finds the k nearest vectors to a query vector, as measured by a similarity\nmetric. knn query finds nearest vectors through approximate search on indexed\ndense_vectors.",
          "extDocId": "query-dsl-knn-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-knn-query.html",
          "name": "knn",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "KnnQuery",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Returns documents that match a provided text, number, date or boolean value.\nThe provided text is analyzed before matching.",
          "extDocId": "query-dsl-match-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-query.html",
          "name": "match",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "MatchQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Matches all documents, giving them all a `_score` of 1.0.",
          "extDocId": "query-dsl-match-all-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-all-query.html",
          "name": "match_all",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MatchAllQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Analyzes its input and constructs a `bool` query from the terms.\nEach term except the last is used in a `term` query.\nThe last term is used in a prefix query.",
          "extDocId": "query-dsl-match-bool-prefix-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-bool-prefix-query.html",
          "name": "match_bool_prefix",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "MatchBoolPrefixQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Matches no documents.",
          "extDocId": "query-dsl-match-none-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-all-query.html#query-dsl-match-none-query",
          "name": "match_none",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MatchNoneQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Analyzes the text and creates a phrase query out of the analyzed text.",
          "extDocId": "query-dsl-match-query-phrase",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-query-phrase.html",
          "name": "match_phrase",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "MatchPhraseQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Returns documents that contain the words of a provided text, in the same order as provided.\nThe last term of the provided text is treated as a prefix, matching any words that begin with that term.",
          "extDocId": "query-dsl-match-query-phrase-prefix",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-query-phrase-prefix.html",
          "name": "match_phrase_prefix",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "MatchPhrasePrefixQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Returns documents that are \"like\" a given set of documents.",
          "extDocId": "query-dsl-mlt-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-mlt-query.html",
          "name": "more_like_this",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MoreLikeThisQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Enables you to search for a provided text, number, date or boolean value across multiple fields.\nThe provided text is analyzed before matching.",
          "extDocId": "query-dsl-multi-match-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-match-query.html",
          "name": "multi_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiMatchQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Wraps another query to search nested fields.\nIf an object matches the search, the nested query returns the root parent document.",
          "extDocId": "query-dsl-nested-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-nested-query.html",
          "name": "nested",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NestedQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns child documents joined to a specific parent document.",
          "extDocId": "query-dsl-parent-id-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-parent-id-query.html",
          "name": "parent_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ParentIdQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches queries stored in an index.",
          "extDocId": "query-dsl-percolate-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-percolate-query.html",
          "name": "percolate",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PercolateQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Promotes selected documents to rank higher than those matching a given query.",
          "extDocId": "query-dsl-pinned-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-pinned-query.html",
          "name": "pinned",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PinnedQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that contain a specific prefix in a provided field.",
          "extDocId": "query-dsl-prefix-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-prefix-query.html",
          "name": "prefix",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "PrefixQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Returns documents based on a provided query string, using a parser with a strict syntax.",
          "extDocId": "query-dsl-query-string-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-query-string-query.html",
          "name": "query_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryStringQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that contain terms within a provided range.",
          "extDocId": "query-dsl-range-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-range-query.html",
          "name": "range",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RangeQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Boosts the relevance score of documents based on the numeric value of a `rank_feature` or `rank_features` field.",
          "extDocId": "query-dsl-rank-feature-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-rank-feature-query.html",
          "name": "rank_feature",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankFeatureQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that contain terms matching a regular expression.",
          "extDocId": "query-dsl-regexp-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-regexp-query.html",
          "name": "regexp",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RegexpQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "name": "rule",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RuleQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Filters documents based on a provided script.\nThe script query is typically used in a filter context.",
          "extDocId": "query-dsl-script-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-script-query.html",
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Uses a script to provide a custom score for returned documents.",
          "extDocId": "query-dsl-script-score-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-script-score-query.html",
          "name": "script_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptScoreQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.15.0"
            }
          },
          "description": "A semantic query to semantic_text field types",
          "name": "semantic",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SemanticQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Queries documents that contain fields indexed using the `shape` type.",
          "extDocId": "query-dsl-shape-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-shape-query.html",
          "name": "shape",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShapeQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents based on a provided query string, using a parser with a limited but fault-tolerant syntax.",
          "extDocId": "query-dsl-simple-query-string-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-simple-query-string-query.html",
          "name": "simple_query_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SimpleQueryStringQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns matches which enclose another span query.",
          "extDocId": "query-dsl-span-containing-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-containing-query.html",
          "name": "span_containing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanContainingQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Wrapper to allow span queries to participate in composite single-field span queries by _lying_ about their search field.",
          "extDocId": "query-dsl-span-field-masking-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-field-masking-query.html",
          "name": "span_field_masking",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanFieldMaskingQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches spans near the beginning of a field.",
          "extDocId": "query-dsl-span-first-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-first-query.html",
          "name": "span_first",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanFirstQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Allows you to wrap a multi term query (one of `wildcard`, `fuzzy`, `prefix`, `range`, or `regexp` query) as a `span` query, so it can be nested.",
          "extDocId": "query-dsl-span-multi-term-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-multi-term-query.html",
          "name": "span_multi",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanMultiTermQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches spans which are near one another.\nYou can specify `slop`, the maximum number of intervening unmatched positions, as well as whether matches are required to be in-order.",
          "extDocId": "query-dsl-span-near-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-near-query.html",
          "name": "span_near",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanNearQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Removes matches which overlap with another span query or which are within x tokens before (controlled by the parameter `pre`) or y tokens after (controlled by the parameter `post`) another span query.",
          "extDocId": "query-dsl-span-not-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-not-query.html",
          "name": "span_not",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanNotQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches the union of its span clauses.",
          "extDocId": "query-dsl-span-or-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-or-query.html",
          "name": "span_or",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanOrQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches spans containing a term.",
          "extDocId": "query-dsl-span-term-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-term-query.html",
          "name": "span_term",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SpanTermQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Returns matches which are enclosed inside another span query.",
          "extDocId": "query-dsl-span-within-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-within-query.html",
          "name": "span_within",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanWithinQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.15.0"
            }
          },
          "description": "Using input query vectors or a natural language processing model to convert a query into a list of token-weight pairs, queries against a sparse vector field.",
          "extDocId": "query-dsl-sparse-vector-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-sparse-vector-query.html",
          "name": "sparse_vector",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SparseVectorQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that contain an exact term in a provided field.\nTo return a document, the query term must exactly match the queried field's value, including whitespace and capitalization.",
          "extDocId": "query-dsl-term-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-term-query.html",
          "name": "term",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TermQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Returns documents that contain one or more exact terms in a provided field.\nTo return a document, one or more terms must exactly match a field value, including whitespace and capitalization.",
          "extDocId": "query-dsl-terms-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-terms-query.html",
          "name": "terms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that contain a minimum number of exact terms in a provided field.\nTo return a document, a required number of terms must exactly match the field values, including whitespace and capitalization.",
          "extDocId": "query-dsl-terms-set-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-terms-set-query.html",
          "name": "terms_set",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TermsSetQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.8.0"
            }
          },
          "deprecation": {
            "description": "",
            "version": "8.15.0"
          },
          "description": "Uses a natural language processing model to convert the query text into a list of token-weight pairs which are then used in a query against a sparse vector or rank features field.",
          "extDocId": "query-dsl-text-expansion-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-text-expansion-query.html",
          "name": "text_expansion",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TextExpansionQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.13.0"
            }
          },
          "deprecation": {
            "description": "",
            "version": "8.15.0"
          },
          "description": "Supports returning text_expansion query results by sending in precomputed tokens with the query.",
          "extDocId": "query-dsl-weighted-tokens-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-weighted-tokens-query.html",
          "name": "weighted_tokens",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "WeightedTokensQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Returns documents that contain terms matching a wildcard pattern.",
          "extDocId": "query-dsl-wildcard-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-wildcard-query.html",
          "name": "wildcard",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "WildcardQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "A query that accepts any other query as base64 encoded string.",
          "extDocId": "query-dsl-wrapper-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-wrapper-query.html",
          "name": "wrapper",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WrapperQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "deprecation": {
            "description": "https://www.elastic.co/guide/en/elasticsearch/reference/7.x/removal-of-types.html",
            "version": "7.0.0"
          },
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TypeQuery",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/abstractions.ts#L102-L427",
      "variants": {
        "kind": "container",
        "nonExhaustive": true
      }
    },
    {
      "extDocId": "query-dsl-bool-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-bool-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BoolQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "The clause (query) must appear in matching documents.\nHowever, unlike `must`, the score of the query will be ignored.",
          "name": "filter",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "QueryContainer",
                  "namespace": "_types.query_dsl"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "QueryContainer",
                    "namespace": "_types.query_dsl"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Specifies the number or percentage of `should` clauses returned documents must match.",
          "docId": "query-dsl-minimum-should-match",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-minimum-should-match.html",
          "name": "minimum_should_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinimumShouldMatch",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The clause (query) must appear in matching documents and will contribute to the score.",
          "name": "must",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "QueryContainer",
                  "namespace": "_types.query_dsl"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "QueryContainer",
                    "namespace": "_types.query_dsl"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "The clause (query) must not appear in the matching documents.\nBecause scoring is ignored, a score of `0` is returned for all documents.",
          "name": "must_not",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "QueryContainer",
                  "namespace": "_types.query_dsl"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "QueryContainer",
                    "namespace": "_types.query_dsl"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "The clause (query) should appear in the matching document.",
          "name": "should",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "QueryContainer",
                  "namespace": "_types.query_dsl"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "QueryContainer",
                    "namespace": "_types.query_dsl"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_types/query_dsl/compound.ts#L29-L56"
    },
    {
      "kind": "interface",
      "name": {
        "name": "QueryBase",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Floating point number used to decrease or increase the relevance scores of the query.\nBoost values are relative to the default value of 1.0.\nA boost value between 0 and 1.0 decreases the relevance score.\nA value greater than 1.0 increases the relevance score.",
          "name": "boost",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "codegenName": "query_name",
          "name": "_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/abstractions.ts#L452-L463"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "float",
        "namespace": "_types"
      },
      "specLocation": "_types/Numeric.ts#L26-L26",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "number",
          "namespace": "_builtins"
        }
      }
    },
    {
      "description": "The minimum number of terms that should match as integer, percentage or range",
      "docId": "query-dsl-minimum-should-match",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-minimum-should-match.html",
      "kind": "type_alias",
      "name": {
        "name": "MinimumShouldMatch",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L164-L168",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "integer",
        "namespace": "_types"
      },
      "specLocation": "_types/Numeric.ts#L22-L22",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "number",
          "namespace": "_builtins"
        }
      }
    },
    {
      "extDocId": "query-dsl-boosting-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-boosting-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BoostingQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Floating point number between 0 and 1.0 used to decrease the relevance scores of documents matching the `negative` query.",
          "name": "negative_boost",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query used to decrease the relevance score of matching documents.",
          "name": "negative",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Any returned documents must match this query.",
          "name": "positive",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/compound.ts#L58-L74"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "double",
        "namespace": "_types"
      },
      "specLocation": "_types/Numeric.ts#L27-L27",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "number",
          "namespace": "_builtins"
        }
      }
    },
    {
      "description": "Path to field or array of paths. Some API's support wildcards in the path to select multiple fields.",
      "kind": "type_alias",
      "name": {
        "name": "Field",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L139-L140",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CommonTermsQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "cutoff_frequency",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "high_freq_operator",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "name": "low_freq_operator",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "name": "minimum_should_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinimumShouldMatch",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "shortcutProperty": "query",
      "specLocation": "_types/query_dsl/fulltext.ts#L34-L44"
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "AND"
          ],
          "name": "and"
        },
        {
          "aliases": [
            "OR"
          ],
          "name": "or"
        }
      ],
      "name": {
        "name": "Operator",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/Operator.ts#L22-L27"
    },
    {
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CombinedFieldsQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "List of fields to search. Field wildcard patterns are allowed. Only `text` fields are supported, and they must all have the same search `analyzer`.",
          "name": "fields",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Text to search for in the provided `fields`.\nThe `combined_fields` query analyzes the provided text before performing a search.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, match phrase queries are automatically created for multi-term synonyms.",
          "name": "auto_generate_synonyms_phrase_query",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Boolean logic used to interpret text in the query value.",
          "name": "operator",
          "required": false,
          "serverDefault": "or",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CombinedFieldsOperator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Minimum number of clauses that must match for a document to be returned.",
          "extDocId": "query-dsl-minimum-should-match",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-minimum-should-match.html",
          "name": "minimum_should_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinimumShouldMatch",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates whether no documents are returned if the analyzer removes all tokens, such as when using a `stop` filter.",
          "name": "zero_terms_query",
          "required": false,
          "serverDefault": "none",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CombinedFieldsZeroTerms",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/abstractions.ts#L465-L499"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "or"
        },
        {
          "name": "and"
        }
      ],
      "name": {
        "name": "CombinedFieldsOperator",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/abstractions.ts#L512-L515"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "No documents are returned if the analyzer removes all tokens.",
          "name": "none"
        },
        {
          "description": "Returns all documents, similar to a `match_all` query.",
          "name": "all"
        }
      ],
      "name": {
        "name": "CombinedFieldsZeroTerms",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/abstractions.ts#L517-L526"
    },
    {
      "extDocId": "query-dsl-constant-score-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-constant-score-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ConstantScoreQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Filter query you wish to run. Any returned documents must match this query.\nFilter queries do not calculate relevance scores.\nTo speed up performance, Elasticsearch automatically caches frequently used filter queries.",
          "name": "filter",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/compound.ts#L76-L86"
    },
    {
      "extDocId": "query-dsl-dis-max-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-dis-max-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DisMaxQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "One or more query clauses.\nReturned documents must match one or more of these queries.\nIf a document matches multiple queries, Elasticsearch uses the highest relevance score.",
          "name": "queries",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "QueryContainer",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Floating point number between 0 and 1.0 used to increase the relevance scores of documents matching multiple query clauses.",
          "name": "tie_breaker",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/compound.ts#L88-L103"
    },
    {
      "codegenNames": [
        "untyped",
        "geo",
        "date"
      ],
      "extDocId": "query-dsl-distance-feature-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-distance-feature-query.html",
      "kind": "type_alias",
      "name": {
        "name": "DistanceFeatureQuery",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/specialized.ts#L76-L85",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "UntypedDistanceFeatureQuery",
              "namespace": "_types.query_dsl"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoDistanceFeatureQuery",
              "namespace": "_types.query_dsl"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DateDistanceFeatureQuery",
              "namespace": "_types.query_dsl"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "untagged",
        "untypedVariant": {
          "name": "UntypedDistanceFeatureQuery",
          "namespace": "_types.query_dsl"
        }
      }
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "user_defined_value"
          },
          {
            "kind": "user_defined_value"
          }
        ],
        "type": {
          "name": "DistanceFeatureQueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UntypedDistanceFeatureQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/specialized.ts#L61-L64"
    },
    {
      "generics": [
        {
          "name": "TOrigin",
          "namespace": "_types.query_dsl.DistanceFeatureQueryBase"
        },
        {
          "name": "TDistance",
          "namespace": "_types.query_dsl.DistanceFeatureQueryBase"
        }
      ],
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DistanceFeatureQueryBase",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Date or point of origin used to calculate distances.\nIf the `field` value is a `date` or `date_nanos` field, the `origin` value must be a date.\nDate Math, such as `now-1h`, is supported.\nIf the field value is a `geo_point` field, the `origin` value must be a geopoint.",
          "name": "origin",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TOrigin",
              "namespace": "_types.query_dsl.DistanceFeatureQueryBase"
            }
          }
        },
        {
          "description": "Distance from the `origin` at which relevance scores receive half of the `boost` value.\nIf the `field` value is a `date` or `date_nanos` field, the `pivot` value must be a time unit, such as `1h` or `10d`. If the `field` value is a `geo_point` field, the `pivot` value must be a distance unit, such as `1km` or `12m`.",
          "name": "pivot",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TDistance",
              "namespace": "_types.query_dsl.DistanceFeatureQueryBase"
            }
          }
        },
        {
          "description": "Name of the field used to calculate distances. This field must meet the following criteria:\nbe a `date`, `date_nanos` or `geo_point` field;\nhave an `index` mapping parameter value of `true`, which is the default;\nhave an `doc_values` mapping parameter value of `true`, which is the default.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L39-L59"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoLocation",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "Distance",
              "namespace": "_types"
            }
          }
        ],
        "type": {
          "name": "DistanceFeatureQueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoDistanceFeatureQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/specialized.ts#L66-L69"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "DateMath",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        ],
        "type": {
          "name": "DistanceFeatureQueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateDistanceFeatureQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/specialized.ts#L71-L74"
    },
    {
      "extDocId": "query-dsl-exists-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-exists-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ExistsQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Name of the field you wish to search.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/term.ts#L38-L46"
    },
    {
      "extDocId": "query-dsl-function-score-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-function-score-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FunctionScoreQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Defines how he newly computed score is combined with the score of the query",
          "name": "boost_mode",
          "required": false,
          "serverDefault": "multiply",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FunctionBoostMode",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "One or more functions that compute a new score for each document returned by the query.",
          "name": "functions",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FunctionScoreContainer",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Restricts the new score to not exceed the provided limit.",
          "name": "max_boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Excludes documents that do not meet the provided score threshold.",
          "name": "min_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A query that determines the documents for which a new score is computed.",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Specifies how the computed scores are combined",
          "name": "score_mode",
          "required": false,
          "serverDefault": "multiply",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FunctionScoreMode",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "shortcutProperty": "functions",
      "specLocation": "_types/query_dsl/compound.ts#L105-L135"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Query score and function score are multiplied",
          "name": "multiply"
        },
        {
          "description": "Only the function score is used.\nThe query score is ignored.",
          "name": "replace"
        },
        {
          "description": "Query score and function score are added",
          "name": "sum"
        },
        {
          "description": "Query score and function score are averaged",
          "name": "avg"
        },
        {
          "description": "Max of query score and function score",
          "name": "max"
        },
        {
          "description": "Min of query score and function score",
          "name": "min"
        }
      ],
      "name": {
        "name": "FunctionBoostMode",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/compound.ts#L295-L321"
    },
    {
      "esQuirk": "this container is valid without a variant. Despite being documented as a function, 'weight'\nis actually a container property that can be combined with a function. Comment in the ES code\n(SearchModule#registerScoreFunctions) says: Weight doesn't have its own parser, so every function\nsupports it out of the box. Can be a single function too when not associated to any other function,\nwhich is why it needs to be registered manually here.",
      "kind": "interface",
      "name": {
        "name": "FunctionScoreContainer",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Function that scores a document with a exponential decay, depending on the distance of a numeric field value of the document from an origin.",
          "name": "exp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DecayFunction",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Function that scores a document with a normal decay, depending on the distance of a numeric field value of the document from an origin.",
          "name": "gauss",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DecayFunction",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Function that scores a document with a linear decay, depending on the distance of a numeric field value of the document from an origin.",
          "name": "linear",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DecayFunction",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Function allows you to use a field from a document to influence the score.\nItâ€™s similar to using the script_score function, however, it avoids the overhead of scripting.",
          "name": "field_value_factor",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldValueFactorScoreFunction",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Generates scores that are uniformly distributed from 0 up to but not including 1.\nIn case you want scores to be reproducible, it is possible to provide a `seed` and `field`.",
          "name": "random_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RandomScoreFunction",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Enables you to wrap another query and customize the scoring of it optionally with a computation derived from other numeric field values in the doc using a script expression.",
          "name": "script_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptScoreFunction",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "containerProperty": true,
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "containerProperty": true,
          "name": "weight",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/compound.ts#L226-L266",
      "variants": {
        "kind": "container"
      }
    },
    {
      "codegenNames": [
        "untyped",
        "date",
        "numeric",
        "geo"
      ],
      "kind": "type_alias",
      "name": {
        "name": "DecayFunction",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/compound.ts#L215-L224",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "UntypedDecayFunction",
              "namespace": "_types.query_dsl"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DateDecayFunction",
              "namespace": "_types.query_dsl"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NumericDecayFunction",
              "namespace": "_types.query_dsl"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoDecayFunction",
              "namespace": "_types.query_dsl"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "untagged",
        "untypedVariant": {
          "name": "UntypedDecayFunction",
          "namespace": "_types.query_dsl"
        }
      }
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "inherits": {
        "generics": [
          {
            "kind": "user_defined_value"
          },
          {
            "kind": "user_defined_value"
          }
        ],
        "type": {
          "name": "DecayFunctionBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UntypedDecayFunction",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/compound.ts#L204-L207"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "TOrigin",
                    "namespace": "_types.query_dsl.DecayFunctionBase"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "TScale",
                    "namespace": "_types.query_dsl.DecayFunctionBase"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "DecayPlacement",
                "namespace": "_types.query_dsl"
              }
            }
          ],
          "meta": {
            "key": "field",
            "value": "placement"
          },
          "type": {
            "name": "AdditionalProperty",
            "namespace": "_spec_utils"
          }
        }
      ],
      "generics": [
        {
          "name": "TOrigin",
          "namespace": "_types.query_dsl.DecayFunctionBase"
        },
        {
          "name": "TScale",
          "namespace": "_types.query_dsl.DecayFunctionBase"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "DecayFunctionBase",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Determines how the distance is calculated when a field used for computing the decay contains multiple values.",
          "name": "multi_value_mode",
          "required": false,
          "serverDefault": "min",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiValueMode",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/compound.ts#L191-L202"
    },
    {
      "description": "In some places in the specification an object consists of a static set of properties and a single additional property\nwith an arbitrary name but a statically defined type. This is typically used for configurations associated\nto a single field. Meaning that object should theoretically extend SingleKeyDictionary but expose\na set of known keys. And possibly the object might already be part of an object graph and have a parent class.\nThis puts it into a bind that needs a client specific solution.\nWe therefore document the requirement to accept a single unknown property with this interface.",
      "generics": [
        {
          "name": "TKey",
          "namespace": "_spec_utils.AdditionalProperty"
        },
        {
          "name": "TValue",
          "namespace": "_spec_utils.AdditionalProperty"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "AdditionalProperty",
        "namespace": "_spec_utils"
      },
      "properties": [],
      "specLocation": "_spec_utils/behaviors.ts#L39-L48"
    },
    {
      "generics": [
        {
          "name": "TOrigin",
          "namespace": "_types.query_dsl.DecayPlacement"
        },
        {
          "name": "TScale",
          "namespace": "_types.query_dsl.DecayPlacement"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "DecayPlacement",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Defines how documents are scored at the distance given at scale.",
          "name": "decay",
          "required": false,
          "serverDefault": 0.5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If defined, the decay function will only compute the decay function for documents with a distance greater than the defined `offset`.",
          "name": "offset",
          "required": false,
          "serverDefault": "0",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TScale",
              "namespace": "_types.query_dsl.DecayPlacement"
            }
          }
        },
        {
          "description": "Defines the distance from origin + offset at which the computed score will equal `decay` parameter.",
          "name": "scale",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TScale",
              "namespace": "_types.query_dsl.DecayPlacement"
            }
          }
        },
        {
          "description": "The point of origin used for calculating distance. Must be given as a number for numeric field, date for date fields and geo point for geo fields.",
          "name": "origin",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TOrigin",
              "namespace": "_types.query_dsl.DecayPlacement"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/compound.ts#L170-L189"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Distance is the minimum distance.",
          "name": "min"
        },
        {
          "description": "Distance is the maximum distance.",
          "name": "max"
        },
        {
          "description": "Distance is the average distance.",
          "name": "avg"
        },
        {
          "description": "Distance is the sum of all distances.",
          "name": "sum"
        }
      ],
      "name": {
        "name": "MultiValueMode",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/compound.ts#L368-L385"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "DateMath",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        ],
        "type": {
          "name": "DecayFunctionBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateDecayFunction",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/compound.ts#L209-L209"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        ],
        "type": {
          "name": "DecayFunctionBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NumericDecayFunction",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/compound.ts#L208-L208"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoLocation",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "Distance",
              "namespace": "_types"
            }
          }
        ],
        "type": {
          "name": "DecayFunctionBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoDecayFunction",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/compound.ts#L210-L213"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FieldValueFactorScoreFunction",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Field to be extracted from the document.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Optional factor to multiply the field value with.",
          "name": "factor",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Value used if the document doesnâ€™t have that field.\nThe modifier and factor are still applied to it as though it were read from the document.",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Modifier to apply to the field value.",
          "name": "modifier",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldValueFactorModifier",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/compound.ts#L149-L168"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Do not apply any multiplier to the field value.",
          "name": "none"
        },
        {
          "description": "Take the common logarithm of the field value.\nBecause this function will return a negative value and cause an error if used on values between 0 and 1, it is recommended to use `log1p` instead.",
          "name": "log"
        },
        {
          "description": "Add 1 to the field value and take the common logarithm.",
          "name": "log1p"
        },
        {
          "description": "Add 2 to the field value and take the common logarithm.",
          "name": "log2p"
        },
        {
          "description": "Take the natural logarithm of the field value.\nBecause this function will return a negative value and cause an error if used on values between 0 and 1, it is recommended to use `ln1p` instead.",
          "name": "ln"
        },
        {
          "description": "Add 1 to the field value and take the natural logarithm.",
          "name": "ln1p"
        },
        {
          "description": "Add 2 to the field value and take the natural logarithm.",
          "name": "ln2p"
        },
        {
          "description": "Square the field value (multiply it by itself).",
          "name": "square"
        },
        {
          "description": "Take the square root of the field value.",
          "name": "sqrt"
        },
        {
          "description": "Reciprocate the field value, same as `1/x` where `x` is the fieldâ€™s value.",
          "name": "reciprocal"
        }
      ],
      "name": {
        "name": "FieldValueFactorModifier",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/compound.ts#L323-L366"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RandomScoreFunction",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "seed",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "long",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_types/query_dsl/compound.ts#L144-L147"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ScriptScoreFunction",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "A script that computes a score.",
          "name": "script",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/compound.ts#L137-L142"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Script",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "The script source.",
          "name": "source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The `id` for a stored script.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies any named parameters that are passed into the script as variables.\nUse parameters instead of hard-coded values to decrease compile time.",
          "name": "params",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "Specifies the language the script is written in.",
          "name": "lang",
          "required": false,
          "serverDefault": "painless",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptLanguage",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "options",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "shortcutProperty": "source",
      "specLocation": "_types/Scripting.ts#L73-L97"
    },
    {
      "isOpen": true,
      "kind": "enum",
      "members": [
        {
          "description": "Painless scripting language, purpose-built for Elasticsearch.",
          "name": "painless"
        },
        {
          "description": "Luceneâ€™s expressions language, compiles a JavaScript expression to bytecode.",
          "name": "expression"
        },
        {
          "description": "Mustache templated, used for templates.",
          "name": "mustache"
        },
        {
          "description": "Expert Java API",
          "name": "java"
        }
      ],
      "name": {
        "name": "ScriptLanguage",
        "namespace": "_types"
      },
      "specLocation": "_types/Scripting.ts#L24-L45"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Scores are multiplied.",
          "name": "multiply"
        },
        {
          "description": "Scores are summed.",
          "name": "sum"
        },
        {
          "description": "Scores are averaged.",
          "name": "avg"
        },
        {
          "description": "The first function that has a matching filter is applied.",
          "name": "first"
        },
        {
          "description": "Maximum score is used.",
          "name": "max"
        },
        {
          "description": "Minimum score is used.",
          "name": "min"
        }
      ],
      "name": {
        "name": "FunctionScoreMode",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/compound.ts#L268-L293"
    },
    {
      "extDocId": "query-dsl-fuzzy-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-fuzzy-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FuzzyQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Maximum number of variations created.",
          "name": "max_expansions",
          "required": false,
          "serverDefault": 50,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of beginning characters left unchanged when creating expansions.",
          "name": "prefix_length",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of beginning characters left unchanged when creating expansions.",
          "docId": "query-dsl-multi-term-rewrite",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-term-rewrite.html",
          "name": "rewrite",
          "required": false,
          "serverDefault": "constant_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermQueryRewrite",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates whether edits include transpositions of two adjacent characters (for example `ab` to `ba`).",
          "name": "transpositions",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum edit distance allowed for matching.",
          "docId": "fuzziness",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/common-options.html#fuzziness",
          "name": "fuzziness",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fuzziness",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Term you wish to find in the provided field.",
          "name": "value",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "shortcutProperty": "value",
      "specLocation": "_types/query_dsl/term.ts#L48-L86"
    },
    {
      "docId": "query-dsl-multi-term-rewrite",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-term-rewrite.html",
      "kind": "type_alias",
      "name": {
        "name": "MultiTermQueryRewrite",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L136-L137",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "docId": "fuzziness",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/common-options.html#fuzziness",
      "kind": "type_alias",
      "name": {
        "name": "Fuzziness",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L134-L135",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "GeoBounds",
                "namespace": "_types"
              }
            }
          ],
          "meta": {
            "key": "field",
            "value": "bounding_box"
          },
          "type": {
            "name": "AdditionalProperty",
            "namespace": "_spec_utils"
          }
        }
      ],
      "extDocId": "query-dsl-geo-bounding-box-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-geo-bounding-box-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoBoundingBoxQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "deprecation": {
            "description": "",
            "version": "7.14.0"
          },
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoExecution",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Set to `IGNORE_MALFORMED` to accept geo points with invalid latitude or longitude.\nSet to `COERCE` to also try to infer correct latitude or longitude.",
          "name": "validation_method",
          "required": false,
          "serverDefault": "'strict'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoValidationMethod",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Set to `true` to ignore an unmapped field and not match any documents for this query.\nSet to `false` to throw an exception if the field is not mapped.",
          "name": "ignore_unmapped",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/geo.ts#L32-L54"
    },
    {
      "codegenNames": [
        "coords",
        "tlbr",
        "trbl",
        "wkt"
      ],
      "description": "A geo bounding box. It can be represented in various ways:\n- as 4 top/bottom/left/right coordinates\n- as 2 top_left / bottom_right points\n- as 2 top_right / bottom_left points\n- as a WKT bounding box",
      "kind": "type_alias",
      "name": {
        "name": "GeoBounds",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L135-L148",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "CoordsGeoBounds",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TopLeftBottomRightGeoBounds",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TopRightBottomLeftGeoBounds",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "WktGeoBounds",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "CoordsGeoBounds",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "top",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "bottom",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "left",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "right",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Geo.ts#L154-L159"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TopLeftBottomRightGeoBounds",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "top_left",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLocation",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "bottom_right",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLocation",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Geo.ts#L161-L164"
    },
    {
      "codegenNames": [
        "latlon",
        "geohash",
        "coords",
        "text"
      ],
      "description": "A latitude/longitude as a 2 dimensional point. It can be represented in various ways:\n- as a `{lat, long}` object\n- as a geo hash value\n- as a `[lon, lat]` array\n- as a string in `\"<lat>, <lon>\"` or WKT point formats",
      "kind": "type_alias",
      "name": {
        "name": "GeoLocation",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L104-L118",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "LatLonGeoLocation",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoHashLocation",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "LatLonGeoLocation",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "Latitude",
          "name": "lat",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Longitude",
          "name": "lon",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Geo.ts#L120-L129"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GeoHashLocation",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "geohash",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoHash",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Geo.ts#L131-L133"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "GeoHash",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L91-L91",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "TopRightBottomLeftGeoBounds",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "top_right",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLocation",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "bottom_left",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLocation",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Geo.ts#L166-L169"
    },
    {
      "kind": "interface",
      "name": {
        "name": "WktGeoBounds",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "wkt",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/Geo.ts#L150-L152"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "memory"
        },
        {
          "name": "indexed"
        }
      ],
      "name": {
        "name": "GeoExecution",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/geo.ts#L56-L59"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Accept geo points with invalid latitude or longitude and additionally try and infer correct coordinates.",
          "name": "coerce"
        },
        {
          "description": "Accept geo points with invalid latitude or longitude.",
          "name": "ignore_malformed"
        },
        {
          "name": "strict"
        }
      ],
      "name": {
        "name": "GeoValidationMethod",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/geo.ts#L163-L173"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "GeoLocation",
                "namespace": "_types"
              }
            }
          ],
          "meta": {
            "key": "field",
            "value": "location"
          },
          "type": {
            "name": "AdditionalProperty",
            "namespace": "_spec_utils"
          }
        }
      ],
      "extDocId": "query-dsl-geo-distance-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-geo-distance-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoDistanceQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "The radius of the circle centred on the specified location.\nPoints which fall into this circle are considered to be matches.",
          "docId": "distance-units",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/api-conventions.html#distance-units",
          "name": "distance",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Distance",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "How to compute the distance.\nSet to `plane` for a faster calculation that's inaccurate on long distances and close to the poles.",
          "name": "distance_type",
          "required": false,
          "serverDefault": "'arc'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoDistanceType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Set to `IGNORE_MALFORMED` to accept geo points with invalid latitude or longitude.\nSet to `COERCE` to also try to infer correct latitude or longitude.",
          "name": "validation_method",
          "required": false,
          "serverDefault": "'strict'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoValidationMethod",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Set to `true` to ignore an unmapped field and not match any documents for this query.\nSet to `false` to throw an exception if the field is not mapped.",
          "name": "ignore_unmapped",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/geo.ts#L61-L93"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Distance",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L28-L28",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "The `arc` calculation is the most accurate.",
          "name": "arc"
        },
        {
          "description": "The `plane` calculation is faster but less accurate.",
          "name": "plane"
        }
      ],
      "name": {
        "name": "GeoDistanceType",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L42-L51"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "GeoPolygonPoints",
                "namespace": "_types.query_dsl"
              }
            }
          ],
          "meta": {
            "key": "field",
            "value": "polygon"
          },
          "type": {
            "name": "AdditionalProperty",
            "namespace": "_spec_utils"
          }
        }
      ],
      "deprecation": {
        "description": "Use geo-shape instead.",
        "version": "7.12.0"
      },
      "extDocId": "query-dsl-geo-polygon-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-geo-polygon-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoPolygonQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "name": "validation_method",
          "required": false,
          "serverDefault": "'strict'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoValidationMethod",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "name": "ignore_unmapped",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/geo.ts#L99-L111"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GeoPolygonPoints",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "name": "points",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "GeoLocation",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/geo.ts#L95-L97"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "GeoShapeFieldQuery",
                "namespace": "_types.query_dsl"
              }
            }
          ],
          "meta": {
            "key": "field",
            "value": "shape"
          },
          "type": {
            "name": "AdditionalProperty",
            "namespace": "_spec_utils"
          }
        }
      ],
      "extDocId": "query-dsl-geo-shape-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-geo-shape-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoShapeQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Set to `true` to ignore an unmapped field and not match any documents for this query.\nSet to `false` to throw an exception if the field is not mapped.",
          "name": "ignore_unmapped",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/geo.ts#L131-L147"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GeoShapeFieldQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "name": "shape",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoShape",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query using an indexed shape retrieved from the the specified document and path.",
          "name": "indexed_shape",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldLookup",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Spatial relation operator used to search a geo field.",
          "name": "relation",
          "required": false,
          "serverDefault": "intersects",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoShapeRelation",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/geo.ts#L118-L129"
    },
    {
      "description": "A GeoJson shape, that can also use Elasticsearch's `envelope` extension.",
      "kind": "type_alias",
      "name": {
        "name": "GeoShape",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L53-L54",
      "type": {
        "kind": "user_defined_value"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "FieldLookup",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "`id` of the document.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Index from which to retrieve the document.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the field.",
          "name": "path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Custom routing value.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/abstractions.ts#L429-L446"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Return all documents whose `geo_shape` or `geo_point` field intersects the query geometry.",
          "name": "intersects"
        },
        {
          "description": "Return all documents whose `geo_shape` or `geo_point` field has nothing in common with the query geometry.",
          "name": "disjoint"
        },
        {
          "description": "Return all documents whose `geo_shape` or `geo_point` field is within the query geometry.\nLine geometries are not supported.",
          "name": "within"
        },
        {
          "description": "Return all documents whose `geo_shape` or `geo_point` field contains the query geometry.",
          "name": "contains"
        }
      ],
      "name": {
        "name": "GeoShapeRelation",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L64-L82"
    },
    {
      "extDocId": "query-dsl-has-child-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-has-child-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HasChildQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Indicates whether to ignore an unmapped `type` and not return any documents instead of an error.",
          "name": "ignore_unmapped",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If defined, each search hit will contain inner hits.",
          "docId": "inner-hits",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/inner-hits.html",
          "name": "inner_hits",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "InnerHits",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Maximum number of child documents that match the query allowed for a returned parent document.\nIf the parent document exceeds this limit, it is excluded from the search results.",
          "name": "max_children",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Minimum number of child documents that match the query required to match the query for a returned parent document.\nIf the parent document does not meet this limit, it is excluded from the search results.",
          "name": "min_children",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query you wish to run on child documents of the `type` field.\nIf a child document matches the search, the query returns the parent document.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Indicates how scores for matching child documents affect the root parent documentâ€™s relevance score.",
          "name": "score_mode",
          "required": false,
          "serverDefault": "'none'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ChildScoreMode",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Name of the child relationship mapped for the `join` field.",
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RelationName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/joining.ts#L41-L79"
    },
    {
      "kind": "interface",
      "name": {
        "name": "InnerHits",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "The name for the particular inner hit definition in the response.\nUseful when a search request contains multiple inner hits.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum number of hits to return per `inner_hits`.",
          "name": "size",
          "required": false,
          "serverDefault": 3,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Inner hit starting document offset.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "collapse",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldCollapse",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "docvalue_fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FieldAndFormat",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "name": "explain",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "highlight",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Highlight",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "ignore_unmapped",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "script_fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ScriptField",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "seq_no_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "How the inner hits should be sorted per `inner_hits`.\nBy default, inner hits are sorted by score.",
          "name": "sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Sort",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfig",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "stored_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "track_scores",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/hits.ts#L108-L142"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Name",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L80-L80",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "extDocId": "collapse-search-results",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/collapse-search-results.html",
      "kind": "interface",
      "name": {
        "name": "FieldCollapse",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "The field to collapse the result set on",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of inner hits and their sort order",
          "name": "inner_hits",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "InnerHits",
                  "namespace": "_global.search._types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "InnerHits",
                    "namespace": "_global.search._types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "The number of concurrent requests allowed to retrieve the inner_hits per group",
          "name": "max_concurrent_group_searches",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "collapse",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldCollapse",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/FieldCollapse.ts#L24-L41"
    },
    {
      "description": "A reference to a field with formatting instructions on how to return the value",
      "kind": "interface",
      "name": {
        "name": "FieldAndFormat",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Wildcard pattern. The request returns values for field names matching this pattern.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Format in which the values are returned.",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "include_unmapped",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "shortcutProperty": "field",
      "specLocation": "_types/query_dsl/abstractions.ts#L528-L542"
    },
    {
      "inherits": {
        "type": {
          "name": "HighlightBase",
          "namespace": "_global.search._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "Highlight",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "encoder",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HighlighterEncoder",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "fields",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "HighlightField",
                "namespace": "_global.search._types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/highlighting.ts#L152-L155"
    },
    {
      "kind": "interface",
      "name": {
        "name": "HighlightBase",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HighlighterType",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A string that contains each boundary character.",
          "name": "boundary_chars",
          "required": false,
          "serverDefault": ".,!? \\t\\n",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "How far to scan for boundary characters.",
          "name": "boundary_max_scan",
          "required": false,
          "serverDefault": 20,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies how to break the highlighted fragments: chars, sentence, or word.\nOnly valid for the unified and fvh highlighters.\nDefaults to `sentence` for the `unified` highlighter. Defaults to `chars` for the `fvh` highlighter.",
          "name": "boundary_scanner",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BoundaryScanner",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Controls which locale is used to search for sentence and word boundaries.\nThis parameter takes a form of a language tag, for example: `\"en-US\"`, `\"fr-FR\"`, `\"ja-JP\"`.",
          "name": "boundary_scanner_locale",
          "required": false,
          "serverDefault": "Locale.ROOT",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "deprecation": {
            "description": "",
            "version": "8.8.0"
          },
          "name": "force_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies how text should be broken up in highlight snippets: `simple` or `span`.\nOnly valid for the `plain` highlighter.",
          "name": "fragmenter",
          "required": false,
          "serverDefault": "span",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HighlighterFragmenter",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "The size of the highlighted fragment in characters.",
          "name": "fragment_size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "highlight_filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Highlight matches for a query other than the search query.\nThis is especially useful if you use a rescore query because those are not taken into account by highlighting by default.",
          "name": "highlight_query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "name": "max_fragment_length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If set to a non-negative value, highlighting stops at this defined maximum limit.\nThe rest of the text is not processed, thus not highlighted and no error is returned\nThe `max_analyzed_offset` query setting does not override the `index.highlight.max_analyzed_offset` setting, which prevails when itâ€™s set to lower value than the query setting.",
          "name": "max_analyzed_offset",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The amount of text you want to return from the beginning of the field if there are no matching fragments to highlight.",
          "name": "no_match_size",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum number of fragments to return.\nIf the number of fragments is set to `0`, no fragments are returned.\nInstead, the entire field contents are highlighted and returned.\nThis can be handy when you need to highlight short texts such as a title or address, but fragmentation is not required.\nIf `number_of_fragments` is `0`, `fragment_size` is ignored.",
          "name": "number_of_fragments",
          "required": false,
          "serverDefault": 5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "options",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "Sorts highlighted fragments by score when set to `score`.\nBy default, fragments will be output in the order they appear in the field (order: `none`).\nSetting this option to `score` will output the most relevant fragments first.\nEach highlighter applies its own logic to compute relevancy scores.",
          "name": "order",
          "required": false,
          "serverDefault": "none",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HighlighterOrder",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Controls the number of matching phrases in a document that are considered.\nPrevents the `fvh` highlighter from analyzing too many phrases and consuming too much memory.\nWhen using `matched_fields`, `phrase_limit` phrases per matched field are considered. Raising the limit increases query time and consumes more memory.\nOnly supported by the `fvh` highlighter.",
          "name": "phrase_limit",
          "required": false,
          "serverDefault": 256,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Use in conjunction with `pre_tags` to define the HTML tags to use for the highlighted text.\nBy default, highlighted text is wrapped in `<em>` and `</em>` tags.",
          "name": "post_tags",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Use in conjunction with `post_tags` to define the HTML tags to use for the highlighted text.\nBy default, highlighted text is wrapped in `<em>` and `</em>` tags.",
          "name": "pre_tags",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "By default, only fields that contains a query match are highlighted.\nSet to `false` to highlight all fields.",
          "name": "require_field_match",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Set to `styled` to use the built-in tag schema.",
          "name": "tags_schema",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HighlighterTagsSchema",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/highlighting.ts#L47-L150"
    },
    {
      "isOpen": true,
      "kind": "enum",
      "members": [
        {
          "description": "The `plain` highlighter uses the standard Lucene highlighter",
          "name": "plain"
        },
        {
          "codegenName": "fast_vector",
          "description": "The fvh highlighter uses the Lucene Fast Vector highlighter.",
          "name": "fvh"
        },
        {
          "description": "The unified highlighter uses the Lucene Unified Highlighter.",
          "name": "unified"
        }
      ],
      "name": {
        "name": "HighlighterType",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/highlighting.ts#L175-L190"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Use the characters specified by `boundary_chars` as highlighting boundaries.\nThe `boundary_max_scan` setting controls how far to scan for boundary characters.\nOnly valid for the `fvh` highlighter.",
          "name": "chars"
        },
        {
          "description": "Break highlighted fragments at the next sentence boundary, as determined by Javaâ€™s `BreakIterator`.\nYou can specify the locale to use with `boundary_scanner_locale`.\nWhen used with the `unified` highlighter, the `sentence` scanner splits sentences bigger than `fragment_size` at the first word boundary next to fragment_size.\nYou can set `fragment_size` to `0` to never split any sentence.",
          "name": "sentence"
        },
        {
          "description": "Break highlighted fragments at the next word boundary, as determined by Javaâ€™s `BreakIterator`.\nYou can specify the locale to use with `boundary_scanner_locale`.",
          "name": "word"
        }
      ],
      "name": {
        "name": "BoundaryScanner",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/highlighting.ts#L26-L45"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "simple"
        },
        {
          "name": "span"
        }
      ],
      "name": {
        "name": "HighlighterFragmenter",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/highlighting.ts#L162-L165"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "score"
        }
      ],
      "name": {
        "name": "HighlighterOrder",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/highlighting.ts#L167-L169"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "styled"
        }
      ],
      "name": {
        "name": "HighlighterTagsSchema",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/highlighting.ts#L171-L173"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "default"
        },
        {
          "name": "html"
        }
      ],
      "name": {
        "name": "HighlighterEncoder",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/highlighting.ts#L157-L160"
    },
    {
      "inherits": {
        "type": {
          "name": "HighlightBase",
          "namespace": "_global.search._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HighlightField",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "fragment_offset",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "matched_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/highlighting.ts#L192-L195"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Fields",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L141-L141",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "ScriptField",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "script",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "ignore_failure",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/Scripting.ts#L99-L102"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Sort",
        "namespace": "_types"
      },
      "specLocation": "_types/sort.ts#L104-L104",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "SortCombinations",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SortCombinations",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "codegenNames": [
        "field",
        "options"
      ],
      "kind": "type_alias",
      "name": {
        "name": "SortCombinations",
        "namespace": "_types"
      },
      "specLocation": "_types/sort.ts#L98-L102",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SortOptions",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "FieldSort",
                "namespace": "_types"
              }
            }
          ],
          "meta": {
            "key": "field",
            "value": "sort"
          },
          "type": {
            "name": "AdditionalProperty",
            "namespace": "_spec_utils"
          }
        }
      ],
      "docId": "sort-search-results",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/sort-search-results.html",
      "kind": "interface",
      "name": {
        "name": "SortOptions",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScoreSort",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_doc",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScoreSort",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_geo_distance",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoDistanceSort",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptSort",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/sort.ts#L86-L96",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "FieldSort",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Missing",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortMode",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "nested",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NestedSortValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortOrder",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "unmapped_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldType",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "numeric_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldSortNumericType",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "shortcutProperty": "order",
      "specLocation": "_types/sort.ts#L43-L52"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Missing",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/AggregationContainer.ts#L535-L535",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "min"
        },
        {
          "name": "max"
        },
        {
          "name": "sum"
        },
        {
          "name": "avg"
        },
        {
          "name": "median"
        }
      ],
      "name": {
        "name": "SortMode",
        "namespace": "_types"
      },
      "specLocation": "_types/sort.ts#L108-L117"
    },
    {
      "kind": "interface",
      "name": {
        "name": "NestedSortValue",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "name": "max_children",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "nested",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NestedSortValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "path",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/sort.ts#L29-L34"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Ascending (smallest to largest)",
          "name": "asc"
        },
        {
          "description": "Descending (largest to smallest)",
          "name": "desc"
        }
      ],
      "name": {
        "name": "SortOrder",
        "namespace": "_types"
      },
      "specLocation": "_types/sort.ts#L119-L128"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "none"
        },
        {
          "name": "geo_point"
        },
        {
          "name": "geo_shape"
        },
        {
          "name": "ip"
        },
        {
          "name": "binary"
        },
        {
          "name": "keyword"
        },
        {
          "name": "text"
        },
        {
          "name": "search_as_you_type"
        },
        {
          "name": "date"
        },
        {
          "name": "date_nanos"
        },
        {
          "name": "boolean"
        },
        {
          "name": "completion"
        },
        {
          "name": "nested"
        },
        {
          "name": "object"
        },
        {
          "name": "version"
        },
        {
          "name": "murmur3"
        },
        {
          "name": "token_count"
        },
        {
          "name": "percolator"
        },
        {
          "name": "integer"
        },
        {
          "name": "long"
        },
        {
          "name": "short"
        },
        {
          "name": "byte"
        },
        {
          "name": "float"
        },
        {
          "name": "half_float"
        },
        {
          "name": "scaled_float"
        },
        {
          "name": "double"
        },
        {
          "name": "integer_range"
        },
        {
          "name": "float_range"
        },
        {
          "name": "long_range"
        },
        {
          "name": "double_range"
        },
        {
          "name": "date_range"
        },
        {
          "name": "ip_range"
        },
        {
          "name": "alias"
        },
        {
          "name": "join"
        },
        {
          "name": "rank_feature"
        },
        {
          "name": "rank_features"
        },
        {
          "name": "flattened"
        },
        {
          "name": "shape"
        },
        {
          "name": "histogram"
        },
        {
          "name": "constant_keyword"
        },
        {
          "name": "aggregate_metric_double"
        },
        {
          "name": "dense_vector"
        },
        {
          "name": "semantic_text"
        },
        {
          "name": "sparse_vector"
        },
        {
          "name": "match_only_text"
        },
        {
          "name": "icu_collation_keyword"
        }
      ],
      "name": {
        "name": "FieldType",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/Property.ts#L166-L213"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "long"
        },
        {
          "name": "double"
        },
        {
          "name": "date"
        },
        {
          "name": "date_nanos"
        }
      ],
      "name": {
        "name": "FieldSortNumericType",
        "namespace": "_types"
      },
      "specLocation": "_types/sort.ts#L36-L41"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ScoreSort",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortOrder",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/sort.ts#L54-L56"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "GeoLocation",
                    "namespace": "_types"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "GeoLocation",
                      "namespace": "_types"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          ],
          "meta": {
            "key": "field",
            "value": "location"
          },
          "type": {
            "name": "AdditionalProperty",
            "namespace": "_spec_utils"
          }
        }
      ],
      "kind": "interface",
      "name": {
        "name": "GeoDistanceSort",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortMode",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "distance_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoDistanceType",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "ignore_unmapped",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortOrder",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "unit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DistanceUnit",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "nested",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NestedSortValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/sort.ts#L58-L70"
    },
    {
      "kind": "enum",
      "members": [
        {
          "codegenName": "inches",
          "name": "in"
        },
        {
          "codegenName": "feet",
          "name": "ft"
        },
        {
          "codegenName": "yards",
          "name": "yd"
        },
        {
          "codegenName": "miles",
          "name": "mi"
        },
        {
          "codegenName": "nautic_miles",
          "name": "nmi"
        },
        {
          "codegenName": "kilometers",
          "name": "km"
        },
        {
          "codegenName": "meters",
          "name": "m"
        },
        {
          "codegenName": "centimeters",
          "name": "cm"
        },
        {
          "codegenName": "millimeters",
          "name": "mm"
        }
      ],
      "name": {
        "name": "DistanceUnit",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L30-L40"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ScriptSort",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortOrder",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "script",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptSortType",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortMode",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "nested",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NestedSortValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/sort.ts#L72-L78"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "string"
        },
        {
          "name": "number"
        },
        {
          "name": "version"
        }
      ],
      "name": {
        "name": "ScriptSortType",
        "namespace": "_types"
      },
      "specLocation": "_types/sort.ts#L80-L84"
    },
    {
      "codegenNames": [
        "fetch",
        "filter"
      ],
      "description": "Defines how to fetch a source. Fetching can be disabled entirely, or the source can be filtered.",
      "kind": "type_alias",
      "name": {
        "name": "SourceConfig",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/SourceFilter.ts#L33-L37",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SourceFilter",
              "namespace": "_global.search._types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "SourceFilter",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "aliases": [
            "exclude"
          ],
          "name": "excludes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "include"
          ],
          "name": "includes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        }
      ],
      "shortcutProperty": "includes",
      "specLocation": "_global/search/_types/SourceFilter.ts#L23-L31"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "none"
        },
        {
          "name": "avg"
        },
        {
          "name": "sum"
        },
        {
          "name": "max"
        },
        {
          "name": "min"
        }
      ],
      "name": {
        "name": "ChildScoreMode",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/joining.ts#L25-L39"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "RelationName",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L132-L132",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "extDocId": "query-dsl-has-parent-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-has-parent-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HasParentQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Indicates whether to ignore an unmapped `parent_type` and not return any documents instead of an error.\nYou can use this parameter to query multiple indices that may not contain the `parent_type`.",
          "name": "ignore_unmapped",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If defined, each search hit will contain inner hits.",
          "docId": "inner-hits",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/inner-hits.html",
          "name": "inner_hits",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "InnerHits",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Name of the parent relationship mapped for the `join` field.",
          "name": "parent_type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RelationName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query you wish to run on parent documents of the `parent_type` field.\nIf a parent document matches the search, the query returns its child documents.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Indicates whether the relevance score of a matching parent document is aggregated into its child documents.",
          "name": "score",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/joining.ts#L81-L110"
    },
    {
      "extDocId": "query-dsl-ids-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-ids-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IdsQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "An array of document IDs.",
          "name": "values",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ids",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/term.ts#L88-L96"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Ids",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L62-L62",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "extDocId": "query-dsl-intervals-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-intervals-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IntervalsQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Returns matches that span a combination of other rules.",
          "name": "all_of",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsAllOf",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns intervals produced by any of its sub-rules.",
          "name": "any_of",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsAnyOf",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches terms that are similar to the provided term, within an edit distance defined by `fuzziness`.",
          "docId": "fuzziness",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/common-options.html#fuzziness",
          "name": "fuzzy",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsFuzzy",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches analyzed text.",
          "name": "match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsMatch",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches terms that start with a specified set of characters.",
          "name": "prefix",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsPrefix",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches terms using a wildcard pattern.",
          "name": "wildcard",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsWildcard",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L235-L266",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "IntervalsAllOf",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "An array of rules to combine. All rules must produce a match in a document for the overall source to match.",
          "name": "intervals",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IntervalsContainer",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Maximum number of positions between the matching terms.\nIntervals produced by the rules further apart than this are not considered matches.",
          "name": "max_gaps",
          "required": false,
          "serverDefault": -1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, intervals produced by the rules should appear in the order in which they are specified.",
          "name": "ordered",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Rule used to filter returned intervals.",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsFilter",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L50-L70"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IntervalsContainer",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Returns matches that span a combination of other rules.",
          "name": "all_of",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsAllOf",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns intervals produced by any of its sub-rules.",
          "name": "any_of",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsAnyOf",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches analyzed text.",
          "name": "fuzzy",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsFuzzy",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches analyzed text.",
          "name": "match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsMatch",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches terms that start with a specified set of characters.",
          "name": "prefix",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsPrefix",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Matches terms using a wildcard pattern.",
          "name": "wildcard",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsWildcard",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L83-L110",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "IntervalsAnyOf",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "An array of rules to match.",
          "name": "intervals",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IntervalsContainer",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Rule used to filter returned intervals.",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsFilter",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L72-L81"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IntervalsFilter",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Query used to return intervals that follow an interval from the `filter` rule.",
          "name": "after",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Query used to return intervals that occur before an interval from the `filter` rule.",
          "name": "before",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Query used to return intervals contained by an interval from the `filter` rule.",
          "name": "contained_by",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Query used to return intervals that contain an interval from the `filter` rule.",
          "name": "containing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Query used to return intervals that are **not** contained by an interval from the `filter` rule.",
          "name": "not_contained_by",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Query used to return intervals that do **not** contain an interval from the `filter` rule.",
          "name": "not_containing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Query used to return intervals that do **not** overlap with an interval from the `filter` rule.",
          "name": "not_overlapping",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Query used to return intervals that overlap with an interval from the `filter` rule.",
          "name": "overlapping",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Script used to return matching documents.\nThis script must return a boolean value: `true` or `false`.",
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L112-L152",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "IntervalsFuzzy",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Analyzer used to normalize the term.",
          "docId": "analysis",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis.html",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum edit distance allowed for matching.",
          "name": "fuzziness",
          "required": false,
          "serverDefault": "auto",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fuzziness",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of beginning characters left unchanged when creating expansions.",
          "name": "prefix_length",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The term to match.",
          "name": "term",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates whether edits include transpositions of two adjacent characters (for example, `ab` to `ba`).",
          "name": "transpositions",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If specified, match intervals from this field rather than the top-level field.\nThe `term` is normalized using the search analyzer from this field, unless `analyzer` is specified separately.",
          "name": "use_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L154-L184"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IntervalsMatch",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Analyzer used to analyze terms in the query.",
          "docId": "analysis",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis.html",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of positions between the matching terms.\nTerms further apart than this are not considered matches.",
          "name": "max_gaps",
          "required": false,
          "serverDefault": -1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, matching terms must appear in their specified order.",
          "name": "ordered",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Text you wish to find in the provided field.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If specified, match intervals from this field rather than the top-level field.\nThe `term` is normalized using the search analyzer from this field, unless `analyzer` is specified separately.",
          "name": "use_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An optional interval filter.",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IntervalsFilter",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L186-L216"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IntervalsPrefix",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Analyzer used to analyze the `prefix`.",
          "docId": "analysis",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis.html",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Beginning characters of terms you wish to find in the top-level field.",
          "name": "prefix",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If specified, match intervals from this field rather than the top-level field.\nThe `prefix` is normalized using the search analyzer from this field, unless `analyzer` is specified separately.",
          "name": "use_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L218-L233"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IntervalsWildcard",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Analyzer used to analyze the `pattern`.\nDefaults to the top-level field's analyzer.",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Wildcard pattern used to find matching terms.",
          "name": "pattern",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If specified, match intervals from this field rather than the top-level field.\nThe `pattern` is normalized using the search analyzer from this field, unless `analyzer` is specified separately.",
          "name": "use_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L268-L283"
    },
    {
      "extDocId": "query-dsl-knn-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-knn-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KnnQuery",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "The name of the vector field to search against",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The query vector",
          "name": "query_vector",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryVector",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The query vector builder. You must provide a query_vector_builder or query_vector, but not both.",
          "name": "query_vector_builder",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryVectorBuilder",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of nearest neighbor candidates to consider per shard",
          "name": "num_candidates",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The final number of nearest neighbors to return as top hits",
          "name": "k",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Filters for the kNN search query",
          "name": "filter",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "QueryContainer",
                  "namespace": "_types.query_dsl"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "QueryContainer",
                    "namespace": "_types.query_dsl"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "The minimum similarity for a vector to be considered a match",
          "name": "similarity",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Knn.ts#L54-L72"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "QueryVector",
        "namespace": "_types"
      },
      "specLocation": "_types/Knn.ts#L25-L25",
      "type": {
        "kind": "array_of",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "float",
            "namespace": "_types"
          }
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "QueryVectorBuilder",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "text_embedding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TextEmbedding",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Knn.ts#L74-L77",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "TextEmbedding",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "model_text",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/Knn.ts#L79-L82"
    },
    {
      "extDocId": "query-dsl-match-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MatchQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Analyzer used to convert the text in the query value into tokens.",
          "docId": "analysis",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis.html",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, match phrase queries are automatically created for multi-term synonyms.",
          "name": "auto_generate_synonyms_phrase_query",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "deprecation": {
            "description": "",
            "version": "7.3.0"
          },
          "name": "cutoff_frequency",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum edit distance allowed for matching.",
          "docId": "fuzziness",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/common-options.html#fuzziness",
          "name": "fuzziness",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fuzziness",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Method used to rewrite the query.",
          "docId": "query-dsl-multi-term-rewrite",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-term-rewrite.html",
          "name": "fuzzy_rewrite",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermQueryRewrite",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, edits for fuzzy matching include transpositions of two adjacent characters (for example, `ab` to `ba`).",
          "name": "fuzzy_transpositions",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, format-based errors, such as providing a text query value for a numeric field, are ignored.",
          "name": "lenient",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of terms to which the query will expand.",
          "name": "max_expansions",
          "required": false,
          "serverDefault": 50,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Minimum number of clauses that must match for a document to be returned.",
          "docId": "query-dsl-minimum-should-match",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-minimum-should-match.html",
          "name": "minimum_should_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinimumShouldMatch",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Boolean logic used to interpret text in the query value.",
          "name": "operator",
          "required": false,
          "serverDefault": "'or'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Number of beginning characters left unchanged for fuzzy matching.",
          "name": "prefix_length",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Text, number, boolean value or date you wish to find in the provided field.",
          "name": "query",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "float",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Indicates whether no documents are returned if the `analyzer` removes all tokens, such as when using a `stop` filter.",
          "name": "zero_terms_query",
          "required": false,
          "serverDefault": "'none'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ZeroTermsQuery",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "shortcutProperty": "query",
      "specLocation": "_types/query_dsl/fulltext.ts#L285-L353"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Returns all documents, similar to a `match_all` query.",
          "name": "all"
        },
        {
          "description": "No documents are returned if the `analyzer` removes all tokens.",
          "name": "none"
        }
      ],
      "name": {
        "name": "ZeroTermsQuery",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/fulltext.ts#L587-L596"
    },
    {
      "extDocId": "query-dsl-match-all-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-all-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MatchAllQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/MatchAllQuery.ts#L22-L25"
    },
    {
      "extDocId": "query-dsl-match-bool-prefix-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-bool-prefix-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MatchBoolPrefixQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Analyzer used to convert the text in the query value into tokens.",
          "docId": "analysis",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis.html",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum edit distance allowed for matching.\nCan be applied to the term subqueries constructed for all terms but the final term.",
          "docId": "fuzziness",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/common-options.html#fuzziness",
          "name": "fuzziness",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fuzziness",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Method used to rewrite the query.\nCan be applied to the term subqueries constructed for all terms but the final term.",
          "docId": "query-dsl-multi-term-rewrite",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-term-rewrite.html",
          "name": "fuzzy_rewrite",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermQueryRewrite",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, edits for fuzzy matching include transpositions of two adjacent characters (for example, `ab` to `ba`).\nCan be applied to the term subqueries constructed for all terms but the final term.",
          "name": "fuzzy_transpositions",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of terms to which the query will expand.\nCan be applied to the term subqueries constructed for all terms but the final term.",
          "name": "max_expansions",
          "required": false,
          "serverDefault": 50,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Minimum number of clauses that must match for a document to be returned.\nApplied to the constructed bool query.",
          "docId": "query-dsl-minimum-should-match",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-minimum-should-match.html",
          "name": "minimum_should_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinimumShouldMatch",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Boolean logic used to interpret text in the query value.\nApplied to the constructed bool query.",
          "name": "operator",
          "required": false,
          "serverDefault": "'or'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Number of beginning characters left unchanged for fuzzy matching.\nCan be applied to the term subqueries constructed for all terms but the final term.",
          "name": "prefix_length",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Terms you wish to find in the provided field.\nThe last term is used in a prefix query.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "shortcutProperty": "query",
      "specLocation": "_types/query_dsl/fulltext.ts#L355-L412"
    },
    {
      "extDocId": "query-dsl-match-none-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-all-query.html#query-dsl-match-none-query",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MatchNoneQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/MatchNoneQuery.ts#L22-L25"
    },
    {
      "extDocId": "query-dsl-match-query-phrase",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-query-phrase.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MatchPhraseQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Analyzer used to convert the text in the query value into tokens.",
          "docId": "analysis",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis.html",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Query terms that are analyzed and turned into a phrase query.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of positions allowed between matching tokens.",
          "name": "slop",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates whether no documents are returned if the `analyzer` removes all tokens, such as when using a `stop` filter.",
          "name": "zero_terms_query",
          "required": false,
          "serverDefault": "'none'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ZeroTermsQuery",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "shortcutProperty": "query",
      "specLocation": "_types/query_dsl/fulltext.ts#L414-L438"
    },
    {
      "extDocId": "query-dsl-match-query-phrase-prefix",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-query-phrase-prefix.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MatchPhrasePrefixQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Analyzer used to convert text in the query value into tokens.",
          "docId": "analysis",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis.html",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of terms to which the last provided term of the query value will expand.",
          "name": "max_expansions",
          "required": false,
          "serverDefault": 50,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Text you wish to find in the provided field.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of positions allowed between matching tokens.",
          "name": "slop",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates whether no documents are returned if the analyzer removes all tokens, such as when using a `stop` filter.",
          "name": "zero_terms_query",
          "required": false,
          "serverDefault": "none",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ZeroTermsQuery",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "shortcutProperty": "query",
      "specLocation": "_types/query_dsl/fulltext.ts#L440-L469"
    },
    {
      "extDocId": "query-dsl-mlt-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-mlt-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MoreLikeThisQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "The analyzer that is used to analyze the free form text.\nDefaults to the analyzer associated with the first field in fields.",
          "extDocId": "analysis",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis.html",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Each term in the formed query could be further boosted by their tf-idf score.\nThis sets the boost factor to use when using this feature.\nDefaults to deactivated (0).",
          "name": "boost_terms",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Controls whether the query should fail (throw an exception) if any of the specified fields are not of the supported types (`text` or `keyword`).",
          "name": "fail_on_unsupported_field",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A list of fields to fetch and analyze the text from.\nDefaults to the `index.query.default_field` index setting, which has a default value of `*`.",
          "name": "fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Specifies whether the input documents should also be included in the search results returned.",
          "name": "include",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies free form text and/or a single or multiple documents for which you want to find similar documents.",
          "name": "like",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "Like",
                  "namespace": "_types.query_dsl"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "Like",
                    "namespace": "_types.query_dsl"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "The maximum document frequency above which the terms are ignored from the input document.",
          "name": "max_doc_freq",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum number of query terms that can be selected.",
          "name": "max_query_terms",
          "required": false,
          "serverDefault": 25,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum word length above which the terms are ignored.\nDefaults to unbounded (`0`).",
          "name": "max_word_length",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum document frequency below which the terms are ignored from the input document.",
          "name": "min_doc_freq",
          "required": false,
          "serverDefault": 5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "After the disjunctive query has been formed, this parameter controls the number of terms that must match.",
          "docId": "query-dsl-minimum-should-match",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-minimum-should-match.html",
          "name": "minimum_should_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinimumShouldMatch",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum term frequency below which the terms are ignored from the input document.",
          "name": "min_term_freq",
          "required": false,
          "serverDefault": 2,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum word length below which the terms are ignored.",
          "name": "min_word_length",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An array of stop words.\nAny word in this set is ignored.",
          "name": "stop_words",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "description": "Used in combination with `like` to exclude documents that match a set of terms.",
          "name": "unlike",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "Like",
                  "namespace": "_types.query_dsl"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "Like",
                    "namespace": "_types.query_dsl"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "version_type",
          "required": false,
          "serverDefault": "'internal'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L87-L172"
    },
    {
      "codegenNames": [
        "text",
        "document"
      ],
      "description": "Text that we want similar documents for or a lookup to a document's field for the text.",
      "docId": "document-input-parameters",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-mlt-query.html#_document_input_parameters",
      "kind": "type_alias",
      "name": {
        "name": "Like",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/specialized.ts#L198-L203",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LikeDocument",
              "namespace": "_types.query_dsl"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "LikeDocument",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "A document not present in the index.",
          "name": "doc",
          "required": false,
          "type": {
            "kind": "user_defined_value"
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "ID of a document.",
          "name": "_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Index of a document.",
          "name": "_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Overrides the default analyzer.",
          "name": "per_field_analyzer",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "version_type",
          "required": false,
          "serverDefault": "'internal'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L174-L196"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Use internal versioning that starts at 1 and increments with each update or delete.",
          "name": "internal"
        },
        {
          "description": "Only index the document if the given version is strictly higher than the version of the stored document or if there is no existing document.",
          "name": "external"
        },
        {
          "description": "Only index the document if the given version is equal or higher than the version of the stored document or if there is no existing document.\nNote: the external_gte version type is meant for special use cases and should be used with care.\nIf used incorrectly, it can result in loss of data.",
          "name": "external_gte"
        },
        {
          "name": "force"
        }
      ],
      "name": {
        "name": "VersionType",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L107-L123"
    },
    {
      "description": "Language value, such as _arabic_ or _thai_. Defaults to _english_.\nEach language value corresponds to a predefined list of stop words in Lucene. See Stop words by language for supported language values and their stop words.\nAlso accepts an array of stop words.",
      "kind": "type_alias",
      "name": {
        "name": "StopWords",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/StopWords.ts#L20-L26",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "extDocId": "query-dsl-multi-match-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-match-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MultiMatchQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Analyzer used to convert the text in the query value into tokens.",
          "docId": "analysis",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis.html",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, match phrase queries are automatically created for multi-term synonyms.",
          "name": "auto_generate_synonyms_phrase_query",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "deprecation": {
            "description": "",
            "version": "7.3.0"
          },
          "name": "cutoff_frequency",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The fields to be queried.\nDefaults to the `index.query.default_field` index settings, which in turn defaults to `*`.",
          "name": "fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum edit distance allowed for matching.",
          "docId": "fuzziness",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/common-options.html#fuzziness",
          "name": "fuzziness",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fuzziness",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Method used to rewrite the query.",
          "docId": "query-dsl-multi-term-rewrite",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-term-rewrite.html",
          "name": "fuzzy_rewrite",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermQueryRewrite",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, edits for fuzzy matching include transpositions of two adjacent characters (for example, `ab` to `ba`).\nCan be applied to the term subqueries constructed for all terms but the final term.",
          "name": "fuzzy_transpositions",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, format-based errors, such as providing a text query value for a numeric field, are ignored.",
          "name": "lenient",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of terms to which the query will expand.",
          "name": "max_expansions",
          "required": false,
          "serverDefault": 50,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Minimum number of clauses that must match for a document to be returned.",
          "docId": "query-dsl-minimum-should-match",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-minimum-should-match.html",
          "name": "minimum_should_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinimumShouldMatch",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Boolean logic used to interpret text in the query value.",
          "name": "operator",
          "required": false,
          "serverDefault": "'or'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Number of beginning characters left unchanged for fuzzy matching.",
          "name": "prefix_length",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Text, number, boolean value or date you wish to find in the provided field.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of positions allowed between matching tokens.",
          "name": "slop",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Determines how scores for each per-term blended query and scores across groups are combined.",
          "name": "tie_breaker",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "How `the` multi_match query is executed internally.",
          "name": "type",
          "required": false,
          "serverDefault": "'best_fields'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TextQueryType",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Indicates whether no documents are returned if the `analyzer` removes all tokens, such as when using a `stop` filter.",
          "name": "zero_terms_query",
          "required": false,
          "serverDefault": "'none'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ZeroTermsQuery",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L471-L557"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Finds documents that match any field, but uses the `_score` from the best field.",
          "name": "best_fields"
        },
        {
          "description": "Finds documents that match any field and combines the `_score` from each field.",
          "name": "most_fields"
        },
        {
          "description": "Treats fields with the same analyzer as though they were one big field.\nLooks for each word in any field.",
          "name": "cross_fields"
        },
        {
          "description": "Runs a `match_phrase` query on each field and uses the `_score` from the best field.",
          "name": "phrase"
        },
        {
          "description": "Runs a `match_phrase_prefix` query on each field and uses the `_score` from the best field.",
          "name": "phrase_prefix"
        },
        {
          "description": "Creates a `match_bool_prefix` query on each field and combines the `_score` from each field.",
          "name": "bool_prefix"
        }
      ],
      "name": {
        "name": "TextQueryType",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/fulltext.ts#L559-L585"
    },
    {
      "extDocId": "query-dsl-nested-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-nested-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NestedQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Indicates whether to ignore an unmapped path and not return any documents instead of an error.",
          "name": "ignore_unmapped",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If defined, each search hit will contain inner hits.",
          "docId": "inner-hits",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/inner-hits.html",
          "name": "inner_hits",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "InnerHits",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Path to the nested object you wish to search.",
          "name": "path",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query you wish to run on nested objects in the path.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "How scores for matching child objects affect the root parent documentâ€™s relevance score.",
          "name": "score_mode",
          "required": false,
          "serverDefault": "'avg'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ChildScoreMode",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/joining.ts#L112-L139"
    },
    {
      "extDocId": "query-dsl-parent-id-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-parent-id-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ParentIdQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "ID of the parent document.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates whether to ignore an unmapped `type` and not return any documents instead of an error.",
          "name": "ignore_unmapped",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Name of the child relationship mapped for the `join` field.",
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RelationName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/joining.ts#L141-L158"
    },
    {
      "extDocId": "query-dsl-percolate-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-percolate-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PercolateQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "The source of the document being percolated.",
          "name": "document",
          "required": false,
          "type": {
            "kind": "user_defined_value"
          }
        },
        {
          "description": "An array of sources of the documents being percolated.",
          "name": "documents",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "Field that holds the indexed queries. The field must use the `percolator` mapping type.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The ID of a stored document to percolate.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The index of a stored document to percolate.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The suffix used for the `_percolator_document_slot` field when multiple `percolate` queries are specified.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Preference used to fetch document to percolate.",
          "name": "preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Routing used to fetch document to percolate.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The expected version of a stored document to percolate.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L205-L245"
    },
    {
      "extDocId": "query-dsl-pinned-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-pinned-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PinnedQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "containerProperty": true,
          "description": "Any choice of query used to rank documents which will be ranked below the \"pinned\" documents.",
          "name": "organic",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Document IDs listed in the order they are to appear in results.\nRequired if `docs` is not specified.",
          "name": "ids",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Documents listed in the order they are to appear in results.\nRequired if `ids` is not specified.",
          "name": "docs",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "PinnedDoc",
                "namespace": "_types.query_dsl"
              }
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L247-L267",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "PinnedDoc",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "The unique document ID.",
          "name": "_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The index that contains the document.",
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L269-L278"
    },
    {
      "extDocId": "query-dsl-prefix-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-prefix-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PrefixQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Method used to rewrite the query.",
          "docId": "query-dsl-multi-term-rewrite",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-term-rewrite.html",
          "name": "rewrite",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermQueryRewrite",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Beginning characters of terms you wish to find in the provided field.",
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.10.0"
            }
          },
          "description": "Allows ASCII case insensitive matching of the value with the indexed field values when set to `true`.\nDefault is `false` which means the case sensitivity of matching depends on the underlying fieldâ€™s mapping.",
          "name": "case_insensitive",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "shortcutProperty": "value",
      "specLocation": "_types/query_dsl/term.ts#L98-L120"
    },
    {
      "extDocId": "query-dsl-query-string-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-query-string-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "QueryStringQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "If `true`, the wildcard characters `*` and `?` are allowed as the first character of the query string.",
          "name": "allow_leading_wildcard",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Analyzer used to convert text in the query string into tokens.",
          "docId": "analysis",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis.html",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the query attempts to analyze wildcard terms in the query string.",
          "name": "analyze_wildcard",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, match phrase queries are automatically created for multi-term synonyms.",
          "name": "auto_generate_synonyms_phrase_query",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Default field to search if no field is provided in the query string.\nSupports wildcards (`*`).\nDefaults to the `index.query.default_field` index setting, which has a default value of `*`.",
          "name": "default_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Default boolean logic used to interpret text in the query string if no operators are specified.",
          "name": "default_operator",
          "required": false,
          "serverDefault": "'or'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "If `true`, enable position increments in queries constructed from a `query_string` search.",
          "name": "enable_position_increments",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "escape",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Array of fields to search. Supports wildcards (`*`).",
          "name": "fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Maximum edit distance allowed for fuzzy matching.",
          "docId": "fuzziness",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/common-options.html#fuzziness",
          "name": "fuzziness",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fuzziness",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum number of terms to which the query expands for fuzzy matching.",
          "name": "fuzzy_max_expansions",
          "required": false,
          "serverDefault": 50,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of beginning characters left unchanged for fuzzy matching.",
          "name": "fuzzy_prefix_length",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Method used to rewrite the query.",
          "docId": "query-dsl-multi-term-rewrite",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-term-rewrite.html",
          "name": "fuzzy_rewrite",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermQueryRewrite",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, edits for fuzzy matching include transpositions of two adjacent characters (for example, `ab` to `ba`).",
          "name": "fuzzy_transpositions",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, format-based errors, such as providing a text value for a numeric field, are ignored.",
          "name": "lenient",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of automaton states required for the query.",
          "name": "max_determinized_states",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Minimum number of clauses that must match for a document to be returned.",
          "docId": "query-dsl-minimum-should-match",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-minimum-should-match.html",
          "name": "minimum_should_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinimumShouldMatch",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum number of positions allowed between matching tokens for phrases.",
          "name": "phrase_slop",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query string you wish to parse and use for search.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Analyzer used to convert quoted text in the query string into tokens.\nFor quoted text, this parameter overrides the analyzer specified in the `analyzer` parameter.",
          "name": "quote_analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Suffix appended to quoted text in the query string.\nYou can use this suffix to use a different analysis method for exact matches.",
          "name": "quote_field_suffix",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Method used to rewrite the query.",
          "docId": "query-dsl-multi-term-rewrite",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-term-rewrite.html",
          "name": "rewrite",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermQueryRewrite",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "How to combine the queries generated from the individual search terms in the resulting `dis_max` query.",
          "name": "tie_breaker",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Coordinated Universal Time (UTC) offset or IANA time zone used to convert date values in the query string to UTC.",
          "name": "time_zone",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeZone",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Determines how the query matches and scores documents.",
          "name": "type",
          "required": false,
          "serverDefault": "'best_fields'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TextQueryType",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L598-L721"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "TimeZone",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L47-L47",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "codegenNames": [
        "untyped",
        "date",
        "number",
        "term"
      ],
      "extDocId": "query-dsl-range-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-range-query.html",
      "kind": "type_alias",
      "name": {
        "name": "RangeQuery",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/term.ts#L176-L186",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "UntypedRangeQuery",
              "namespace": "_types.query_dsl"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DateRangeQuery",
              "namespace": "_types.query_dsl"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NumberRangeQuery",
              "namespace": "_types.query_dsl"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TermRangeQuery",
              "namespace": "_types.query_dsl"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "untagged",
        "untypedVariant": {
          "name": "UntypedRangeQuery",
          "namespace": "_types.query_dsl"
        }
      }
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "user_defined_value"
          }
        ],
        "type": {
          "name": "RangeQueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UntypedRangeQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Date format used to convert `date` values in the query.",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateFormat",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Coordinated Universal Time (UTC) offset or IANA time zone used to convert `date` values in the query to UTC.",
          "name": "time_zone",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeZone",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/term.ts#L150-L159"
    },
    {
      "generics": [
        {
          "name": "T",
          "namespace": "_types.query_dsl.RangeQueryBase"
        }
      ],
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RangeQueryBase",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Indicates how the range query matches values for `range` fields.",
          "name": "relation",
          "required": false,
          "serverDefault": "intersects",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RangeRelation",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Greater than.",
          "name": "gt",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "T",
              "namespace": "_types.query_dsl.RangeQueryBase"
            }
          }
        },
        {
          "description": "Greater than or equal to.",
          "name": "gte",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "T",
              "namespace": "_types.query_dsl.RangeQueryBase"
            }
          }
        },
        {
          "description": "Less than.",
          "name": "lt",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "T",
              "namespace": "_types.query_dsl.RangeQueryBase"
            }
          }
        },
        {
          "description": "Less than or equal to.",
          "name": "lte",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "T",
              "namespace": "_types.query_dsl.RangeQueryBase"
            }
          }
        },
        {
          "deprecation": {
            "description": "Use gte or gt instead",
            "version": "8.16.0"
          },
          "name": "from",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "T",
                  "namespace": "_types.query_dsl.RangeQueryBase"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "deprecation": {
            "description": "Use lte or lt instead",
            "version": "8.16.0"
          },
          "name": "to",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "T",
                  "namespace": "_types.query_dsl.RangeQueryBase"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_types/query_dsl/term.ts#L122-L148"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Matches documents with a range field value entirely within the queryâ€™s range.",
          "name": "within"
        },
        {
          "description": "Matches documents with a range field value that entirely contains the queryâ€™s range.",
          "name": "contains"
        },
        {
          "description": "Matches documents with a range field value that intersects the queryâ€™s range.",
          "name": "intersects"
        }
      ],
      "name": {
        "name": "RangeRelation",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/term.ts#L188-L201"
    },
    {
      "docId": "mapping-date-format",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-date-format.html",
      "kind": "type_alias",
      "name": {
        "name": "DateFormat",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L49-L50",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "DateMath",
              "namespace": "_types"
            }
          }
        ],
        "type": {
          "name": "RangeQueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateRangeQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Date format used to convert `date` values in the query.",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateFormat",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Coordinated Universal Time (UTC) offset or IANA time zone used to convert `date` values in the query to UTC.",
          "name": "time_zone",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeZone",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/term.ts#L161-L170"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        ],
        "type": {
          "name": "RangeQueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NumberRangeQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/term.ts#L172-L172"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        ],
        "type": {
          "name": "RangeQueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TermRangeQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/term.ts#L174-L174"
    },
    {
      "extDocId": "query-dsl-rank-feature-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-rank-feature-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankFeatureQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "`rank_feature` or `rank_features` field used to boost relevance scores.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Saturation function used to boost relevance scores based on the value of the rank feature `field`.",
          "name": "saturation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankFeatureFunctionSaturation",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Logarithmic function used to boost relevance scores based on the value of the rank feature `field`.",
          "name": "log",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankFeatureFunctionLogarithm",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Linear function used to boost relevance scores based on the value of the rank feature `field`.",
          "name": "linear",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankFeatureFunctionLinear",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Sigmoid function used to boost relevance scores based on the value of the rank feature `field`.",
          "name": "sigmoid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankFeatureFunctionSigmoid",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L309-L335"
    },
    {
      "inherits": {
        "type": {
          "name": "RankFeatureFunction",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankFeatureFunctionSaturation",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Configurable pivot value so that the result will be less than 0.5.",
          "name": "pivot",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L291-L296"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RankFeatureFunction",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/specialized.ts#L280-L280"
    },
    {
      "inherits": {
        "type": {
          "name": "RankFeatureFunction",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankFeatureFunctionLogarithm",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Configurable scaling factor.",
          "name": "scaling_factor",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L284-L289"
    },
    {
      "inherits": {
        "type": {
          "name": "RankFeatureFunction",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankFeatureFunctionLinear",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/specialized.ts#L282-L282"
    },
    {
      "inherits": {
        "type": {
          "name": "RankFeatureFunction",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankFeatureFunctionSigmoid",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Configurable pivot value so that the result will be less than 0.5.",
          "name": "pivot",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Configurable Exponent.",
          "name": "exponent",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L298-L307"
    },
    {
      "extDocId": "query-dsl-regexp-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-regexp-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RegexpQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.10.0"
            }
          },
          "description": "Allows case insensitive matching of the regular expression value with the indexed field values when set to `true`.\nWhen `false`, case sensitivity of matching depends on the underlying fieldâ€™s mapping.",
          "name": "case_insensitive",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Enables optional operators for the regular expression.",
          "docId": "regexp-syntax",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/regexp-syntax.html",
          "name": "flags",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum number of automaton states required for the query.",
          "name": "max_determinized_states",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Method used to rewrite the query.",
          "docId": "query-dsl-multi-term-rewrite",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-term-rewrite.html",
          "name": "rewrite",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermQueryRewrite",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Regular expression for terms you wish to find in the provided field.",
          "docId": "regexp-syntax",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/regexp-syntax.html",
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "shortcutProperty": "value",
      "specLocation": "_types/query_dsl/term.ts#L203-L236"
    },
    {
      "extDocId": "query-dsl-rule-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-rule-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RuleQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "name": "organic",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "name": "ruleset_ids",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "match_criteria",
          "required": true,
          "type": {
            "kind": "user_defined_value"
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L398-L405"
    },
    {
      "extDocId": "query-dsl-script-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-script-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ScriptQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Contains a script to run as a query.\nThis script must return a boolean value, `true` or `false`.",
          "name": "script",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L337-L346"
    },
    {
      "extDocId": "query-dsl-script-score-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-script-score-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ScriptScoreQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Documents with a score lower than this floating point number are excluded from the search results.",
          "name": "min_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query used to return documents.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Script used to compute the score of documents returned by the query.\nImportant: final relevance scores from the `script_score` query cannot be negative.",
          "name": "script",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L348-L365"
    },
    {
      "extDocId": "query-dsl-semantic-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-semantic-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SemanticQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "The field to query, which must be a semantic_text field type",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The query text",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/SemanticQuery.ts#L22-L30"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "ShapeFieldQuery",
                "namespace": "_types.query_dsl"
              }
            }
          ],
          "meta": {
            "key": "field",
            "value": "shape"
          },
          "type": {
            "name": "AdditionalProperty",
            "namespace": "_spec_utils"
          }
        }
      ],
      "extDocId": "query-dsl-shape-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-shape-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ShapeQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "When set to `true` the query ignores an unmapped field and will not match any documents.",
          "name": "ignore_unmapped",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L367-L381"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShapeFieldQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Queries using a pre-indexed shape.",
          "name": "indexed_shape",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldLookup",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Spatial relation between the query shape and the document shape.",
          "name": "relation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoShapeRelation",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Queries using an inline shape definition in GeoJSON or Well Known Text (WKT) format.",
          "name": "shape",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoShape",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/specialized.ts#L383-L396"
    },
    {
      "extDocId": "query-dsl-simple-query-string-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-simple-query-string-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SimpleQueryStringQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Analyzer used to convert text in the query string into tokens.",
          "docId": "analysis",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis.html",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the query attempts to analyze wildcard terms in the query string.",
          "name": "analyze_wildcard",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the parser creates a match_phrase query for each multi-position token.",
          "name": "auto_generate_synonyms_phrase_query",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Default boolean logic used to interpret text in the query string if no operators are specified.",
          "name": "default_operator",
          "required": false,
          "serverDefault": "'or'",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Operator",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Array of fields you wish to search.\nAccepts wildcard expressions.\nYou also can boost relevance scores for matches to particular fields using a caret (`^`) notation.\nDefaults to the `index.query.default_field index` setting, which has a default value of `*`.",
          "name": "fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "List of enabled operators for the simple query string syntax.",
          "name": "flags",
          "required": false,
          "serverDefault": "ALL",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SimpleQueryStringFlags",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Maximum number of terms to which the query expands for fuzzy matching.",
          "name": "fuzzy_max_expansions",
          "required": false,
          "serverDefault": 50,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of beginning characters left unchanged for fuzzy matching.",
          "name": "fuzzy_prefix_length",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, edits for fuzzy matching include transpositions of two adjacent characters (for example, `ab` to `ba`).",
          "name": "fuzzy_transpositions",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, format-based errors, such as providing a text value for a numeric field, are ignored.",
          "name": "lenient",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Minimum number of clauses that must match for a document to be returned.",
          "docId": "query-dsl-minimum-should-match",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-minimum-should-match.html",
          "name": "minimum_should_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinimumShouldMatch",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query string in the simple query string syntax you wish to parse and use for search.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Suffix appended to quoted text in the query string.",
          "name": "quote_field_suffix",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/fulltext.ts#L786-L854"
    },
    {
      "description": "Query flags can be either a single flag or a combination of flags, e.g. `OR|AND|PREFIX`",
      "docId": "supported-flags",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-simple-query-string-query.html#supported-flags",
      "kind": "type_alias",
      "name": {
        "name": "SimpleQueryStringFlags",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/fulltext.ts#L723-L727",
      "type": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "SimpleQueryStringFlag",
              "namespace": "_types.query_dsl"
            }
          }
        ],
        "kind": "instance_of",
        "type": {
          "name": "PipeSeparatedFlags",
          "namespace": "_spec_utils"
        }
      }
    },
    {
      "description": "A set of flags that can be represented as a single enum value or a set of values that are encoded\nas a pipe-separated string\n\nDepending on the target language, code generators can use this hint to generate language specific\nflags enum constructs and the corresponding (de-)serialization code.",
      "generics": [
        {
          "name": "T",
          "namespace": "_spec_utils.PipeSeparatedFlags"
        }
      ],
      "kind": "type_alias",
      "name": {
        "name": "PipeSeparatedFlags",
        "namespace": "_spec_utils"
      },
      "specLocation": "_spec_utils/PipeSeparatedFlags.ts#L20-L27",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "T",
              "namespace": "_spec_utils.PipeSeparatedFlags"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "extDocId": "query-dsl-span-containing-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-containing-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SpanContainingQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Can be any span query.\nMatching spans from `big` that contain matches from `little` are returned.",
          "name": "big",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Can be any span query.\nMatching spans from `big` that contain matches from `little` are returned.",
          "name": "little",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanQuery",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/span.ts#L25-L39"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SpanQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Accepts a list of span queries, but only returns those spans which also match a second span query.",
          "name": "span_containing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanContainingQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Allows queries like `span_near` or `span_or` across different fields.",
          "name": "span_field_masking",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanFieldMaskingQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Accepts another span query whose matches must appear within the first N positions of the field.",
          "name": "span_first",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanFirstQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "name": "span_gap",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanGapQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Wraps a `term`, `range`, `prefix`, `wildcard`, `regexp`, or `fuzzy` query.",
          "name": "span_multi",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanMultiTermQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Accepts multiple span queries whose matches must be within the specified distance of each other, and possibly in the same order.",
          "name": "span_near",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanNearQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Wraps another span query, and excludes any documents which match that query.",
          "name": "span_not",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanNotQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Combines multiple span queriesâ€‰andâ€‰returns documents which match any of the specified queries.",
          "name": "span_or",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanOrQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "The equivalent of the `term` query but for use with other span queries.",
          "name": "span_term",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SpanTermQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "The result from a single span query is returned as long is its span falls within the spans returned by a list of other span queries.",
          "name": "span_within",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanWithinQuery",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/span.ts#L158-L200",
      "variants": {
        "kind": "container",
        "nonExhaustive": true
      }
    },
    {
      "extDocId": "query-dsl-span-field-masking-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-field-masking-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SpanFieldMaskingQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanQuery",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/span.ts#L41-L47"
    },
    {
      "extDocId": "query-dsl-span-first-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-first-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SpanFirstQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Controls the maximum end position permitted in a match.",
          "name": "end",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Can be any other span type query.",
          "name": "match",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanQuery",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/span.ts#L49-L61"
    },
    {
      "description": "Can only be used as a clause in a span_near query.",
      "kind": "type_alias",
      "name": {
        "name": "SpanGapQuery",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/span.ts#L63-L65",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "Field",
            "namespace": "_types"
          }
        },
        "kind": "dictionary_of",
        "singleKey": true,
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "integer",
            "namespace": "_types"
          }
        }
      }
    },
    {
      "extDocId": "query-dsl-span-multi-term-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-multi-term-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SpanMultiTermQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Should be a multi term query (one of `wildcard`, `fuzzy`, `prefix`, `range`, or `regexp` query).",
          "name": "match",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/span.ts#L67-L75"
    },
    {
      "extDocId": "query-dsl-span-near-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-near-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SpanNearQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Array of one or more other span type queries.",
          "name": "clauses",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SpanQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Controls whether matches are required to be in-order.",
          "name": "in_order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Controls the maximum number of intervening unmatched positions permitted.",
          "name": "slop",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/span.ts#L77-L93"
    },
    {
      "extDocId": "query-dsl-span-not-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-not-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SpanNotQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "The number of tokens from within the include span that canâ€™t have overlap with the exclude span.\nEquivalent to setting both `pre` and `post`.",
          "name": "dist",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Span query whose matches must not overlap those returned.",
          "name": "exclude",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Span query whose matches are filtered.",
          "name": "include",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "The number of tokens after the include span that canâ€™t have overlap with the exclude span.",
          "name": "post",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of tokens before the include span that canâ€™t have overlap with the exclude span.",
          "name": "pre",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/span.ts#L95-L122"
    },
    {
      "extDocId": "query-dsl-span-or-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-or-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SpanOrQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Array of one or more other span type queries.",
          "name": "clauses",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SpanQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/span.ts#L124-L132"
    },
    {
      "extDocId": "query-dsl-span-term-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-term-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SpanTermQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "shortcutProperty": "value",
      "specLocation": "_types/query_dsl/span.ts#L134-L140"
    },
    {
      "extDocId": "query-dsl-span-within-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-span-within-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SpanWithinQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Can be any span query.\nMatching spans from `little` that are enclosed within `big` are returned.",
          "name": "big",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Can be any span query.\nMatching spans from `little` that are enclosed within `big` are returned.",
          "name": "little",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SpanQuery",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/span.ts#L142-L156"
    },
    {
      "extDocId": "query-dsl-sparse-vector-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-sparse-vector-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SparseVectorQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "containerProperty": true,
          "description": "The name of the field that contains the token-weight pairs to be searched against.\nThis field must be a mapped sparse_vector field.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Dictionary of precomputed sparse vectors and their associated weights.\nOnly one of inference_id or query_vector may be supplied in a request.",
          "name": "query_vector",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "float",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "The inference ID to use to convert the query text into token-weight pairs.\nIt must be the same inference ID that was used to create the tokens from the input text.\nOnly one of inference_id and query_vector is allowed.\nIf inference_id is specified, query must also be specified.\nOnly one of inference_id or query_vector may be supplied in a request.",
          "name": "inference_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "containerProperty": true,
          "description": "The query text you want to use for search.\nIf inference_id is specified, query must also be specified.",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "since": "8.15.0",
              "stability": "experimental"
            }
          },
          "containerProperty": true,
          "description": "Whether to perform pruning, omitting the non-significant tokens from the query to improve query performance.\nIf prune is true but the pruning_config is not specified, pruning will occur but default values will be used.\nDefault: false",
          "name": "prune",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "since": "8.15.0",
              "stability": "experimental"
            }
          },
          "containerProperty": true,
          "description": "Optional pruning configuration.\nIf enabled, this will omit non-significant tokens from the query in order to improve query performance.\nThis is only used if prune is set to true.\nIf prune is set to true but pruning_config is not specified, default values will be used.",
          "name": "pruning_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenPruningConfig",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/SparseVectorQuery.ts#L26-L80",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "TokenPruningConfig",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Tokens whose frequency is more than this threshold times the average frequency of all tokens in the specified field are considered outliers and pruned.",
          "name": "tokens_freq_ratio_threshold",
          "required": false,
          "serverDefault": 5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Tokens whose weight is less than this threshold are considered nonsignificant and pruned.",
          "name": "tokens_weight_threshold",
          "required": false,
          "serverDefault": 0.4,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Whether to only score pruned tokens, vs only scoring kept tokens.",
          "name": "only_score_pruned_tokens",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/TokenPruningConfig.ts#L22-L35"
    },
    {
      "extDocId": "query-dsl-term-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-term-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TermQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "Term you wish to find in the provided field.",
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldValue",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.10.0"
            }
          },
          "description": "Allows ASCII case insensitive matching of the value with the indexed field values when set to `true`.\nWhen `false`, the case sensitivity of matching depends on the underlying fieldâ€™s mapping.",
          "name": "case_insensitive",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "shortcutProperty": "value",
      "specLocation": "_types/query_dsl/term.ts#L238-L255"
    },
    {
      "codegenNames": [
        "long",
        "double",
        "string",
        "boolean",
        "null",
        "any"
      ],
      "description": "A field value.",
      "kind": "type_alias",
      "name": {
        "name": "FieldValue",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L25-L37",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "null",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "user_defined_value"
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "attachedBehaviors": [
        "AdditionalProperty"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "TermsQueryField",
                "namespace": "_types.query_dsl"
              }
            }
          ],
          "meta": {
            "key": "field",
            "value": "terms"
          },
          "type": {
            "name": "AdditionalProperty",
            "namespace": "_spec_utils"
          }
        }
      ],
      "extDocId": "query-dsl-terms-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-terms-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TermsQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [],
      "specLocation": "_types/query_dsl/term.ts#L257-L263"
    },
    {
      "codegenNames": [
        "value",
        "lookup"
      ],
      "kind": "type_alias",
      "name": {
        "name": "TermsQueryField",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/term.ts#L265-L268",
      "type": {
        "items": [
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FieldValue",
                "namespace": "_types"
              }
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TermsLookup",
              "namespace": "_types.query_dsl"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "TermsLookup",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "path",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/term.ts#L270-L275"
    },
    {
      "extDocId": "query-dsl-terms-set-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-terms-set-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TermsSetQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.10.0"
            }
          },
          "description": "Specification describing number of matching terms required to return a document.",
          "name": "minimum_should_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinimumShouldMatch",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Numeric field containing the number of matching terms required to return a document.",
          "name": "minimum_should_match_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Custom script containing the number of matching terms required to return a document.",
          "name": "minimum_should_match_script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Array of terms you wish to find in the provided field.",
          "name": "terms",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/term.ts#L277-L299"
    },
    {
      "extDocId": "query-dsl-text-expansion-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-text-expansion-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TextExpansionQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "The text expansion NLP model to use",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The query text",
          "name": "model_text",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "since": "8.13.0",
              "stability": "experimental"
            }
          },
          "description": "Token pruning configurations",
          "name": "pruning_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenPruningConfig",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/TextExpansionQuery.ts#L23-L36"
    },
    {
      "extDocId": "query-dsl-weighted-tokens-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-weighted-tokens-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "WeightedTokensQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "The tokens representing this query",
          "name": "tokens",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "float",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Token pruning configurations",
          "name": "pruning_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenPruningConfig",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/WeightedTokensQuery.ts#L25-L33"
    },
    {
      "extDocId": "query-dsl-wildcard-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-wildcard-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "WildcardQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.10.0"
            }
          },
          "description": "Allows case insensitive matching of the pattern with the indexed field values when set to true. Default is false which means the case sensitivity of matching depends on the underlying fieldâ€™s mapping.",
          "name": "case_insensitive",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Method used to rewrite the query.",
          "docId": "query-dsl-multi-term-rewrite",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-multi-term-rewrite.html",
          "name": "rewrite",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermQueryRewrite",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Wildcard pattern for terms you wish to find in the provided field. Required, when wildcard is not set.",
          "name": "value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Wildcard pattern for terms you wish to find in the provided field. Required, when value is not set.",
          "name": "wildcard",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "shortcutProperty": "value",
      "specLocation": "_types/query_dsl/term.ts#L305-L325"
    },
    {
      "extDocId": "query-dsl-wrapper-query",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-wrapper-query.html",
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "WrapperQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "description": "A base64 encoded query.\nThe binary data format can be any of JSON, YAML, CBOR or SMILE encodings",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/abstractions.ts#L501-L510"
    },
    {
      "inherits": {
        "type": {
          "name": "QueryBase",
          "namespace": "_types.query_dsl"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TypeQuery",
        "namespace": "_types.query_dsl"
      },
      "properties": [
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/query_dsl/term.ts#L301-L303"
    },
    {
      "extDocId": "search-aggregations-bucket-autodatehistogram-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-autodatehistogram-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AutoDateHistogramAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The target number of buckets.",
          "name": "buckets",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field on which to run the aggregation.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The date format used to format `key_as_string` in the response.\nIf no `format` is specified, the first date format specified in the field mapping is used.",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The minimum rounding interval.\nThis can make the collection process more efficient, as the aggregation will not attempt to round at any interval lower than `minimum_interval`.",
          "name": "minimum_interval",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MinimumInterval",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The value to apply to documents that do not have a value.\nBy default, documents without a value are ignored.",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Time zone specified as a ISO 8601 UTC offset.",
          "name": "offset",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "params",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Time zone ID.",
          "name": "time_zone",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeZone",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L72-L110"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "second"
        },
        {
          "name": "minute"
        },
        {
          "name": "hour"
        },
        {
          "name": "day"
        },
        {
          "name": "month"
        },
        {
          "name": "year"
        }
      ],
      "name": {
        "name": "MinimumInterval",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/bucket.ts#L112-L119"
    },
    {
      "description": "A date and time, either as a string whose format can depend on the context (defaulting to ISO 8601), or a\nnumber of milliseconds since the Epoch. Elasticsearch accepts both as input, but will generally output a string\nrepresentation.",
      "kind": "type_alias",
      "name": {
        "name": "DateTime",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L22-L27",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "generics": [
        {
          "name": "Unit",
          "namespace": "_types.EpochTime"
        }
      ],
      "kind": "type_alias",
      "name": {
        "name": "EpochTime",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L40-L40",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "Unit",
          "namespace": "_types.EpochTime"
        }
      }
    },
    {
      "inherits": {
        "type": {
          "name": "FormatMetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AverageAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/metric.ts#L55-L55"
    },
    {
      "inherits": {
        "type": {
          "name": "MetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FormatMetricAggregationBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L47-L49"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MetricAggregationBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The field on which to run the aggregation.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The value to apply to documents that do not have a value.\nBy default, documents without a value are ignored.",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Missing",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L34-L45"
    },
    {
      "extDocId": "search-aggregations-pipeline-avg-bucket-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-avg-bucket-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AverageBucketAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/pipeline.ts#L78-L81"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketPathAggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PipelineAggregationBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "`DecimalFormat` pattern for the output value.\nIf specified, the formatted value is returned in the aggregationâ€™s `value_as_string` property.",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Policy to apply when gaps are found in the data.",
          "docId": "gap-policy",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline.html#gap-policy",
          "name": "gap_policy",
          "required": false,
          "serverDefault": "skip",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GapPolicy",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L39-L51"
    },
    {
      "inherits": {
        "type": {
          "name": "Aggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BucketPathAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Path to the buckets that contain one set of values to correlate.",
          "docId": "search-aggregations-pipeline-bucket-path",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline.html#buckets-path-syntax",
          "name": "buckets_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BucketsPath",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L31-L37"
    },
    {
      "codegenNames": [
        "single",
        "array",
        "dict"
      ],
      "description": "Buckets path can be expressed in different ways, and an aggregation may accept some or all of these\nforms depending on its type. Please refer to each aggregation's documentation to know what buckets\npath forms they accept.",
      "kind": "type_alias",
      "name": {
        "name": "BucketsPath",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/pipeline.ts#L53-L59",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Treats missing data as if the bucket does not exist. It will skip the bucket and\ncontinue calculating using the next available value.",
          "name": "skip"
        },
        {
          "description": "Replace missing values with a zero (0) and pipeline aggregation computation will proceed as normal.",
          "name": "insert_zeros"
        },
        {
          "description": "Similar to skip, except if the metric provides a non-null, non-NaN value this value is used,\notherwise the empty bucket is skipped.",
          "name": "keep_values"
        }
      ],
      "name": {
        "name": "GapPolicy",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/pipeline.ts#L61-L76"
    },
    {
      "inherits": {
        "type": {
          "name": "MetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BoxplotAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Limits the maximum number of nodes used by the underlying TDigest algorithm to `20 * compression`, enabling control of memory usage and approximation error.",
          "name": "compression",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L57-L62"
    },
    {
      "extDocId": "search-aggregations-pipeline-bucket-script-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-bucket-script-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BucketScriptAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The script to run for this aggregation.",
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L83-L91"
    },
    {
      "extDocId": "search-aggregations-pipeline-bucket-selector-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-bucket-selector-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BucketSelectorAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The script to run for this aggregation.",
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L93-L101"
    },
    {
      "extDocId": "search-aggregations-pipeline-bucket-sort-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-bucket-sort-aggregation.html",
      "inherits": {
        "type": {
          "name": "Aggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BucketSortAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Buckets in positions prior to `from` will be truncated.",
          "name": "from",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The policy to apply when gaps are found in the data.",
          "docId": "gap-policy",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline.html#gap-policy",
          "name": "gap_policy",
          "required": false,
          "serverDefault": "skip",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GapPolicy",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The number of buckets to return.\nDefaults to all buckets of the parent aggregation.",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The list of fields to sort on.",
          "docId": "sort-search-results",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/sort-search-results.html",
          "name": "sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Sort",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L180-L204"
    },
    {
      "description": "A sibling pipeline aggregation which executes a two sample Kolmogorovâ€“Smirnov test (referred\nto as a \"K-S test\" from now on) against a provided distribution, and the distribution implied\nby the documents counts in the configured sibling aggregation. Specifically, for some metric,\nassuming that the percentile intervals of the metric are known beforehand or have been computed\nby an aggregation, then one would use range aggregation for the sibling to compute the p-value\nof the distribution difference between the metric and the restriction of that metric to a subset\nof the documents. A natural use case is if the sibling aggregation range aggregation nested in a\nterms aggregation, in which case one compares the overall distribution of metric to its restriction\nto each term.",
      "extDocId": "search-aggregations-bucket-count-ks-test-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-count-ks-test-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketPathAggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BucketKsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "A list of string values indicating which K-S test alternative to calculate. The valid values\nare: \"greater\", \"less\", \"two_sided\". This parameter is key for determining the K-S statistic used\nwhen calculating the K-S test. Default value is all possible alternative hypotheses.",
          "name": "alternative",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "A list of doubles indicating the distribution of the samples with which to compare to the `buckets_path` results.\nIn typical usage this is the overall proportion of documents in each bucket, which is compared with the actual\ndocument proportions in each bucket from the sibling aggregation counts. The default is to assume that overall\ndocuments are uniformly distributed on these buckets, which they would be if one used equal percentiles of a\nmetric to define the bucket end points.",
          "name": "fractions",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Indicates the sampling methodology when calculating the K-S test. Note, this is sampling of the returned values.\nThis determines the cumulative distribution function (CDF) points used comparing the two samples. Default is\n`upper_tail`, which emphasizes the upper end of the CDF points. Valid options are: `upper_tail`, `uniform`,\nand `lower_tail`.",
          "name": "sampling_method",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L103-L137"
    },
    {
      "description": "A sibling pipeline aggregation which executes a correlation function on the configured sibling multi-bucket aggregation.",
      "extDocId": "search-aggregations-bucket-correlation-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-correlation-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketPathAggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BucketCorrelationAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The correlation function to execute.",
          "name": "function",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BucketCorrelationFunction",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L139-L146"
    },
    {
      "kind": "interface",
      "name": {
        "name": "BucketCorrelationFunction",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The configuration to calculate a count correlation. This function is designed for determining the correlation of a term value and a given metric.",
          "name": "count_correlation",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BucketCorrelationFunctionCountCorrelation",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L148-L153"
    },
    {
      "kind": "interface",
      "name": {
        "name": "BucketCorrelationFunctionCountCorrelation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The indicator with which to correlate the configured `bucket_path` values.",
          "name": "indicator",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BucketCorrelationFunctionCountCorrelationIndicator",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L155-L158"
    },
    {
      "kind": "interface",
      "name": {
        "name": "BucketCorrelationFunctionCountCorrelationIndicator",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The total number of documents that initially created the expectations. Itâ€™s required to be greater\nthan or equal to the sum of all values in the buckets_path as this is the originating superset of data\nto which the term values are correlated.",
          "name": "doc_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An array of numbers with which to correlate the configured `bucket_path` values.\nThe length of this value must always equal the number of buckets returned by the `bucket_path`.",
          "name": "expectations",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "An array of fractions to use when averaging and calculating variance. This should be used if\nthe pre-calculated data and the buckets_path have known gaps. The length of fractions, if provided,\nmust equal expectations.",
          "name": "fractions",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L160-L178"
    },
    {
      "inherits": {
        "type": {
          "name": "MetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CardinalityAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "A unique count below which counts are expected to be close to accurate.\nThis allows to trade memory for accuracy.",
          "name": "precision_threshold",
          "required": false,
          "serverDefault": 3000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "rehash",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Mechanism by which cardinality aggregations is run.",
          "name": "execution_hint",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CardinalityExecutionMode",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L87-L99"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Run the aggregation by using global ordinals of the field and resolving those values after finishing a shard.",
          "name": "global_ordinals"
        },
        {
          "description": "Run the aggregation by using segment ordinal values and resolving those values after each segment.",
          "name": "segment_ordinals"
        },
        {
          "description": "Run the aggregation by using field values directly.",
          "name": "direct"
        },
        {
          "description": "Heuristic-based mode, default in Elasticsearch 8.3 and earlier.",
          "name": "save_memory_heuristic"
        },
        {
          "description": "Heuristic-based mode, default in Elasticsearch 8.4 and later.",
          "name": "save_time_heuristic"
        }
      ],
      "name": {
        "name": "CardinalityExecutionMode",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/metric.ts#L64-L85"
    },
    {
      "description": "A multi-bucket aggregation that groups semi-structured text into buckets. Each text\nfield is re-analyzed using a custom analyzer. The resulting tokens are then categorized\ncreating buckets of similarly formatted text values. This aggregation works best with machine\ngenerated text like system logs. Only the first 100 analyzed tokens are used to categorize the text.",
      "extDocId": "search-aggregations-bucket-categorize-text-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-categorize-text-aggregation.html",
      "inherits": {
        "type": {
          "name": "Aggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CategorizeTextAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The semi-structured text field to categorize.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum number of unique tokens at any position up to max_matched_tokens. Must be larger than 1.\nSmaller values use less memory and create fewer categories. Larger values will use more memory and\ncreate narrower categories. Max allowed value is 100.",
          "name": "max_unique_tokens",
          "required": false,
          "serverDefault": 50,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum number of token positions to match on before attempting to merge categories. Larger\nvalues will use more memory and create narrower categories. Max allowed value is 100.",
          "name": "max_matched_tokens",
          "required": false,
          "serverDefault": 5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum percentage of tokens that must match for text to be added to the category bucket. Must\nbe between 1 and 100. The larger the value the narrower the categories. Larger values will increase memory\nusage and create narrower categories.",
          "name": "similarity_threshold",
          "required": false,
          "serverDefault": 50,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "This property expects an array of regular expressions. The expressions are used to filter out matching\nsequences from the categorization field values. You can use this functionality to fine tune the categorization\nby excluding sequences from consideration when categories are defined. For example, you can exclude SQL\nstatements that appear in your log files. This property cannot be used at the same time as categorization_analyzer.\nIf you only want to define simple regular expression filters that are applied prior to tokenization, setting\nthis property is the easiest method. If you also want to customize the tokenizer or post-tokenization filtering,\nuse the categorization_analyzer property instead and include the filters as pattern_replace character filters.",
          "name": "categorization_filters",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The categorization analyzer specifies how the text is analyzed and tokenized before being categorized.\nThe syntax is very similar to that used to define the analyzer in the [Analyze endpoint](https://www.elastic.co/guide/en/elasticsearch/reference/8.0/indices-analyze.html). This property\ncannot be used at the same time as categorization_filters.",
          "name": "categorization_analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CategorizeTextAnalyzer",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The number of categorization buckets to return from each shard before merging all the results.",
          "name": "shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of buckets to return.",
          "name": "size",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum number of documents in a bucket to be returned to the results.",
          "name": "min_doc_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum number of documents in a bucket to be returned from the shard before merging.",
          "name": "shard_min_doc_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L1117-L1182"
    },
    {
      "codegenNames": [
        "builtin",
        "custom"
      ],
      "kind": "type_alias",
      "name": {
        "name": "CategorizeTextAnalyzer",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/bucket.ts#L1184-L1187",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CustomCategorizeTextAnalyzer",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "CustomCategorizeTextAnalyzer",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "char_filter",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "tokenizer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "filter",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L1189-L1193"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ChildrenAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The child type that should be selected.",
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RelationName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L121-L126"
    },
    {
      "extDocId": "search-aggregations-bucket-composite-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-composite-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CompositeAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "When paginating, use the `after_key` value returned in the previous response to retrieve the next page.",
          "name": "after",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CompositeAggregateKey",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The number of composite buckets that should be returned.",
          "name": "size",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The value sources used to build composite buckets.\nKeys are returned in the order of the `sources` definition.",
          "name": "sources",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "CompositeAggregationSource",
                  "namespace": "_types.aggregations"
                }
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L130-L149"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "CompositeAggregateKey",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/bucket.ts#L128-L128",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "Field",
            "namespace": "_types"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "FieldValue",
            "namespace": "_types"
          }
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "CompositeAggregationSource",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "A terms aggregation.",
          "name": "terms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CompositeTermsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A histogram aggregation.",
          "name": "histogram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CompositeHistogramAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A date histogram aggregation.",
          "name": "date_histogram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CompositeDateHistogramAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A geotile grid aggregation.",
          "name": "geotile_grid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CompositeGeoTileGridAggregation",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L151-L168"
    },
    {
      "inherits": {
        "type": {
          "name": "CompositeAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CompositeTermsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/bucket.ts#L181-L181"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CompositeAggregationBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Either `field` or `script` must be present",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "missing_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "missing_order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MissingOrder",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Either `field` or `script` must be present",
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "value_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ValueType",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortOrder",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L170-L179"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "first"
        },
        {
          "name": "last"
        },
        {
          "name": "default"
        }
      ],
      "name": {
        "name": "MissingOrder",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/AggregationContainer.ts#L536-L540"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "string"
        },
        {
          "name": "long"
        },
        {
          "name": "double"
        },
        {
          "name": "number"
        },
        {
          "name": "date"
        },
        {
          "name": "date_nanos"
        },
        {
          "name": "ip"
        },
        {
          "name": "numeric"
        },
        {
          "name": "geo_point"
        },
        {
          "name": "boolean"
        }
      ],
      "name": {
        "name": "ValueType",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/metric.ts#L436-L447"
    },
    {
      "inherits": {
        "type": {
          "name": "CompositeAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CompositeHistogramAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "interval",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L183-L185"
    },
    {
      "inherits": {
        "type": {
          "name": "CompositeAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CompositeDateHistogramAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Either `calendar_interval` or `fixed_interval` must be present",
          "name": "calendar_interval",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DurationLarge",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Either `calendar_interval` or `fixed_interval` must be present",
          "name": "fixed_interval",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DurationLarge",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "offset",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "time_zone",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeZone",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L187-L195"
    },
    {
      "description": "A date histogram interval. Similar to `Duration` with additional units: `w` (week), `M` (month), `q` (quarter) and\n`y` (year)",
      "kind": "type_alias",
      "name": {
        "name": "DurationLarge",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L60-L65",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "description": "A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and\n`d` (days). Also accepts \"0\" without a unit and \"-1\" to indicate an unspecified value.",
      "docId": "time-value",
      "docUrl": "https://github.com/elastic/elasticsearch/blob/{branch}/libs/core/src/main/java/org/elasticsearch/core/TimeValue.java",
      "kind": "type_alias",
      "name": {
        "name": "Duration",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L52-L58",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "literal_value",
            "value": -1
          },
          {
            "kind": "literal_value",
            "value": 0
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "inherits": {
        "type": {
          "name": "CompositeAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CompositeGeoTileGridAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "precision",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "bounds",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoBounds",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L197-L200"
    },
    {
      "extDocId": "search-aggregations-pipeline-cumulative-cardinality-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-cumulative-cardinality-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CumulativeCardinalityAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/pipeline.ts#L206-L209"
    },
    {
      "extDocId": "search-aggregations-pipeline-cumulative-sum-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-cumulative-sum-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CumulativeSumAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/pipeline.ts#L211-L214"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateHistogramAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Calendar-aware interval.\nCan be specified using the unit name, such as `month`, or as a single unit quantity, such as `1M`.",
          "name": "calendar_interval",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CalendarInterval",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Enables extending the bounds of the histogram beyond the data itself.",
          "name": "extended_bounds",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "FieldDateMath",
                  "namespace": "_types.aggregations"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "ExtendedBounds",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Limits the histogram to specified bounds.",
          "name": "hard_bounds",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "FieldDateMath",
                  "namespace": "_types.aggregations"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "ExtendedBounds",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The date field whose values are use to build a histogram.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Fixed intervals: a fixed number of SI units and never deviate, regardless of where they fall on the calendar.",
          "name": "fixed_interval",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The date format used to format `key_as_string` in the response.\nIf no `format` is specified, the first date format specified in the field mapping is used.",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "deprecation": {
            "description": "use `fixed_interval` or `calendar_interval`",
            "version": "7.2.0"
          },
          "name": "interval",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Only returns buckets that have `min_doc_count` number of documents.\nBy default, all buckets between the first bucket that matches documents and the last one are returned.",
          "name": "min_doc_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The value to apply to documents that do not have a value.\nBy default, documents without a value are ignored.",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Changes the start value of each bucket by the specified positive (`+`) or negative offset (`-`) duration.",
          "name": "offset",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The sort order of the returned buckets.",
          "name": "order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AggregateOrder",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "params",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Time zone used for bucketing and rounding.\nDefaults to Coordinated Universal Time (UTC).",
          "name": "time_zone",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeZone",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Set to `true` to associate a unique string key with each bucket and return the ranges as a hash rather than an array.",
          "name": "keyed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L202-L260"
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "1s"
          ],
          "name": "second"
        },
        {
          "aliases": [
            "1m"
          ],
          "name": "minute"
        },
        {
          "aliases": [
            "1h"
          ],
          "name": "hour"
        },
        {
          "aliases": [
            "1d"
          ],
          "name": "day"
        },
        {
          "aliases": [
            "1w"
          ],
          "name": "week"
        },
        {
          "aliases": [
            "1M"
          ],
          "name": "month"
        },
        {
          "aliases": [
            "1q"
          ],
          "name": "quarter"
        },
        {
          "aliases": [
            "1y"
          ],
          "name": "year"
        }
      ],
      "name": {
        "name": "CalendarInterval",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/bucket.ts#L262-L279"
    },
    {
      "generics": [
        {
          "name": "T",
          "namespace": "_types.aggregations.ExtendedBounds"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "ExtendedBounds",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Maximum value for the bound.",
          "name": "max",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "T",
              "namespace": "_types.aggregations.ExtendedBounds"
            }
          }
        },
        {
          "description": "Minimum value for the bound.",
          "name": "min",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "T",
              "namespace": "_types.aggregations.ExtendedBounds"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L508-L517"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "AggregateOrder",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/bucket.ts#L1052-L1054",
      "type": {
        "items": [
          {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SortOrder",
                "namespace": "_types"
              }
            }
          },
          {
            "kind": "array_of",
            "value": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "Field",
                  "namespace": "_types"
                }
              },
              "kind": "dictionary_of",
              "singleKey": true,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "SortOrder",
                  "namespace": "_types"
                }
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateRangeAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The date field whose values are use to build ranges.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The date format used to format `from` and `to` in the response.",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The value to apply to documents that do not have a value.\nBy default, documents without a value are ignored.",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Missing",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Array of date ranges.",
          "name": "ranges",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DateRangeExpression",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "description": "Time zone used to convert dates from another time zone to UTC.",
          "name": "time_zone",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeZone",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Set to `true` to associate a unique string key with each bucket and returns the ranges as a hash rather than an array.",
          "name": "keyed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L281-L307"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DateRangeExpression",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Start of the range (inclusive).",
          "name": "from",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldDateMath",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Custom key to return the range with.",
          "name": "key",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "End of the range (exclusive).",
          "name": "to",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldDateMath",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L318-L331"
    },
    {
      "codegenNames": [
        "expr",
        "value"
      ],
      "description": "A date range limit, represented either as a DateMath expression or a number expressed\naccording to the target field's precision.",
      "kind": "type_alias",
      "name": {
        "name": "FieldDateMath",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/bucket.ts#L309-L316",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "DateMath",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "DateMath",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L42-L42",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DerivativeAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/pipeline.ts#L216-L216"
    },
    {
      "extDocId": "search-aggregations-bucket-diversified-sampler-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-diversified-sampler-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DiversifiedSamplerAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The type of value used for de-duplication.",
          "name": "execution_hint",
          "required": false,
          "serverDefault": "global_ordinals",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SamplerAggregationExecutionHint",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Limits how many documents are permitted per choice of de-duplicating value.",
          "name": "max_docs_per_value",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Limits how many top-scoring documents are collected in the sample processed on each shard.",
          "name": "shard_size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field used to provide values used for de-duplication.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L333-L357"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Hold field values directly.",
          "name": "map"
        },
        {
          "description": "Hold ordinals of the field as determined by the Lucene index.",
          "name": "global_ordinals"
        },
        {
          "description": "Hold hashes of the field values - with potential for hash collisions.",
          "name": "bytes_hash"
        }
      ],
      "name": {
        "name": "SamplerAggregationExecutionHint",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/bucket.ts#L359-L372"
    },
    {
      "inherits": {
        "type": {
          "name": "FormatMetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ExtendedStatsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The number of standard deviations above/below the mean to display.",
          "name": "sigma",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L101-L106"
    },
    {
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ExtendedStatsBucketAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The number of standard deviations above/below the mean to display.",
          "name": "sigma",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L218-L223"
    },
    {
      "extDocId": "search-aggregations-bucket-frequent-item-sets-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-frequent-item-sets-aggregation.html",
      "kind": "interface",
      "name": {
        "name": "FrequentItemSetsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Fields to analyze.",
          "name": "fields",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FrequentItemSetsField",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "description": "The minimum size of one item set.",
          "name": "minimum_set_size",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum support of one item set.",
          "name": "minimum_support",
          "required": false,
          "serverDefault": 0.1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of top item sets to return.",
          "name": "size",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Query that filters documents from analysis.",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L1240-L1267"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FrequentItemSetsField",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Values to exclude.\nCan be regular expression strings or arrays of strings of exact terms.",
          "name": "exclude",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsExclude",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Values to include.\nCan be regular expression strings or arrays of strings of exact terms.",
          "name": "include",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsInclude",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L1226-L1238"
    },
    {
      "codegenNames": [
        "regexp",
        "terms"
      ],
      "kind": "type_alias",
      "name": {
        "name": "TermsExclude",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/bucket.ts#L1077-L1078",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "codegenNames": [
        "regexp",
        "terms",
        "partition"
      ],
      "kind": "type_alias",
      "name": {
        "name": "TermsInclude",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/bucket.ts#L1074-L1075",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TermsPartition",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "TermsPartition",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The number of partitions.",
          "name": "num_partitions",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The partition number for this request.",
          "name": "partition",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L1080-L1089"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FiltersAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Collection of queries from which to build buckets.",
          "name": "filters",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "QueryContainer",
                  "namespace": "_types.query_dsl"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Buckets",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Set to `true` to add a bucket to the response which will contain all documents that do not match any of the given filters.",
          "name": "other_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The key with which the other bucket is returned.",
          "name": "other_bucket_key",
          "required": false,
          "serverDefault": "_other_",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "By default, the named filters aggregation returns the buckets as an object.\nSet to `false` to return the buckets as an array of objects.",
          "name": "keyed",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L374-L394"
    },
    {
      "codegenNames": [
        "keyed",
        "array"
      ],
      "description": "Aggregation buckets. By default they are returned as an array, but if the aggregation has keys configured for\nthe different buckets, the result is a dictionary.",
      "generics": [
        {
          "name": "TBucket",
          "namespace": "_types.aggregations.Buckets"
        }
      ],
      "kind": "type_alias",
      "name": {
        "name": "Buckets",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/Aggregate.ts#L346-L355",
      "type": {
        "items": [
          {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TBucket",
                "namespace": "_types.aggregations.Buckets"
              }
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TBucket",
                "namespace": "_types.aggregations.Buckets"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "extDocId": "search-aggregations-metrics-geobounds-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-geobounds-aggregation.html",
      "inherits": {
        "type": {
          "name": "MetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoBoundsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Specifies whether the bounding box should be allowed to overlap the international date line.",
          "name": "wrap_longitude",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L108-L117"
    },
    {
      "inherits": {
        "type": {
          "name": "MetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoCentroidAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "location",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLocation",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L119-L122"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoDistanceAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The distance calculation type.",
          "name": "distance_type",
          "required": false,
          "serverDefault": "arc",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoDistanceType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A field of type `geo_point` used to evaluate the distance.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The origin  used to evaluate the distance.",
          "name": "origin",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLocation",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An array of ranges used to bucket documents.",
          "name": "ranges",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AggregationRange",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "description": "The distance unit.",
          "name": "unit",
          "required": false,
          "serverDefault": "m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DistanceUnit",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L396-L419"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AggregationRange",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Start of the range (inclusive).",
          "name": "from",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Custom key to return the range with.",
          "name": "key",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "End of the range (exclusive).",
          "name": "to",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L691-L704"
    },
    {
      "extDocId": "search-aggregations-bucket-geohashgrid-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-geohashgrid-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoHashGridAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The bounding box to filter the points in each bucket.",
          "name": "bounds",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoBounds",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field containing indexed `geo_point` or `geo_shape` values.\nIf the field contains an array, `geohash_grid` aggregates all array values.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The string length of the geohashes used to define cells/buckets in the results.",
          "name": "precision",
          "required": false,
          "serverDefault": "5",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoHashPrecision",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Allows for more accurate counting of the top cells returned in the final result the aggregation.\nDefaults to returning `max(10,(size x number-of-shards))` buckets from each shard.",
          "name": "shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum number of geohash buckets to return.",
          "name": "size",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L421-L449"
    },
    {
      "codegenNames": [
        "geohash_length",
        "distance"
      ],
      "description": "A precision that can be expressed as a geohash length between 1 and 12, or a distance measure like \"1km\", \"10m\".",
      "kind": "type_alias",
      "name": {
        "name": "GeoHashPrecision",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L86-L90",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "number",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "GeoLineAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The name of the geo_point field.",
          "name": "point",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLinePoint",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The name of the numeric field to use as the sort key for ordering the points.\nWhen the `geo_line` aggregation is nested inside a `time_series` aggregation, this field defaults to `@timestamp`, and any other value will result in error.",
          "name": "sort",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLineSort",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "When `true`, returns an additional array of the sort values in the feature properties.",
          "name": "include_sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The order in which the line is sorted (ascending or descending).",
          "name": "sort_order",
          "required": false,
          "serverDefault": "asc",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortOrder",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum length of the line represented in the aggregation.\nValid sizes are between 1 and 10000.",
          "name": "size",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L124-L149"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GeoLinePoint",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The name of the geo_point field.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L158-L163"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GeoLineSort",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The name of the numeric field to use as the sort key for ordering the points.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L151-L156"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoTileGridAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Field containing indexed `geo_point` or `geo_shape` values.\nIf the field contains an array, `geotile_grid` aggregates all array values.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Integer zoom of the key used to define cells/buckets in the results.\nValues outside of the range [0,29] will be rejected.",
          "name": "precision",
          "required": false,
          "serverDefault": "7",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoTilePrecision",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Allows for more accurate counting of the top cells returned in the final result the aggregation.\nDefaults to returning `max(10,(size x number-of-shards))` buckets from each shard.",
          "name": "shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum number of buckets to return.",
          "name": "size",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A bounding box to filter the geo-points or geo-shapes in each bucket.",
          "name": "bounds",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoBounds",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L451-L477"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "GeoTilePrecision",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L84-L84",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "number",
          "namespace": "_builtins"
        }
      }
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeohexGridAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Field containing indexed `geo_point` or `geo_shape` values.\nIf the field contains an array, `geohex_grid` aggregates all array values.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Integer zoom of the key used to defined cells or buckets\nin the results. Value should be between 0-15.",
          "name": "precision",
          "required": false,
          "serverDefault": 6,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Bounding box used to filter the geo-points in each bucket.",
          "name": "bounds",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoBounds",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum number of buckets to return.",
          "name": "size",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of buckets returned from each shard.",
          "name": "shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L479-L504"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GlobalAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/bucket.ts#L506-L506"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HistogramAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Enables extending the bounds of the histogram beyond the data itself.",
          "name": "extended_bounds",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "ExtendedBounds",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Limits the range of buckets in the histogram.\nIt is particularly useful in the case of open data ranges that can result in a very large number of buckets.",
          "name": "hard_bounds",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "ExtendedBounds",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The name of the field to aggregate on.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The interval for the buckets.\nMust be a positive decimal.",
          "name": "interval",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Only returns buckets that have `min_doc_count` number of documents.\nBy default, the response will fill gaps in the histogram with empty buckets.",
          "name": "min_doc_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The value to apply to documents that do not have a value.\nBy default, documents without a value are ignored.",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "By default, the bucket keys start with 0 and then continue in even spaced steps of `interval`.\nThe bucket boundaries can be shifted by using the `offset` option.",
          "name": "offset",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The sort order of the returned buckets.\nBy default, the returned buckets are sorted by their key ascending.",
          "name": "order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AggregateOrder",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, returns buckets as a hash instead of an array, keyed by the bucket keys.",
          "name": "keyed",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L519-L565"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IpRangeAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The date field whose values are used to build ranges.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Array of IP ranges.",
          "name": "ranges",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IpRangeAggregationRange",
                "namespace": "_types.aggregations"
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L567-L576"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IpRangeAggregationRange",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Start of the range.",
          "name": "from",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "IP range defined as a CIDR mask.",
          "name": "mask",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "End of the range.",
          "name": "to",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L578-L591"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IpPrefixAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The IP address field to aggregation on. The field mapping type must be `ip`.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Length of the network prefix. For IPv4 addresses the accepted range is [0, 32].\nFor IPv6 addresses the accepted range is [0, 128].",
          "name": "prefix_length",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines whether the prefix applies to IPv6 addresses.",
          "name": "is_ipv6",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Defines whether the prefix length is appended to IP address keys in the response.",
          "name": "append_prefix_length",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Defines whether buckets are returned as a hash rather than an array in the response.",
          "name": "keyed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Minimum number of documents in a bucket for it to be included in the response.",
          "name": "min_doc_count",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L1195-L1224"
    },
    {
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "InferenceAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The ID or alias for the trained model.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains the inference type and its options.",
          "name": "inference_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "InferenceConfigContainer",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L225-L234"
    },
    {
      "kind": "interface",
      "name": {
        "name": "InferenceConfigContainer",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Regression configuration for inference.",
          "name": "regression",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RegressionInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Classification configuration for inference.",
          "name": "classification",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ClassificationInferenceOptions",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L236-L242",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "RegressionInferenceOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of feature importance values per document.",
          "docId": "ml-feature-importance",
          "docUrl": "https://www.elastic.co/guide/en/machine-learning/{branch}/ml-feature-importance.html",
          "name": "num_top_feature_importance_values",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L82-L91"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ClassificationInferenceOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Specifies the number of top class predictions to return. Defaults to 0.",
          "name": "num_top_classes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of feature importance values per document.",
          "docId": "ml-feature-importance",
          "docUrl": "https://www.elastic.co/guide/en/machine-learning/{branch}/ml-feature-importance.html",
          "name": "num_top_feature_importance_values",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the type of the predicted field to write. Acceptable values are: string, number, boolean. When boolean is provided 1.0 is transformed to true and 0.0 to false.",
          "name": "prediction_field_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies the field to which the top classes are written. Defaults to top_classes.",
          "name": "top_classes_results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L93-L108"
    },
    {
      "inherits": {
        "type": {
          "name": "MatrixAggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MatrixStatsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Array value the aggregation will use for array or multi-valued fields.",
          "name": "mode",
          "required": false,
          "serverDefault": "avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortMode",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/matrix.ts#L38-L44"
    },
    {
      "inherits": {
        "type": {
          "name": "Aggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MatrixAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "An array of fields for computing the statistics.",
          "name": "fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The value to apply to documents that do not have a value.\nBy default, documents without a value are ignored.",
          "name": "missing",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/matrix.ts#L26-L36"
    },
    {
      "inherits": {
        "type": {
          "name": "FormatMetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MaxAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/metric.ts#L165-L165"
    },
    {
      "extDocId": "search-aggregations-pipeline-max-bucket-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-max-bucket-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MaxBucketAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/pipeline.ts#L244-L247"
    },
    {
      "extDocId": "search-aggregations-metrics-median-absolute-deviation-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-median-absolute-deviation-aggregation.html",
      "inherits": {
        "type": {
          "name": "FormatMetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MedianAbsoluteDeviationAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Limits the maximum number of nodes used by the underlying TDigest algorithm to `20 * compression`, enabling control of memory usage and approximation error.",
          "name": "compression",
          "required": false,
          "serverDefault": 1000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L167-L176"
    },
    {
      "inherits": {
        "type": {
          "name": "FormatMetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MinAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/metric.ts#L178-L178"
    },
    {
      "extDocId": "search-aggregations-pipeline-min-bucket-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-min-bucket-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MinBucketAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/pipeline.ts#L249-L252"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MissingAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The name of the field.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Missing",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L593-L599"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "MovingAverageAggregation",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/pipeline.ts#L254-L260",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "LinearMovingAverageAggregation",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SimpleMovingAverageAggregation",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "EwmaMovingAverageAggregation",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HoltMovingAverageAggregation",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HoltWintersMovingAverageAggregation",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "internal_tag",
        "tag": "model"
      }
    },
    {
      "inherits": {
        "type": {
          "name": "MovingAverageAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "LinearMovingAverageAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "model",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "linear"
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "EmptyObject",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L268-L271"
    },
    {
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MovingAverageAggregationBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "minimize",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "predict",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "window",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L262-L266"
    },
    {
      "description": "For empty Class assignments",
      "kind": "interface",
      "name": {
        "name": "EmptyObject",
        "namespace": "_types"
      },
      "properties": [],
      "specLocation": "_types/common.ts#L161-L162"
    },
    {
      "inherits": {
        "type": {
          "name": "MovingAverageAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SimpleMovingAverageAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "model",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "simple"
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "EmptyObject",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L273-L276"
    },
    {
      "inherits": {
        "type": {
          "name": "MovingAverageAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "EwmaMovingAverageAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "model",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "ewma"
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "EwmaModelSettings",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L278-L281"
    },
    {
      "kind": "interface",
      "name": {
        "name": "EwmaModelSettings",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "alpha",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L293-L295"
    },
    {
      "inherits": {
        "type": {
          "name": "MovingAverageAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HoltMovingAverageAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "model",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "holt"
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HoltLinearModelSettings",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L283-L286"
    },
    {
      "kind": "interface",
      "name": {
        "name": "HoltLinearModelSettings",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "alpha",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "beta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L297-L300"
    },
    {
      "inherits": {
        "type": {
          "name": "MovingAverageAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HoltWintersMovingAverageAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "model",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "holt_winters"
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HoltWintersModelSettings",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L288-L291"
    },
    {
      "kind": "interface",
      "name": {
        "name": "HoltWintersModelSettings",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "alpha",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "beta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "gamma",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "pad",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "period",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HoltWintersType",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L301-L308"
    },
    {
      "kind": "enum",
      "members": [
        {
          "codegenName": "Additive",
          "name": "add"
        },
        {
          "codegenName": "Multiplicative",
          "name": "mult"
        }
      ],
      "name": {
        "name": "HoltWintersType",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/pipeline.ts#L309-L312"
    },
    {
      "extDocId": "search-aggregations-pipeline-moving-percentiles-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-moving-percentiles-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MovingPercentilesAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The size of window to \"slide\" across the histogram.",
          "name": "window",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "By default, the window consists of the last n values excluding the current bucket.\nIncreasing `shift` by 1, moves the starting window position by 1 to the right.",
          "name": "shift",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "keyed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L334-L349"
    },
    {
      "extDocId": "search-aggregations-pipeline-movfn-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-movfn-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MovingFunctionAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The script that should be executed on each window of data.",
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "By default, the window consists of the last n values excluding the current bucket.\nIncreasing `shift` by 1, moves the starting window position by 1 to the right.",
          "name": "shift",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The size of window to \"slide\" across the histogram.",
          "name": "window",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L314-L332"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MultiTermsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Specifies the strategy for data collection.",
          "name": "collect_mode",
          "required": false,
          "serverDefault": "breadth_first",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsAggregationCollectMode",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Specifies the sort order of the buckets.\nDefaults to sorting by descending document count.",
          "name": "order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AggregateOrder",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The minimum number of documents in a bucket for it to be returned.",
          "name": "min_doc_count",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum number of documents in a bucket on each shard for it to be returned.",
          "name": "shard_min_doc_count",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of candidate terms produced by each shard.\nBy default, `shard_size` will be automatically estimated based on the number of shards and the `size` parameter.",
          "name": "shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Calculates the doc count error on per term basis.",
          "name": "show_term_doc_count_error",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The number of term buckets should be returned out of the overall terms list.",
          "name": "size",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field from which to generate sets of terms.",
          "name": "terms",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "MultiTermLookup",
                "namespace": "_types.aggregations"
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L601-L641"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Expands all branches of the aggregation tree in one depth-first pass, before any pruning occurs.",
          "name": "depth_first"
        },
        {
          "description": "Caches the set of documents that fall into the uppermost buckets for subsequent replay.",
          "name": "breadth_first"
        }
      ],
      "name": {
        "name": "TermsAggregationCollectMode",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/bucket.ts#L1056-L1065"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MultiTermLookup",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "A fields from which to retrieve terms.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The value to apply to documents that do not have a value.\nBy default, documents without a value are ignored.",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Missing",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L643-L653"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NestedAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The path to the field of type `nested`.",
          "name": "path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L655-L660"
    },
    {
      "extDocId": "search-aggregations-pipeline-normalize-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-normalize-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NormalizeAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The specific method to apply.",
          "name": "method",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NormalizeMethod",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L351-L359"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "This method rescales the data such that the minimum number is 0, and the maximum number is 1, with the rest normalized linearly in-between.",
          "name": "rescale_0_1"
        },
        {
          "description": "This method rescales the data such that the minimum number is 0, and the maximum number is 100, with the rest normalized linearly in-between.",
          "name": "rescale_0_100"
        },
        {
          "description": "This method normalizes each value so that it represents a percentage of the total sum it attributes to.",
          "name": "percent_of_sum"
        },
        {
          "description": "This method normalizes such that each value is normalized by how much it differs from the average.",
          "name": "mean"
        },
        {
          "codegenName": "z_score",
          "description": "This method normalizes such that each value represents how far it is from the mean relative to the standard deviation.",
          "name": "z-score"
        },
        {
          "description": "This method normalizes such that each value is exponentiated and relative to the sum of the exponents of the original values.",
          "name": "softmax"
        }
      ],
      "name": {
        "name": "NormalizeMethod",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/pipeline.ts#L361-L387"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ParentAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The child type that should be selected.",
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RelationName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L662-L667"
    },
    {
      "extDocId": "search-aggregations-metrics-percentile-rank-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-percentile-rank-aggregation.html",
      "inherits": {
        "type": {
          "name": "FormatMetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PercentileRanksAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "By default, the aggregation associates a unique string key with each bucket and returns the ranges as a hash rather than an array.\nSet to `false` to disable this behavior.",
          "name": "keyed",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "An array of values for which to calculate the percentile ranks.",
          "name": "values",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "double",
                    "namespace": "_types"
                  }
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Uses the alternative High Dynamic Range Histogram algorithm to calculate percentile ranks.",
          "name": "hdr",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HdrMethod",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Sets parameters for the default TDigest algorithm used to calculate percentile ranks.",
          "name": "tdigest",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TDigest",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L180-L202"
    },
    {
      "kind": "interface",
      "name": {
        "name": "HdrMethod",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Specifies the resolution of values for the histogram in number of significant digits.",
          "name": "number_of_significant_value_digits",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L225-L230"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TDigest",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Limits the maximum number of nodes used by the underlying TDigest algorithm to `20 * compression`, enabling control of memory usage and approximation error.",
          "name": "compression",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L232-L237"
    },
    {
      "inherits": {
        "type": {
          "name": "FormatMetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PercentilesAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "By default, the aggregation associates a unique string key with each bucket and returns the ranges as a hash rather than an array.\nSet to `false` to disable this behavior.",
          "name": "keyed",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The percentiles to calculate.",
          "name": "percents",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Uses the alternative High Dynamic Range Histogram algorithm to calculate percentiles.",
          "name": "hdr",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HdrMethod",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Sets parameters for the default TDigest algorithm used to calculate percentiles.",
          "name": "tdigest",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TDigest",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L204-L223"
    },
    {
      "extDocId": "search-aggregations-pipeline-percentiles-bucket-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-percentiles-bucket-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PercentilesBucketAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The list of percentiles to calculate.",
          "name": "percents",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L389-L397"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RangeAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The date field whose values are use to build ranges.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The value to apply to documents that do not have a value.\nBy default, documents without a value are ignored.",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An array of ranges used to bucket documents.",
          "name": "ranges",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AggregationRange",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Set to `true` to associate a unique string key with each bucket and return the ranges as a hash rather than an array.",
          "name": "keyed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L669-L689"
    },
    {
      "extDocId": "search-aggregations-bucket-rare-terms-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-rare-terms-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RareTermsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Terms that should be excluded from the aggregation.",
          "name": "exclude",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsExclude",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The field from which to return rare terms.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Terms that should be included in the aggregation.",
          "name": "include",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsInclude",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The maximum number of documents a term should appear in.",
          "name": "max_doc_count",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The value to apply to documents that do not have a value.\nBy default, documents without a value are ignored.",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Missing",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The precision of the internal CuckooFilters.\nSmaller precision leads to better approximation, but higher memory usage.",
          "name": "precision",
          "required": false,
          "serverDefault": 0.001,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "value_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L706-L739"
    },
    {
      "inherits": {
        "type": {
          "name": "FormatMetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RateAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The interval used to calculate the rate.\nBy default, the interval of the `date_histogram` is used.",
          "name": "unit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CalendarInterval",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "How the rate is calculated.",
          "name": "mode",
          "required": false,
          "serverDefault": "sum",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RateMode",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L239-L250"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Calculates the sum of all values of the field.",
          "name": "sum"
        },
        {
          "description": "Uses the number of values of the field.",
          "name": "value_count"
        }
      ],
      "name": {
        "name": "RateMode",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/metric.ts#L252-L261"
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ReverseNestedAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Defines the nested object field that should be joined back to.\nThe default is empty, which means that it joins back to the root/main document level.",
          "name": "path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L741-L747"
    },
    {
      "extDocId": "search-aggregations-random-sampler-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-random-sampler-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RandomSamplerAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The probability that a document will be included in the aggregated data.\nMust be greater than 0, less than 0.5, or exactly 1.\nThe lower the probability, the fewer documents are matched.",
          "name": "probability",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The seed to generate the random sampling of documents.\nWhen a seed is provided, the random subset of documents is the same between calls.",
          "name": "seed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L749-L769"
    },
    {
      "extDocId": "search-aggregations-bucket-sampler-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-sampler-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SamplerAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Limits how many top-scoring documents are collected in the sample processed on each shard.",
          "name": "shard_size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L771-L780"
    },
    {
      "inherits": {
        "type": {
          "name": "MetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ScriptedMetricAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Runs once on each shard after document collection is complete.\nAllows the aggregation to consolidate the state returned from each shard.",
          "name": "combine_script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Runs prior to any collection of documents.\nAllows the aggregation to set up any initial state.",
          "name": "init_script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Run once per document collected.\nIf no `combine_script` is specified, the resulting state needs to be stored in the `state` object.",
          "name": "map_script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A global object with script parameters for `init`, `map` and `combine` scripts.\nIt is shared between the scripts.",
          "name": "params",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "Runs once on the coordinating node after all shards have returned their results.\nThe script is provided with access to a variable `states`, which is an array of the result of the `combine_script` on each shard.",
          "name": "reduce_script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L263-L289"
    },
    {
      "extDocId": "search-aggregations-pipeline-serialdiff-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-serialdiff-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SerialDifferencingAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The historical bucket to subtract from the current value.\nMust be a positive, non-zero integer.",
          "name": "lag",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/pipeline.ts#L399-L408"
    },
    {
      "extDocId": "search-aggregations-bucket-significanttext-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-significanttext-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SignificantTermsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "A background filter that can be used to focus in on significant terms within a narrower context, instead of the entire index.",
          "name": "background_filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Use Chi square, as described in \"Information Retrieval\", Manning et al., Chapter 13.5.2, as the significance score.",
          "name": "chi_square",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ChiSquareHeuristic",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Terms to exclude.",
          "name": "exclude",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsExclude",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Mechanism by which the aggregation should be executed: using field values directly or using global ordinals.",
          "name": "execution_hint",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsAggregationExecutionHint",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The field from which to return significant terms.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Use Google normalized distance as described in \"The Google Similarity Distance\", Cilibrasi and Vitanyi, 2007, as the significance score.",
          "name": "gnd",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GoogleNormalizedDistanceHeuristic",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Terms to include.",
          "name": "include",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsInclude",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Use JLH score as the significance score.",
          "name": "jlh",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "EmptyObject",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Only return terms that are found in more than `min_doc_count` hits.",
          "name": "min_doc_count",
          "required": false,
          "serverDefault": 3,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Use mutual information as described in \"Information Retrieval\", Manning et al., Chapter 13.5.1, as the significance score.",
          "name": "mutual_information",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MutualInformationHeuristic",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A simple calculation of the number of documents in the foreground sample with a term divided by the number of documents in the background with the term.",
          "name": "percentage",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PercentageScoreHeuristic",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Customized score, implemented via a script.",
          "name": "script_heuristic",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptedHeuristic",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Regulates the certainty a shard has if the term should actually be added to the candidate list or not with respect to the `min_doc_count`.\nTerms will only be considered if their local shard frequency within the set is higher than the `shard_min_doc_count`.",
          "name": "shard_min_doc_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Can be used to control the volumes of candidate terms produced by each shard.\nBy default, `shard_size` will be automatically estimated based on the number of shards and the `size` parameter.",
          "name": "shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of buckets returned out of the overall terms list.",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L817-L884"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ChiSquareHeuristic",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Set to `false` if you defined a custom background filter that represents a different set of documents that you want to compare to.",
          "name": "background_is_superset",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Set to `false` to filter out the terms that appear less often in the subset than in documents outside the subset.",
          "name": "include_negatives",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L782-L791"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "map"
        },
        {
          "name": "global_ordinals"
        },
        {
          "name": "global_ordinals_hash"
        },
        {
          "name": "global_ordinals_low_cardinality"
        }
      ],
      "name": {
        "name": "TermsAggregationExecutionHint",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/bucket.ts#L1067-L1072"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GoogleNormalizedDistanceHeuristic",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Set to `false` if you defined a custom background filter that represents a different set of documents that you want to compare to.",
          "name": "background_is_superset",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L793-L798"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MutualInformationHeuristic",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Set to `false` if you defined a custom background filter that represents a different set of documents that you want to compare to.",
          "name": "background_is_superset",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Set to `false` to filter out the terms that appear less often in the subset than in documents outside the subset.",
          "name": "include_negatives",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L800-L809"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PercentageScoreHeuristic",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/bucket.ts#L811-L811"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ScriptedHeuristic",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "script",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L813-L815"
    },
    {
      "extDocId": "search-aggregations-bucket-significanttext-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-significanttext-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SignificantTextAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "A background filter that can be used to focus in on significant terms within a narrower context, instead of the entire index.",
          "name": "background_filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Use Chi square, as described in \"Information Retrieval\", Manning et al., Chapter 13.5.2, as the significance score.",
          "name": "chi_square",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ChiSquareHeuristic",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Values to exclude.",
          "name": "exclude",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsExclude",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Determines whether the aggregation will use field values directly or global ordinals.",
          "name": "execution_hint",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsAggregationExecutionHint",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The field from which to return significant text.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Whether to out duplicate text to deal with noisy data.",
          "name": "filter_duplicate_text",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Use Google normalized distance as described in \"The Google Similarity Distance\", Cilibrasi and Vitanyi, 2007, as the significance score.",
          "name": "gnd",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GoogleNormalizedDistanceHeuristic",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Values to include.",
          "name": "include",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsInclude",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Use JLH score as the significance score.",
          "name": "jlh",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "EmptyObject",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Only return values that are found in more than `min_doc_count` hits.",
          "name": "min_doc_count",
          "required": false,
          "serverDefault": 3,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Use mutual information as described in \"Information Retrieval\", Manning et al., Chapter 13.5.1, as the significance score.",
          "name": "mutual_information",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MutualInformationHeuristic",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A simple calculation of the number of documents in the foreground sample with a term divided by the number of documents in the background with the term.",
          "name": "percentage",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PercentageScoreHeuristic",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Customized score, implemented via a script.",
          "name": "script_heuristic",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptedHeuristic",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Regulates the certainty a shard has if the values should actually be added to the candidate list or not with respect to the min_doc_count.\nValues will only be considered if their local shard frequency within the set is higher than the `shard_min_doc_count`.",
          "name": "shard_min_doc_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of candidate terms produced by each shard.\nBy default, `shard_size` will be automatically estimated based on the number of shards and the `size` parameter.",
          "name": "shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of buckets returned out of the overall terms list.",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Overrides the JSON `_source` fields from which text will be analyzed.",
          "name": "source_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L886-L961"
    },
    {
      "inherits": {
        "type": {
          "name": "FormatMetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StatsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/metric.ts#L291-L291"
    },
    {
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StatsBucketAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/pipeline.ts#L410-L410"
    },
    {
      "inherits": {
        "type": {
          "name": "MetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StringStatsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Shows the probability distribution for all characters.",
          "name": "show_distribution",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L293-L299"
    },
    {
      "inherits": {
        "type": {
          "name": "FormatMetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SumAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/metric.ts#L301-L301"
    },
    {
      "extDocId": "search-aggregations-pipeline-sum-bucket-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-sum-bucket-aggregation.html",
      "inherits": {
        "type": {
          "name": "PipelineAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SumBucketAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/pipeline.ts#L412-L415"
    },
    {
      "extDocId": "search-aggregations-bucket-terms-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-terms-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TermsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Determines how child aggregations should be calculated: breadth-first or depth-first.",
          "name": "collect_mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsAggregationCollectMode",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Values to exclude.\nAccepts regular expressions and partitions.",
          "name": "exclude",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsExclude",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Determines whether the aggregation will use field values directly or global ordinals.",
          "name": "execution_hint",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsAggregationExecutionHint",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The field from which to return terms.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Values to include.\nAccepts regular expressions and partitions.",
          "name": "include",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsInclude",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Only return values that are found in more than `min_doc_count` hits.",
          "name": "min_doc_count",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The value to apply to documents that do not have a value.\nBy default, documents without a value are ignored.",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Missing",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "missing_order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MissingOrder",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "missing_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Coerced unmapped fields into the specified type.",
          "name": "value_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies the sort order of the buckets.\nDefaults to sorting by descending document count.",
          "name": "order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AggregateOrder",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Regulates the certainty a shard has if the term should actually be added to the candidate list or not with respect to the `min_doc_count`.\nTerms will only be considered if their local shard frequency within the set is higher than the `shard_min_doc_count`.",
          "name": "shard_min_doc_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of candidate terms produced by each shard.\nBy default, `shard_size` will be automatically estimated based on the number of shards and the `size` parameter.",
          "name": "shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Set to `true` to return the `doc_count_error_upper_bound`, which is an upper bound to the error on the `doc_count` returned by each shard.",
          "name": "show_term_doc_count_error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The number of buckets returned out of the overall terms list.",
          "name": "size",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L963-L1031"
    },
    {
      "extDocId": "search-aggregations-bucket-time-series-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-time-series-aggregation.html",
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TimeSeriesAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The maximum number of results to return.",
          "name": "size",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Set to `true` to associate a unique string key with each bucket and returns the ranges as a hash rather than an array.",
          "name": "keyed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L1033-L1046"
    },
    {
      "inherits": {
        "type": {
          "name": "MetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TopHitsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Fields for which to return doc values.",
          "name": "docvalue_fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FieldAndFormat",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "If `true`, returns detailed information about score computation as part of a hit.",
          "name": "explain",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Array of wildcard (*) patterns. The request returns values for field names\nmatching these patterns in the hits.fields property of the response.",
          "name": "fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FieldAndFormat",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Starting document offset.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the highlighter to use for retrieving highlighted snippets from one or more fields in the search results.",
          "name": "highlight",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Highlight",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Returns the result of one or more script evaluations for each hit.",
          "name": "script_fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ScriptField",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "The maximum number of top matching hits to return per bucket.",
          "name": "size",
          "required": false,
          "serverDefault": 3,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Sort order of the top matching hits.\nBy default, the hits are sorted by the score of the main query.",
          "name": "sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Sort",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Selects the fields of the source that are returned.",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfig",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Returns values for the specified stored fields (fields that use the `store` mapping option).",
          "name": "stored_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, calculates and returns document scores, even if the scores are not used for sorting.",
          "name": "track_scores",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, returns document version as part of a hit.",
          "name": "version",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, returns sequence number and primary term of the last modification of each hit.",
          "name": "seq_no_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L346-L406"
    },
    {
      "inherits": {
        "type": {
          "name": "Aggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TTestAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "Test population A.",
          "name": "a",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TestPopulation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Test population B.",
          "name": "b",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TestPopulation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "The type of test.",
          "name": "type",
          "required": false,
          "serverDefault": "heteroscedastic",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TTestType",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L303-L317"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TestPopulation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The field to aggregate.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A filter used to define a set of records to run unpaired t-test on.",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L319-L329"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Performs paired t-test.",
          "name": "paired"
        },
        {
          "description": "Performs two-sample equal variance test.",
          "name": "homoscedastic"
        },
        {
          "description": "Performs two-sample unequal variance test.",
          "name": "heteroscedastic"
        }
      ],
      "name": {
        "name": "TTestType",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/metric.ts#L331-L344"
    },
    {
      "extDocId": "search-aggregations-metrics-top-metrics",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-top-metrics.html",
      "inherits": {
        "type": {
          "name": "MetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TopMetricsAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The fields of the top document to return.",
          "name": "metrics",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TopMetricsValue",
                  "namespace": "_types.aggregations"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "TopMetricsValue",
                    "namespace": "_types.aggregations"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "The number of top documents from which to return metrics.",
          "name": "size",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The sort order of the documents.",
          "name": "sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Sort",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L408-L425"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TopMetricsValue",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "A field to return as a metric.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L427-L432"
    },
    {
      "inherits": {
        "type": {
          "name": "FormattableMetricAggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ValueCountAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/metric.ts#L434-L434"
    },
    {
      "inherits": {
        "type": {
          "name": "MetricAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FormattableMetricAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L51-L53"
    },
    {
      "inherits": {
        "type": {
          "name": "Aggregation",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "WeightedAverageAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "A numeric response formatter.",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Configuration for the field that provides the values.",
          "name": "value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WeightedAverageValue",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "value_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ValueType",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Configuration for the field or script that provides the weights.",
          "name": "weight",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WeightedAverageValue",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L449-L463"
    },
    {
      "kind": "interface",
      "name": {
        "name": "WeightedAverageValue",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The field from which to extract the values or weights.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A value or weight to use if the field is missing.",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/metric.ts#L465-L475"
    },
    {
      "extDocId": "search-aggregations-bucket-variablewidthhistogram-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-variablewidthhistogram-aggregation.html",
      "kind": "interface",
      "name": {
        "name": "VariableWidthHistogramAggregation",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The name of the field.",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The target number of buckets.",
          "name": "buckets",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of buckets that the coordinating node will request from each shard.\nDefaults to `buckets * 50`.",
          "name": "shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the number of individual documents that will be stored in memory on a shard before the initial bucketing algorithm is run.\nDefaults to `min(10 * shard_size, 50000)`.",
          "name": "initial_buffer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/bucket.ts#L1091-L1115"
    },
    {
      "kind": "interface",
      "name": {
        "name": "KnnSearch",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "The name of the vector field to search against",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The query vector",
          "name": "query_vector",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryVector",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The query vector builder. You must provide a query_vector_builder or query_vector, but not both.",
          "name": "query_vector_builder",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryVectorBuilder",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The final number of nearest neighbors to return as top hits",
          "name": "k",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of nearest neighbor candidates to consider per shard",
          "name": "num_candidates",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Boost value to apply to kNN scores",
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Filters for the kNN search query",
          "name": "filter",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "QueryContainer",
                  "namespace": "_types.query_dsl"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "QueryContainer",
                    "namespace": "_types.query_dsl"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "The minimum similarity for a vector to be considered a match",
          "name": "similarity",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If defined, each search hit will contain inner hits.",
          "docId": "knn-inner-hits",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/knn-search.html#nested-knn-search-inner-hits",
          "name": "inner_hits",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "InnerHits",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_types/Knn.ts#L30-L52"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Rescore",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "containerProperty": true,
          "name": "window_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RescoreQuery",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "learning_to_rank",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "LearningToRank",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/rescoring.ts#L25-L38",
      "variants": {
        "kind": "container",
        "nonExhaustive": true
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "RescoreQuery",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "codegenName": "Query",
          "description": "The query to use for rescoring.\nThis query is only run on the Top-K results returned by the `query` and `post_filter` phases.",
          "name": "rescore_query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Relative importance of the original query versus the rescore query.",
          "name": "query_weight",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Relative importance of the rescore query versus the original query.",
          "name": "rescore_query_weight",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Determines how scores are combined.",
          "name": "score_mode",
          "required": false,
          "serverDefault": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScoreMode",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/rescoring.ts#L40-L62"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Average the original score and the rescore query score.",
          "name": "avg"
        },
        {
          "description": "Take the max of original score and the rescore query score.",
          "name": "max"
        },
        {
          "description": "Take the min of the original score and the rescore query score.",
          "name": "min"
        },
        {
          "description": "Multiply the original score by the rescore query score.\nUseful for `function` query rescores.",
          "name": "multiply"
        },
        {
          "description": "Add the original score and the rescore query score.",
          "name": "total"
        }
      ],
      "name": {
        "name": "ScoreMode",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/rescoring.ts#L64-L86"
    },
    {
      "kind": "interface",
      "name": {
        "name": "LearningToRank",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "The unique identifier of the trained model uploaded to Elasticsearch",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Named parameters to be passed to the query templates used for feature",
          "name": "params",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/rescoring.ts#L88-L97"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "SortResults",
        "namespace": "_types"
      },
      "specLocation": "_types/sort.ts#L106-L106",
      "type": {
        "kind": "array_of",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "FieldValue",
            "namespace": "_types"
          }
        }
      }
    },
    {
      "codegenNames": [
        "enabled",
        "count"
      ],
      "description": "Number of hits matching the query to count accurately. If true, the exact\nnumber of hits is returned at the cost of some performance. If false, the\nresponse does not include the total number of hits matching the query.\nDefaults to 10,000 hits.",
      "kind": "type_alias",
      "name": {
        "name": "TrackHits",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/hits.ts#L144-L152",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "RuntimeFields",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/RuntimeFields.ts#L24-L24",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "Field",
            "namespace": "_types"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "RuntimeField",
            "namespace": "_types.mapping"
          }
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "RuntimeField",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "description": "For type `composite`",
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "CompositeSubField",
                "namespace": "_types.mapping"
              }
            }
          }
        },
        {
          "description": "For type `lookup`",
          "name": "fetch_fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeFieldFetchFields",
                "namespace": "_types.mapping"
              }
            }
          }
        },
        {
          "description": "A custom format for `date` type runtime fields.",
          "docId": "mapping-date-format",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-date-format.html",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "For type `lookup`",
          "name": "input_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "For type `lookup`",
          "name": "target_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "For type `lookup`",
          "name": "target_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Painless script executed at query time.",
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field type, which can be: `boolean`, `composite`, `date`, `double`, `geo_point`, `ip`,`keyword`, `long`, or `lookup`.",
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RuntimeFieldType",
              "namespace": "_types.mapping"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/RuntimeFields.ts#L26-L50"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CompositeSubField",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RuntimeFieldType",
              "namespace": "_types.mapping"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/RuntimeFields.ts#L52-L54"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "boolean"
        },
        {
          "name": "composite"
        },
        {
          "name": "date"
        },
        {
          "name": "double"
        },
        {
          "name": "geo_point"
        },
        {
          "name": "ip"
        },
        {
          "name": "keyword"
        },
        {
          "name": "long"
        },
        {
          "name": "lookup"
        }
      ],
      "name": {
        "name": "RuntimeFieldType",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/RuntimeFields.ts#L62-L72"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RuntimeFieldFetchFields",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "shortcutProperty": "field",
      "specLocation": "_types/mapping/RuntimeFields.ts#L56-L60"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PointInTimeReference",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "keep_alive",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/PointInTimeReference.ts#L23-L26"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "FieldSuggester",
                "namespace": "_global.search._types"
              }
            }
          ],
          "meta": {
            "description": "The named suggesters",
            "fieldname": "suggesters"
          },
          "type": {
            "name": "AdditionalProperties",
            "namespace": "_spec_utils"
          }
        }
      ],
      "kind": "interface",
      "name": {
        "name": "Suggester",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "Global suggest text, to avoid repetition when the same text is used in several suggesters",
          "name": "text",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L101-L107"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FieldSuggester",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "Provides auto-complete/search-as-you-type functionality.",
          "name": "completion",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CompletionSuggester",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Provides access to word alternatives on a per token basis within a certain string distance.",
          "name": "phrase",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PhraseSuggester",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Suggests terms based on edit distance.",
          "name": "term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermSuggester",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "containerProperty": true,
          "description": "Prefix used to search for suggestions.",
          "name": "prefix",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "containerProperty": true,
          "description": "A prefix expressed as a regular expression.",
          "name": "regex",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "containerProperty": true,
          "description": "The text to use as input for the suggester.\nNeeds to be set globally or per suggestion.",
          "name": "text",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L109-L142",
      "variants": {
        "kind": "container",
        "nonExhaustive": true
      }
    },
    {
      "inherits": {
        "type": {
          "name": "SuggesterBase",
          "namespace": "_global.search._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CompletionSuggester",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "A value, geo point object, or a geo hash string to filter or boost the suggestion on.",
          "name": "contexts",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "CompletionContext",
                    "namespace": "_global.search._types"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "CompletionContext",
                      "namespace": "_global.search._types"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          }
        },
        {
          "description": "Enables fuzziness, meaning you can have a typo in your search and still get results back.",
          "name": "fuzzy",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SuggestFuzziness",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A regex query that expresses a prefix as a regular expression.",
          "name": "regex",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RegexOptions",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Whether duplicate suggestions should be filtered out.",
          "name": "skip_duplicates",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L163-L181"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SuggesterBase",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "The field to fetch the candidate suggestions from.\nNeeds to be set globally or per suggestion.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The analyzer to analyze the suggest text with.\nDefaults to the search analyzer of the suggest field.",
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The maximum corrections to be returned per suggest text token.",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L144-L159"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CompletionContext",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "The factor by which the score of the suggestion should be boosted.\nThe score is computed by multiplying the boost with the suggestion weight.",
          "name": "boost",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The value of the category to filter/boost on.",
          "name": "context",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Context",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "An array of precision values at which neighboring geohashes should be taken into account.\nPrecision value can be a distance value (`5m`, `10km`, etc.) or a raw geohash precision (`1`..`12`).\nDefaults to generating neighbors for index time precision level.",
          "name": "neighbours",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "GeoHashPrecision",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "The precision of the geohash to encode the query geo point.\nCan be specified as a distance value (`5m`, `10km`, etc.), or as a raw geohash precision (`1`..`12`).\nDefaults to index time precision level.",
          "name": "precision",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoHashPrecision",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Whether the category value should be treated as a prefix or not.",
          "name": "prefix",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "shortcutProperty": "context",
      "specLocation": "_global/search/_types/suggester.ts#L235-L264"
    },
    {
      "codegenNames": [
        "category",
        "location"
      ],
      "description": "Text or location that we want similar documents for or a lookup to a document's field for the text.",
      "docId": "document-input-parameters",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-mlt-query.html#_document_input_parameters",
      "kind": "type_alias",
      "name": {
        "name": "Context",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/suggester.ts#L228-L233",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoLocation",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "SuggestFuzziness",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "The fuzziness factor.",
          "docId": "fuzziness",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/common-options.html#fuzziness",
          "name": "fuzziness",
          "required": false,
          "serverDefault": "AUTO",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fuzziness",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Minimum length of the input before fuzzy suggestions are returned.",
          "name": "min_length",
          "required": false,
          "serverDefault": 3,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Minimum length of the input, which is not checked for fuzzy alternatives.",
          "name": "prefix_length",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If set to `true`, transpositions are counted as one change instead of two.",
          "name": "transpositions",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, all measurements (like fuzzy edit distance, transpositions, and lengths) are measured in Unicode code points instead of in bytes.\nThis is slightly slower than raw bytes.",
          "name": "unicode_aware",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L196-L224"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RegexOptions",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "Optional operators for the regular expression.",
          "docId": "regexp-syntax",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/regexp-syntax.html",
          "name": "flags",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Maximum number of automaton states required for the query.",
          "name": "max_determinized_states",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L183-L194"
    },
    {
      "inherits": {
        "type": {
          "name": "SuggesterBase",
          "namespace": "_global.search._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PhraseSuggester",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "Checks each suggestion against the specified query to prune suggestions for which no matching docs exist in the index.",
          "name": "collate",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PhraseSuggestCollate",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Defines a factor applied to the input phrases score, which is used as a threshold for other suggest candidates.\nOnly candidates that score higher than the threshold will be included in the result.",
          "name": "confidence",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A list of candidate generators that produce a list of possible terms per term in the given text.",
          "name": "direct_generator",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DirectGenerator",
                "namespace": "_global.search._types"
              }
            }
          }
        },
        {
          "name": "force_unigrams",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Sets max size of the n-grams (shingles) in the field.\nIf the field doesnâ€™t contain n-grams (shingles), this should be omitted or set to `1`.\nIf the field uses a shingle filter, the `gram_size` is set to the `max_shingle_size` if not explicitly set.",
          "name": "gram_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Sets up suggestion highlighting.\nIf not provided, no highlighted field is returned.",
          "name": "highlight",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PhraseSuggestHighlight",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "The maximum percentage of the terms considered to be misspellings in order to form a correction.\nThis method accepts a float value in the range `[0..1)` as a fraction of the actual query terms or a number `>=1` as an absolute number of query terms.",
          "name": "max_errors",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The likelihood of a term being misspelled even if the term exists in the dictionary.",
          "name": "real_word_error_likelihood",
          "required": false,
          "serverDefault": 0.95,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The separator that is used to separate terms in the bigram field.\nIf not set, the whitespace character is used as a separator.",
          "name": "separator",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Sets the maximum number of suggested terms to be retrieved from each individual shard.",
          "name": "shard_size",
          "required": false,
          "serverDefault": 5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The smoothing model used to balance weight between infrequent grams (grams (shingles) are not existing in the index) and frequent grams (appear at least once in the index).\nThe default model is Stupid Backoff.",
          "name": "smoothing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SmoothingModelContainer",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "The text/query to provide suggestions for.",
          "name": "text",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "token_limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L359-L417"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PhraseSuggestCollate",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "Parameters to use if the query is templated.",
          "name": "params",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "Returns all suggestions with an extra `collate_match` option indicating whether the generated phrase matched any document.",
          "name": "prune",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A collate query that is run once for every suggestion.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PhraseSuggestCollateQuery",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L333-L346"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PhraseSuggestCollateQuery",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "The search template ID.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The query source.",
          "name": "source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L348-L357"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DirectGenerator",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "The field to fetch the candidate suggestions from.\nNeeds to be set globally or per suggestion.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum edit distance candidate suggestions can have in order to be considered as a suggestion.\nCan only be `1` or `2`.",
          "name": "max_edits",
          "required": false,
          "serverDefault": 2,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A factor that is used to multiply with the shard_size in order to inspect more candidate spelling corrections on the shard level.\nCan improve accuracy at the cost of performance.",
          "name": "max_inspections",
          "required": false,
          "serverDefault": 5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum threshold in number of documents in which a suggest text token can exist in order to be included.\nThis can be used to exclude high frequency termsâ€‰â€”â€‰which are usually spelled correctlyâ€‰â€”â€‰from being spellchecked.\nCan be a relative percentage number (for example `0.4`) or an absolute number to represent document frequencies.\nIf a value higher than 1 is specified, then fractional can not be specified.",
          "name": "max_term_freq",
          "required": false,
          "serverDefault": 0.01,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimal threshold in number of documents a suggestion should appear in.\nThis can improve quality by only suggesting high frequency terms.\nCan be specified as an absolute number or as a relative percentage of number of documents.\nIf a value higher than 1 is specified, the number cannot be fractional.",
          "name": "min_doc_freq",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum length a suggest text term must have in order to be included.",
          "name": "min_word_length",
          "required": false,
          "serverDefault": 4,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A filter (analyzer) that is applied to each of the generated tokens before they are passed to the actual phrase scorer.",
          "name": "post_filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A filter (analyzer) that is applied to each of the tokens passed to this candidate generator.\nThis filter is applied to the original token before candidates are generated.",
          "name": "pre_filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The number of minimal prefix characters that must match in order be a candidate suggestions.\nIncreasing this number improves spellcheck performance.",
          "name": "prefix_length",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum corrections to be returned per suggest text token.",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Controls what suggestions are included on the suggestions generated on each shard.",
          "name": "suggest_mode",
          "required": false,
          "serverDefault": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SuggestMode",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L268-L331"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Only generate suggestions for terms that are not in the shard.",
          "name": "missing"
        },
        {
          "description": "Only suggest terms that occur in more docs on the shard than the original term.",
          "name": "popular"
        },
        {
          "description": "Suggest any matching suggestions based on terms in the suggest text.",
          "name": "always"
        }
      ],
      "name": {
        "name": "SuggestMode",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L283-L296"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PhraseSuggestHighlight",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "Use in conjunction with `pre_tag` to define the HTML tags to use for the highlighted text.",
          "name": "post_tag",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Use in conjunction with `post_tag` to define the HTML tags to use for the highlighted text.",
          "name": "pre_tag",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L419-L428"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SmoothingModelContainer",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "A smoothing model that uses an additive smoothing where a constant (typically `1.0` or smaller) is added to all counts to balance weights.",
          "name": "laplace",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "LaplaceSmoothingModel",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A smoothing model that takes the weighted mean of the unigrams, bigrams, and trigrams based on user supplied weights (lambdas).",
          "name": "linear_interpolation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "LinearInterpolationSmoothingModel",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "A simple backoff model that backs off to lower order n-gram models if the higher order count is `0` and discounts the lower order n-gram model by a constant factor.",
          "name": "stupid_backoff",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StupidBackoffSmoothingModel",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L445-L461",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "LaplaceSmoothingModel",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "A constant that is added to all counts to balance weights.",
          "name": "alpha",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L430-L435"
    },
    {
      "kind": "interface",
      "name": {
        "name": "LinearInterpolationSmoothingModel",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "bigram_lambda",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "trigram_lambda",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "unigram_lambda",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L437-L441"
    },
    {
      "kind": "interface",
      "name": {
        "name": "StupidBackoffSmoothingModel",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "A constant factor that the lower order n-gram model is discounted by.",
          "name": "discount",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L463-L468"
    },
    {
      "inherits": {
        "type": {
          "name": "SuggesterBase",
          "namespace": "_global.search._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TermSuggester",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "lowercase_terms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The maximum edit distance candidate suggestions can have in order to be considered as a suggestion.\nCan only be `1` or `2`.",
          "name": "max_edits",
          "required": false,
          "serverDefault": 2,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A factor that is used to multiply with the shard_size in order to inspect more candidate spelling corrections on the shard level.\nCan improve accuracy at the cost of performance.",
          "name": "max_inspections",
          "required": false,
          "serverDefault": 5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum threshold in number of documents in which a suggest text token can exist in order to be included.\nCan be a relative percentage number (for example `0.4`) or an absolute number to represent document frequencies.\nIf a value higher than 1 is specified, then fractional can not be specified.",
          "name": "max_term_freq",
          "required": false,
          "serverDefault": 0.01,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimal threshold in number of documents a suggestion should appear in.\nThis can improve quality by only suggesting high frequency terms.\nCan be specified as an absolute number or as a relative percentage of number of documents.\nIf a value higher than 1 is specified, then the number cannot be fractional.",
          "name": "min_doc_freq",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum length a suggest text term must have in order to be included.",
          "name": "min_word_length",
          "required": false,
          "serverDefault": 4,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of minimal prefix characters that must match in order be a candidate for suggestions.\nIncreasing this number improves spellcheck performance.",
          "name": "prefix_length",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Sets the maximum number of suggestions to be retrieved from each individual shard.",
          "name": "shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines how suggestions should be sorted per suggest text term.",
          "name": "sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SuggestSort",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "The string distance implementation to use for comparing how similar suggested terms are.",
          "name": "string_distance",
          "required": false,
          "serverDefault": "internal",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StringDistance",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Controls what suggestions are included or controls for what suggest text terms, suggestions should be suggested.",
          "name": "suggest_mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SuggestMode",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The suggest text.\nNeeds to be set globally or per suggestion.",
          "name": "text",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L506-L568"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Sort by score first, then document frequency and then the term itself.",
          "name": "score"
        },
        {
          "description": "Sort by document frequency first, then similarity score and then the term itself.",
          "name": "frequency"
        }
      ],
      "name": {
        "name": "SuggestSort",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/suggester.ts#L495-L504"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Based on the Damerau-Levenshtein algorithm, but highly optimized for comparing string distance for terms inside the index.",
          "name": "internal"
        },
        {
          "description": "String distance algorithm based on Damerau-Levenshtein algorithm.",
          "name": "damerau_levenshtein"
        },
        {
          "description": "String distance algorithm based on the Levenshtein edit distance algorithm.",
          "name": "levenshtein"
        },
        {
          "description": "String distance algorithm based on Jaro-Winkler algorithm.",
          "name": "jaro_winkler"
        },
        {
          "description": "String distance algorithm based on character n-grams.",
          "name": "ngram"
        }
      ],
      "name": {
        "name": "StringDistance",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/suggester.ts#L472-L493"
    },
    {
      "codegenNames": [
        "result",
        "failure"
      ],
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.msearch.ResponseItem"
        }
      ],
      "kind": "type_alias",
      "name": {
        "name": "ResponseItem",
        "namespace": "_global.msearch"
      },
      "specLocation": "_global/msearch/types.ts#L211-L214",
      "type": {
        "items": [
          {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TDocument",
                  "namespace": "_global.msearch.ResponseItem"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "MultiSearchItem",
              "namespace": "_global.msearch"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ErrorResponseBase",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.msearch.MultiSearchItem"
        }
      ],
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "TDocument",
              "namespace": "_global.msearch.MultiSearchItem"
            }
          }
        ],
        "type": {
          "name": "ResponseBody",
          "namespace": "_global.search"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MultiSearchItem",
        "namespace": "_global.msearch"
      },
      "properties": [
        {
          "name": "status",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/msearch/types.ts#L216-L219"
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.search.ResponseBody"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "ResponseBody",
        "namespace": "_global.search"
      },
      "properties": [
        {
          "name": "took",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "timed_out",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "_shards",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardStatistics",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "hits",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TDocument",
                  "namespace": "_global.search.ResponseBody"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "HitsMetadata",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "aggregations",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "AggregateName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Aggregate",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "name": "_clusters",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ClusterStatistics",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "max_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "num_reduce_phases",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "profile",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Profile",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "pit_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_scroll_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScrollId",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "suggest",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "SuggestionName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "array_of",
              "value": {
                "generics": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "name": "TDocument",
                      "namespace": "_global.search.ResponseBody"
                    }
                  }
                ],
                "kind": "instance_of",
                "type": {
                  "name": "Suggest",
                  "namespace": "_global.search._types"
                }
              }
            }
          }
        },
        {
          "name": "terminated_early",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/SearchResponse.ts#L38-L54"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardStatistics",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "failed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "uint",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates how many shards have successfully run the search.",
          "name": "successful",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "uint",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates how many shards the search will run on overall.",
          "name": "total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "uint",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "failures",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ShardFailure",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "skipped",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "uint",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L54-L66"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "uint",
        "namespace": "_types"
      },
      "specLocation": "_types/Numeric.ts#L23-L23",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "number",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardFailure",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "node",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "reason",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ErrorCause",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "shard",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "status",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/Errors.ts#L52-L58"
    },
    {
      "generics": [
        {
          "name": "T",
          "namespace": "_global.search._types.HitsMetadata"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "HitsMetadata",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "description": "Total hit count information, present only if `track_total_hits` wasn't `false` in the search request.",
          "name": "total",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TotalHits",
                  "namespace": "_global.search._types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "long",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "hits",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "T",
                    "namespace": "_global.search._types.HitsMetadata"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "Hit",
                "namespace": "_global.search._types"
              }
            }
          }
        },
        {
          "name": "max_score",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_global/search/_types/hits.ts#L68-L74"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TotalHits",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "relation",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TotalHitsRelation",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/hits.ts#L96-L99"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Accurate",
          "name": "eq"
        },
        {
          "description": "Lower bound, including returned events or sequences",
          "name": "gte"
        }
      ],
      "name": {
        "name": "TotalHitsRelation",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/hits.ts#L101-L106"
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.search._types.Hit"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "Hit",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "esQuirk": "'_id' is not available when using 'stored_fields: _none_'\non a search request. Otherwise the field is always present on hits.",
          "name": "_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_score",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "_explanation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Explanation",
              "namespace": "_global.explain"
            }
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "highlight",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          }
        },
        {
          "name": "inner_hits",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "InnerHitsResult",
                "namespace": "_global.search._types"
              }
            }
          }
        },
        {
          "name": "matched_queries",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              },
              {
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                },
                "kind": "dictionary_of",
                "singleKey": false,
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "double",
                    "namespace": "_types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "_nested",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NestedIdentity",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "_ignored",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "ignored_field_values",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "FieldValue",
                  "namespace": "_types"
                }
              }
            }
          }
        },
        {
          "name": "_shard",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "_node",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TDocument",
              "namespace": "_global.search._types.Hit"
            }
          }
        },
        {
          "name": "_rank",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_seq_no",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SequenceNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortResults",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/hits.ts#L41-L66"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Explanation",
        "namespace": "_global.explain"
      },
      "properties": [
        {
          "name": "description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "details",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ExplanationDetail",
                "namespace": "_global.explain"
              }
            }
          }
        },
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/explain/types.ts#L22-L26"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ExplanationDetail",
        "namespace": "_global.explain"
      },
      "properties": [
        {
          "name": "description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "details",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ExplanationDetail",
                "namespace": "_global.explain"
              }
            }
          }
        },
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/explain/types.ts#L28-L32"
    },
    {
      "kind": "interface",
      "name": {
        "name": "InnerHitsResult",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "hits",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "user_defined_value"
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "HitsMetadata",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/hits.ts#L86-L88"
    },
    {
      "kind": "interface",
      "name": {
        "name": "NestedIdentity",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "offset",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_nested",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NestedIdentity",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/hits.ts#L90-L94"
    },
    {
      "description": "The aggregation name as returned from the server. Depending whether typed_keys is specified this could come back\nin the form of `name#type` instead of simply `name`",
      "kind": "type_alias",
      "name": {
        "name": "AggregateName",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L146-L150",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "extDocId": "search-aggregations",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations.html",
      "kind": "type_alias",
      "name": {
        "name": "Aggregate",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/Aggregate.ts#L38-L125",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "CardinalityAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HdrPercentilesAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HdrPercentileRanksAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TDigestPercentilesAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TDigestPercentileRanksAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PercentilesBucketAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MedianAbsoluteDeviationAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MinAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MaxAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SumAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "AvgAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "WeightedAvgAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ValueCountAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SimpleValueAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DerivativeAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "BucketMetricValueAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StatsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StatsBucketAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ExtendedStatsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ExtendedStatsBucketAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoBoundsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoCentroidAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HistogramAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DateHistogramAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "AutoDateHistogramAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "VariableWidthHistogramAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StringTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LongTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DoubleTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "UnmappedTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LongRareTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StringRareTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "UnmappedRareTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MissingAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NestedAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ReverseNestedAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GlobalAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FilterAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ChildrenAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ParentAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SamplerAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "UnmappedSamplerAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoHashGridAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoTileGridAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoHexGridAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "RangeAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DateRangeAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoDistanceAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IpRangeAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IpPrefixAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FiltersAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "AdjacencyMatrixAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SignificantLongTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SignificantStringTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "UnmappedSignificantTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CompositeAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FrequentItemSetsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TimeSeriesAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ScriptedMetricAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TopHitsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "InferenceAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StringStatsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "BoxPlotAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TopMetricsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TTestAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "RateAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CumulativeCardinalityAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MatrixStatsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoLineAggregate",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "external_tag",
        "nonExhaustive": true
      }
    },
    {
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CardinalityAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L140-L143",
      "variantName": "cardinality"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AggregateBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "meta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L136-L138"
    },
    {
      "inherits": {
        "type": {
          "name": "PercentilesAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HdrPercentilesAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L168-L169",
      "variantName": "hdr_percentiles"
    },
    {
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PercentilesAggregateBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "values",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Percentiles",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L148-L150"
    },
    {
      "codegenNames": [
        "keyed",
        "array"
      ],
      "kind": "type_alias",
      "name": {
        "name": "Percentiles",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/Aggregate.ts#L152-L153",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "KeyedPercentiles",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ArrayPercentilesItem",
                "namespace": "_types.aggregations"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "KeyedPercentiles",
        "namespace": "_types.aggregations"
      },
      "specLocation": "_types/aggregations/Aggregate.ts#L160-L160",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "string",
            "namespace": "_builtins"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "items": [
            {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "null",
                "namespace": "_builtins"
              }
            }
          ],
          "kind": "union_of"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "ArrayPercentilesItem",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "key",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "value",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "value_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L162-L166"
    },
    {
      "inherits": {
        "type": {
          "name": "PercentilesAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HdrPercentileRanksAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L171-L172",
      "variantName": "hdr_percentile_ranks"
    },
    {
      "inherits": {
        "type": {
          "name": "PercentilesAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TDigestPercentilesAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L174-L175",
      "variantName": "tdigest_percentiles"
    },
    {
      "inherits": {
        "type": {
          "name": "PercentilesAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TDigestPercentileRanksAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L177-L178",
      "variantName": "tdigest_percentile_ranks"
    },
    {
      "inherits": {
        "type": {
          "name": "PercentilesAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PercentilesBucketAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L180-L181",
      "variantName": "percentiles_bucket"
    },
    {
      "inherits": {
        "type": {
          "name": "SingleMetricAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MedianAbsoluteDeviationAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L196-L197",
      "variantName": "median_absolute_deviation"
    },
    {
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SingleMetricAggregateBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "description": "The metric value. A missing value generally means that there was no data to aggregate,\nunless specified otherwise.",
          "name": "value",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "value_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L185-L194"
    },
    {
      "extDocId": "search-aggregations-metrics-min-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-min-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleMetricAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MinAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L199-L203",
      "variantName": "min"
    },
    {
      "extDocId": "search-aggregations-metrics-max-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-max-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleMetricAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MaxAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L205-L209",
      "variantName": "max"
    },
    {
      "description": "Sum aggregation result. `value` is always present and is zero if there were no values to process.",
      "extDocId": "search-aggregations-metrics-sum-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-sum-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleMetricAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SumAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L211-L216",
      "variantName": "sum"
    },
    {
      "extDocId": "search-aggregations-metrics-avg-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-avg-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleMetricAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AvgAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L218-L222",
      "variantName": "avg"
    },
    {
      "description": "Weighted average aggregation result. `value` is missing if the weight was set to zero.",
      "extDocId": "search-aggregations-metrics-weight-avg-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-weight-avg-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleMetricAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "WeightedAvgAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L224-L229",
      "variantName": "weighted_avg"
    },
    {
      "description": "Value count aggregation result. `value` is always present.",
      "extDocId": "search-aggregations-metrics-valuecount-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-valuecount-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleMetricAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ValueCountAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L231-L236",
      "variantName": "value_count"
    },
    {
      "inherits": {
        "type": {
          "name": "SingleMetricAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SimpleValueAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L238-L239",
      "variantName": "simple_value"
    },
    {
      "extDocId": "search-aggregations-pipeline-derivative-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-derivative-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleMetricAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DerivativeAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "normalized_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "normalized_value_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L241-L248",
      "variantName": "derivative"
    },
    {
      "inherits": {
        "type": {
          "name": "SingleMetricAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BucketMetricValueAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "keys",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L250-L253",
      "variantName": "bucket_metric_value"
    },
    {
      "description": "Statistics aggregation result. `min`, `max` and `avg` are missing if there were no values to process\n(`count` is zero).",
      "extDocId": "search-aggregations-metrics-stats-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-stats-aggregation.html",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StatsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "max",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "avg",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "sum",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "avg_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "sum_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L257-L273",
      "variantName": "stats"
    },
    {
      "extDocId": "search-aggregations-pipeline-stats-bucket-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-stats-bucket-aggregation.html",
      "inherits": {
        "type": {
          "name": "StatsAggregate",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StatsBucketAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L275-L279",
      "variantName": "stats_bucket"
    },
    {
      "extDocId": "search-aggregations-metrics-extendedstats-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-extendedstats-aggregation.html",
      "inherits": {
        "type": {
          "name": "StatsAggregate",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ExtendedStatsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "sum_of_squares",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "variance",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "variance_population",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "variance_sampling",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "std_deviation",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "std_deviation_population",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "std_deviation_sampling",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "std_deviation_bounds",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StandardDeviationBounds",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "sum_of_squares_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "variance_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "variance_population_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "variance_sampling_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "std_deviation_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "std_deviation_bounds_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StandardDeviationBoundsAsString",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L299-L320",
      "variantName": "extended_stats"
    },
    {
      "kind": "interface",
      "name": {
        "name": "StandardDeviationBounds",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "upper",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "lower",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "upper_population",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "lower_population",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "upper_sampling",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "lower_sampling",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L281-L288"
    },
    {
      "kind": "interface",
      "name": {
        "name": "StandardDeviationBoundsAsString",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "upper",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "lower",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "upper_population",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "lower_population",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "upper_sampling",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "lower_sampling",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L290-L297"
    },
    {
      "inherits": {
        "type": {
          "name": "ExtendedStatsAggregate",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ExtendedStatsBucketAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L322-L323",
      "variantName": "extended_stats_bucket"
    },
    {
      "extDocId": "search-aggregations-metrics-geobounds-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-geobounds-aggregation.html",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoBoundsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "bounds",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoBounds",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L327-L333",
      "variantName": "geo_bounds"
    },
    {
      "extDocId": "search-aggregations-metrics-geocentroid-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-geocentroid-aggregation.html",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoCentroidAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "location",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLocation",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L335-L342",
      "variantName": "geo_centroid"
    },
    {
      "extDocId": "search-aggregations-bucket-histogram-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-histogram-aggregation.html",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "HistogramBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HistogramAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L372-L376",
      "variantName": "histogram"
    },
    {
      "generics": [
        {
          "name": "TBucket",
          "namespace": "_types.aggregations.MultiBucketAggregateBase"
        }
      ],
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MultiBucketAggregateBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "buckets",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TBucket",
                  "namespace": "_types.aggregations.MultiBucketAggregateBase"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Buckets",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L357-L359"
    },
    {
      "extDocId": "search-aggregations-bucket-datehistogram-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-datehistogram-aggregation.html",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "DateHistogramBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateHistogramAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L383-L386",
      "variantName": "date_histogram"
    },
    {
      "extDocId": "search-aggregations-bucket-autodatehistogram-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-autodatehistogram-aggregation.html",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "DateHistogramBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AutoDateHistogramAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "interval",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DurationLarge",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L393-L400",
      "variantName": "auto_date_histogram"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "VariableWidthHistogramBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "VariableWidthHistogramAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L402-L404",
      "variantName": "variable_width_histogram"
    },
    {
      "description": "Result of a `terms` aggregation when the field is a string.",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "StringTermsBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "TermsAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StringTermsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L424-L429",
      "variantName": "sterms"
    },
    {
      "generics": [
        {
          "name": "TBucket",
          "namespace": "_types.aggregations.TermsAggregateBase"
        }
      ],
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "TBucket",
              "namespace": "_types.aggregations.TermsAggregateBase"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TermsAggregateBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "doc_count_error_upper_bound",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "sum_other_doc_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L417-L422"
    },
    {
      "description": "Result of a `terms` aggregation when the field is some kind of whole number like a integer, long, or a date.",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "LongTermsBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "TermsAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "LongTermsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L439-L444",
      "variantName": "lterms"
    },
    {
      "description": "Result of a `terms` aggregation when the field is some kind of decimal number like a float, double, or distance.",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "DoubleTermsBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "TermsAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DoubleTermsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L451-L456",
      "variantName": "dterms"
    },
    {
      "description": "Result of a `terms` aggregation when the field is unmapped. `buckets` is always empty.",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "Void",
              "namespace": "_spec_utils"
            }
          }
        ],
        "type": {
          "name": "TermsAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UnmappedTermsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L463-L469",
      "variantName": "umterms"
    },
    {
      "description": "Result of the `rare_terms` aggregation when the field is some kind of whole number like a integer, long, or a date.",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "LongRareTermsBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "LongRareTermsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L471-L476",
      "variantName": "lrareterms"
    },
    {
      "description": "Result of the `rare_terms` aggregation when the field is a string.",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "StringRareTermsBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StringRareTermsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L483-L487",
      "variantName": "srareterms"
    },
    {
      "description": "Result of a `rare_terms` aggregation when the field is unmapped. `buckets` is always empty.",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "Void",
              "namespace": "_spec_utils"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UnmappedRareTermsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L493-L499",
      "variantName": "umrareterms"
    },
    {
      "extDocId": "search-aggregations-bucket-multi-terms-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-multi-terms-aggregation.html",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermsBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "TermsAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MultiTermsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L501-L506",
      "variantName": "multi_terms"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "extDocId": "search-aggregations-bucket-missing-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-missing-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MissingAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L528-L532",
      "variantName": "missing"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "AggregateName",
                "namespace": "_types"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "Aggregate",
                "namespace": "_types.aggregations"
              }
            }
          ],
          "meta": {
            "description": "Nested aggregations",
            "fieldname": "aggregations"
          },
          "type": {
            "name": "AdditionalProperties",
            "namespace": "_spec_utils"
          }
        }
      ],
      "description": "Base type for single-bucket aggregation results that can hold sub-aggregations results.",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SingleBucketAggregateBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "doc_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L516-L526"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "extDocId": "search-aggregations-bucket-nested-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-nested-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NestedAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L534-L538",
      "variantName": "nested"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "extDocId": "search-aggregations-bucket-reverse-nested-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-reverse-nested-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ReverseNestedAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L540-L544",
      "variantName": "reverse_nested"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "extDocId": "search-aggregations-bucket-global-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-global-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GlobalAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L546-L550",
      "variantName": "global"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "extDocId": "search-aggregations-bucket-filter-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-filter-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FilterAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L552-L556",
      "variantName": "filter"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "extDocId": "search-aggregations-bucket-children-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-children-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ChildrenAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L888-L892",
      "variantName": "children"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "extDocId": "search-aggregations-bucket-parent-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-parent-aggregation.html",
      "inherits": {
        "type": {
          "name": "SingleBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ParentAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L894-L898",
      "variantName": "parent"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "inherits": {
        "type": {
          "name": "SingleBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SamplerAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L558-L559",
      "variantName": "sampler"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "inherits": {
        "type": {
          "name": "SingleBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UnmappedSamplerAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L561-L562",
      "variantName": "unmapped_sampler"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoHashGridBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoHashGridAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L566-L568",
      "variantName": "geohash_grid"
    },
    {
      "extDocId": "search-aggregations-bucket-geotilegrid-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-geotilegrid-aggregation.html",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoTileGridBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoTileGridAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L574-L579",
      "variantName": "geotile_grid"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoHexGridBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoHexGridAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L585-L586",
      "variantName": "geohex_grid"
    },
    {
      "extDocId": "search-aggregations-bucket-range-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-range-aggregation.html",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "RangeBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RangeAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L594-L598",
      "variantName": "range"
    },
    {
      "description": "Result of a `date_range` aggregation. Same format as a for a `range` aggregation: `from` and `to`\nin `buckets` are milliseconds since the Epoch, represented as a floating point number.",
      "extDocId": "search-aggregations-bucket-daterange-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-daterange-aggregation.html",
      "inherits": {
        "type": {
          "name": "RangeAggregate",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateRangeAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L609-L615",
      "variantName": "date_range"
    },
    {
      "description": "Result of a `geo_distance` aggregation. The unit for `from` and `to` is meters by default.",
      "extDocId": "search-aggregations-bucket-geodistance-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-geodistance-aggregation.html",
      "inherits": {
        "type": {
          "name": "RangeAggregate",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoDistanceAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L617-L622",
      "variantName": "geo_distance"
    },
    {
      "extDocId": "search-aggregations-bucket-iprange-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-iprange-aggregation.html",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "IpRangeBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IpRangeAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L624-L629",
      "variantName": "ip_range"
    },
    {
      "extDocId": "search-aggregations-bucket-ipprefix-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-ipprefix-aggregation.html",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "IpPrefixBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IpPrefixAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L709-L713",
      "variantName": "ip_prefix"
    },
    {
      "extDocId": "search-aggregations-bucket-filters-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-filters-aggregation.html",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "FiltersBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FiltersAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L639-L643",
      "variantName": "filters"
    },
    {
      "extDocId": "search-aggregations-bucket-adjacency-matrix-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-adjacency-matrix-aggregation.html",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "AdjacencyMatrixBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AdjacencyMatrixAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L647-L652",
      "variantName": "adjacency_matrix"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "SignificantLongTermsBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "SignificantTermsAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SignificantLongTermsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L668-L670",
      "variantName": "siglterms"
    },
    {
      "extDocId": "search-aggregations-bucket-significanttext-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-significanttext-aggregation.html",
      "generics": [
        {
          "name": "T",
          "namespace": "_types.aggregations.SignificantTermsAggregateBase"
        }
      ],
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "T",
              "namespace": "_types.aggregations.SignificantTermsAggregateBase"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SignificantTermsAggregateBase",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "bg_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "doc_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L658-L666"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "SignificantStringTermsBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "SignificantTermsAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SignificantStringTermsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L682-L684",
      "variantName": "sigsterms"
    },
    {
      "description": "Result of the `significant_terms` aggregation on an unmapped field. `buckets` is always empty.",
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "Void",
              "namespace": "_spec_utils"
            }
          }
        ],
        "type": {
          "name": "SignificantTermsAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UnmappedSignificantTermsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L690-L696",
      "variantName": "umsigterms"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "CompositeBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CompositeAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "after_key",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CompositeAggregateKey",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L698-L703",
      "variantName": "composite"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "FrequentItemSetsBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FrequentItemSetsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L722-L723",
      "variantName": "frequent_item_sets"
    },
    {
      "inherits": {
        "generics": [
          {
            "kind": "instance_of",
            "type": {
              "name": "TimeSeriesBucket",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "type": {
          "name": "MultiBucketAggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TimeSeriesAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [],
      "specLocation": "_types/aggregations/Aggregate.ts#L730-L731",
      "variantName": "time_series"
    },
    {
      "extDocId": "search-aggregations-metrics-scripted-metric-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-scripted-metric-aggregation.html",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ScriptedMetricAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "user_defined_value"
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L739-L745",
      "variantName": "scripted_metric"
    },
    {
      "extDocId": "search-aggregations-metrics-top-hits-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-top-hits-aggregation.html",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TopHitsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "hits",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "user_defined_value"
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "HitsMetadata",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L747-L753",
      "variantName": "top_hits"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            {
              "kind": "user_defined_value"
            }
          ],
          "meta": {
            "description": "Additional data",
            "fieldname": "data"
          },
          "type": {
            "name": "AdditionalProperties",
            "namespace": "_spec_utils"
          }
        }
      ],
      "extDocId": "search-aggregations-pipeline-inference-bucket-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-pipeline-inference-bucket-aggregation.html",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "InferenceAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "feature_importance",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "InferenceFeatureImportance",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "name": "top_classes",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "InferenceTopClassEntry",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "name": "warning",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L755-L770",
      "variantName": "inference"
    },
    {
      "kind": "interface",
      "name": {
        "name": "InferenceFeatureImportance",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "feature_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "importance",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "classes",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "InferenceClassImportance",
                "namespace": "_types.aggregations"
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L778-L782"
    },
    {
      "kind": "interface",
      "name": {
        "name": "InferenceClassImportance",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "class_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "importance",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L784-L787"
    },
    {
      "kind": "interface",
      "name": {
        "name": "InferenceTopClassEntry",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "class_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "class_probability",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "class_score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L772-L776"
    },
    {
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StringStatsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_length",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "max_length",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "avg_length",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "entropy",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "distribution",
          "required": false,
          "type": {
            "items": [
              {
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                },
                "kind": "dictionary_of",
                "singleKey": false,
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "double",
                    "namespace": "_types"
                  }
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "min_length_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_length_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "avg_length_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L793-L804",
      "variantName": "string_stats"
    },
    {
      "extDocId": "search-aggregations-metrics-boxplot-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-boxplot-aggregation.html",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BoxPlotAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "min",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "q1",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "q2",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "q3",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "lower",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "upper",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "q1_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "q2_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "q3_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "lower_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "upper_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L806-L825",
      "variantName": "boxplot"
    },
    {
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TopMetricsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "top",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TopMetrics",
                "namespace": "_types.aggregations"
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L827-L830",
      "variantName": "top_metrics"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TopMetrics",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "sort",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "FieldValue",
                    "namespace": "_types"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "null",
                    "namespace": "_builtins"
                  }
                }
              ],
              "kind": "union_of"
            }
          }
        },
        {
          "name": "metrics",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "FieldValue",
                    "namespace": "_types"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "null",
                    "namespace": "_builtins"
                  }
                }
              ],
              "kind": "union_of"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L832-L836"
    },
    {
      "extDocId": "search-aggregations-metrics-ttest-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-ttest-aggregation.html",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TTestAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "value",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "value_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L838-L845",
      "variantName": "t_test"
    },
    {
      "extDocId": "search-aggregations-metrics-rate-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-rate-aggregation.html",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RateAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "value_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L847-L854",
      "variantName": "rate"
    },
    {
      "description": "Result of the `cumulative_cardinality` aggregation",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CumulativeCardinalityAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "value_as_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L856-L864",
      "variantName": "simple_long_value"
    },
    {
      "extDocId": "search-aggregations-matrix-stats-aggregation",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-matrix-stats-aggregation.html",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MatrixStatsAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "doc_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "MatrixStatsFields",
                "namespace": "_types.aggregations"
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L866-L873",
      "variantName": "matrix_stats"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MatrixStatsFields",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "mean",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "variance",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "skewness",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "kurtosis",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "covariance",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "correlation",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L875-L884"
    },
    {
      "extDocId": "search-aggregations-metrics-geo-line",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-geo-line.html",
      "inherits": {
        "type": {
          "name": "AggregateBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoLineAggregate",
        "namespace": "_types.aggregations"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "geometry",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLine",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "properties",
          "required": true,
          "type": {
            "kind": "user_defined_value"
          }
        }
      ],
      "specLocation": "_types/aggregations/Aggregate.ts#L902-L912",
      "variantName": "geo_line"
    },
    {
      "description": "A GeoJson GeoLine.",
      "kind": "interface",
      "name": {
        "name": "GeoLine",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "Always `\"LineString\"`",
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Array of `[lon, lat]` coordinates",
          "name": "coordinates",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              }
            }
          }
        }
      ],
      "specLocation": "_types/Geo.ts#L56-L62"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ClusterStatistics",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "skipped",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "successful",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "running",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "partial",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "failed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "details",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "ClusterAlias",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ClusterDetails",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L27-L35"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ClusterAlias",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L78-L78",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "ClusterDetails",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ClusterSearchStatus",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "indices",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "took",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "timed_out",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "_shards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardStatistics",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "failures",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ShardFailure",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L45-L52"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "running"
        },
        {
          "name": "successful"
        },
        {
          "name": "partial"
        },
        {
          "name": "skipped"
        },
        {
          "name": "failed"
        }
      ],
      "name": {
        "name": "ClusterSearchStatus",
        "namespace": "_types"
      },
      "specLocation": "_types/Stats.ts#L37-L43"
    },
    {
      "generics": [
        {
          "name": "Unit",
          "namespace": "_types.DurationValue"
        }
      ],
      "kind": "type_alias",
      "name": {
        "name": "DurationValue",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L67-L67",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "Unit",
          "namespace": "_types.DurationValue"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "Profile",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "shards",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ShardProfile",
                "namespace": "_global.search._types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L101-L103"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardProfile",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "aggregations",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AggregationProfile",
                "namespace": "_global.search._types"
              }
            }
          }
        },
        {
          "name": "cluster",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "dfs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DfsProfile",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "fetch",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FetchProfile",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "node_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NodeId",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "searches",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SearchProfile",
                "namespace": "_global.search._types"
              }
            }
          }
        },
        {
          "name": "shard_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L142-L152"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AggregationProfile",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "breakdown",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AggregationBreakdown",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "time_in_nanos",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitNanos",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "debug",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AggregationProfileDebug",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "children",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AggregationProfile",
                "namespace": "_global.search._types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L85-L92"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AggregationBreakdown",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "build_aggregation",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "build_aggregation_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "build_leaf_collector",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "build_leaf_collector_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "collect",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "collect_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "initialize",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "initialize_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "post_collection",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "post_collection_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "reduce",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "reduce_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L26-L39"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AggregationProfileDebug",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "segments_with_multi_valued_ords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "collection_strategy",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "segments_with_single_valued_ords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_buckets",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "built_buckets",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "result_strategy",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "has_filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "delegate",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "delegate_debug",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AggregationProfileDebug",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "chars_fetched",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "extract_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "extract_ns",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "values_fetched",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "collect_analyzed_ns",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "collect_analyzed_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "surviving_buckets",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "ordinals_collectors_used",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "ordinals_collectors_overhead_too_high",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "string_hashing_collectors_used",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "numeric_collectors_used",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "empty_collectors_used",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "deferred_aggregators",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "segments_with_doc_count_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "segments_with_deleted_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "filters",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AggregationProfileDelegateDebugFilter",
                "namespace": "_global.search._types"
              }
            }
          }
        },
        {
          "name": "segments_counted",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "segments_collected",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "map_reducer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "brute_force_used",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "dynamic_pruning_attempted",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "dynamic_pruning_used",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "skipped_due_to_no_data",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L42-L76"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AggregationProfileDelegateDebugFilter",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "results_from_metadata",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "specialized_for",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "segments_counted_in_constant_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L78-L83"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DfsProfile",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "statistics",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DfsStatisticsProfile",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "knn",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DfsKnnProfile",
                "namespace": "_global.search._types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L154-L157"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DfsStatisticsProfile",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "time_in_nanos",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitNanos",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "breakdown",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DfsStatisticsBreakdown",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "debug",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "children",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DfsStatisticsProfile",
                "namespace": "_global.search._types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L159-L167"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DfsStatisticsBreakdown",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "collection_statistics",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "collection_statistics_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "create_weight",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "create_weight_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "rewrite",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "rewrite_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "term_statistics",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "term_statistics_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L170-L179"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DfsKnnProfile",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "vector_operations_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "query",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "KnnQueryProfileResult",
                "namespace": "_global.search._types"
              }
            }
          }
        },
        {
          "name": "rewrite_time",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "collector",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "KnnCollectorResult",
                "namespace": "_global.search._types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L181-L186"
    },
    {
      "kind": "interface",
      "name": {
        "name": "KnnQueryProfileResult",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "time_in_nanos",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitNanos",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "breakdown",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "KnnQueryProfileBreakdown",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "debug",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "children",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "KnnQueryProfileResult",
                "namespace": "_global.search._types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L188-L196"
    },
    {
      "kind": "interface",
      "name": {
        "name": "KnnQueryProfileBreakdown",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "advance",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "advance_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "build_scorer",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "build_scorer_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "compute_max_score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "compute_max_score_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "count_weight",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "count_weight_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "create_weight",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "create_weight_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "match",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "match_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "next_doc",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "next_doc_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "score_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "set_min_competitive_score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "set_min_competitive_score_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "shallow_advance",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "shallow_advance_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L199-L220"
    },
    {
      "kind": "interface",
      "name": {
        "name": "KnnCollectorResult",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "reason",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "time_in_nanos",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitNanos",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "children",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "KnnCollectorResult",
                "namespace": "_global.search._types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L222-L228"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FetchProfile",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "time_in_nanos",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitNanos",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "breakdown",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FetchProfileBreakdown",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "debug",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FetchProfileDebug",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "children",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FetchProfile",
                "namespace": "_global.search._types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L230-L237"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FetchProfileBreakdown",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "load_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "load_source_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "load_stored_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "load_stored_fields_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "next_reader",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "next_reader_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "process_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "process",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L239-L248"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FetchProfileDebug",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "stored_fields",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "fast_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L250-L253"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "NodeId",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L63-L63",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "SearchProfile",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "collector",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Collector",
                "namespace": "_global.search._types"
              }
            }
          }
        },
        {
          "name": "query",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "QueryProfile",
                "namespace": "_global.search._types"
              }
            }
          }
        },
        {
          "name": "rewrite_time",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L136-L140"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Collector",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "reason",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "time_in_nanos",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitNanos",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "children",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Collector",
                "namespace": "_global.search._types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L94-L99"
    },
    {
      "kind": "interface",
      "name": {
        "name": "QueryProfile",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "breakdown",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryBreakdown",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "time_in_nanos",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitNanos",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "children",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "QueryProfile",
                "namespace": "_global.search._types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L128-L134"
    },
    {
      "kind": "interface",
      "name": {
        "name": "QueryBreakdown",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "advance",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "advance_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "build_scorer",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "build_scorer_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "create_weight",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "create_weight_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "match",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "match_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "shallow_advance",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "shallow_advance_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "next_doc",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "next_doc_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "score_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "compute_max_score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "compute_max_score_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "count_weight",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "count_weight_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "set_min_competitive_score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "set_min_competitive_score_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/profile.ts#L105-L126"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ScrollId",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L55-L55",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "description": "The suggestion name as returned from the server. Depending whether typed_keys is specified this could come back\nin the form of `name#type` instead of simply `name`",
      "kind": "type_alias",
      "name": {
        "name": "SuggestionName",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L152-L156",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.search._types.Suggest"
        }
      ],
      "kind": "type_alias",
      "name": {
        "name": "Suggest",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/suggester.ts#L34-L40",
      "type": {
        "items": [
          {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TDocument",
                  "namespace": "_global.search._types.Suggest"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "CompletionSuggest",
              "namespace": "_global.search._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PhraseSuggest",
              "namespace": "_global.search._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TermSuggest",
              "namespace": "_global.search._types"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "external_tag"
      }
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.search._types.CompletionSuggest"
        }
      ],
      "inherits": {
        "type": {
          "name": "SuggestBase",
          "namespace": "_global.search._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CompletionSuggest",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "options",
          "required": true,
          "type": {
            "items": [
              {
                "generics": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "name": "TDocument",
                      "namespace": "_global.search._types.CompletionSuggest"
                    }
                  }
                ],
                "kind": "instance_of",
                "type": {
                  "name": "CompletionSuggestOption",
                  "namespace": "_global.search._types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "generics": [
                    {
                      "kind": "instance_of",
                      "type": {
                        "name": "TDocument",
                        "namespace": "_global.search._types.CompletionSuggest"
                      }
                    }
                  ],
                  "kind": "instance_of",
                  "type": {
                    "name": "CompletionSuggestOption",
                    "namespace": "_global.search._types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L48-L55",
      "variantName": "completion"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SuggestBase",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "length",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "offset",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "text",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L42-L46"
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.search._types.CompletionSuggestOption"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "CompletionSuggestOption",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "collate_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "contexts",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "Context",
                  "namespace": "_global.search._types"
                }
              }
            }
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TDocument",
              "namespace": "_global.search._types.CompletionSuggestOption"
            }
          }
        },
        {
          "name": "text",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L73-L84"
    },
    {
      "inherits": {
        "type": {
          "name": "SuggestBase",
          "namespace": "_global.search._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PhraseSuggest",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "options",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "PhraseSuggestOption",
                  "namespace": "_global.search._types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "PhraseSuggestOption",
                    "namespace": "_global.search._types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L57-L62",
      "variantName": "phrase"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PhraseSuggestOption",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "text",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "highlighted",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "collate_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L86-L91"
    },
    {
      "inherits": {
        "type": {
          "name": "SuggestBase",
          "namespace": "_global.search._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TermSuggest",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "options",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TermSuggestOption",
                  "namespace": "_global.search._types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "TermSuggestOption",
                    "namespace": "_global.search._types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L64-L69",
      "variantName": "term"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TermSuggestOption",
        "namespace": "_global.search._types"
      },
      "properties": [
        {
          "name": "text",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "freq",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "highlighted",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "collate_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/search/_types/suggester.ts#L93-L99"
    },
    {
      "description": "The response returned by Elasticsearch when request execution did not succeed.",
      "kind": "interface",
      "name": {
        "name": "ErrorResponseBase",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "error",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ErrorCause",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Base.ts#L76-L85"
    },
    {
      "codegenNames": [
        "header",
        "body"
      ],
      "kind": "type_alias",
      "name": {
        "name": "RequestItem",
        "namespace": "_global.msearch_template"
      },
      "specLocation": "_global/msearch_template/types.ts#L25-L26",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "MultisearchHeader",
              "namespace": "_global.msearch"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TemplateConfig",
              "namespace": "_global.msearch_template"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "TemplateConfig",
        "namespace": "_global.msearch_template"
      },
      "properties": [
        {
          "description": "If `true`, returns detailed information about score calculation as part of each hit.",
          "name": "explain",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "ID of the search template to use. If no source is specified,\nthis parameter is required.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Key-value pairs used to replace Mustache variables in the template.\nThe key is the variable name.\nThe value is the variable value.",
          "name": "params",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "If `true`, the query execution is profiled.",
          "name": "profile",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "An inline search template. Supports the same parameters as the search API's\nrequest body. Also supports Mustache variables. If no id is specified, this\nparameter is required.",
          "name": "source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/msearch_template/types.ts#L28-L54"
    },
    {
      "codegenNames": [
        "fetch",
        "fields"
      ],
      "description": "Defines how to fetch a source. Fetching can be disabled entirely, or the source can be filtered.\nUsed as a query parameter along with the `_source_includes` and `_source_excludes` parameters.",
      "kind": "type_alias",
      "name": {
        "name": "SourceConfigParam",
        "namespace": "_global.search._types"
      },
      "specLocation": "_global/search/_types/SourceFilter.ts#L39-L45",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Coordinate",
        "namespace": "_global.search_mvt._types"
      },
      "specLocation": "_global/search_mvt/_types/Coordinate.ts#L22-L22",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "integer",
          "namespace": "_types"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "geotile"
        },
        {
          "name": "geohex"
        }
      ],
      "name": {
        "name": "GridAggregationType",
        "namespace": "_global.search_mvt._types"
      },
      "specLocation": "_global/search_mvt/_types/GridType.ts#L30-L33"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "grid"
        },
        {
          "name": "point"
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.16.0"
            }
          },
          "name": "centroid"
        }
      ],
      "name": {
        "name": "GridType",
        "namespace": "_global.search_mvt._types"
      },
      "specLocation": "_global/search_mvt/_types/GridType.ts#L20-L28"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ZoomLevel",
        "namespace": "_global.search_mvt._types"
      },
      "specLocation": "_global/search_mvt/_types/ZoomLevel.ts#L22-L22",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "integer",
          "namespace": "_types"
        }
      }
    },
    {
      "description": "A `null` value that is to be interpreted as an actual value, unless other uses of `null` that are equivalent\nto a missing value. It is used for exemple in settings, where using the `NullValue` for a setting will reset\nit to its default value.",
      "kind": "type_alias",
      "name": {
        "name": "NullValue",
        "namespace": "_spec_utils"
      },
      "specLocation": "_spec_utils/utils.ts#L22-L27",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "null",
          "namespace": "_builtins"
        }
      }
    },
    {
      "description": "Some APIs will return values such as numbers also as a string (notably epoch timestamps). This behavior\nis used to capture this behavior while keeping the semantics of the field type.\n\nDepending on the target language, code generators can keep the union or remove it and leniently parse\nstrings to the target type.",
      "generics": [
        {
          "name": "T",
          "namespace": "_spec_utils.Stringified"
        }
      ],
      "kind": "type_alias",
      "name": {
        "name": "Stringified",
        "namespace": "_spec_utils"
      },
      "specLocation": "_spec_utils/Stringified.ts#L20-L27",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "T",
              "namespace": "_spec_utils.Stringified"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "description": "The absence of any type. This is commonly used in APIs that don't return a body.\n\nAlthough \"void\" is generally used for the unit type that has only one value, this is to be interpreted as\nthe bottom type that has no value at all. Most languages have a unit type, but few have a bottom type.\n\nSee https://en.m.wikipedia.org/wiki/Unit_type and https://en.m.wikipedia.org/wiki/Bottom_type",
      "kind": "type_alias",
      "name": {
        "name": "Void",
        "namespace": "_spec_utils"
      },
      "specLocation": "_spec_utils/VoidValue.ts#L20-L28",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "void",
          "namespace": "_builtins"
        }
      }
    },
    {
      "description": "`WithNullValue<T>` allows for explicit null assignments in contexts where `null` should be interpreted as an\nactual value.",
      "generics": [
        {
          "name": "T",
          "namespace": "_spec_utils.WithNullValue"
        }
      ],
      "kind": "type_alias",
      "name": {
        "name": "WithNullValue",
        "namespace": "_spec_utils"
      },
      "specLocation": "_spec_utils/utils.ts#L29-L33",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "T",
              "namespace": "_spec_utils.WithNullValue"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NullValue",
              "namespace": "_spec_utils"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "docId": "byte-units",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/api-conventions.html#byte-units",
      "kind": "type_alias",
      "name": {
        "name": "ByteSize",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L97-L98",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "codegenName": "bytes",
          "name": "b"
        },
        {
          "codegenName": "kilo_bytes",
          "name": "kb"
        },
        {
          "codegenName": "mega_bytes",
          "name": "mb"
        },
        {
          "codegenName": "giga_bytes",
          "name": "gb"
        },
        {
          "codegenName": "tera_bytes",
          "name": "tb"
        },
        {
          "codegenName": "peta_bytes",
          "name": "pb"
        }
      ],
      "name": {
        "name": "Bytes",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L170-L182"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "CategoryId",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L58-L58",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "_all"
        },
        {
          "name": "http"
        },
        {
          "name": "ingest"
        },
        {
          "name": "thread_pool"
        },
        {
          "name": "script"
        }
      ],
      "name": {
        "name": "ClusterInfoTarget",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L382-L388"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ClusterInfoTargets",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L390-L390",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "ClusterInfoTarget",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ClusterInfoTarget",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Stop reindexing if there are conflicts.",
          "name": "abort"
        },
        {
          "description": "Continue reindexing even if there are conflicts.",
          "name": "proceed"
        }
      ],
      "name": {
        "name": "Conflicts",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L184-L193"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "standardized"
        },
        {
          "name": "saturated"
        },
        {
          "name": "chisquared"
        }
      ],
      "name": {
        "name": "DFIIndependenceMeasure",
        "namespace": "_types"
      },
      "specLocation": "_types/Similarity.ts#L20-L24"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "no"
        },
        {
          "name": "b"
        },
        {
          "name": "l"
        }
      ],
      "name": {
        "name": "DFRAfterEffect",
        "namespace": "_types"
      },
      "specLocation": "_types/Similarity.ts#L26-L30"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "be"
        },
        {
          "name": "d"
        },
        {
          "name": "g"
        },
        {
          "name": "if"
        },
        {
          "name": "in"
        },
        {
          "name": "ine"
        },
        {
          "name": "p"
        }
      ],
      "name": {
        "name": "DFRBasicModel",
        "namespace": "_types"
      },
      "specLocation": "_types/Similarity.ts#L32-L40"
    },
    {
      "docId": "data-stream-path-param",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/indices-create-data-stream.html#indices-create-data-stream-api-path-params",
      "kind": "type_alias",
      "name": {
        "name": "DataStreamName",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L92-L93",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "DataStreamNames",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L95-L95",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamName",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DataStreamName",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "EsqlColumns",
        "namespace": "_types"
      },
      "specLocation": "_types/Binary.ts#L24-L24",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "binary",
          "namespace": "_builtins"
        }
      }
    },
    {
      "description": "A map hex cell (H3) reference",
      "kind": "type_alias",
      "name": {
        "name": "GeoHexCell",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L96-L97",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "description": "A map tile reference, represented as `{zoom}/{x}/{y}`",
      "kind": "type_alias",
      "name": {
        "name": "GeoTile",
        "namespace": "_types"
      },
      "specLocation": "_types/Geo.ts#L93-L94",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "GrokPattern",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L87-L87",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "GREEN"
          ],
          "description": "All shards are assigned.",
          "name": "green"
        },
        {
          "aliases": [
            "YELLOW"
          ],
          "description": "All primary shards are assigned, but one or more replica shards are unassigned. If a node in the cluster fails, some data could be unavailable until that node is repaired.",
          "name": "yellow"
        },
        {
          "aliases": [
            "RED"
          ],
          "description": "One or more primary shards are unassigned, so some data is unavailable. This can occur briefly during cluster startup as primary shards are assigned.",
          "name": "red"
        }
      ],
      "name": {
        "name": "HealthStatus",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L220-L240"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Host",
        "namespace": "_types"
      },
      "specLocation": "_types/Networking.ts#L21-L21",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "HttpHeaders",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L159-L159",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "string",
            "namespace": "_builtins"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "items": [
            {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            }
          ],
          "kind": "union_of"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "ll"
        },
        {
          "name": "spl"
        }
      ],
      "name": {
        "name": "IBDistribution",
        "namespace": "_types"
      },
      "specLocation": "_types/Similarity.ts#L42-L45"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "df"
        },
        {
          "name": "ttf"
        }
      ],
      "name": {
        "name": "IBLambda",
        "namespace": "_types"
      },
      "specLocation": "_types/Similarity.ts#L47-L50"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "IndexAlias",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L68-L68",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "IndexPattern",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L69-L69",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "IndexPatterns",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L70-L70",
      "type": {
        "kind": "array_of",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "IndexPattern",
            "namespace": "_types"
          }
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Ip",
        "namespace": "_types"
      },
      "specLocation": "_types/Networking.ts#L20-L20",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "cluster"
        },
        {
          "name": "indices"
        },
        {
          "name": "shards"
        }
      ],
      "name": {
        "name": "Level",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L250-L254"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "RUNNING"
        },
        {
          "name": "STOPPING"
        },
        {
          "name": "STOPPED"
        }
      ],
      "name": {
        "name": "LifecycleOperationMode",
        "namespace": "_types"
      },
      "specLocation": "_types/Lifecycle.ts#L20-L24"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "MapboxVectorTiles",
        "namespace": "_types"
      },
      "specLocation": "_types/Binary.ts#L21-L21",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "binary",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Metrics",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L76-L76",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Names",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L81-L81",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Name",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Namespace",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L83-L83",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "NodeIds",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L64-L64",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "NodeId",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "NodeId",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "docId": "modules-node",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/modules-node.html",
      "kind": "type_alias",
      "name": {
        "name": "NodeName",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L89-L90",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "master"
        },
        {
          "name": "data"
        },
        {
          "name": "data_cold"
        },
        {
          "name": "data_content"
        },
        {
          "name": "data_frozen"
        },
        {
          "name": "data_hot"
        },
        {
          "name": "data_warm"
        },
        {
          "name": "client"
        },
        {
          "name": "ingest"
        },
        {
          "name": "ml"
        },
        {
          "name": "voting_only"
        },
        {
          "name": "transform"
        },
        {
          "name": "remote_cluster_client"
        },
        {
          "name": "coordinating_only"
        }
      ],
      "name": {
        "name": "NodeRole",
        "namespace": "_types"
      },
      "specLocation": "_types/Node.ts#L71-L89"
    },
    {
      "description": "* @doc_id node-roles",
      "kind": "type_alias",
      "name": {
        "name": "NodeRoles",
        "namespace": "_types"
      },
      "specLocation": "_types/Node.ts#L91-L94",
      "type": {
        "kind": "array_of",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "NodeRole",
            "namespace": "_types"
          }
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "no"
        },
        {
          "name": "h1"
        },
        {
          "name": "h2"
        },
        {
          "name": "h3"
        },
        {
          "name": "z"
        }
      ],
      "name": {
        "name": "Normalization",
        "namespace": "_types"
      },
      "specLocation": "_types/Similarity.ts#L52-L58"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Overwrite any documents that already exist.",
          "name": "index"
        },
        {
          "description": "Only index documents that do not already exist.",
          "name": "create"
        }
      ],
      "name": {
        "name": "OpType",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L256-L265"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Password",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L196-L196",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Percentage",
        "namespace": "_types"
      },
      "specLocation": "_types/Numeric.ts#L28-L28",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "PipelineName",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L86-L86",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "PropertyName",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L131-L131",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "esQuirk": "This is a boolean that evolved into an enum. ES also accepts plain booleans for true and false.",
      "kind": "enum",
      "members": [
        {
          "name": "true"
        },
        {
          "name": "false"
        },
        {
          "name": "wait_for"
        }
      ],
      "name": {
        "name": "Refresh",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L267-L274"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "created"
        },
        {
          "name": "updated"
        },
        {
          "name": "deleted"
        },
        {
          "name": "not_found"
        },
        {
          "codegenName": "no_op",
          "name": "noop"
        }
      ],
      "name": {
        "name": "Result",
        "namespace": "_types"
      },
      "specLocation": "_types/Result.ts#L20-L26"
    },
    {
      "codegenNames": [
        "long",
        "double",
        "string",
        "boolean",
        "null"
      ],
      "description": "A scalar value.",
      "kind": "type_alias",
      "name": {
        "name": "ScalarValue",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L39-L43",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "null",
              "namespace": "_builtins"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ScrollIds",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L56-L56",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "ScrollId",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ScrollId",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Service",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L84-L84",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "codegenNames": [
        "value",
        "computed"
      ],
      "description": "Slices configuration used to parallelize a process.",
      "kind": "type_alias",
      "name": {
        "name": "Slices",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L365-L370",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SlicesCalculation",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Let Elasticsearch choose a reasonable number for most data streams and indices.",
          "name": "auto"
        }
      ],
      "name": {
        "name": "SlicesCalculation",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L372-L380"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "TaskId",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L133-L133",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "cpu"
        },
        {
          "name": "wait"
        },
        {
          "name": "block"
        },
        {
          "name": "gpu"
        },
        {
          "name": "mem"
        }
      ],
      "name": {
        "name": "ThreadType",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L298-L304"
    },
    {
      "description": "Time of day, expressed as HH:MM:SS",
      "kind": "type_alias",
      "name": {
        "name": "TimeOfDay",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L44-L45",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "codegenName": "nanoseconds",
          "name": "nanos"
        },
        {
          "codegenName": "microseconds",
          "name": "micros"
        },
        {
          "codegenName": "milliseconds",
          "name": "ms"
        },
        {
          "codegenName": "seconds",
          "name": "s"
        },
        {
          "codegenName": "minutes",
          "name": "m"
        },
        {
          "codegenName": "hours",
          "name": "h"
        },
        {
          "codegenName": "days",
          "name": "d"
        }
      ],
      "name": {
        "name": "TimeUnit",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L69-L77"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "TransportAddress",
        "namespace": "_types"
      },
      "specLocation": "_types/Networking.ts#L22-L22",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "description": "Time unit for fractional milliseconds",
      "kind": "type_alias",
      "name": {
        "name": "UnitFloatMillis",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L37-L38",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "double",
          "namespace": "_types"
        }
      }
    },
    {
      "description": "Time unit for milliseconds",
      "kind": "type_alias",
      "name": {
        "name": "UnitMillis",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L33-L34",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "long",
          "namespace": "_types"
        }
      }
    },
    {
      "description": "Time unit for nanoseconds",
      "kind": "type_alias",
      "name": {
        "name": "UnitNanos",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L35-L36",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "long",
          "namespace": "_types"
        }
      }
    },
    {
      "description": "Time unit for seconds",
      "kind": "type_alias",
      "name": {
        "name": "UnitSeconds",
        "namespace": "_types"
      },
      "specLocation": "_types/Time.ts#L29-L30",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "long",
          "namespace": "_types"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Username",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L195-L195",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Uuid",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L126-L126",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "VersionString",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L105-L105",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "all"
        },
        {
          "name": "index-setting"
        }
      ],
      "name": {
        "name": "WaitForActiveShardOptions",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L306-L310"
    },
    {
      "codegenNames": [
        "count",
        "option"
      ],
      "kind": "type_alias",
      "name": {
        "name": "WaitForActiveShards",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L143-L144",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "WaitForActiveShardOptions",
              "namespace": "_types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "immediate"
        },
        {
          "name": "urgent"
        },
        {
          "name": "high"
        },
        {
          "name": "normal"
        },
        {
          "name": "low"
        },
        {
          "name": "languid"
        }
      ],
      "name": {
        "name": "WaitForEvents",
        "namespace": "_types"
      },
      "specLocation": "_types/common.ts#L312-L319"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "byte",
        "namespace": "_types"
      },
      "specLocation": "_types/Numeric.ts#L21-L21",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "number",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "short",
        "namespace": "_types"
      },
      "specLocation": "_types/Numeric.ts#L20-L20",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "number",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ulong",
        "namespace": "_types"
      },
      "specLocation": "_types/Numeric.ts#L25-L25",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "number",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Analyzer",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/analyzers.ts#L359-L413",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "CustomAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FingerprintAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KeywordAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LanguageAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NoriAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PatternAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SimpleAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StandardAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StopAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "WhitespaceAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IcuAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KuromojiAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SnowballAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ArabicAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ArmenianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "BasqueAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "BengaliAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "BrazilianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "BulgarianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CatalanAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ChineseAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CjkAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CzechAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DanishAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DutchAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "EnglishAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "EstonianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FinnishAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FrenchAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GalicianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GermanAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GreekAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HindiAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HungarianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IndonesianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IrishAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ItalianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LatvianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LithuanianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NorwegianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PersianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PortugueseAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "RomanianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "RussianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SerbianAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SoraniAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SpanishAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SwedishAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TurkishAnalyzer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ThaiAnalyzer",
              "namespace": "_types.analysis"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "defaultTag": "custom",
        "kind": "internal_tag",
        "nonExhaustive": true,
        "tag": "type"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "CustomAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "custom"
          }
        },
        {
          "name": "char_filter",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "filter",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "position_increment_gap",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "position_offset_gap",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "tokenizer",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L28-L35"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FingerprintAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "fingerprint"
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_output_size",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "preserve_original",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "separator",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L37-L45"
    },
    {
      "kind": "interface",
      "name": {
        "name": "KeywordAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "keyword"
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L47-L50"
    },
    {
      "kind": "interface",
      "name": {
        "name": "LanguageAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "language"
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "language",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Language",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L52-L59"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "Arabic"
        },
        {
          "name": "Armenian"
        },
        {
          "name": "Basque"
        },
        {
          "name": "Brazilian"
        },
        {
          "name": "Bulgarian"
        },
        {
          "name": "Catalan"
        },
        {
          "name": "Chinese"
        },
        {
          "name": "Cjk"
        },
        {
          "name": "Czech"
        },
        {
          "name": "Danish"
        },
        {
          "name": "Dutch"
        },
        {
          "name": "English"
        },
        {
          "name": "Estonian"
        },
        {
          "name": "Finnish"
        },
        {
          "name": "French"
        },
        {
          "name": "Galician"
        },
        {
          "name": "German"
        },
        {
          "name": "Greek"
        },
        {
          "name": "Hindi"
        },
        {
          "name": "Hungarian"
        },
        {
          "name": "Indonesian"
        },
        {
          "name": "Irish"
        },
        {
          "name": "Italian"
        },
        {
          "name": "Latvian"
        },
        {
          "name": "Norwegian"
        },
        {
          "name": "Persian"
        },
        {
          "name": "Portuguese"
        },
        {
          "name": "Romanian"
        },
        {
          "name": "Russian"
        },
        {
          "name": "Sorani"
        },
        {
          "name": "Spanish"
        },
        {
          "name": "Swedish"
        },
        {
          "name": "Turkish"
        },
        {
          "name": "Thai"
        }
      ],
      "name": {
        "name": "Language",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/languages.ts#L20-L55"
    },
    {
      "kind": "interface",
      "name": {
        "name": "NoriAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "nori"
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "decompound_mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NoriDecompoundMode",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stoptags",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "user_dictionary",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L312-L318"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "discard"
        },
        {
          "name": "none"
        },
        {
          "name": "mixed"
        }
      ],
      "name": {
        "name": "NoriDecompoundMode",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/nori-plugin.ts#L22-L26"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PatternAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "pattern"
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "flags",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "lowercase",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "pattern",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L320-L327"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SimpleAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "simple"
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L329-L332"
    },
    {
      "kind": "interface",
      "name": {
        "name": "StandardAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "standard"
          }
        },
        {
          "name": "max_token_length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L341-L345"
    },
    {
      "kind": "interface",
      "name": {
        "name": "StopAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "stop"
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L347-L352"
    },
    {
      "kind": "interface",
      "name": {
        "name": "WhitespaceAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "whitespace"
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L354-L357"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IcuAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "icu_analyzer"
          }
        },
        {
          "name": "method",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuNormalizationType",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "mode",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuNormalizationMode",
              "namespace": "_types.analysis"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/icu-plugin.ts#L67-L71"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "nfc"
        },
        {
          "name": "nfkc"
        },
        {
          "name": "nfkc_cf"
        }
      ],
      "name": {
        "name": "IcuNormalizationType",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/icu-plugin.ts#L83-L87"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "decompose"
        },
        {
          "name": "compose"
        }
      ],
      "name": {
        "name": "IcuNormalizationMode",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/icu-plugin.ts#L78-L81"
    },
    {
      "kind": "interface",
      "name": {
        "name": "KuromojiAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "kuromoji"
          }
        },
        {
          "name": "mode",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "KuromojiTokenizationMode",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "user_dictionary",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/kuromoji-plugin.ts#L25-L29"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "normal"
        },
        {
          "name": "search"
        },
        {
          "name": "extended"
        }
      ],
      "name": {
        "name": "KuromojiTokenizationMode",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/kuromoji-plugin.ts#L52-L56"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SnowballAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "snowball"
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "language",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SnowballLanguage",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L334-L339"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "Armenian"
        },
        {
          "name": "Basque"
        },
        {
          "name": "Catalan"
        },
        {
          "name": "Danish"
        },
        {
          "name": "Dutch"
        },
        {
          "name": "English"
        },
        {
          "name": "Finnish"
        },
        {
          "name": "French"
        },
        {
          "name": "German"
        },
        {
          "name": "German2"
        },
        {
          "name": "Hungarian"
        },
        {
          "name": "Italian"
        },
        {
          "name": "Kp"
        },
        {
          "name": "Lovins"
        },
        {
          "name": "Norwegian"
        },
        {
          "name": "Porter"
        },
        {
          "name": "Portuguese"
        },
        {
          "name": "Romanian"
        },
        {
          "name": "Russian"
        },
        {
          "name": "Spanish"
        },
        {
          "name": "Swedish"
        },
        {
          "name": "Turkish"
        }
      ],
      "name": {
        "name": "SnowballLanguage",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/languages.ts#L57-L80"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ArabicAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "arabic"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L61-L66"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ArmenianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "armenian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L68-L73"
    },
    {
      "kind": "interface",
      "name": {
        "name": "BasqueAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "basque"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L75-L80"
    },
    {
      "kind": "interface",
      "name": {
        "name": "BengaliAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "bengali"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L82-L87"
    },
    {
      "kind": "interface",
      "name": {
        "name": "BrazilianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "brazilian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L89-L93"
    },
    {
      "kind": "interface",
      "name": {
        "name": "BulgarianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "bulgarian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L95-L100"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CatalanAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "catalan"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L102-L107"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ChineseAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "chinese"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L109-L113"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CjkAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "cjk"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L115-L119"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CzechAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "czech"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L121-L126"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DanishAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "danish"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L128-L132"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DutchAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "dutch"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L134-L139"
    },
    {
      "kind": "interface",
      "name": {
        "name": "EnglishAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "english"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L141-L146"
    },
    {
      "kind": "interface",
      "name": {
        "name": "EstonianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "estonian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L148-L152"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FinnishAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "finnish"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L154-L159"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FrenchAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "french"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L161-L166"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GalicianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "galician"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L168-L173"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GermanAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "german"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L175-L180"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GreekAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "greek"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L182-L186"
    },
    {
      "kind": "interface",
      "name": {
        "name": "HindiAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "hindi"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L188-L193"
    },
    {
      "kind": "interface",
      "name": {
        "name": "HungarianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "hungarian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L195-L200"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndonesianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "indonesian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L202-L207"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IrishAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "irish"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L209-L214"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ItalianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "italian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L216-L221"
    },
    {
      "kind": "interface",
      "name": {
        "name": "LatvianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "latvian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L223-L228"
    },
    {
      "kind": "interface",
      "name": {
        "name": "LithuanianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "lithuanian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L230-L235"
    },
    {
      "kind": "interface",
      "name": {
        "name": "NorwegianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "norwegian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L237-L242"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PersianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "persian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L244-L248"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PortugueseAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "portuguese"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L250-L255"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RomanianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "romanian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L257-L262"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RussianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "russian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L264-L269"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SerbianAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "serbian"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L271-L276"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SoraniAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "sorani"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L278-L283"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SpanishAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "spanish"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L285-L290"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SwedishAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "swedish"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L292-L297"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TurkishAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "turkish"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_exclusion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L299-L304"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ThaiAnalyzer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "thai"
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/analyzers.ts#L306-L310"
    },
    {
      "codegenNames": [
        "name",
        "definition"
      ],
      "extDocId": "analysis-charfilters",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis-charfilters.html",
      "kind": "type_alias",
      "name": {
        "name": "CharFilter",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/char_filters.ts#L28-L33",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CharFilterDefinition",
              "namespace": "_types.analysis"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "CharFilterDefinition",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/char_filters.ts#L35-L44",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "HtmlStripCharFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MappingCharFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PatternReplaceCharFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IcuNormalizationCharFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KuromojiIterationMarkCharFilter",
              "namespace": "_types.analysis"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "internal_tag",
        "nonExhaustive": true,
        "tag": "type"
      }
    },
    {
      "inherits": {
        "type": {
          "name": "CharFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HtmlStripCharFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "html_strip"
          }
        },
        {
          "name": "escaped_tags",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/char_filters.ts#L46-L49"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CharFilterBase",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/char_filters.ts#L24-L26"
    },
    {
      "inherits": {
        "type": {
          "name": "CharFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MappingCharFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "mapping"
          }
        },
        {
          "name": "mappings",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "mappings_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/char_filters.ts#L51-L55"
    },
    {
      "inherits": {
        "type": {
          "name": "CharFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PatternReplaceCharFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "pattern_replace"
          }
        },
        {
          "name": "flags",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "pattern",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "replacement",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/char_filters.ts#L57-L62"
    },
    {
      "inherits": {
        "type": {
          "name": "CharFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IcuNormalizationCharFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "icu_normalizer"
          }
        },
        {
          "name": "mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuNormalizationMode",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuNormalizationType",
              "namespace": "_types.analysis"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/icu-plugin.ts#L40-L44"
    },
    {
      "inherits": {
        "type": {
          "name": "CharFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KuromojiIterationMarkCharFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "kuromoji_iteration_mark"
          }
        },
        {
          "name": "normalize_kana",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "normalize_kanji",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/kuromoji-plugin.ts#L31-L35"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "int"
        },
        {
          "name": "float"
        },
        {
          "name": "identity"
        }
      ],
      "name": {
        "name": "DelimitedPayloadEncoding",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/token_filters.ts#L61-L65"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "front"
        },
        {
          "name": "back"
        }
      ],
      "name": {
        "name": "EdgeNGramSide",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/token_filters.ts#L73-L76"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "shifted"
        },
        {
          "name": "non-ignorable"
        }
      ],
      "name": {
        "name": "IcuCollationAlternate",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/icu-plugin.ts#L89-L92"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "lower"
        },
        {
          "name": "upper"
        }
      ],
      "name": {
        "name": "IcuCollationCaseFirst",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/icu-plugin.ts#L94-L97"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "no"
        },
        {
          "name": "identical"
        }
      ],
      "name": {
        "name": "IcuCollationDecomposition",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/icu-plugin.ts#L99-L102"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "primary"
        },
        {
          "name": "secondary"
        },
        {
          "name": "tertiary"
        },
        {
          "name": "quaternary"
        },
        {
          "name": "identical"
        }
      ],
      "name": {
        "name": "IcuCollationStrength",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/icu-plugin.ts#L104-L110"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "forward"
        },
        {
          "name": "reverse"
        }
      ],
      "name": {
        "name": "IcuTransformDirection",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/icu-plugin.ts#L73-L76"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "include"
        },
        {
          "name": "exclude"
        }
      ],
      "name": {
        "name": "KeepTypesMode",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/token_filters.ts#L214-L217"
    },
    {
      "docId": "analysis-normalizers",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis-normalizers.html",
      "kind": "type_alias",
      "name": {
        "name": "Normalizer",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/normalizers.ts#L20-L24",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "LowercaseNormalizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CustomNormalizer",
              "namespace": "_types.analysis"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "defaultTag": "custom",
        "kind": "internal_tag",
        "tag": "type"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "LowercaseNormalizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "lowercase"
          }
        }
      ],
      "specLocation": "_types/analysis/normalizers.ts#L26-L28"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CustomNormalizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "custom"
          }
        },
        {
          "name": "char_filter",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "filter",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/normalizers.ts#L30-L34"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "metaphone"
        },
        {
          "name": "double_metaphone"
        },
        {
          "name": "soundex"
        },
        {
          "name": "refined_soundex"
        },
        {
          "name": "caverphone1"
        },
        {
          "name": "caverphone2"
        },
        {
          "name": "cologne"
        },
        {
          "name": "nysiis"
        },
        {
          "name": "koelnerphonetik"
        },
        {
          "name": "haasephonetik"
        },
        {
          "name": "beider_morse"
        },
        {
          "name": "daitch_mokotoff"
        }
      ],
      "name": {
        "name": "PhoneticEncoder",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/phonetic-plugin.ts#L23-L36"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "any"
        },
        {
          "name": "common"
        },
        {
          "name": "cyrillic"
        },
        {
          "name": "english"
        },
        {
          "name": "french"
        },
        {
          "name": "german"
        },
        {
          "name": "hebrew"
        },
        {
          "name": "hungarian"
        },
        {
          "name": "polish"
        },
        {
          "name": "romanian"
        },
        {
          "name": "russian"
        },
        {
          "name": "spanish"
        }
      ],
      "name": {
        "name": "PhoneticLanguage",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/phonetic-plugin.ts#L38-L51"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "generic"
        },
        {
          "name": "ashkenazi"
        },
        {
          "name": "sephardic"
        }
      ],
      "name": {
        "name": "PhoneticNameType",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/phonetic-plugin.ts#L53-L57"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "approx"
        },
        {
          "name": "exact"
        }
      ],
      "name": {
        "name": "PhoneticRuleType",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/phonetic-plugin.ts#L59-L62"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "solr"
        },
        {
          "name": "wordnet"
        }
      ],
      "name": {
        "name": "SynonymFormat",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/token_filters.ts#L104-L107"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "letter"
        },
        {
          "name": "digit"
        },
        {
          "name": "whitespace"
        },
        {
          "name": "punctuation"
        },
        {
          "name": "symbol"
        },
        {
          "name": "custom"
        }
      ],
      "name": {
        "name": "TokenChar",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/tokenizers.ts#L59-L66"
    },
    {
      "codegenNames": [
        "name",
        "definition"
      ],
      "extDocId": "analysis-tokenfilters",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis-tokenfilters.html",
      "kind": "type_alias",
      "name": {
        "name": "TokenFilter",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/token_filters.ts#L345-L350",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TokenFilterDefinition",
              "namespace": "_types.analysis"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "TokenFilterDefinition",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/token_filters.ts#L352-L404",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "AsciiFoldingTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CommonGramsTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ConditionTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DelimitedPayloadTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "EdgeNGramTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ElisionTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FingerprintTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HunspellTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HyphenationDecompounderTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KeepTypesTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KeepWordsTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KeywordMarkerTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KStemTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LengthTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LimitTokenCountTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LowercaseTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MultiplexerTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NGramTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NoriPartOfSpeechTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PatternCaptureTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PatternReplaceTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PorterStemTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PredicateTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "RemoveDuplicatesTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ReverseTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ShingleTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SnowballTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StemmerOverrideTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StemmerTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StopTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SynonymGraphTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SynonymTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TrimTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TruncateTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "UniqueTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "UppercaseTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "WordDelimiterGraphTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "WordDelimiterTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KuromojiStemmerTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KuromojiReadingFormTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KuromojiPartOfSpeechTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IcuCollationTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IcuFoldingTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IcuNormalizationTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IcuTransformTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PhoneticTokenFilter",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DictionaryDecompounderTokenFilter",
              "namespace": "_types.analysis"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "internal_tag",
        "nonExhaustive": true,
        "tag": "type"
      }
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AsciiFoldingTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "asciifolding"
          }
        },
        {
          "name": "preserve_original",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L169-L172"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TokenFilterBase",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L39-L41"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CommonGramsTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "common_grams"
          }
        },
        {
          "name": "common_words",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "common_words_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_case",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "query_mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L174-L180"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ConditionTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "condition"
          }
        },
        {
          "name": "filter",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "script",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L182-L186"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DelimitedPayloadTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "delimited_payload"
          }
        },
        {
          "name": "delimiter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "encoding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DelimitedPayloadEncoding",
              "namespace": "_types.analysis"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L67-L71"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "EdgeNGramTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "edge_ngram"
          }
        },
        {
          "name": "max_gram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_gram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "side",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "EdgeNGramSide",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "preserve_original",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L78-L84"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ElisionTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "elision"
          }
        },
        {
          "name": "articles",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "articles_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "articles_case",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L188-L193"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FingerprintTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "fingerprint"
          }
        },
        {
          "name": "max_output_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "separator",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L195-L199"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HunspellTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "hunspell"
          }
        },
        {
          "name": "dedup",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "dictionary",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "locale",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "longest_only",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L201-L207"
    },
    {
      "inherits": {
        "type": {
          "name": "CompoundWordTokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HyphenationDecompounderTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "hyphenation_decompounder"
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L57-L59"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CompoundWordTokenFilterBase",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "hyphenation_patterns_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_subword_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_subword_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_word_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "only_longest_match",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "word_list",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "word_list_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L43-L51"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KeepTypesTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "keep_types"
          }
        },
        {
          "name": "mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "KeepTypesMode",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "types",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L219-L223"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KeepWordsTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "keep"
          }
        },
        {
          "name": "keep_words",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "keep_words_case",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "keep_words_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L225-L230"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KeywordMarkerTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "keyword_marker"
          }
        },
        {
          "name": "ignore_case",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "keywords",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "keywords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "keywords_pattern",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L232-L238"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KStemTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "kstem"
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L240-L242"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "LengthTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "length"
          }
        },
        {
          "name": "max",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L244-L248"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "LimitTokenCountTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "limit"
          }
        },
        {
          "name": "consume_all_tokens",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_token_count",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L250-L254"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "LowercaseTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "lowercase"
          }
        },
        {
          "name": "language",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L256-L259"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "MultiplexerTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "multiplexer"
          }
        },
        {
          "name": "filters",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "preserve_original",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L261-L265"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NGramTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "ngram"
          }
        },
        {
          "name": "max_gram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_gram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "preserve_original",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L267-L272"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NoriPartOfSpeechTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "nori_part_of_speech"
          }
        },
        {
          "name": "stoptags",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L274-L277"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PatternCaptureTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "pattern_capture"
          }
        },
        {
          "name": "patterns",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "preserve_original",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L279-L283"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PatternReplaceTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "pattern_replace"
          }
        },
        {
          "name": "all",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "flags",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "pattern",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "replacement",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L285-L291"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PorterStemTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "porter_stem"
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L293-L295"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PredicateTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "predicate_token_filter"
          }
        },
        {
          "name": "script",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L297-L300"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RemoveDuplicatesTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "remove_duplicates"
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L302-L304"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ReverseTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "reverse"
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L306-L308"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ShingleTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "shingle"
          }
        },
        {
          "name": "filler_token",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_shingle_size",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "min_shingle_size",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "output_unigrams",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "output_unigrams_if_no_shingles",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "token_separator",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L86-L94"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SnowballTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "snowball"
          }
        },
        {
          "name": "language",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SnowballLanguage",
              "namespace": "_types.analysis"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L310-L313"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StemmerOverrideTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "stemmer_override"
          }
        },
        {
          "name": "rules",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "rules_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L315-L319"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StemmerTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "stemmer"
          }
        },
        {
          "aliases": [
            "name"
          ],
          "name": "language",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L321-L325"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StopTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "stop"
          }
        },
        {
          "name": "ignore_case",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "remove_trailing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stopwords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StopWords",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "stopwords_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L96-L102"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SynonymGraphTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "synonym_graph"
          }
        },
        {
          "name": "expand",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SynonymFormat",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "lenient",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "synonyms",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "synonyms_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "synonyms_set",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "tokenizer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "updateable",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L109-L119"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SynonymTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "synonym"
          }
        },
        {
          "name": "expand",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SynonymFormat",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "lenient",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "synonyms",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "synonyms_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "synonyms_set",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "tokenizer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "updateable",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L121-L131"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TrimTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "trim"
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L327-L329"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TruncateTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "truncate"
          }
        },
        {
          "name": "length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L331-L334"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UniqueTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "unique"
          }
        },
        {
          "name": "only_on_same_position",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L336-L339"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UppercaseTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "uppercase"
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L341-L343"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "WordDelimiterGraphTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "word_delimiter_graph"
          }
        },
        {
          "name": "adjust_offsets",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "catenate_all",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "catenate_numbers",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "catenate_words",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "generate_number_parts",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "generate_word_parts",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_keywords",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "preserve_original",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "protected_words",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "protected_words_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "split_on_case_change",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "split_on_numerics",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_english_possessive",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type_table",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "type_table_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L150-L167"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "WordDelimiterTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "word_delimiter"
          }
        },
        {
          "name": "catenate_all",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "catenate_numbers",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "catenate_words",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "generate_number_parts",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "generate_word_parts",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "preserve_original",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "protected_words",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "protected_words_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "split_on_case_change",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "split_on_numerics",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stem_english_possessive",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type_table",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "type_table_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L133-L148"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KuromojiStemmerTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "kuromoji_stemmer"
          }
        },
        {
          "name": "minimum_length",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/kuromoji-plugin.ts#L47-L50"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KuromojiReadingFormTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "kuromoji_readingform"
          }
        },
        {
          "name": "use_romaji",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/kuromoji-plugin.ts#L42-L45"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KuromojiPartOfSpeechTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "kuromoji_part_of_speech"
          }
        },
        {
          "name": "stoptags",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/kuromoji-plugin.ts#L37-L40"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IcuCollationTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "icu_collation"
          }
        },
        {
          "name": "alternate",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuCollationAlternate",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "case_first",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuCollationCaseFirst",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "case_level",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "country",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "decomposition",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuCollationDecomposition",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "hiragana_quaternary_mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "language",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "numeric",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "rules",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "strength",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuCollationStrength",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "variable_top",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "variant",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/icu-plugin.ts#L51-L65"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IcuFoldingTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "icu_folding"
          }
        },
        {
          "name": "unicode_set_filter",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/icu-plugin.ts#L46-L49"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IcuNormalizationTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "icu_normalizer"
          }
        },
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuNormalizationType",
              "namespace": "_types.analysis"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/icu-plugin.ts#L35-L38"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IcuTransformTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "icu_transform"
          }
        },
        {
          "name": "dir",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuTransformDirection",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/icu-plugin.ts#L24-L28"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PhoneticTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "phonetic"
          }
        },
        {
          "name": "encoder",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PhoneticEncoder",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "languageset",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "PhoneticLanguage",
                  "namespace": "_types.analysis"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "PhoneticLanguage",
                    "namespace": "_types.analysis"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "max_code_len",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "name_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PhoneticNameType",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "replace",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "rule_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PhoneticRuleType",
              "namespace": "_types.analysis"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/phonetic-plugin.ts#L64-L72"
    },
    {
      "inherits": {
        "type": {
          "name": "CompoundWordTokenFilterBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DictionaryDecompounderTokenFilter",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "dictionary_decompounder"
          }
        }
      ],
      "specLocation": "_types/analysis/token_filters.ts#L53-L55"
    },
    {
      "codegenNames": [
        "name",
        "definition"
      ],
      "extDocId": "analysis-tokenizers",
      "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis-tokenizers.html",
      "kind": "type_alias",
      "name": {
        "name": "Tokenizer",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/tokenizers.ts#L140-L145",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TokenizerDefinition",
              "namespace": "_types.analysis"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "TokenizerDefinition",
        "namespace": "_types.analysis"
      },
      "specLocation": "_types/analysis/tokenizers.ts#L147-L170",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "CharGroupTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ClassicTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "EdgeNGramTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KeywordTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LetterTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LowercaseTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NGramTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PathHierarchyTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PatternTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SimplePatternTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SimplePatternSplitTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StandardTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ThaiTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "UaxEmailUrlTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "WhitespaceTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IcuTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KuromojiTokenizer",
              "namespace": "_types.analysis"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NoriTokenizer",
              "namespace": "_types.analysis"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "internal_tag",
        "nonExhaustive": true,
        "tag": "type"
      }
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CharGroupTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "char_group"
          }
        },
        {
          "name": "tokenize_on_chars",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "max_token_length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L31-L38"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TokenizerBase",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L27-L29"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ClassicTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "classic"
          }
        },
        {
          "name": "max_token_length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L40-L46"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "EdgeNGramTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "edge_ngram"
          }
        },
        {
          "name": "custom_token_chars",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_gram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_gram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "token_chars",
          "required": false,
          "serverDefault": [],
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TokenChar",
                "namespace": "_types.analysis"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L48-L57"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KeywordTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "keyword"
          }
        },
        {
          "name": "buffer_size",
          "required": false,
          "serverDefault": 256,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L68-L74"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "LetterTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "letter"
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L76-L78"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "LowercaseTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "lowercase"
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L80-L82"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NGramTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "ngram"
          }
        },
        {
          "name": "custom_token_chars",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_gram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_gram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "token_chars",
          "required": false,
          "serverDefault": [],
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TokenChar",
                "namespace": "_types.analysis"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L84-L93"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PathHierarchyTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "path_hierarchy"
          }
        },
        {
          "name": "buffer_size",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "delimiter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "replacement",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "reverse",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "skip",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L95-L102"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PatternTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "pattern"
          }
        },
        {
          "name": "flags",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "group",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "pattern",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L104-L109"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SimplePatternTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "simple_pattern"
          }
        },
        {
          "name": "pattern",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L111-L114"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SimplePatternSplitTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "simple_pattern_split"
          }
        },
        {
          "name": "pattern",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L116-L119"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StandardTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "standard"
          }
        },
        {
          "name": "max_token_length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L121-L124"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ThaiTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "thai"
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L126-L128"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UaxEmailUrlTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "uax_url_email"
          }
        },
        {
          "name": "max_token_length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L130-L133"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "WhitespaceTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "whitespace"
          }
        },
        {
          "name": "max_token_length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/tokenizers.ts#L135-L138"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IcuTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "icu_tokenizer"
          }
        },
        {
          "name": "rule_files",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/icu-plugin.ts#L30-L33"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KuromojiTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "kuromoji_tokenizer"
          }
        },
        {
          "name": "discard_punctuation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "mode",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "KuromojiTokenizationMode",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "nbest_cost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "nbest_examples",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "user_dictionary",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "user_dictionary_rules",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "discard_compound_token",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/analysis/kuromoji-plugin.ts#L58-L67"
    },
    {
      "inherits": {
        "type": {
          "name": "TokenizerBase",
          "namespace": "_types.analysis"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NoriTokenizer",
        "namespace": "_types.analysis"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "nori_tokenizer"
          }
        },
        {
          "name": "decompound_mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NoriDecompoundMode",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "discard_punctuation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "user_dictionary",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "user_dictionary_rules",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "_types/analysis/nori-plugin.ts#L28-L34"
    },
    {
      "esQuirk": "This is a boolean that evolved into an enum. Boolean values should be accepted on reading, and\ntrue and false must be serialized as JSON booleans, or it may break Kibana (see elasticsearch-java#139)",
      "kind": "enum",
      "members": [
        {
          "name": "strict"
        },
        {
          "name": "runtime"
        },
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ],
      "name": {
        "name": "DynamicMapping",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/dynamic-template.ts#L49-L58"
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "RIGHT",
            "counterclockwise",
            "ccw"
          ],
          "name": "right"
        },
        {
          "aliases": [
            "LEFT",
            "clockwise",
            "cw"
          ],
          "name": "left"
        }
      ],
      "name": {
        "name": "GeoOrientation",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/geo.ts#L34-L39"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "recursive"
        },
        {
          "name": "term"
        }
      ],
      "name": {
        "name": "GeoStrategy",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/geo.ts#L56-L59"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "docs"
        },
        {
          "name": "freqs"
        },
        {
          "name": "positions"
        },
        {
          "name": "offsets"
        }
      ],
      "name": {
        "name": "IndexOptions",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/core.ts#L258-L263"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "simple"
        },
        {
          "name": "regex"
        }
      ],
      "name": {
        "name": "MatchType",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/dynamic-template.ts#L44-L47"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "fail"
        },
        {
          "name": "continue"
        }
      ],
      "name": {
        "name": "OnScriptError",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/core.ts#L137-L140"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Property",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/Property.ts#L96-L164",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "BinaryProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "BooleanProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DynamicProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "JoinProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "KeywordProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MatchOnlyTextProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PercolatorProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "RankFeatureProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "RankFeaturesProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SearchAsYouTypeProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TextProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "VersionProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "WildcardProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DateNanosProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DateProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "AggregateMetricDoubleProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DenseVectorProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FlattenedProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NestedProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ObjectProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SemanticTextProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SparseVectorProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CompletionProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ConstantKeywordProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FieldAliasProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HistogramProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IpProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "Murmur3HashProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "TokenCountProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoPointProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GeoShapeProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "PointProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ShapeProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ByteNumberProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DoubleNumberProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FloatNumberProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HalfFloatNumberProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IntegerNumberProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LongNumberProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ScaledFloatNumberProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ShortNumberProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "UnsignedLongNumberProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DateRangeProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DoubleRangeProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FloatRangeProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IntegerRangeProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IpRangeProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LongRangeProperty",
              "namespace": "_types.mapping"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IcuCollationProperty",
              "namespace": "_types.mapping"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "defaultTag": "object",
        "kind": "internal_tag",
        "nonExhaustive": true,
        "tag": "type"
      }
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BinaryProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "binary"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L54-L56"
    },
    {
      "inherits": {
        "type": {
          "name": "CorePropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DocValuesPropertyBase",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "doc_values",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L50-L52"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CorePropertyBase",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "copy_to",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "store",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L45-L48"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PropertyBase",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "description": "Metadata about the field.",
          "docId": "mapping-meta-field",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-meta-field.html",
          "name": "meta",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "properties",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "PropertyName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Property",
                "namespace": "_types.mapping"
              }
            }
          }
        },
        {
          "name": "ignore_above",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "dynamic",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DynamicMapping",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "PropertyName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Property",
                "namespace": "_types.mapping"
              }
            }
          }
        }
      ],
      "specLocation": "_types/mapping/Property.ts#L84-L94"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BooleanProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fielddata",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NumericFielddata",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "boolean"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L58-L64"
    },
    {
      "kind": "interface",
      "name": {
        "name": "NumericFielddata",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "format",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NumericFielddataFormat",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/NumericFielddata.ts#L22-L24"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "array"
        },
        {
          "name": "disabled"
        }
      ],
      "name": {
        "name": "NumericFielddataFormat",
        "namespace": "indices._types"
      },
      "specLocation": "indices/_types/NumericFielddataFormat.ts#L20-L23"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DynamicProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "{dynamic_type}"
          }
        },
        {
          "name": "enabled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "coerce",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "on_script_error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "OnScriptError",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "ignore_malformed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "time_series_metric",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeSeriesMetricType",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "eager_global_ordinals",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index_options",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexOptions",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "index_phrases",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index_prefixes",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TextIndexPrefixes",
                  "namespace": "_types.mapping"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "norms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "position_increment_gap",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "search_analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "search_quote_analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "term_vector",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermVectorOption",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "precision_step",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "locale",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L302-L333"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "gauge"
        },
        {
          "name": "counter"
        },
        {
          "name": "summary"
        },
        {
          "name": "histogram"
        },
        {
          "name": "position"
        }
      ],
      "name": {
        "name": "TimeSeriesMetricType",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/TimeSeriesMetricType.ts#L20-L26"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TextIndexPrefixes",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "max_chars",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_chars",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L265-L268"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "no"
        },
        {
          "name": "yes"
        },
        {
          "name": "with_offsets"
        },
        {
          "name": "with_positions"
        },
        {
          "name": "with_positions_offsets"
        },
        {
          "name": "with_positions_offsets_payloads"
        },
        {
          "name": "with_positions_payloads"
        }
      ],
      "name": {
        "name": "TermVectorOption",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/TermVectorOption.ts#L20-L28"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "JoinProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "relations",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "RelationName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "RelationName",
                    "namespace": "_types"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "RelationName",
                      "namespace": "_types"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          }
        },
        {
          "name": "eager_global_ordinals",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "join"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L88-L92"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KeywordProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "eager_global_ordinals",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index_options",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexOptions",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "on_script_error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "OnScriptError",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "normalizer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "norms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "similarity",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "split_queries_on_whitespace",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "stability": "experimental"
            }
          },
          "description": "For internal use by Elastic only. Marks the field as a time series dimension. Defaults to false.",
          "name": "time_series_dimension",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "keyword"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L94-L113"
    },
    {
      "description": "A variant of text that trades scoring and efficiency of positional queries for space efficiency. This field\neffectively stores data the same way as a text field that only indexes documents (index_options: docs) and\ndisables norms (norms: false). Term queries perform as fast if not faster as on text fields, however queries\nthat need positions such as the match_phrase query perform slower as they need to look at the _source document\nto verify whether a phrase matches. All queries return constant scores that are equal to 1.0.",
      "kind": "interface",
      "name": {
        "name": "MatchOnlyTextProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "match_only_text"
          }
        },
        {
          "description": "Multi-fields allow the same string value to be indexed in multiple ways for different purposes, such as one\nfield for search and a multi-field for sorting and aggregations, or the same string value analyzed by different analyzers.",
          "docId": "multi-fields",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/multi-fields.html",
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "PropertyName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Property",
                "namespace": "_types.mapping"
              }
            }
          }
        },
        {
          "description": "Metadata about the field.",
          "docId": "mapping-meta-field",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-meta-field.html",
          "name": "meta",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Allows you to copy the values of multiple fields into a group\nfield, which can then be queried as a single field.",
          "name": "copy_to",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L231-L256"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PercolatorProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "percolator"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L188-L190"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankFeatureProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "positive_score_impact",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "rank_feature"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L192-L195"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankFeaturesProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "positive_score_impact",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "rank_features"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L197-L200"
    },
    {
      "inherits": {
        "type": {
          "name": "CorePropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SearchAsYouTypeProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index_options",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexOptions",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "max_shingle_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "norms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "search_analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "search_quote_analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "similarity",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "term_vector",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermVectorOption",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "search_as_you_type"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L212-L223"
    },
    {
      "inherits": {
        "type": {
          "name": "CorePropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TextProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "eager_global_ordinals",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "fielddata",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "fielddata_frequency_filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FielddataFrequencyFilter",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index_options",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexOptions",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "index_phrases",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index_prefixes",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TextIndexPrefixes",
                  "namespace": "_types.mapping"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "norms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "position_increment_gap",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "search_analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "search_quote_analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "similarity",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "term_vector",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermVectorOption",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "text"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L270-L287"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FielddataFrequencyFilter",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "max",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_segment_size",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/FielddataFrequencyFilter.ts#L22-L26"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "VersionProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "version"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L289-L291"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "WildcardProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "wildcard"
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.15.0"
            }
          },
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L293-L300"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateNanosProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_malformed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "precision_step",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "date_nanos"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L78-L86"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fielddata",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NumericFielddata",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_malformed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "precision_step",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "locale",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "date"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L66-L76"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AggregateMetricDoubleProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "aggregate_metric_double"
          }
        },
        {
          "name": "default_metric",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "metrics",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "time_series_metric",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeSeriesMetricType",
              "namespace": "_types.mapping"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/complex.ts#L61-L66"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DenseVectorProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "dense_vector"
          }
        },
        {
          "name": "element_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "dims",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "similarity",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index_options",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DenseVectorIndexOptions",
              "namespace": "_types.mapping"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/complex.ts#L52-L59"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DenseVectorIndexOptions",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "m",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "ef_construction",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "confidence_interval",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/DenseVectorIndexOptions.ts#L22-L27"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FlattenedProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "depth_limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "doc_values",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "eager_global_ordinals",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index_options",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexOptions",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "similarity",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "split_queries_on_whitespace",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "flattened"
          }
        }
      ],
      "specLocation": "_types/mapping/complex.ts#L26-L37"
    },
    {
      "inherits": {
        "type": {
          "name": "CorePropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NestedProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "enabled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "include_in_parent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "include_in_root",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "nested"
          }
        }
      ],
      "specLocation": "_types/mapping/complex.ts#L39-L44"
    },
    {
      "inherits": {
        "type": {
          "name": "CorePropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ObjectProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "enabled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "subobjects",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": false,
          "type": {
            "kind": "literal_value",
            "value": "object"
          }
        }
      ],
      "specLocation": "_types/mapping/complex.ts#L46-L50"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SemanticTextProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "semantic_text"
          }
        },
        {
          "name": "meta",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "inference_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L206-L210"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SparseVectorProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "sparse_vector"
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L202-L204"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CompletionProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "contexts",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SuggestContext",
                "namespace": "_types.mapping"
              }
            }
          }
        },
        {
          "name": "max_input_length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "preserve_position_increments",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "preserve_separators",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "search_analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "completion"
          }
        }
      ],
      "specLocation": "_types/mapping/specialized.ts#L33-L41"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SuggestContext",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "precision",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_types/mapping/specialized.ts#L43-L48"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ConstantKeywordProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "value",
          "required": false,
          "type": {
            "kind": "user_defined_value"
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "constant_keyword"
          }
        }
      ],
      "specLocation": "_types/mapping/specialized.ts#L50-L53"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FieldAliasProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "alias"
          }
        }
      ],
      "specLocation": "_types/mapping/specialized.ts#L55-L58"
    },
    {
      "inherits": {
        "type": {
          "name": "PropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HistogramProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "ignore_malformed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "histogram"
          }
        }
      ],
      "specLocation": "_types/mapping/specialized.ts#L60-L63"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IpProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_malformed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "on_script_error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "OnScriptError",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "stability": "experimental"
            }
          },
          "description": "For internal use by Elastic only. Marks the field as a time series dimension. Defaults to false.",
          "name": "time_series_dimension",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "ip"
          }
        }
      ],
      "specLocation": "_types/mapping/specialized.ts#L65-L79"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "Murmur3HashProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "murmur3"
          }
        }
      ],
      "specLocation": "_types/mapping/specialized.ts#L81-L83"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TokenCountProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "enable_position_increments",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "token_count"
          }
        }
      ],
      "specLocation": "_types/mapping/specialized.ts#L85-L92"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoPointProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "ignore_malformed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_z_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoLocation",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "on_script_error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "OnScriptError",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "geo_point"
          }
        }
      ],
      "specLocation": "_types/mapping/geo.ts#L24-L32"
    },
    {
      "description": "The `geo_shape` data type facilitates the indexing of and searching with arbitrary geo shapes such as rectangles\nand polygons.",
      "docId": "geo-shape",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/geo-shape.html",
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoShapeProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "coerce",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_malformed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_z_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "orientation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoOrientation",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "strategy",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoStrategy",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "geo_shape"
          }
        }
      ],
      "specLocation": "_types/mapping/geo.ts#L41-L54"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PointProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "ignore_malformed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_z_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "point"
          }
        }
      ],
      "specLocation": "_types/mapping/geo.ts#L66-L71"
    },
    {
      "description": "The `shape` data type facilitates the indexing of and searching with arbitrary `x, y` cartesian shapes such as\nrectangles and polygons.",
      "docId": "shape",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/shape.html",
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ShapeProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "coerce",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_malformed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_z_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "orientation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoOrientation",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "shape"
          }
        }
      ],
      "specLocation": "_types/mapping/geo.ts#L73-L85"
    },
    {
      "inherits": {
        "type": {
          "name": "NumberPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ByteNumberProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "byte"
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "byte",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L172-L175"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NumberPropertyBase",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "coerce",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignore_malformed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "on_script_error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "OnScriptError",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "stability": "experimental"
            }
          },
          "description": "For internal use by Elastic only. Marks the field as a time series dimension. Defaults to false.",
          "name": "time_series_metric",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeSeriesMetricType",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "stability": "experimental"
            }
          },
          "description": "For internal use by Elastic only. Marks the field as a time series dimension. Defaults to false.",
          "name": "time_series_dimension",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L115-L135"
    },
    {
      "inherits": {
        "type": {
          "name": "NumberPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DoubleNumberProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "double"
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L152-L155"
    },
    {
      "inherits": {
        "type": {
          "name": "NumberPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FloatNumberProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "float"
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L142-L145"
    },
    {
      "inherits": {
        "type": {
          "name": "NumberPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HalfFloatNumberProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "half_float"
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L147-L150"
    },
    {
      "inherits": {
        "type": {
          "name": "NumberPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IntegerNumberProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "integer"
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L157-L160"
    },
    {
      "inherits": {
        "type": {
          "name": "NumberPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "LongNumberProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "long"
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L162-L165"
    },
    {
      "inherits": {
        "type": {
          "name": "NumberPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ScaledFloatNumberProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "scaled_float"
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "scaling_factor",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L182-L186"
    },
    {
      "inherits": {
        "type": {
          "name": "NumberPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ShortNumberProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "short"
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "short",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L167-L170"
    },
    {
      "inherits": {
        "type": {
          "name": "NumberPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UnsignedLongNumberProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "unsigned_long"
          }
        },
        {
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ulong",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/core.ts#L177-L180"
    },
    {
      "inherits": {
        "type": {
          "name": "RangePropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateRangeProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "date_range"
          }
        }
      ],
      "specLocation": "_types/mapping/range.ts#L29-L32"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RangePropertyBase",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "boost",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "coerce",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/range.ts#L23-L27"
    },
    {
      "inherits": {
        "type": {
          "name": "RangePropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DoubleRangeProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "double_range"
          }
        }
      ],
      "specLocation": "_types/mapping/range.ts#L34-L36"
    },
    {
      "inherits": {
        "type": {
          "name": "RangePropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FloatRangeProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "float_range"
          }
        }
      ],
      "specLocation": "_types/mapping/range.ts#L38-L40"
    },
    {
      "inherits": {
        "type": {
          "name": "RangePropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IntegerRangeProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "integer_range"
          }
        }
      ],
      "specLocation": "_types/mapping/range.ts#L42-L44"
    },
    {
      "inherits": {
        "type": {
          "name": "RangePropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IpRangeProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "ip_range"
          }
        }
      ],
      "specLocation": "_types/mapping/range.ts#L46-L48"
    },
    {
      "inherits": {
        "type": {
          "name": "RangePropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "LongRangeProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "long_range"
          }
        }
      ],
      "specLocation": "_types/mapping/range.ts#L50-L52"
    },
    {
      "inherits": {
        "type": {
          "name": "DocValuesPropertyBase",
          "namespace": "_types.mapping"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IcuCollationProperty",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "icu_collation_keyword"
          }
        },
        {
          "name": "norms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index_options",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexOptions",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "description": "Should the field be searchable?",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Accepts a string value which is substituted for any explicit null values. Defaults to null, which means the field is treated as missing.",
          "name": "null_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "rules",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "language",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "country",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "variant",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "strength",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuCollationStrength",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "decomposition",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuCollationDecomposition",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "alternate",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuCollationAlternate",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "case_level",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "case_first",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IcuCollationCaseFirst",
              "namespace": "_types.analysis"
            }
          }
        },
        {
          "name": "numeric",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "variable_top",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "hiragana_quaternary_mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/specialized.ts#L94-L118"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "disabled"
        },
        {
          "name": "stored"
        },
        {
          "description": "Instead of storing source documents on disk exactly as you send them,\n Elasticsearch can reconstruct source content on the fly upon retrieval.",
          "name": "synthetic"
        }
      ],
      "name": {
        "name": "SourceFieldMode",
        "namespace": "_types.mapping"
      },
      "specLocation": "_types/mapping/meta-fields.ts#L67-L75"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Disables all operators.",
          "name": "NONE"
        },
        {
          "description": "Enables the `+` AND operator.",
          "name": "AND"
        },
        {
          "description": "Enables the `-` NOT operator.",
          "name": "NOT"
        },
        {
          "description": "Enables the `\\|` OR operator.",
          "name": "OR"
        },
        {
          "description": "Enables the `*` prefix operator.",
          "name": "PREFIX"
        },
        {
          "description": "Enables the `\"` quotes operator used to search for phrases.",
          "name": "PHRASE"
        },
        {
          "description": "Enables the `(` and `)` operators to control operator precedence.",
          "name": "PRECEDENCE"
        },
        {
          "description": "Enables `\\` as an escape character.",
          "name": "ESCAPE"
        },
        {
          "description": "Enables whitespace as split characters.",
          "name": "WHITESPACE"
        },
        {
          "description": "Enables the `~N` operator after a word, where `N` is an integer denoting the allowed edit distance for matching.",
          "name": "FUZZY"
        },
        {
          "description": "Enables the `~N` operator, after a phrase where `N` is the maximum number of positions allowed between matching tokens.\nSynonymous to `SLOP`.",
          "name": "NEAR"
        },
        {
          "description": "Enables the `~N` operator, after a phrase where `N` is maximum number of positions allowed between matching tokens.\nSynonymous to `NEAR`.",
          "name": "SLOP"
        },
        {
          "description": "Enables all optional operators.",
          "name": "ALL"
        }
      ],
      "name": {
        "name": "SimpleQueryStringFlag",
        "namespace": "_types.query_dsl"
      },
      "specLocation": "_types/query_dsl/fulltext.ts#L729-L784"
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "ae"
          ],
          "description": "For open anomaly detection jobs only, contains messages relating to the\nselection of a node to run the job.",
          "name": "assignment_explanation"
        },
        {
          "aliases": [
            "bc",
            "bucketsCount"
          ],
          "description": "The number of bucket results produced by the job.",
          "name": "buckets.count"
        },
        {
          "aliases": [
            "btea",
            "bucketsTimeExpAvg"
          ],
          "description": "Exponential moving average of all bucket processing times, in milliseconds.",
          "name": "buckets.time.exp_avg"
        },
        {
          "aliases": [
            "bteah",
            "bucketsTimeExpAvgHour"
          ],
          "description": "Exponentially-weighted moving average of bucket processing times calculated\nin a 1 hour time window, in milliseconds.",
          "name": "buckets.time.exp_avg_hour"
        },
        {
          "aliases": [
            "btmax",
            "bucketsTimeMax"
          ],
          "description": "Maximum among all bucket processing times, in milliseconds.",
          "name": "buckets.time.max"
        },
        {
          "aliases": [
            "btmin",
            "bucketsTimeMin"
          ],
          "description": "Minimum among all bucket processing times, in milliseconds.",
          "name": "buckets.time.min"
        },
        {
          "aliases": [
            "btt",
            "bucketsTimeTotal"
          ],
          "description": "Sum of all bucket processing times, in milliseconds.",
          "name": "buckets.time.total"
        },
        {
          "aliases": [
            "db",
            "dataBuckets"
          ],
          "description": "The number of buckets processed.",
          "name": "data.buckets"
        },
        {
          "aliases": [
            "der",
            "dataEarliestRecord"
          ],
          "description": "The timestamp of the earliest chronologically input document.",
          "name": "data.earliest_record"
        },
        {
          "aliases": [
            "deb",
            "dataEmptyBuckets"
          ],
          "description": "The number of buckets which did not contain any data.",
          "name": "data.empty_buckets"
        },
        {
          "aliases": [
            "dib",
            "dataInputBytes"
          ],
          "description": "The number of bytes of input data posted to the anomaly detection job.",
          "name": "data.input_bytes"
        },
        {
          "aliases": [
            "dif",
            "dataInputFields"
          ],
          "description": "The total number of fields in input documents posted to the anomaly\ndetection job. This count includes fields that are not used in the analysis.\nHowever, be aware that if you are using a datafeed, it extracts only the\nrequired fields from the documents it retrieves before posting them to the job.",
          "name": "data.input_fields"
        },
        {
          "aliases": [
            "dir",
            "dataInputRecords"
          ],
          "description": "The number of input documents posted to the anomaly detection job.",
          "name": "data.input_records"
        },
        {
          "aliases": [
            "did",
            "dataInvalidDates"
          ],
          "description": "The number of input documents with either a missing date field or a date\nthat could not be parsed.",
          "name": "data.invalid_dates"
        },
        {
          "aliases": [
            "dl",
            "dataLast"
          ],
          "description": "The timestamp at which data was last analyzed, according to server time.",
          "name": "data.last"
        },
        {
          "aliases": [
            "dleb",
            "dataLastEmptyBucket"
          ],
          "description": "The timestamp of the last bucket that did not contain any data.",
          "name": "data.last_empty_bucket"
        },
        {
          "aliases": [
            "dlsb",
            "dataLastSparseBucket"
          ],
          "description": "The timestamp of the last bucket that was considered sparse.",
          "name": "data.last_sparse_bucket"
        },
        {
          "aliases": [
            "dlr",
            "dataLatestRecord"
          ],
          "description": "The timestamp of the latest chronologically input document.",
          "name": "data.latest_record"
        },
        {
          "aliases": [
            "dmf",
            "dataMissingFields"
          ],
          "description": "The number of input documents that are missing a field that the anomaly\ndetection job is configured to analyze. Input documents with missing fields\nare still processed because it is possible that not all fields are missing.",
          "name": "data.missing_fields"
        },
        {
          "aliases": [
            "doot",
            "dataOutOfOrderTimestamps"
          ],
          "description": "The number of input documents that have a timestamp chronologically\npreceding the start of the current anomaly detection bucket offset by the\nlatency window. This information is applicable only when you provide data\nto the anomaly detection job by using the post data API. These out of order\ndocuments are discarded, since jobs require time series data to be in\nascending chronological order.",
          "name": "data.out_of_order_timestamps"
        },
        {
          "aliases": [
            "dpf",
            "dataProcessedFields"
          ],
          "description": "The total number of fields in all the documents that have been processed by\nthe anomaly detection job. Only fields that are specified in the detector\nconfiguration object contribute to this count. The timestamp is not\nincluded in this count.",
          "name": "data.processed_fields"
        },
        {
          "aliases": [
            "dpr",
            "dataProcessedRecords"
          ],
          "description": "The number of input documents that have been processed by the anomaly\ndetection job. This value includes documents with missing fields, since\nthey are nonetheless analyzed. If you use datafeeds and have aggregations\nin your search query, the processed record count is the number of\naggregation results processed, not the number of Elasticsearch documents.",
          "name": "data.processed_records"
        },
        {
          "aliases": [
            "dsb",
            "dataSparseBuckets"
          ],
          "description": "The number of buckets that contained few data points compared to the\nexpected number of data points.",
          "name": "data.sparse_buckets"
        },
        {
          "aliases": [
            "fmavg",
            "forecastsMemoryAvg"
          ],
          "description": "The average memory usage in bytes for forecasts related to the anomaly\ndetection job.",
          "name": "forecasts.memory.avg"
        },
        {
          "aliases": [
            "fmmax",
            "forecastsMemoryMax"
          ],
          "description": "The maximum memory usage in bytes for forecasts related to the anomaly\ndetection job.",
          "name": "forecasts.memory.max"
        },
        {
          "aliases": [
            "fmmin",
            "forecastsMemoryMin"
          ],
          "description": "The minimum memory usage in bytes for forecasts related to the anomaly\ndetection job.",
          "name": "forecasts.memory.min"
        },
        {
          "aliases": [
            "fmt",
            "forecastsMemoryTotal"
          ],
          "description": "The total memory usage in bytes for forecasts related to the anomaly\ndetection job.",
          "name": "forecasts.memory.total"
        },
        {
          "aliases": [
            "fravg",
            "forecastsRecordsAvg"
          ],
          "description": "The average number of `m`odel_forecast` documents written for forecasts\nrelated to the anomaly detection job.",
          "name": "forecasts.records.avg"
        },
        {
          "aliases": [
            "frmax",
            "forecastsRecordsMax"
          ],
          "description": "The maximum number of `model_forecast` documents written for forecasts\nrelated to the anomaly detection job.",
          "name": "forecasts.records.max"
        },
        {
          "aliases": [
            "frmin",
            "forecastsRecordsMin"
          ],
          "description": "The minimum number of `model_forecast` documents written for forecasts\nrelated to the anomaly detection job.",
          "name": "forecasts.records.min"
        },
        {
          "aliases": [
            "frt",
            "forecastsRecordsTotal"
          ],
          "description": "The total number of `model_forecast` documents written for forecasts\nrelated to the anomaly detection job.",
          "name": "forecasts.records.total"
        },
        {
          "aliases": [
            "ftavg",
            "forecastsTimeAvg"
          ],
          "description": "The average runtime in milliseconds for forecasts related to the anomaly\ndetection job.",
          "name": "forecasts.time.avg"
        },
        {
          "aliases": [
            "ftmax",
            "forecastsTimeMax"
          ],
          "description": "The maximum runtime in milliseconds for forecasts related to the anomaly\ndetection job.",
          "name": "forecasts.time.max"
        },
        {
          "aliases": [
            "ftmin",
            "forecastsTimeMin"
          ],
          "description": "The minimum runtime in milliseconds for forecasts related to the anomaly\ndetection job.",
          "name": "forecasts.time.min"
        },
        {
          "aliases": [
            "ftt",
            "forecastsTimeTotal"
          ],
          "description": "The total runtime in milliseconds for forecasts related to the anomaly\ndetection job.",
          "name": "forecasts.time.total"
        },
        {
          "aliases": [
            "ft",
            "forecastsTotal"
          ],
          "description": "The number of individual forecasts currently available for the job.",
          "name": "forecasts.total"
        },
        {
          "description": "Identifier for the anomaly detection job.",
          "name": "id"
        },
        {
          "aliases": [
            "mbaf",
            "modelBucketAllocationFailures"
          ],
          "description": "The number of buckets for which new entities in incoming data were not\nprocessed due to insufficient model memory.",
          "name": "model.bucket_allocation_failures"
        },
        {
          "aliases": [
            "mbf",
            "modelByFields"
          ],
          "description": "The number of by field values that were analyzed by the models. This value\nis cumulative for all detectors in the job.",
          "name": "model.by_fields"
        },
        {
          "aliases": [
            "mb",
            "modelBytes"
          ],
          "description": "The number of bytes of memory used by the models. This is the maximum value\nsince the last time the model was persisted. If the job is closed, this\nvalue indicates the latest size.",
          "name": "model.bytes"
        },
        {
          "aliases": [
            "mbe",
            "modelBytesExceeded"
          ],
          "description": "The number of bytes over the high limit for memory usage at the last\nallocation failure.",
          "name": "model.bytes_exceeded"
        },
        {
          "aliases": [
            "mcs",
            "modelCategorizationStatus"
          ],
          "description": "The status of categorization for the job: `ok` or `warn`. If `ok`,\ncategorization is performing acceptably well (or not being used at all). If\n`warn`, categorization is detecting a distribution of categories that\nsuggests the input data is inappropriate for categorization. Problems could\nbe that there is only one category, more than 90% of categories are rare,\nthe number of categories is greater than 50% of the number of categorized\ndocuments, there are no frequently matched categories, or more than 50% of\ncategories are dead.",
          "name": "model.categorization_status"
        },
        {
          "aliases": [
            "mcdc",
            "modelCategorizedDocCount"
          ],
          "description": "The number of documents that have had a field categorized.",
          "name": "model.categorized_doc_count"
        },
        {
          "aliases": [
            "mdcc",
            "modelDeadCategoryCount"
          ],
          "description": "The number of categories created by categorization that will never be\nassigned again because another categoryâ€™s definition makes it a superset of\nthe dead category. Dead categories are a side effect of the way\ncategorization has no prior training.",
          "name": "model.dead_category_count"
        },
        {
          "aliases": [
            "mdcc",
            "modelFailedCategoryCount"
          ],
          "description": "The number of times that categorization wanted to create a new category but\ncouldnâ€™t because the job had hit its model memory limit. This count does\nnot track which specific categories failed to be created. Therefore, you\ncannot use this value to determine the number of unique categories that\nwere missed.",
          "name": "model.failed_category_count"
        },
        {
          "aliases": [
            "mfcc",
            "modelFrequentCategoryCount"
          ],
          "description": "The number of categories that match more than 1% of categorized documents.",
          "name": "model.frequent_category_count"
        },
        {
          "aliases": [
            "mlt",
            "modelLogTime"
          ],
          "description": "The timestamp when the model stats were gathered, according to server time.",
          "name": "model.log_time"
        },
        {
          "aliases": [
            "mml",
            "modelMemoryLimit"
          ],
          "description": "The timestamp when the model stats were gathered, according to server time.",
          "name": "model.memory_limit"
        },
        {
          "aliases": [
            "mms",
            "modelMemoryStatus"
          ],
          "description": "The status of the mathematical models: `ok`, `soft_limit`, or `hard_limit`.\nIf `ok`, the models stayed below the configured value. If `soft_limit`, the\nmodels used more than 60% of the configured memory limit and older unused\nmodels will be pruned to free up space. Additionally, in categorization jobs\nno further category examples will be stored. If `hard_limit`, the models\nused more space than the configured memory limit. As a result, not all\nincoming data was processed.",
          "name": "model.memory_status"
        },
        {
          "aliases": [
            "mof",
            "modelOverFields"
          ],
          "description": "The number of over field values that were analyzed by the models. This\nvalue is cumulative for all detectors in the job.",
          "name": "model.over_fields"
        },
        {
          "aliases": [
            "mpf",
            "modelPartitionFields"
          ],
          "description": "The number of partition field values that were analyzed by the models. This\nvalue is cumulative for all detectors in the job.",
          "name": "model.partition_fields"
        },
        {
          "aliases": [
            "mrcc",
            "modelRareCategoryCount"
          ],
          "description": "The number of categories that match just one categorized document.",
          "name": "model.rare_category_count"
        },
        {
          "aliases": [
            "mt",
            "modelTimestamp"
          ],
          "description": "The timestamp of the last record when the model stats were gathered.",
          "name": "model.timestamp"
        },
        {
          "aliases": [
            "mtcc",
            "modelTotalCategoryCount"
          ],
          "description": "The number of categories created by categorization.",
          "name": "model.total_category_count"
        },
        {
          "aliases": [
            "na",
            "nodeAddress"
          ],
          "description": "The network address of the node that runs the job. This information is\navailable only for open jobs.",
          "name": "node.address"
        },
        {
          "aliases": [
            "ne",
            "nodeEphemeralId"
          ],
          "description": "The ephemeral ID of the node that runs the job. This information is\navailable only for open jobs.",
          "name": "node.ephemeral_id"
        },
        {
          "aliases": [
            "ni",
            "nodeId"
          ],
          "description": "The unique identifier of the node that runs the job. This information is\navailable only for open jobs.",
          "name": "node.id"
        },
        {
          "aliases": [
            "nn",
            "nodeName"
          ],
          "description": "The name of the node that runs the job. This information is available only\nfor open jobs.",
          "name": "node.name"
        },
        {
          "aliases": [
            "ot"
          ],
          "description": "For open jobs only, the elapsed time for which the job has been open.",
          "name": "opened_time"
        },
        {
          "aliases": [
            "s"
          ],
          "description": "The status of the anomaly detection job: `closed`, `closing`, `failed`,\n`opened`, or `opening`. If `closed`, the job finished successfully with its\nmodel state persisted. The job must be opened before it can accept further\ndata. If `closing`, the job close action is in progress and has not yet\ncompleted. A closing job cannot accept further data. If `failed`, the job\ndid not finish successfully due to an error. This situation can occur due\nto invalid input data, a fatal error occurring during the analysis, or an\nexternal interaction such as the process being killed by the Linux out of\nmemory (OOM) killer. If the job had irrevocably failed, it must be force\nclosed and then deleted. If the datafeed can be corrected, the job can be\nclosed and then re-opened. If `opened`, the job is available to receive and\nprocess data. If `opening`, the job open action is in progress and has not\nyet completed.",
          "name": "state"
        }
      ],
      "name": {
        "name": "CatAnomalyDetectorColumn",
        "namespace": "cat._types"
      },
      "specLocation": "cat/_types/CatBase.ts#L32-L401"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "CatAnonalyDetectorColumns",
        "namespace": "cat._types"
      },
      "specLocation": "cat/_types/CatBase.ts#L402-L404",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "CatAnomalyDetectorColumn",
              "namespace": "cat._types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "CatAnomalyDetectorColumn",
                "namespace": "cat._types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "assignment_explanation"
          ],
          "description": "For started datafeeds only, contains messages relating to the selection of\na node.",
          "name": "ae"
        },
        {
          "aliases": [
            "buckets.count",
            "bucketsCount"
          ],
          "description": "The number of buckets processed.",
          "name": "bc"
        },
        {
          "description": "A numerical character string that uniquely identifies the datafeed.",
          "name": "id"
        },
        {
          "aliases": [
            "node.address",
            "nodeAddress"
          ],
          "description": "For started datafeeds only, the network address of the node where the\ndatafeed is started.",
          "name": "na"
        },
        {
          "aliases": [
            "node.ephemeral_id",
            "nodeEphemeralId"
          ],
          "description": "For started datafeeds only, the ephemeral ID of the node where the\ndatafeed is started.",
          "name": "ne"
        },
        {
          "aliases": [
            "node.id",
            "nodeId"
          ],
          "description": "For started datafeeds only, the unique identifier of the node where the\ndatafeed is started.",
          "name": "ni"
        },
        {
          "aliases": [
            "node.name",
            "nodeName"
          ],
          "description": "For started datafeeds only, the name of the node where the datafeed is\nstarted.",
          "name": "nn"
        },
        {
          "aliases": [
            "search.bucket_avg",
            "searchBucketAvg"
          ],
          "description": "The average search time per bucket, in milliseconds.",
          "name": "sba"
        },
        {
          "aliases": [
            "search.count",
            "searchCount"
          ],
          "description": "The number of searches run by the datafeed.",
          "name": "sc"
        },
        {
          "aliases": [
            "search.exp_avg_hour",
            "searchExpAvgHour"
          ],
          "description": "The exponential average search time per hour, in milliseconds.",
          "name": "seah"
        },
        {
          "aliases": [
            "search.time",
            "searchTime"
          ],
          "description": "The total time the datafeed spent searching, in milliseconds.",
          "name": "st"
        },
        {
          "aliases": [
            "state"
          ],
          "description": "The status of the datafeed: `starting`, `started`, `stopping`, or `stopped`.\nIf `starting`, the datafeed has been requested to start but has not yet\nstarted. If `started`, the datafeed is actively receiving data. If\n`stopping`, the datafeed has been requested to stop gracefully and is\ncompleting its final action. If `stopped`, the datafeed is stopped and will\nnot receive data until it is re-started.",
          "name": "s"
        }
      ],
      "name": {
        "name": "CatDatafeedColumn",
        "namespace": "cat._types"
      },
      "specLocation": "cat/_types/CatBase.ts#L405-L471"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "CatDatafeedColumns",
        "namespace": "cat._types"
      },
      "specLocation": "cat/_types/CatBase.ts#L559-L559",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "CatDatafeedColumn",
              "namespace": "cat._types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "CatDatafeedColumn",
                "namespace": "cat._types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "ae"
          ],
          "description": "Contains messages relating to the selection of a node.",
          "name": "assignment_explanation"
        },
        {
          "aliases": [
            "ct",
            "createTime"
          ],
          "description": "The time when the data frame analytics job was created.",
          "name": "create_time"
        },
        {
          "aliases": [
            "d"
          ],
          "description": "A description of a job.",
          "name": "description"
        },
        {
          "aliases": [
            "di",
            "destIndex"
          ],
          "description": "Name of the destination index.",
          "name": "dest_index"
        },
        {
          "aliases": [
            "fr",
            "failureReason"
          ],
          "description": "Contains messages about the reason why a data frame analytics job failed.",
          "name": "failure_reason"
        },
        {
          "description": "Identifier for the data frame analytics job.",
          "name": "id"
        },
        {
          "aliases": [
            "mml",
            "modelMemoryLimit"
          ],
          "description": "The approximate maximum amount of memory resources that are permitted for\nthe data frame analytics job.",
          "name": "model_memory_limit"
        },
        {
          "aliases": [
            "na",
            "nodeAddress"
          ],
          "description": "The network address of the node that the data frame analytics job is\nassigned to.",
          "name": "node.address"
        },
        {
          "aliases": [
            "ne",
            "nodeEphemeralId"
          ],
          "description": "The ephemeral ID of the node that the data frame analytics job is assigned\nto.",
          "name": "node.ephemeral_id"
        },
        {
          "aliases": [
            "ni",
            "nodeId"
          ],
          "description": "The unique identifier of the node that the data frame analytics job is\nassigned to.",
          "name": "node.id"
        },
        {
          "aliases": [
            "nn",
            "nodeName"
          ],
          "description": "The name of the node that the data frame analytics job is assigned to.",
          "name": "node.name"
        },
        {
          "aliases": [
            "p"
          ],
          "description": "The progress report of the data frame analytics job by phase.",
          "name": "progress"
        },
        {
          "aliases": [
            "si",
            "sourceIndex"
          ],
          "description": "Name of the source index.",
          "name": "source_index"
        },
        {
          "aliases": [
            "s"
          ],
          "description": "Current state of the data frame analytics job.",
          "name": "state"
        },
        {
          "aliases": [
            "t"
          ],
          "description": "The type of analysis that the data frame analytics job performs.",
          "name": "type"
        },
        {
          "aliases": [
            "v"
          ],
          "description": "The Elasticsearch version number in which the data frame analytics job was\ncreated.",
          "name": "version"
        }
      ],
      "name": {
        "name": "CatDfaColumn",
        "namespace": "cat._types"
      },
      "specLocation": "cat/_types/CatBase.ts#L472-L557"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "CatDfaColumns",
        "namespace": "cat._types"
      },
      "specLocation": "cat/_types/CatBase.ts#L558-L558",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "CatDfaColumn",
              "namespace": "cat._types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "CatDfaColumn",
                "namespace": "cat._types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "ct"
          ],
          "description": "The time when the trained model was created.",
          "name": "create_time"
        },
        {
          "aliases": [
            "c",
            "createdBy"
          ],
          "description": "Information on the creator of the trained model.",
          "name": "created_by"
        },
        {
          "aliases": [
            "df",
            "dataFrameAnalytics",
            "dfid"
          ],
          "description": "Identifier for the data frame analytics job that created the model. Only\ndisplayed if it is still available.",
          "name": "data_frame_analytics_id"
        },
        {
          "aliases": [
            "d"
          ],
          "description": "The description of the trained model.",
          "name": "description"
        },
        {
          "aliases": [
            "hs",
            "modelHeapSize"
          ],
          "description": "The estimated heap size to keep the trained model in memory.",
          "name": "heap_size"
        },
        {
          "description": "Identifier for the trained model.",
          "name": "id"
        },
        {
          "aliases": [
            "ic",
            "ingestCount"
          ],
          "description": "The total number of documents that are processed by the model.",
          "name": "ingest.count"
        },
        {
          "aliases": [
            "icurr",
            "ingestCurrent"
          ],
          "description": "The total number of document that are currently being handled by the\ntrained model.",
          "name": "ingest.current"
        },
        {
          "aliases": [
            "if",
            "ingestFailed"
          ],
          "description": "The total number of failed ingest attempts with the trained model.",
          "name": "ingest.failed"
        },
        {
          "aliases": [
            "ip",
            "ingestPipelines"
          ],
          "description": "The total number of ingest pipelines that are referencing the trained\nmodel.",
          "name": "ingest.pipelines"
        },
        {
          "aliases": [
            "it",
            "ingestTime"
          ],
          "description": "The total time that is spent processing documents with the trained model.",
          "name": "ingest.time"
        },
        {
          "aliases": [
            "l"
          ],
          "description": "The license level of the trained model.",
          "name": "license"
        },
        {
          "aliases": [
            "o",
            "modelOperations"
          ],
          "description": "The estimated number of operations to use the trained model. This number\nhelps measuring the computational complexity of the model.",
          "name": "operations"
        },
        {
          "aliases": [
            "v"
          ],
          "description": "The Elasticsearch version number in which the trained model was created.",
          "name": "version"
        }
      ],
      "name": {
        "name": "CatTrainedModelsColumn",
        "namespace": "cat._types"
      },
      "specLocation": "cat/_types/CatBase.ts#L561-L635"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "CatTrainedModelsColumns",
        "namespace": "cat._types"
      },
      "specLocation": "cat/_types/CatBase.ts#L636-L638",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "CatTrainedModelsColumn",
              "namespace": "cat._types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "CatTrainedModelsColumn",
                "namespace": "cat._types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "cldt"
          ],
          "description": "The timestamp when changes were last detected in the source indices.",
          "name": "changes_last_detection_time"
        },
        {
          "aliases": [
            "cp"
          ],
          "description": "The sequence number for the checkpoint.",
          "name": "checkpoint"
        },
        {
          "aliases": [
            "cdtea",
            "checkpointTimeExpAvg"
          ],
          "description": "Exponential moving average of the duration of the checkpoint, in\nmilliseconds.",
          "name": "checkpoint_duration_time_exp_avg"
        },
        {
          "aliases": [
            "c",
            "checkpointProgress"
          ],
          "description": "The progress of the next checkpoint that is currently in progress.",
          "name": "checkpoint_progress"
        },
        {
          "aliases": [
            "ct",
            "createTime"
          ],
          "description": "The time the transform was created.",
          "name": "create_time"
        },
        {
          "aliases": [
            "dtime"
          ],
          "description": "The amount of time spent deleting, in milliseconds.",
          "name": "delete_time"
        },
        {
          "aliases": [
            "d"
          ],
          "description": "The description of the transform.",
          "name": "description"
        },
        {
          "aliases": [
            "di",
            "destIndex"
          ],
          "description": "The destination index for the transform. The mappings of the destination\nindex are deduced based on the source fields when possible. If alternate\nmappings are required, use the Create index API prior to starting the\ntransform.",
          "name": "dest_index"
        },
        {
          "aliases": [
            "docd"
          ],
          "description": "The number of documents that have been deleted from the destination index\ndue to the retention policy for this transform.",
          "name": "documents_deleted"
        },
        {
          "aliases": [
            "doci"
          ],
          "description": "The number of documents that have been indexed into the destination index\nfor the transform.",
          "name": "documents_indexed"
        },
        {
          "aliases": [
            "dps"
          ],
          "description": "Specifies a limit on the number of input documents per second. This setting\nthrottles the transform by adding a wait time between search requests. The\ndefault value is `null`, which disables throttling.",
          "name": "docs_per_second"
        },
        {
          "aliases": [
            "docp"
          ],
          "description": "The number of documents that have been processed from the source index of\nthe transform.",
          "name": "documents_processed"
        },
        {
          "aliases": [
            "f"
          ],
          "description": "The interval between checks for changes in the source indices when the\ntransform is running continuously. Also determines the retry interval in\nthe event of transient failures while the transform is searching or\nindexing. The minimum value is `1s` and the maximum is `1h`. The default\nvalue is `1m`.",
          "name": "frequency"
        },
        {
          "description": "Identifier for the transform.",
          "name": "id"
        },
        {
          "aliases": [
            "if"
          ],
          "description": "The number of indexing failures.",
          "name": "index_failure"
        },
        {
          "aliases": [
            "itime"
          ],
          "description": "The amount of time spent indexing, in milliseconds.",
          "name": "index_time"
        },
        {
          "aliases": [
            "it"
          ],
          "description": "The number of index operations.",
          "name": "index_total"
        },
        {
          "aliases": [
            "idea"
          ],
          "description": "Exponential moving average of the number of new documents that have been\nindexed.",
          "name": "indexed_documents_exp_avg"
        },
        {
          "aliases": [
            "lst",
            "lastSearchTime"
          ],
          "description": "The timestamp of the last search in the source indices. This field is only\nshown if the transform is running.",
          "name": "last_search_time"
        },
        {
          "aliases": [
            "mpsz"
          ],
          "description": "Defines the initial page size to use for the composite aggregation for each\ncheckpoint. If circuit breaker exceptions occur, the page size is\ndynamically adjusted to a lower value. The minimum value is `10` and the\nmaximum is `65,536`. The default value is `500`.",
          "name": "max_page_search_size"
        },
        {
          "aliases": [
            "pp"
          ],
          "description": "The number of search or bulk index operations processed. Documents are\nprocessed in batches instead of individually.",
          "name": "pages_processed"
        },
        {
          "aliases": [
            "p"
          ],
          "description": "The unique identifier for an ingest pipeline.",
          "name": "pipeline"
        },
        {
          "aliases": [
            "pdea"
          ],
          "description": "Exponential moving average of the number of documents that have been\nprocessed.",
          "name": "processed_documents_exp_avg"
        },
        {
          "aliases": [
            "pt"
          ],
          "description": "The amount of time spent processing results, in milliseconds.",
          "name": "processing_time"
        },
        {
          "aliases": [
            "r"
          ],
          "description": "If a transform has a `failed` state, this property provides details about\nthe reason for the failure.",
          "name": "reason"
        },
        {
          "aliases": [
            "sf"
          ],
          "description": "The number of search failures.",
          "name": "search_failure"
        },
        {
          "aliases": [
            "stime"
          ],
          "description": "The amount of time spent searching, in milliseconds.",
          "name": "search_time"
        },
        {
          "aliases": [
            "st"
          ],
          "description": "The number of search operations on the source index for the transform.",
          "name": "search_total"
        },
        {
          "aliases": [
            "si",
            "sourceIndex"
          ],
          "description": "The source indices for the transform. It can be a single index, an index\npattern (for example, `\"my-index-*\"`), an array of indices (for example,\n`[\"my-index-000001\", \"my-index-000002\"]`), or an array of index patterns\n(for example, `[\"my-index-*\", \"my-other-index-*\"]`. For remote indices use\nthe syntax `\"remote_name:index_name\"`. If any indices are in remote\nclusters then the master node and at least one transform node must have the\n`remote_cluster_client` node role.",
          "name": "source_index"
        },
        {
          "aliases": [
            "s"
          ],
          "description": "The status of the transform, which can be one of the following values:\n\n* `aborting`: The transform is aborting.\n* `failed`: The transform failed. For more information about the failure,\ncheck the reason field.\n* `indexing`: The transform is actively processing data and creating new\ndocuments.\n* `started`: The transform is running but not actively indexing data.\n* `stopped`: The transform is stopped.\n* `stopping`: The transform is stopping.",
          "name": "state"
        },
        {
          "aliases": [
            "tt"
          ],
          "description": "Indicates the type of transform: `batch` or `continuous`.",
          "name": "transform_type"
        },
        {
          "aliases": [
            "tc"
          ],
          "description": "The number of times the transform has been triggered by the scheduler. For\nexample, the scheduler triggers the transform indexer to check for updates\nor ingest new data at an interval specified in the `frequency` property.",
          "name": "trigger_count"
        },
        {
          "aliases": [
            "v"
          ],
          "description": "The version of Elasticsearch that existed on the node when the transform\nwas created.",
          "name": "version"
        }
      ],
      "name": {
        "name": "CatTransformColumn",
        "namespace": "cat._types"
      },
      "specLocation": "cat/_types/CatBase.ts#L640-L844"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "CatTransformColumns",
        "namespace": "cat._types"
      },
      "specLocation": "cat/_types/CatBase.ts#L845-L845",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "CatTransformColumn",
              "namespace": "cat._types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "CatTransformColumn",
                "namespace": "cat._types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "active"
        },
        {
          "name": "paused"
        }
      ],
      "name": {
        "name": "FollowerIndexStatus",
        "namespace": "ccr.follow_info"
      },
      "specLocation": "ccr/follow_info/types.ts#L32-L35"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "NO"
        },
        {
          "name": "YES"
        },
        {
          "name": "THROTTLE"
        },
        {
          "name": "ALWAYS"
        }
      ],
      "name": {
        "name": "AllocationExplainDecision",
        "namespace": "cluster.allocation_explain"
      },
      "specLocation": "cluster/allocation_explain/types.ts#L33-L38"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "yes"
        },
        {
          "name": "no"
        },
        {
          "name": "worse_balance"
        },
        {
          "name": "throttled"
        },
        {
          "name": "awaiting_info"
        },
        {
          "name": "allocation_delayed"
        },
        {
          "name": "no_valid_shard_copy"
        },
        {
          "name": "no_attempt"
        }
      ],
      "name": {
        "name": "Decision",
        "namespace": "cluster.allocation_explain"
      },
      "specLocation": "cluster/allocation_explain/types.ts#L92-L101"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "INDEX_CREATED"
        },
        {
          "name": "CLUSTER_RECOVERED"
        },
        {
          "name": "INDEX_REOPENED"
        },
        {
          "name": "DANGLING_INDEX_IMPORTED"
        },
        {
          "name": "NEW_INDEX_RESTORED"
        },
        {
          "name": "EXISTING_INDEX_RESTORED"
        },
        {
          "name": "REPLICA_ADDED"
        },
        {
          "name": "ALLOCATION_FAILED"
        },
        {
          "name": "NODE_LEFT"
        },
        {
          "name": "REROUTE_CANCELLED"
        },
        {
          "name": "REINITIALIZED"
        },
        {
          "name": "REALLOCATED_REPLICA"
        },
        {
          "name": "PRIMARY_FAILED"
        },
        {
          "name": "FORCED_EMPTY_PRIMARY"
        },
        {
          "name": "MANUAL_ALLOCATION"
        }
      ],
      "name": {
        "name": "UnassignedInformationReason",
        "namespace": "cluster.allocation_explain"
      },
      "specLocation": "cluster/allocation_explain/types.ts#L138-L157"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ClusterRemoteInfo",
        "namespace": "cluster.remote_info"
      },
      "specLocation": "cluster/remote_info/ClusterRemoteInfoResponse.ts#L29-L30",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "ClusterRemoteSniffInfo",
              "namespace": "cluster.remote_info"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ClusterRemoteProxyInfo",
              "namespace": "cluster.remote_info"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "internal_tag",
        "tag": "mode"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "ClusterRemoteSniffInfo",
        "namespace": "cluster.remote_info"
      },
      "properties": [
        {
          "name": "mode",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "sniff"
          }
        },
        {
          "name": "connected",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_connections_per_cluster",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "num_nodes_connected",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "initial_connect_timeout",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "skip_unavailable",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "seeds",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "cluster/remote_info/ClusterRemoteInfoResponse.ts#L32-L40"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ClusterRemoteProxyInfo",
        "namespace": "cluster.remote_info"
      },
      "properties": [
        {
          "name": "mode",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "proxy"
          }
        },
        {
          "name": "connected",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "initial_connect_timeout",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "skip_unavailable",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "proxy_address",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "server_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "num_proxy_sockets_connected",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_proxy_socket_connections",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cluster/remote_info/ClusterRemoteInfoResponse.ts#L42-L51"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ConnectorConfiguration",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/Connector.ts#L101-L104",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "string",
            "namespace": "_builtins"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "ConnectorConfigProperties",
            "namespace": "connector._types"
          }
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "ConnectorConfigProperties",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "category",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "default_value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScalarValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "depends_on",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Dependency",
                "namespace": "connector._types"
              }
            }
          }
        },
        {
          "name": "display",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DisplayType",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "label",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "options",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SelectOption",
                "namespace": "connector._types"
              }
            }
          }
        },
        {
          "name": "order",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "placeholder",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "required",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "sensitive",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "tooltip",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConnectorFieldType",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "ui_restrictions",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "validations",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Validation",
                "namespace": "connector._types"
              }
            }
          }
        },
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "user_defined_value"
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L83-L99"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Dependency",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScalarValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L30-L33"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "textbox"
        },
        {
          "name": "textarea"
        },
        {
          "name": "numeric"
        },
        {
          "name": "toggle"
        },
        {
          "name": "dropdown"
        }
      ],
      "name": {
        "name": "DisplayType",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/Connector.ts#L35-L41"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SelectOption",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "label",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScalarValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L25-L28"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "str"
        },
        {
          "name": "int"
        },
        {
          "name": "list"
        },
        {
          "name": "bool"
        }
      ],
      "name": {
        "name": "ConnectorFieldType",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/Connector.ts#L43-L48"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Validation",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/Connector.ts#L50-L56",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "LessThanValidation",
              "namespace": "connector._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GreaterThanValidation",
              "namespace": "connector._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ListTypeValidation",
              "namespace": "connector._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "IncludedInValidation",
              "namespace": "connector._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "RegexValidation",
              "namespace": "connector._types"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "internal_tag",
        "tag": "type"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "LessThanValidation",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "less_than"
          }
        },
        {
          "name": "constraint",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L58-L61"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GreaterThanValidation",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "greater_than"
          }
        },
        {
          "name": "constraint",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L63-L66"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ListTypeValidation",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "list_type"
          }
        },
        {
          "name": "constraint",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L68-L71"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IncludedInValidation",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "included_in"
          }
        },
        {
          "name": "constraint",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ScalarValue",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L73-L76"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RegexValidation",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "regex"
          }
        },
        {
          "name": "constraint",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L78-L81"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ConnectorCustomScheduling",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/Connector.ts#L128-L128",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "string",
            "namespace": "_builtins"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "CustomScheduling",
            "namespace": "connector._types"
          }
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "CustomScheduling",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "configuration_overrides",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CustomSchedulingConfigurationOverrides",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "enabled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "interval",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "last_synced",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L120-L126"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CustomSchedulingConfigurationOverrides",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "max_crawl_depth",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "sitemap_discovery_disabled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "domain_allowlist",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "sitemap_urls",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "seed_urls",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L112-L118"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "created"
        },
        {
          "name": "needs_configuration"
        },
        {
          "name": "configured"
        },
        {
          "name": "connected"
        },
        {
          "name": "error"
        }
      ],
      "name": {
        "name": "ConnectorStatus",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/Connector.ts#L130-L136"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "exclude"
        },
        {
          "name": "include"
        }
      ],
      "name": {
        "name": "FilteringPolicy",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/Connector.ts#L155-L158"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "contains"
        },
        {
          "name": "ends_with"
        },
        {
          "name": "equals"
        },
        {
          "name": "regex"
        },
        {
          "name": "starts_with"
        },
        {
          "codegenName": "greater_than",
          "name": ">"
        },
        {
          "codegenName": "less_than",
          "name": "<"
        }
      ],
      "name": {
        "name": "FilteringRuleRule",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/Connector.ts#L160-L168"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "edited"
        },
        {
          "name": "invalid"
        },
        {
          "name": "valid"
        }
      ],
      "name": {
        "name": "FilteringValidationState",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/Connector.ts#L186-L190"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "on_demand"
        },
        {
          "name": "scheduled"
        }
      ],
      "name": {
        "name": "SyncJobTriggerMethod",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/SyncJob.ts#L48-L51"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "full"
        },
        {
          "name": "incremental"
        },
        {
          "name": "access_control"
        }
      ],
      "name": {
        "name": "SyncJobType",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/SyncJob.ts#L42-L46"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "canceling"
        },
        {
          "name": "canceled"
        },
        {
          "name": "completed"
        },
        {
          "name": "error"
        },
        {
          "name": "in_progress"
        },
        {
          "name": "pending"
        },
        {
          "name": "suspended"
        }
      ],
      "name": {
        "name": "SyncStatus",
        "namespace": "connector._types"
      },
      "specLocation": "connector/_types/Connector.ts#L138-L146"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "geo_match"
        },
        {
          "name": "match"
        },
        {
          "name": "range"
        }
      ],
      "name": {
        "name": "PolicyType",
        "namespace": "enrich._types"
      },
      "specLocation": "enrich/_types/Policy.ts#L28-L32"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "SCHEDULED"
        },
        {
          "name": "RUNNING"
        },
        {
          "name": "COMPLETE"
        },
        {
          "name": "FAILED"
        }
      ],
      "name": {
        "name": "EnrichPolicyPhase",
        "namespace": "enrich.execute_policy"
      },
      "specLocation": "enrich/execute_policy/types.ts#L24-L29"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Return the most recent matches, similar to the Unix tail command.",
          "name": "tail"
        },
        {
          "description": "Return the earliest matches, similar to the Unix head command.",
          "name": "head"
        }
      ],
      "name": {
        "name": "ResultPosition",
        "namespace": "eql.search"
      },
      "specLocation": "eql/search/types.ts#L20-L32"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "TableValuesIntegerValue",
        "namespace": "esql._types"
      },
      "specLocation": "esql/_types/TableValuesContainer.ts#L30-L30",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "TableValuesKeywordValue",
        "namespace": "esql._types"
      },
      "specLocation": "esql/_types/TableValuesContainer.ts#L31-L31",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "TableValuesLongDouble",
        "namespace": "esql._types"
      },
      "specLocation": "esql/_types/TableValuesContainer.ts#L33-L33",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "TableValuesLongValue",
        "namespace": "esql._types"
      },
      "specLocation": "esql/_types/TableValuesContainer.ts#L32-L32",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "csv"
        },
        {
          "name": "json"
        },
        {
          "name": "tsv"
        },
        {
          "name": "txt"
        },
        {
          "name": "yaml"
        },
        {
          "name": "cbor"
        },
        {
          "name": "smile"
        },
        {
          "name": "arrow"
        }
      ],
      "name": {
        "name": "EsqlFormat",
        "namespace": "esql.query"
      },
      "specLocation": "esql/query/QueryRequest.ts#L91-L100"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Checkpoint",
        "namespace": "fleet._types"
      },
      "specLocation": "fleet/_types/Checkpoints.ts#L22-L22",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "long",
          "namespace": "_types"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "LifecycleExplain",
        "namespace": "ilm.explain_lifecycle"
      },
      "specLocation": "ilm/explain_lifecycle/types.ts#L59-L62",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "LifecycleExplainManaged",
              "namespace": "ilm.explain_lifecycle"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LifecycleExplainUnmanaged",
              "namespace": "ilm.explain_lifecycle"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "internal_tag",
        "tag": "managed"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "LifecycleExplainManaged",
        "namespace": "ilm.explain_lifecycle"
      },
      "properties": [
        {
          "name": "action",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "action_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "action_time_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "age",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "failed_step",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "failed_step_retry_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_creation_date",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_creation_date_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "is_auto_retryable_error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "lifecycle_date",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "lifecycle_date_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "managed",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": true
          }
        },
        {
          "name": "phase",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "phase_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "phase_time_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "policy",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "step",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "step_info",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "step_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "step_time_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "phase_execution",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "LifecycleExplainPhaseExecution",
              "namespace": "ilm.explain_lifecycle"
            }
          }
        },
        {
          "name": "time_since_index_creation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ilm/explain_lifecycle/types.ts#L26-L52"
    },
    {
      "kind": "interface",
      "name": {
        "name": "LifecycleExplainPhaseExecution",
        "namespace": "ilm.explain_lifecycle"
      },
      "properties": [
        {
          "name": "policy",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "version",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "modified_date_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ilm/explain_lifecycle/types.ts#L64-L68"
    },
    {
      "kind": "interface",
      "name": {
        "name": "LifecycleExplainUnmanaged",
        "namespace": "ilm.explain_lifecycle"
      },
      "properties": [
        {
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "managed",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": false
          }
        }
      ],
      "specLocation": "ilm/explain_lifecycle/types.ts#L54-L57"
    },
    {
      "esQuirk": "This is a boolean that evolved into an enum. ES also accepts plain booleans for true and false.",
      "kind": "enum",
      "members": [
        {
          "name": "true"
        },
        {
          "name": "false"
        },
        {
          "name": "checksum"
        }
      ],
      "name": {
        "name": "IndexCheckOnStartup",
        "namespace": "indices._types"
      },
      "specLocation": "indices/_types/IndexSettings.ts#L262-L269"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "all"
        },
        {
          "name": "primaries"
        },
        {
          "name": "new_primaries"
        },
        {
          "name": "none"
        }
      ],
      "name": {
        "name": "IndexRoutingAllocationOptions",
        "namespace": "indices._types"
      },
      "specLocation": "indices/_types/IndexRouting.ts#L38-L43"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "all"
        },
        {
          "name": "primaries"
        },
        {
          "name": "replicas"
        },
        {
          "name": "none"
        }
      ],
      "name": {
        "name": "IndexRoutingRebalanceOptions",
        "namespace": "indices._types"
      },
      "specLocation": "indices/_types/IndexRouting.ts#L45-L50"
    },
    {
      "kind": "enum",
      "members": [
        {
          "codegenName": "ilm",
          "name": "Index Lifecycle Management"
        },
        {
          "codegenName": "datastream",
          "name": "Data stream lifecycle"
        },
        {
          "codegenName": "unmanaged",
          "name": "Unmanaged"
        }
      ],
      "name": {
        "name": "ManagedBy",
        "namespace": "indices._types"
      },
      "specLocation": "indices/_types/DataStream.ts#L32-L37"
    },
    {
      "kind": "enum",
      "members": [
        {
          "codegenName": "last",
          "name": "_last"
        },
        {
          "codegenName": "first",
          "name": "_first"
        }
      ],
      "name": {
        "name": "SegmentSortMissing",
        "namespace": "indices._types"
      },
      "specLocation": "indices/_types/IndexSegmentSort.ts#L43-L46"
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "MIN"
          ],
          "name": "min"
        },
        {
          "aliases": [
            "MAX"
          ],
          "name": "max"
        }
      ],
      "name": {
        "name": "SegmentSortMode",
        "namespace": "indices._types"
      },
      "specLocation": "indices/_types/IndexSegmentSort.ts#L36-L41"
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "ASC"
          ],
          "name": "asc"
        },
        {
          "aliases": [
            "DESC"
          ],
          "name": "desc"
        }
      ],
      "name": {
        "name": "SegmentSortOrder",
        "namespace": "indices._types"
      },
      "specLocation": "indices/_types/IndexSegmentSort.ts#L29-L34"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "SettingsSimilarity",
        "namespace": "indices._types"
      },
      "specLocation": "indices/_types/IndexSettings.ts#L171-L182",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "SettingsSimilarityBm25",
              "namespace": "indices._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SettingsSimilarityBoolean",
              "namespace": "indices._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SettingsSimilarityDfi",
              "namespace": "indices._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SettingsSimilarityDfr",
              "namespace": "indices._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SettingsSimilarityIb",
              "namespace": "indices._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SettingsSimilarityLmd",
              "namespace": "indices._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SettingsSimilarityLmj",
              "namespace": "indices._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SettingsSimilarityScripted",
              "namespace": "indices._types"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "internal_tag",
        "tag": "type"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsSimilarityBm25",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "BM25"
          }
        },
        {
          "name": "b",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "discount_overlaps",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "k1",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L188-L193"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsSimilarityBoolean",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "boolean"
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L184-L186"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsSimilarityDfi",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "DFI"
          }
        },
        {
          "name": "independence_measure",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DFIIndependenceMeasure",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L195-L198"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsSimilarityDfr",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "DFR"
          }
        },
        {
          "name": "after_effect",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DFRAfterEffect",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "basic_model",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DFRBasicModel",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "normalization",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Normalization",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L200-L205"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsSimilarityIb",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "IB"
          }
        },
        {
          "name": "distribution",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IBDistribution",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "lambda",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IBLambda",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "normalization",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Normalization",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L207-L212"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsSimilarityLmd",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "LMDirichlet"
          }
        },
        {
          "name": "mu",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L214-L217"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsSimilarityLmj",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "LMJelinekMercer"
          }
        },
        {
          "name": "lambda",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L219-L222"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsSimilarityScripted",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "scripted"
          }
        },
        {
          "name": "script",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "weight_script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L224-L228"
    },
    {
      "isOpen": true,
      "kind": "enum",
      "members": [
        {
          "description": "Default file system implementation. This will pick the best implementation depending on the operating environment, which\nis currently hybridfs on all supported systems but is subject to change.",
          "name": "fs"
        },
        {
          "description": "The NIO FS type stores the shard index on the file system (maps to Lucene NIOFSDirectory) using NIO. It allows multiple\nthreads to read from the same file concurrently. It is not recommended on Windows because of a bug in the SUN Java\nimplementation and disables some optimizations for heap memory usage.",
          "name": "niofs"
        },
        {
          "description": "The MMap FS type stores the shard index on the file system (maps to Lucene MMapDirectory) by mapping a file into\nmemory (mmap). Memory mapping uses up a portion of the virtual memory address space in your process equal to the size\nof the file being mapped. Before using this class, be sure you have allowed plenty of virtual address space.",
          "name": "mmapfs"
        },
        {
          "description": "The hybridfs type is a hybrid of niofs and mmapfs, which chooses the best file system type for each type of file\nbased on the read access pattern. Currently only the Lucene term dictionary, norms and doc values files are memory\nmapped. All other files are opened using Lucene NIOFSDirectory. Similarly to mmapfs be sure you have allowed\nplenty of virtual address space.",
          "name": "hybridfs"
        }
      ],
      "name": {
        "name": "StorageType",
        "namespace": "indices._types"
      },
      "specLocation": "indices/_types/IndexSettings.ts#L520-L548"
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "REQUEST"
          ],
          "description": "(default) fsync and commit after every request. In the event of hardware failure, all acknowledged writes\nwill already have been committed to disk.",
          "name": "request"
        },
        {
          "aliases": [
            "ASYNC"
          ],
          "description": "fsync and commit in the background every sync_interval. In the event of a failure, all acknowledged writes\nsince the last automatic commit will be discarded.",
          "name": "async"
        }
      ],
      "name": {
        "name": "TranslogDurability",
        "namespace": "indices._types"
      },
      "specLocation": "indices/_types/IndexSettings.ts#L365-L380"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "metadata"
        },
        {
          "name": "read"
        },
        {
          "name": "read_only"
        },
        {
          "name": "write"
        }
      ],
      "name": {
        "name": "IndicesBlockOptions",
        "namespace": "indices.add_block"
      },
      "specLocation": "indices/add_block/IndicesAddBlockRequest.ts#L45-L50"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "TextToAnalyze",
        "namespace": "indices.analyze"
      },
      "specLocation": "indices/analyze/types.ts#L69-L69",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "aliases"
        },
        {
          "name": "mappings"
        },
        {
          "name": "settings"
        }
      ],
      "name": {
        "name": "Feature",
        "namespace": "indices.get"
      },
      "specLocation": "indices/get/IndicesGetRequest.ts#L91-L95"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Features",
        "namespace": "indices.get"
      },
      "specLocation": "indices/get/IndicesGetRequest.ts#L96-L96",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "Feature",
              "namespace": "indices.get"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Feature",
                "namespace": "indices.get"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "primary"
        },
        {
          "name": "replica"
        },
        {
          "name": "unused"
        }
      ],
      "name": {
        "name": "ShardStoreAllocation",
        "namespace": "indices.shard_stores"
      },
      "specLocation": "indices/shard_stores/types.ts#L47-L51"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "The primary shard and all replica shards are assigned.",
          "name": "green"
        },
        {
          "description": "One or more replica shards are unassigned.",
          "name": "yellow"
        },
        {
          "description": "The primary shard is unassigned.",
          "name": "red"
        },
        {
          "description": "Return all shards, regardless of health status.",
          "name": "all"
        }
      ],
      "name": {
        "name": "ShardStoreStatus",
        "namespace": "indices.shard_stores"
      },
      "specLocation": "indices/shard_stores/types.ts#L62-L71"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "open"
        },
        {
          "name": "close"
        }
      ],
      "name": {
        "name": "IndexMetadataState",
        "namespace": "indices.stats"
      },
      "specLocation": "indices/stats/types.ts#L225-L232"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "UNASSIGNED"
        },
        {
          "name": "INITIALIZING"
        },
        {
          "name": "STARTED"
        },
        {
          "name": "RELOCATING"
        }
      ],
      "name": {
        "name": "ShardRoutingState",
        "namespace": "indices.stats"
      },
      "specLocation": "indices/stats/types.ts#L169-L174"
    },
    {
      "description": "Text Embedding results containing bytes are represented as Dense\nVectors of bytes.",
      "kind": "type_alias",
      "name": {
        "name": "DenseByteVector",
        "namespace": "inference._types"
      },
      "specLocation": "inference/_types/Results.ts#L40-L44",
      "type": {
        "kind": "array_of",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "byte",
            "namespace": "_types"
          }
        }
      }
    },
    {
      "description": "Text Embedding results are represented as Dense Vectors\nof floats.",
      "kind": "type_alias",
      "name": {
        "name": "DenseVector",
        "namespace": "inference._types"
      },
      "specLocation": "inference/_types/Results.ts#L30-L34",
      "type": {
        "kind": "array_of",
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "float",
            "namespace": "_types"
          }
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ServiceSettings",
        "namespace": "inference._types"
      },
      "specLocation": "inference/_types/Services.ts#L55-L55",
      "type": {
        "kind": "user_defined_value"
      }
    },
    {
      "description": "Sparse Embedding tokens are represented as a dictionary\nof string to double.",
      "kind": "type_alias",
      "name": {
        "name": "SparseVector",
        "namespace": "inference._types"
      },
      "specLocation": "inference/_types/Results.ts#L24-L28",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "string",
            "namespace": "_builtins"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "float",
            "namespace": "_types"
          }
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "TaskSettings",
        "namespace": "inference._types"
      },
      "specLocation": "inference/_types/Services.ts#L57-L57",
      "type": {
        "kind": "user_defined_value"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "sparse_embedding"
        },
        {
          "name": "text_embedding"
        },
        {
          "name": "rerank"
        },
        {
          "name": "completion"
        }
      ],
      "name": {
        "name": "TaskType",
        "namespace": "inference._types"
      },
      "specLocation": "inference/_types/TaskType.ts#L20-L28"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "integer"
        },
        {
          "name": "long"
        },
        {
          "name": "double"
        },
        {
          "name": "float"
        },
        {
          "name": "boolean"
        },
        {
          "name": "ip"
        },
        {
          "name": "string"
        },
        {
          "name": "auto"
        }
      ],
      "name": {
        "name": "ConvertType",
        "namespace": "ingest._types"
      },
      "specLocation": "ingest/_types/Processors.ts#L661-L670"
    },
    {
      "kind": "enum",
      "members": [
        {
          "codegenName": "md5",
          "name": "MD5"
        },
        {
          "codegenName": "sha1",
          "name": "SHA-1"
        },
        {
          "codegenName": "sha256",
          "name": "SHA-256"
        },
        {
          "codegenName": "sha512",
          "name": "SHA-512"
        },
        {
          "codegenName": "murmurHash3",
          "name": "MurmurHash3"
        }
      ],
      "name": {
        "name": "FingerprintDigest",
        "namespace": "ingest._types"
      },
      "specLocation": "ingest/_types/Processors.ts#L896-L902"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "geojson"
        },
        {
          "name": "wkt"
        }
      ],
      "name": {
        "name": "GeoGridTargetFormat",
        "namespace": "ingest._types"
      },
      "specLocation": "ingest/_types/Processors.ts#L437-L440"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "geotile"
        },
        {
          "name": "geohex"
        },
        {
          "name": "geohash"
        }
      ],
      "name": {
        "name": "GeoGridTileType",
        "namespace": "ingest._types"
      },
      "specLocation": "ingest/_types/Processors.ts#L431-L435"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Root fields that conflict with fields from the parsed JSON will be overridden.",
          "name": "replace"
        },
        {
          "description": "Conflicting fields will be merged.",
          "name": "merge"
        }
      ],
      "name": {
        "name": "JsonProcessorConflictStrategy",
        "namespace": "ingest._types"
      },
      "specLocation": "ingest/_types/Processors.ts#L1151-L1156"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "geo_shape"
        },
        {
          "name": "shape"
        }
      ],
      "name": {
        "name": "ShapeType",
        "namespace": "ingest._types"
      },
      "specLocation": "ingest/_types/Processors.ts#L1473-L1476"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "name"
        },
        {
          "name": "os"
        },
        {
          "name": "device"
        },
        {
          "name": "original"
        },
        {
          "name": "version"
        }
      ],
      "name": {
        "name": "UserAgentProperty",
        "namespace": "ingest._types"
      },
      "specLocation": "ingest/_types/Processors.ts#L547-L553"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "active"
        },
        {
          "name": "valid"
        },
        {
          "name": "invalid"
        },
        {
          "name": "expired"
        }
      ],
      "name": {
        "name": "LicenseStatus",
        "namespace": "license._types"
      },
      "specLocation": "license/_types/License.ts#L35-L40"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "missing"
        },
        {
          "name": "trial"
        },
        {
          "name": "basic"
        },
        {
          "name": "standard"
        },
        {
          "name": "dev"
        },
        {
          "name": "silver"
        },
        {
          "name": "gold"
        },
        {
          "name": "platinum"
        },
        {
          "name": "enterprise"
        }
      ],
      "name": {
        "name": "LicenseType",
        "namespace": "license._types"
      },
      "specLocation": "license/_types/License.ts#L23-L33"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "none"
        },
        {
          "name": "info"
        },
        {
          "description": "You can upgrade directly, but you are using deprecated functionality which will not be available or behave differently in the next major version.",
          "name": "warning"
        },
        {
          "description": "You cannot upgrade without fixing this problem.",
          "name": "critical"
        }
      ],
      "name": {
        "name": "DeprecationLevel",
        "namespace": "migration.deprecations"
      },
      "specLocation": "migration/deprecations/types.ts#L20-L27"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "NO_MIGRATION_NEEDED"
        },
        {
          "name": "MIGRATION_NEEDED"
        },
        {
          "name": "IN_PROGRESS"
        },
        {
          "name": "ERROR"
        }
      ],
      "name": {
        "name": "MigrationStatus",
        "namespace": "migration.get_feature_upgrade_status"
      },
      "specLocation": "migration/get_feature_upgrade_status/GetFeatureUpgradeStatusResponse.ts#L30-L35"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "actual"
        },
        {
          "name": "typical"
        },
        {
          "name": "diff_from_typical"
        },
        {
          "name": "time"
        }
      ],
      "name": {
        "name": "AppliesTo",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Rule.ts#L67-L72"
    },
    {
      "codegenNames": [
        "name",
        "definition"
      ],
      "kind": "type_alias",
      "name": {
        "name": "CategorizationAnalyzer",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Analysis.ts#L181-L182",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CategorizationAnalyzerDefinition",
              "namespace": "ml._types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "CategorizationAnalyzerDefinition",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "One or more character filters. In addition to the built-in character filters, other plugins can provide more character filters. If this property is not specified, no character filters are applied prior to categorization. If you are customizing some other aspect of the analyzer and you need to achieve the equivalent of `categorization_filters` (which are not permitted when some other aspect of the analyzer is customized), add them here as pattern replace character filters.",
          "name": "char_filter",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "CharFilter",
                "namespace": "_types.analysis"
              }
            }
          }
        },
        {
          "description": "One or more token filters. In addition to the built-in token filters, other plugins can provide more token filters. If this property is not specified, no token filters are applied prior to categorization.",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TokenFilter",
                "namespace": "_types.analysis"
              }
            }
          }
        },
        {
          "description": "The name or definition of the tokenizer to use after character filters are applied. This property is compulsory if `categorization_analyzer` is specified as an object. Machine learning provides a tokenizer called `ml_standard` that tokenizes in a way that has been determined to produce good categorization results on a variety of log file formats for logs in English. If you want to use that tokenizer but change the character or token filters, specify \"tokenizer\": \"ml_standard\" in your `categorization_analyzer`. Additionally, the `ml_classic` tokenizer is available, which tokenizes in the same way as the non-customizable tokenizer in old versions of the product (before 6.2). `ml_classic` was the default categorization tokenizer in versions 6.2 to 7.13, so if you need categorization identical to the default for jobs created in these versions, specify \"tokenizer\": \"ml_classic\" in your `categorization_analyzer`.",
          "extDocId": "analysis-tokenizers",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/analysis-tokenizers.html",
          "name": "tokenizer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Tokenizer",
              "namespace": "_types.analysis"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Analysis.ts#L184-L198"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "ok"
        },
        {
          "name": "warn"
        }
      ],
      "name": {
        "name": "CategorizationStatus",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Model.ts#L83-L86"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "auto"
        },
        {
          "name": "manual"
        },
        {
          "name": "off"
        }
      ],
      "name": {
        "name": "ChunkingMode",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Datafeed.ts#L235-L239"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "gt"
        },
        {
          "name": "gte"
        },
        {
          "name": "lt"
        },
        {
          "name": "lte"
        }
      ],
      "name": {
        "name": "ConditionOperator",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Rule.ts#L74-L79"
    },
    {
      "description": "Custom metadata about the job",
      "kind": "type_alias",
      "name": {
        "name": "CustomSettings",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Settings.ts#L22-L27",
      "type": {
        "kind": "user_defined_value"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "started"
        },
        {
          "name": "stopped"
        },
        {
          "name": "starting"
        },
        {
          "name": "stopping"
        }
      ],
      "name": {
        "name": "DatafeedState",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Datafeed.ts#L135-L140"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "started"
        },
        {
          "name": "stopped"
        },
        {
          "name": "starting"
        },
        {
          "name": "stopping"
        },
        {
          "name": "failed"
        }
      ],
      "name": {
        "name": "DataframeState",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Dataframe.ts#L20-L26"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "The trained model is started on at least one node.",
          "name": "started"
        },
        {
          "description": "Trained model deployment is starting but it is not yet deployed on any nodes.",
          "name": "starting"
        },
        {
          "description": "Trained model deployment has started on all valid nodes.",
          "name": "fully_allocated"
        }
      ],
      "name": {
        "name": "DeploymentAllocationState",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/TrainedModel.ts#L273-L286"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "The deployment is usable; at least one node has the model allocated.",
          "name": "started"
        },
        {
          "description": "The deployment has recently started but is not yet usable; the model is not allocated on any nodes.",
          "name": "starting"
        },
        {
          "description": "The deployment is preparing to stop and deallocate the model from the relevant nodes.",
          "name": "stopping"
        },
        {
          "description": "The deployment is on a failed state and must be re-deployed.",
          "name": "failed"
        }
      ],
      "name": {
        "name": "DeploymentAssignmentState",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/TrainedModel.ts#L288-L305"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "all"
        },
        {
          "name": "none"
        },
        {
          "name": "by"
        },
        {
          "name": "over"
        }
      ],
      "name": {
        "name": "ExcludeFrequent",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Detector.ts#L127-L132"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "include"
        },
        {
          "name": "exclude"
        }
      ],
      "name": {
        "name": "FilterType",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Filter.ts#L43-L46"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Includes the model definition.",
          "name": "definition"
        },
        {
          "description": "Includes the baseline for feature importance values.",
          "name": "feature_importance_baseline"
        },
        {
          "description": "Includes the information about hyperparameters used to train the model.\nThis information consists of the value, the absolute and relative\nimportance of the hyperparameter as well as an indicator of whether it was\nspecified by the user or tuned during hyperparameter optimization.",
          "name": "hyperparameters"
        },
        {
          "description": "Includes the total feature importance for the training data set. The\nbaseline and total feature importance values are returned in the metadata\nfield in the response body.",
          "name": "total_feature_importance"
        },
        {
          "description": "Includes the model definition status.",
          "name": "definition_status"
        }
      ],
      "name": {
        "name": "Include",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Include.ts#L20-L47"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "delete"
        },
        {
          "name": "reset"
        },
        {
          "name": "revert"
        }
      ],
      "name": {
        "name": "JobBlockedReason",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Job.ts#L397-L401"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "The job close action is in progress and has not yet completed. A closing job cannot accept further data.",
          "name": "closing"
        },
        {
          "description": "The job finished successfully with its model state persisted. The job must be opened before it can accept further data.",
          "name": "closed"
        },
        {
          "description": "The job is available to receive and process data.",
          "name": "opened"
        },
        {
          "description": "The job did not finish successfully due to an error.\nThis situation can occur due to invalid input data, a fatal error occurring during the analysis, or an external interaction such as the process being killed by the Linux out of memory (OOM) killer.\nIf the job had irrevocably failed, it must be force closed and then deleted.\nIf the datafeed can be corrected, the job can be closed and then re-opened.",
          "name": "failed"
        },
        {
          "description": "The job open action is in progress and has not yet completed.",
          "name": "opening"
        }
      ],
      "name": {
        "name": "JobState",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Job.ts#L36-L52"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "ok"
        },
        {
          "name": "soft_limit"
        },
        {
          "name": "hard_limit"
        }
      ],
      "name": {
        "name": "MemoryStatus",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Model.ts#L88-L92"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "PredictedValue",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/inference.ts#L457-L457",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "ScalarValue",
              "namespace": "_types"
            }
          },
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ScalarValue",
                "namespace": "_types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "The allocation attempt failed.",
          "name": "failed"
        },
        {
          "description": "The trained model is allocated and ready to accept inference requests.",
          "name": "started"
        },
        {
          "description": "The trained model is attempting to allocate on this node; inference requests are not yet accepted.",
          "name": "starting"
        },
        {
          "description": "The trained model is fully deallocated from this node.",
          "name": "stopped"
        },
        {
          "description": "The trained model is being deallocated from this node.",
          "name": "stopping"
        }
      ],
      "name": {
        "name": "RoutingState",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/TrainedModel.ts#L347-L368"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "The result will not be created. Unless you also specify `skip_model_update`, the model will be updated as usual with the corresponding series value.",
          "name": "skip_result"
        },
        {
          "description": "The value for that series will not be used to update the model. Unless you also specify `skip_result`, the results will be created as usual. This action is suitable when certain values are expected to be consistently anomalous and they affect the model in a way that negatively impacts the rest of the results.",
          "name": "skip_model_update"
        }
      ],
      "name": {
        "name": "RuleAction",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Rule.ts#L41-L50"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "loading_old_state"
        },
        {
          "name": "saving_new_state"
        },
        {
          "name": "stopped"
        },
        {
          "name": "failed"
        }
      ],
      "name": {
        "name": "SnapshotUpgradeState",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/Model.ts#L94-L99"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "first"
        },
        {
          "name": "second"
        },
        {
          "name": "none"
        }
      ],
      "name": {
        "name": "TokenizationTruncate",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/inference.ts#L350-L354"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "The model definition is an ensemble model of decision trees.",
          "name": "tree_ensemble"
        },
        {
          "description": "A special type reserved for language identification models.",
          "name": "lang_ident"
        },
        {
          "description": "The stored definition is a PyTorch (specifically a TorchScript) model.\nCurrently only NLP models are supported.",
          "name": "pytorch"
        }
      ],
      "name": {
        "name": "TrainedModelType",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/TrainedModel.ts#L257-L271"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "normal"
        },
        {
          "name": "low"
        }
      ],
      "name": {
        "name": "TrainingPriority",
        "namespace": "ml._types"
      },
      "specLocation": "ml/_types/TrainedModel.ts#L307-L310"
    },
    {
      "codegenNames": [
        "stats",
        "error"
      ],
      "kind": "type_alias",
      "name": {
        "name": "NodeReloadResult",
        "namespace": "nodes._types"
      },
      "specLocation": "nodes/_types/NodeReloadResult.ts#L29-L30",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "Stats",
              "namespace": "nodes._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "NodeReloadError",
              "namespace": "nodes._types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "Stats",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Statistics about adaptive replica selection.",
          "name": "adaptive_selection",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AdaptiveSelection",
                "namespace": "nodes._types"
              }
            }
          }
        },
        {
          "description": "Statistics about the field data circuit breaker.",
          "name": "breakers",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Breaker",
                "namespace": "nodes._types"
              }
            }
          }
        },
        {
          "description": "File system information, data path, free disk space, read/write stats.",
          "name": "fs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FileSystem",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Network host for the node, based on the network host setting.",
          "name": "host",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Host",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "HTTP connection information.",
          "name": "http",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Http",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Statistics about ingest preprocessing.",
          "name": "ingest",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ingest",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "IP address and port for the node.",
          "name": "ip",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "Ip",
                  "namespace": "_types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "Ip",
                    "namespace": "_types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "JVM stats, memory pool information, garbage collection, buffer pools, number of loaded/unloaded classes.",
          "name": "jvm",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Jvm",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Human-readable identifier for the node.\nBased on the node name setting.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Operating system stats, load average, mem, swap.",
          "name": "os",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "OperatingSystem",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Process statistics, memory consumption, cpu usage, open file descriptors.",
          "name": "process",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Process",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Roles assigned to the node.",
          "name": "roles",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NodeRoles",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains script statistics for the node.",
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Scripting",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "name": "script_cache",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "ScriptCache",
                    "namespace": "nodes._types"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "name": "ScriptCache",
                      "namespace": "nodes._types"
                    }
                  }
                }
              ],
              "kind": "union_of"
            }
          }
        },
        {
          "description": "Statistics about each thread pool, including current size, queue and rejected tasks.",
          "name": "thread_pool",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ThreadCount",
                "namespace": "nodes._types"
              }
            }
          }
        },
        {
          "name": "timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Transport statistics about sent and received bytes in cluster communication.",
          "name": "transport",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Transport",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Host and port for the transport layer, used for internal communication between nodes in a cluster.",
          "name": "transport_address",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TransportAddress",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains a list of attributes for the node.",
          "name": "attributes",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Contains node discovery statistics for the node.",
          "name": "discovery",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Discovery",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Contains indexing pressure statistics for the node.",
          "name": "indexing_pressure",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexingPressure",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Indices stats about size, document count, indexing and deletion times, search times, field cache size, merges and flushes.",
          "name": "indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardStats",
              "namespace": "indices.stats"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L30-L114"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AdaptiveSelection",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "The exponentially weighted moving average queue size of search requests on the keyed node.",
          "name": "avg_queue_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The exponentially weighted moving average response time of search requests on the keyed node.",
          "name": "avg_response_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The exponentially weighted moving average response time, in nanoseconds, of search requests on the keyed node.",
          "name": "avg_response_time_ns",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The exponentially weighted moving average service time of search requests on the keyed node.",
          "name": "avg_service_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The exponentially weighted moving average service time, in nanoseconds, of search requests on the keyed node.",
          "name": "avg_service_time_ns",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of outstanding search requests to the keyed node from the node these stats are for.",
          "name": "outgoing_searches",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The rank of this node; used for shard selection when routing search requests.",
          "name": "rank",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L439-L468"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Breaker",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Estimated memory used for the operation.",
          "name": "estimated_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Estimated memory used, in bytes, for the operation.",
          "name": "estimated_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Memory limit for the circuit breaker.",
          "name": "limit_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Memory limit, in bytes, for the circuit breaker.",
          "name": "limit_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A constant that all estimates for the circuit breaker are multiplied with to calculate a final estimate.",
          "name": "overhead",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of times the circuit breaker has been triggered and prevented an out of memory error.",
          "name": "tripped",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L470-L495"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FileSystem",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "List of all file stores.",
          "name": "data",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DataPathStats",
                "namespace": "nodes._types"
              }
            }
          }
        },
        {
          "description": "Last time the file stores statistics were refreshed.\nRecorded in milliseconds since the Unix Epoch.",
          "name": "timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics for all file stores of the node.",
          "name": "total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FileSystemTotal",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Contains I/O statistics for the node.",
          "name": "io_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IoStats",
              "namespace": "nodes._types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L769-L787"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataPathStats",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Total amount of disk space available to this Java virtual machine on this file store.",
          "name": "available",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Total number of bytes available to this Java virtual machine on this file store.",
          "name": "available_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "disk_queue",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "disk_reads",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "disk_read_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "disk_read_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "disk_writes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "disk_write_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "disk_write_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of unallocated disk space in the file store.",
          "name": "free",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Total number of unallocated bytes in the file store.",
          "name": "free_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Mount point of the file store (for example: `/dev/sda2`).",
          "name": "mount",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Path to the file store.",
          "name": "path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Total size of the file store.",
          "name": "total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Total size of the file store in bytes.",
          "name": "total_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Type of the file store (ex: ext4).",
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L586-L630"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FileSystemTotal",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Total disk space available to this Java virtual machine on all file stores.\nDepending on OS or process level restrictions, this might appear less than `free`.\nThis is the actual amount of free disk space the Elasticsearch node can utilise.",
          "name": "available",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Total number of bytes available to this Java virtual machine on all file stores.\nDepending on OS or process level restrictions, this might appear less than `free_in_bytes`.\nThis is the actual amount of free disk space the Elasticsearch node can utilise.",
          "name": "available_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total unallocated disk space in all file stores.",
          "name": "free",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Total number of unallocated bytes in all file stores.",
          "name": "free_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total size of all file stores.",
          "name": "total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Total size of all file stores in bytes.",
          "name": "total_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L828-L857"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IoStats",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Array of disk metrics for each device that is backing an Elasticsearch data path.\nThese disk metrics are probed periodically and averages between the last probe and the current probe are computed.",
          "name": "devices",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IoStatDevice",
                "namespace": "nodes._types"
              }
            }
          }
        },
        {
          "description": "The sum of the disk metrics for all devices that back an Elasticsearch data path.",
          "name": "total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IoStatDevice",
              "namespace": "nodes._types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L789-L799"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IoStatDevice",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "The Linux device name.",
          "name": "device_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The total number of read and write operations for the device completed since starting Elasticsearch.",
          "name": "operations",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The total number of kilobytes read for the device since starting Elasticsearch.",
          "name": "read_kilobytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The total number of read operations for the device completed since starting Elasticsearch.",
          "name": "read_operations",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The total number of kilobytes written for the device since starting Elasticsearch.",
          "name": "write_kilobytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The total number of write operations for the device completed since starting Elasticsearch.",
          "name": "write_operations",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L801-L826"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Http",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Current number of open HTTP connections for the node.",
          "name": "current_open",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of HTTP connections opened for the node.",
          "name": "total_opened",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Information on current and recently-closed HTTP client connections.\nClients that have been closed longer than the `http.client_stats.closed_channels.max_age` setting will not be represented here.",
          "name": "clients",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Client",
                "namespace": "nodes._types"
              }
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L669-L688"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Client",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Unique ID for the HTTP client.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Reported agent for the HTTP client.\nIf unavailable, this property is not included in the response.",
          "name": "agent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Local address for the HTTP connection.",
          "name": "local_address",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Remote address for the HTTP connection.",
          "name": "remote_address",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The URI of the clientâ€™s most recent request.",
          "name": "last_uri",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Time at which the client opened the connection.",
          "name": "opened_time_millis",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Time at which the client closed the connection if the connection is closed.",
          "name": "closed_time_millis",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Time of the most recent request from this client.",
          "name": "last_request_time_millis",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of requests from this client.",
          "name": "request_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Cumulative size in bytes of all requests from this client.",
          "name": "request_size_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Value from the clientâ€™s `x-opaque-id` HTTP header.\nIf unavailable, this property is not included in the response.",
          "name": "x_opaque_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L720-L767"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Ingest",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Contains statistics about ingest pipelines for the node.",
          "name": "pipelines",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IngestStats",
                "namespace": "nodes._types"
              }
            }
          }
        },
        {
          "description": "Contains statistics about ingest operations for the node.",
          "name": "total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IngestTotal",
              "namespace": "nodes._types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L345-L354"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IngestStats",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Total number of documents ingested during the lifetime of this node.",
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of documents currently being ingested.",
          "name": "current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of failed ingest operations during the lifetime of this node.",
          "name": "failed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of ingest processors.",
          "name": "processors",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "KeyedProcessor",
                  "namespace": "nodes._types"
                }
              }
            }
          }
        },
        {
          "description": "Total time, in milliseconds, spent preprocessing ingest documents during the lifetime of this node.",
          "name": "time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.15.0",
              "stability": "stable"
            }
          },
          "description": "Total number of bytes of all documents ingested by the pipeline.\nThis field is only present on pipelines which are the first to process a document.\nThus, it is not present on pipelines which only serve as a final pipeline after a default pipeline, a pipeline run after a reroute processor, or pipelines in pipeline processors.",
          "name": "ingested_as_first_pipeline_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.15.0",
              "stability": "stable"
            }
          },
          "description": "Total number of bytes of all documents produced by the pipeline.\nThis field is only present on pipelines which are the first to process a document.\nThus, it is not present on pipelines which only serve as a final pipeline after a default pipeline, a pipeline run after a reroute processor, or pipelines in pipeline processors.\nIn situations where there are subsequent pipelines, the value represents the size of the document after all pipelines have run.",
          "name": "produced_as_first_pipeline_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L356-L394"
    },
    {
      "kind": "interface",
      "name": {
        "name": "KeyedProcessor",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "name": "stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Processor",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L415-L418"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Processor",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Number of documents transformed by the processor.",
          "name": "count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of documents currently being transformed by the processor.",
          "name": "current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of failed operations for the processor.",
          "name": "failed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Time, in milliseconds, spent by the processor transforming documents.",
          "name": "time_in_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L420-L437"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IngestTotal",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Total number of documents ingested during the lifetime of this node.",
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of documents currently being ingested.",
          "name": "current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of failed ingest operations during the lifetime of this node.",
          "name": "failed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total time, in milliseconds, spent preprocessing ingest documents during the lifetime of this node.",
          "name": "time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L396-L413"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Jvm",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Contains statistics about JVM buffer pools for the node.",
          "name": "buffer_pools",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "NodeBufferPool",
                "namespace": "nodes._types"
              }
            }
          }
        },
        {
          "description": "Contains statistics about classes loaded by JVM for the node.",
          "name": "classes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JvmClasses",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Contains statistics about JVM garbage collectors for the node.",
          "name": "gc",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GarbageCollector",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Contains JVM memory usage statistics for the node.",
          "name": "mem",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JvmMemoryStats",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Contains statistics about JVM thread usage for the node.",
          "name": "threads",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JvmThreads",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Last time JVM statistics were refreshed.",
          "name": "timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Human-readable JVM uptime.\nOnly returned if the `human` query parameter is `true`.",
          "name": "uptime",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "JVM uptime in milliseconds.",
          "name": "uptime_in_millis",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L882-L916"
    },
    {
      "kind": "interface",
      "name": {
        "name": "NodeBufferPool",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Number of buffer pools.",
          "name": "count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total capacity of buffer pools.",
          "name": "total_capacity",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Total capacity of buffer pools in bytes.",
          "name": "total_capacity_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Size of buffer pools.",
          "name": "used",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Size of buffer pools in bytes.",
          "name": "used_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L859-L880"
    },
    {
      "kind": "interface",
      "name": {
        "name": "JvmClasses",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Number of classes currently loaded by JVM.",
          "name": "current_loaded_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of classes loaded since the JVM started.",
          "name": "total_loaded_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of classes unloaded since the JVM started.",
          "name": "total_unloaded_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L979-L992"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GarbageCollector",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Contains statistics about JVM garbage collectors for the node.",
          "name": "collectors",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "GarbageCollectorTotal",
                "namespace": "nodes._types"
              }
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L994-L999"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GarbageCollectorTotal",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Total number of JVM garbage collectors that collect objects.",
          "name": "collection_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total time spent by JVM collecting objects.",
          "name": "collection_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Total time, in milliseconds, spent by JVM collecting objects.",
          "name": "collection_time_in_millis",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L1001-L1014"
    },
    {
      "kind": "interface",
      "name": {
        "name": "JvmMemoryStats",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Memory, in bytes, currently in use by the heap.",
          "name": "heap_used_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Percentage of memory currently in use by the heap.",
          "name": "heap_used_percent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Amount of memory, in bytes, available for use by the heap.",
          "name": "heap_committed_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum amount of memory, in bytes, available for use by the heap.",
          "name": "heap_max_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Non-heap memory used, in bytes.",
          "name": "non_heap_used_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Amount of non-heap memory available, in bytes.",
          "name": "non_heap_committed_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about heap memory usage for the node.",
          "name": "pools",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Pool",
                "namespace": "nodes._types"
              }
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L918-L947"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Pool",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Memory, in bytes, used by the heap.",
          "name": "used_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum amount of memory, in bytes, available for use by the heap.",
          "name": "max_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Largest amount of memory, in bytes, historically used by the heap.",
          "name": "peak_used_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Largest amount of memory, in bytes, historically used by the heap.",
          "name": "peak_max_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L949-L966"
    },
    {
      "kind": "interface",
      "name": {
        "name": "JvmThreads",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Number of active threads in use by JVM.",
          "name": "count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Highest number of threads used by JVM.",
          "name": "peak_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L968-L977"
    },
    {
      "kind": "interface",
      "name": {
        "name": "OperatingSystem",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "name": "cpu",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Cpu",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "name": "mem",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExtendedMemoryStats",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "name": "swap",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MemoryStats",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "name": "cgroup",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Cgroup",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "name": "timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L1016-L1022"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Cpu",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "name": "percent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "sys",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "sys_in_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_in_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "user",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "user_in_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "load_average",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L575-L584"
    },
    {
      "inherits": {
        "type": {
          "name": "MemoryStats",
          "namespace": "nodes._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ExtendedMemoryStats",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Percentage of free memory.",
          "name": "free_percent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Percentage of used memory.",
          "name": "used_percent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L658-L667"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MemoryStats",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "If the amount of physical memory has been overridden using the `es`.`total_memory_bytes` system property then this reports the overridden value in bytes.\nOtherwise it reports the same value as `total_in_bytes`.",
          "name": "adjusted_total_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "resident",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "resident_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "share",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "share_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_virtual",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "total_virtual_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of physical memory in bytes.",
          "name": "total_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Amount of free physical memory in bytes.",
          "name": "free_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Amount of used physical memory in bytes.",
          "name": "used_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L632-L656"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Cgroup",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Contains statistics about `cpuacct` control group for the node.",
          "name": "cpuacct",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CpuAcct",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Contains statistics about `cpu` control group for the node.",
          "name": "cpu",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CgroupCpu",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Contains statistics about the memory control group for the node.",
          "name": "memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CgroupMemory",
              "namespace": "nodes._types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L497-L510"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CpuAcct",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "The `cpuacct` control group to which the Elasticsearch process belongs.",
          "name": "control_group",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The total CPU time, in nanoseconds, consumed by all tasks in the same cgroup as the Elasticsearch process.",
          "name": "usage_nanos",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitNanos",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L512-L521"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CgroupCpu",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "The `cpu` control group to which the Elasticsearch process belongs.",
          "name": "control_group",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The period of time, in microseconds, for how regularly all tasks in the same cgroup as the Elasticsearch process should have their access to CPU resources reallocated.",
          "name": "cfs_period_micros",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The total amount of time, in microseconds, for which all tasks in the same cgroup as the Elasticsearch process can run during one period `cfs_period_micros`.",
          "name": "cfs_quota_micros",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains CPU statistics for the node.",
          "name": "stat",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CgroupCpuStat",
              "namespace": "nodes._types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L523-L540"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CgroupCpuStat",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "The number of reporting periods (as specified by `cfs_period_micros`) that have elapsed.",
          "name": "number_of_elapsed_periods",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of times all tasks in the same cgroup as the Elasticsearch process have been throttled.",
          "name": "number_of_times_throttled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The total amount of time, in nanoseconds, for which all tasks in the same cgroup as the Elasticsearch process have been throttled.",
          "name": "time_throttled_nanos",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitNanos",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L542-L555"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CgroupMemory",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "The `memory` control group to which the Elasticsearch process belongs.",
          "name": "control_group",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The maximum amount of user memory (including file cache) allowed for all tasks in the same cgroup as the Elasticsearch process.\nThis value can be too big to store in a `long`, so is returned as a string so that the value returned can exactly match what the underlying operating system interface returns.\nAny value that is too large to parse into a `long` almost certainly means no limit has been set for the cgroup.",
          "name": "limit_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The total current memory usage by processes in the cgroup, in bytes, by all tasks in the same cgroup as the Elasticsearch process.\nThis value is stored as a string for consistency with `limit_in_bytes`.",
          "name": "usage_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L557-L573"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Process",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Contains CPU statistics for the node.",
          "name": "cpu",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Cpu",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Contains virtual memory statistics for the node.",
          "name": "mem",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MemoryStats",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Number of opened file descriptors associated with the current or `-1` if not supported.",
          "name": "open_file_descriptors",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum number of file descriptors allowed on the system, or `-1` if not supported.",
          "name": "max_file_descriptors",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Last time the statistics were refreshed.\nRecorded in milliseconds since the Unix Epoch.",
          "name": "timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L1024-L1046"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Scripting",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Total number of times the script cache has evicted old data.",
          "name": "cache_evictions",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of inline script compilations performed by the node.",
          "name": "compilations",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains this recent history of script compilations.",
          "name": "compilations_history",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Total number of times the script compilation circuit breaker has limited inline script compilations.",
          "name": "compilation_limit_triggered",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "contexts",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Context",
                "namespace": "nodes._types"
              }
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L1048-L1066"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Context",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "name": "context",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "compilations",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "cache_evictions",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "compilation_limit_triggered",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L1068-L1073"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ScriptCache",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Total number of times the script cache has evicted old data.",
          "name": "cache_evictions",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of times the script compilation circuit breaker has limited inline script compilations.",
          "name": "compilation_limit_triggered",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of inline script compilations performed by the node.",
          "name": "compilations",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "context",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L1102-L1116"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ThreadCount",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Number of active threads in the thread pool.",
          "name": "active",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of tasks completed by the thread pool executor.",
          "name": "completed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Highest number of active threads in the thread pool.",
          "name": "largest",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of tasks in queue for the thread pool.",
          "name": "queue",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of tasks rejected by the thread pool executor.",
          "name": "rejected",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of threads in the thread pool.",
          "name": "threads",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L1075-L1100"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Transport",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "The distribution of the time spent handling each inbound message on a transport thread, represented as a histogram.",
          "name": "inbound_handling_time_histogram",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TransportHistogram",
                "namespace": "nodes._types"
              }
            }
          }
        },
        {
          "description": "The distribution of the time spent sending each outbound transport message on a transport thread, represented as a histogram.",
          "name": "outbound_handling_time_histogram",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TransportHistogram",
                "namespace": "nodes._types"
              }
            }
          }
        },
        {
          "description": "Total number of RX (receive) packets received by the node during internal cluster communication.",
          "name": "rx_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Size of RX packets received by the node during internal cluster communication.",
          "name": "rx_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Size, in bytes, of RX packets received by the node during internal cluster communication.",
          "name": "rx_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Current number of inbound TCP connections used for internal communication between nodes.",
          "name": "server_open",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of TX (transmit) packets sent by the node during internal cluster communication.",
          "name": "tx_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Size of TX packets sent by the node during internal cluster communication.",
          "name": "tx_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Size, in bytes, of TX packets sent by the node during internal cluster communication.",
          "name": "tx_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative number of outbound transport connections that this node has opened since it started.\nEach transport connection may comprise multiple TCP connections but is only counted once in this statistic.\nTransport connections are typically long-lived so this statistic should remain constant in a stable cluster.",
          "name": "total_outbound_connections",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L1118-L1161"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TransportHistogram",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "The number of times a transport thread took a period of time within the bounds of this bucket to handle an inbound message.",
          "name": "count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The exclusive upper bound of the bucket in milliseconds.\nMay be omitted on the last bucket if this bucket has no upper bound.",
          "name": "lt_millis",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The inclusive lower bound of the bucket in milliseconds. May be omitted on the first bucket if this bucket has no lower bound.",
          "name": "ge_millis",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L1163-L1177"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Discovery",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Contains statistics for the cluster state queue of the node.",
          "name": "cluster_state_queue",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ClusterStateQueue",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Contains statistics for the published cluster states of the node.",
          "name": "published_cluster_states",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PublishedClusterStates",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Contains low-level statistics about how long various activities took during cluster state updates while the node was the elected master.\nOmitted if the node is not master-eligible.\nEvery field whose name ends in `_time` within this object is also represented as a raw number of milliseconds in a field whose name ends in `_time_millis`.\nThe human-readable fields with a `_time` suffix are only returned if requested with the `?human=true` query parameter.",
          "name": "cluster_state_update",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ClusterStateUpdate",
                "namespace": "nodes._types"
              }
            }
          }
        },
        {
          "name": "serialized_cluster_states",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SerializedClusterState",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "name": "cluster_applier_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ClusterAppliedStats",
              "namespace": "nodes._types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L201-L219"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ClusterStateQueue",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Total number of cluster states in queue.",
          "name": "total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of pending cluster states in queue.",
          "name": "pending",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of committed cluster states in queue.",
          "name": "committed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L248-L261"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PublishedClusterStates",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Number of published cluster states.",
          "name": "full_states",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of incompatible differences between published cluster states.",
          "name": "incompatible_diffs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of compatible differences between published cluster states.",
          "name": "compatible_diffs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L263-L276"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ClusterStateUpdate",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "The number of cluster state update attempts that did not change the cluster state since the node started.",
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time spent computing no-op cluster state updates since the node started.",
          "name": "computation_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time, in milliseconds, spent computing no-op cluster state updates since the node started.",
          "name": "computation_time_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time spent publishing cluster state updates which ultimately succeeded, which includes everything from the start of the publication (just after the computation of the new cluster state) until the publication has finished and the master node is ready to start processing the next state update.\nThis includes the time measured by `context_construction_time`, `commit_time`, `completion_time` and `master_apply_time`.",
          "name": "publication_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time, in milliseconds, spent publishing cluster state updates which ultimately succeeded, which includes everything from the start of the publication (just after the computation of the new cluster state) until the publication has finished and the master node is ready to start processing the next state update.\nThis includes the time measured by `context_construction_time`, `commit_time`, `completion_time` and `master_apply_time`.",
          "name": "publication_time_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time spent constructing a publication context since the node started for publications that ultimately succeeded.\nThis statistic includes the time spent computing the difference between the current and new cluster state preparing a serialized representation of this difference.",
          "name": "context_construction_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time, in milliseconds, spent constructing a publication context since the node started for publications that ultimately succeeded.\nThis statistic includes the time spent computing the difference between the current and new cluster state preparing a serialized representation of this difference.",
          "name": "context_construction_time_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time spent waiting for a successful cluster state update to commit, which measures the time from the start of each publication until a majority of the master-eligible nodes have written the state to disk and confirmed the write to the elected master.",
          "name": "commit_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time, in milliseconds, spent waiting for a successful cluster state update to commit, which measures the time from the start of each publication until a majority of the master-eligible nodes have written the state to disk and confirmed the write to the elected master.",
          "name": "commit_time_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time spent waiting for a successful cluster state update to complete, which measures the time from the start of each publication until all the other nodes have notified the elected master that they have applied the cluster state.",
          "name": "completion_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time, in milliseconds,  spent waiting for a successful cluster state update to complete, which measures the time from the start of each publication until all the other nodes have notified the elected master that they have applied the cluster state.",
          "name": "completion_time_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time spent successfully applying cluster state updates on the elected master since the node started.",
          "name": "master_apply_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time, in milliseconds, spent successfully applying cluster state updates on the elected master since the node started.",
          "name": "master_apply_time_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time spent notifying listeners of a no-op cluster state update since the node started.",
          "name": "notification_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The cumulative amount of time, in milliseconds, spent notifying listeners of a no-op cluster state update since the node started.",
          "name": "notification_time_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L278-L343"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SerializedClusterState",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Number of published cluster states.",
          "name": "full_states",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SerializedClusterStateDetail",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "name": "diffs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SerializedClusterStateDetail",
              "namespace": "nodes._types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L232-L238"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SerializedClusterStateDetail",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "name": "count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "uncompressed_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "uncompressed_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "compressed_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "compressed_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L240-L246"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ClusterAppliedStats",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "name": "recordings",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Recording",
                "namespace": "nodes._types"
              }
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L221-L223"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Recording",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "cumulative_execution_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "cumulative_execution_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "cumulative_execution_time_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L225-L230"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexingPressure",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Contains statistics for memory consumption from indexing load.",
          "name": "memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexingPressureMemory",
              "namespace": "nodes._types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L116-L121"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexingPressureMemory",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Configured memory limit for the indexing requests.\nReplica requests have an automatic limit that is 1.5x this value.",
          "name": "limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Configured memory limit, in bytes, for the indexing requests.\nReplica requests have an automatic limit that is 1.5x this value.",
          "name": "limit_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics for current indexing load.",
          "name": "current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PressureMemory",
              "namespace": "nodes._types"
            }
          }
        },
        {
          "description": "Contains statistics for the cumulative indexing load since the node started.",
          "name": "total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PressureMemory",
              "namespace": "nodes._types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L123-L142"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PressureMemory",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "description": "Memory consumed by indexing requests in the coordinating, primary, or replica stage.",
          "name": "all",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Memory consumed, in bytes, by indexing requests in the coordinating, primary, or replica stage.",
          "name": "all_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Memory consumed by indexing requests in the coordinating or primary stage.\nThis value is not the sum of coordinating and primary as a node can reuse the coordinating memory if the primary stage is executed locally.",
          "name": "combined_coordinating_and_primary",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Memory consumed, in bytes, by indexing requests in the coordinating or primary stage.\nThis value is not the sum of coordinating and primary as a node can reuse the coordinating memory if the primary stage is executed locally.",
          "name": "combined_coordinating_and_primary_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Memory consumed by indexing requests in the coordinating stage.",
          "name": "coordinating",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Memory consumed, in bytes, by indexing requests in the coordinating stage.",
          "name": "coordinating_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Memory consumed by indexing requests in the primary stage.",
          "name": "primary",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Memory consumed, in bytes, by indexing requests in the primary stage.",
          "name": "primary_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Memory consumed by indexing requests in the replica stage.",
          "name": "replica",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Memory consumed, in bytes, by indexing requests in the replica stage.",
          "name": "replica_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of indexing requests rejected in the coordinating stage.",
          "name": "coordinating_rejections",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of indexing requests rejected in the primary stage.",
          "name": "primary_rejections",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of indexing requests rejected in the replica stage.",
          "name": "replica_rejections",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/Stats.ts#L144-L199"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardStats",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "commit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardCommit",
              "namespace": "indices.stats"
            }
          }
        },
        {
          "name": "completion",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CompletionStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DocStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fielddata",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FielddataStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "flush",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FlushStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "get",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GetStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "indexing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexingStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "mappings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MappingStats",
              "namespace": "indices.stats"
            }
          }
        },
        {
          "name": "merges",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MergesStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "shard_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardPath",
              "namespace": "indices.stats"
            }
          }
        },
        {
          "name": "query_cache",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardQueryCache",
              "namespace": "indices.stats"
            }
          }
        },
        {
          "name": "recovery",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RecoveryStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "refresh",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RefreshStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "request_cache",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RequestCacheStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "retention_leases",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardRetentionLeases",
              "namespace": "indices.stats"
            }
          }
        },
        {
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardRouting",
              "namespace": "indices.stats"
            }
          }
        },
        {
          "name": "search",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "segments",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SegmentsStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "seq_no",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardSequenceNumber",
              "namespace": "indices.stats"
            }
          }
        },
        {
          "name": "store",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StoreStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "translog",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TranslogStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "warmer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WarmerStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "bulk",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BulkStats",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.15.0"
            }
          },
          "name": "shards",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "shard_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardsTotalStats",
              "namespace": "indices.stats"
            }
          }
        },
        {
          "name": "indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndicesStats",
              "namespace": "indices.stats"
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L192-L223"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardCommit",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "generation",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "num_docs",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "user_data",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L112-L117"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CompletionStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "Total amount, in bytes, of memory used for completion across all shards assigned to selected nodes.",
          "name": "size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of memory used for completion across all shards assigned to selected nodes.",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FieldSizeUsage",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L80-L90"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FieldSizeUsage",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L92-L95"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DocStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "Total number of non-deleted documents across all primary shards assigned to selected nodes.\nThis number is based on documents in Lucene segments and may include documents from nested fields.",
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of deleted documents across all primary shards assigned to selected nodes.\nThis number is based on documents in Lucene segments.\nElasticsearch reclaims the disk space of deleted Lucene documents when a segment is merged.",
          "name": "deleted",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L97-L109"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FielddataStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "evictions",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "memory_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "memory_size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FieldMemoryUsage",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L111-L116"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FieldMemoryUsage",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "memory_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "memory_size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L118-L121"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FlushStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "periodic",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L123-L128"
    },
    {
      "kind": "interface",
      "name": {
        "name": "GetStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "exists_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "exists_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "exists_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "missing_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "missing_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "missing_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L130-L141"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexingStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "index_current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "delete_current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "delete_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "delete_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "delete_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "is_throttled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "noop_update_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "throttle_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "throttle_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_failed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "types",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IndexingStats",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "write_load",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L143-L159"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MappingStats",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "total_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_estimated_overhead",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_estimated_overhead_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L186-L190"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MergesStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "current_docs",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "current_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "current_size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_auto_throttle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "total_auto_throttle_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_docs",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "total_size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_stopped_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_stopped_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_throttled_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_throttled_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L161-L178"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardPath",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "data_path",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "is_custom_data_path",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "state_path",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L140-L144"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardQueryCache",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "cache_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "cache_size",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "evictions",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "hit_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "memory_size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "miss_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L146-L154"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RecoveryStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "current_as_source",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "current_as_target",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "throttle_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "throttle_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L228-L233"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RefreshStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "external_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "external_total_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "listeners",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L235-L242"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RequestCacheStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "evictions",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "hit_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "memory_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "memory_size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "miss_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L244-L250"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardRetentionLeases",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "primary_term",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "version",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "leases",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ShardLease",
                "namespace": "indices.stats"
              }
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L156-L160"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardLease",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "retaining_seq_no",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SequenceNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "timestamp",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "source",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L133-L138"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardRouting",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "node",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "primary",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "relocating_node",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardRoutingState",
              "namespace": "indices.stats"
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L162-L167"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SearchStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "fetch_current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fetch_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fetch_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fetch_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "open_contexts",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "query_current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "query_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "query_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "query_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "scroll_current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "scroll_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "scroll_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "scroll_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "suggest_current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "suggest_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "suggest_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "suggest_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "groups",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SearchStats",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L252-L271"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SegmentsStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "Total number of segments across all shards assigned to selected nodes.",
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of memory used for doc values across all shards assigned to selected nodes.",
          "name": "doc_values_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount, in bytes, of memory used for doc values across all shards assigned to selected nodes.",
          "name": "doc_values_memory_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "This object is not populated by the cluster stats API.\nTo get information on segment files, use the node stats API.",
          "name": "file_sizes",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ShardFileSizeInfo",
                "namespace": "indices.stats"
              }
            }
          }
        },
        {
          "description": "Total amount of memory used by fixed bit sets across all shards assigned to selected nodes.\nFixed bit sets are used for nested object field types and type filters for join fields.",
          "name": "fixed_bit_set",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of memory, in bytes, used by fixed bit sets across all shards assigned to selected nodes.",
          "name": "fixed_bit_set_memory_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of memory used by all index writers across all shards assigned to selected nodes.",
          "name": "index_writer_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_writer_max_memory_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount, in bytes, of memory used by all index writers across all shards assigned to selected nodes.",
          "name": "index_writer_memory_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Unix timestamp, in milliseconds, of the most recently retried indexing request.",
          "name": "max_unsafe_auto_id_timestamp",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of memory used for segments across all shards assigned to selected nodes.",
          "name": "memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount, in bytes, of memory used for segments across all shards assigned to selected nodes.",
          "name": "memory_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of memory used for normalization factors across all shards assigned to selected nodes.",
          "name": "norms_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount, in bytes, of memory used for normalization factors across all shards assigned to selected nodes.",
          "name": "norms_memory_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of memory used for points across all shards assigned to selected nodes.",
          "name": "points_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount, in bytes, of memory used for points across all shards assigned to selected nodes.",
          "name": "points_memory_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "stored_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount, in bytes, of memory used for stored fields across all shards assigned to selected nodes.",
          "name": "stored_fields_memory_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount, in bytes, of memory used for terms across all shards assigned to selected nodes.",
          "name": "terms_memory_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of memory used for terms across all shards assigned to selected nodes.",
          "name": "terms_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of memory used for term vectors across all shards assigned to selected nodes.",
          "name": "term_vectory_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount, in bytes, of memory used for term vectors across all shards assigned to selected nodes.",
          "name": "term_vectors_memory_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of memory used by all version maps across all shards assigned to selected nodes.",
          "name": "version_map_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount, in bytes, of memory used by all version maps across all shards assigned to selected nodes.",
          "name": "version_map_memory_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L273-L366"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardFileSizeInfo",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "average_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L124-L131"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardSequenceNumber",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "global_checkpoint",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "local_checkpoint",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_seq_no",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SequenceNumber",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L176-L180"
    },
    {
      "kind": "interface",
      "name": {
        "name": "StoreStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "Total size of all shards assigned to selected nodes.",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total size, in bytes, of all shards assigned to selected nodes.",
          "name": "size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A prediction of how much larger the shard stores will eventually grow due to ongoing peer recoveries, restoring snapshots, and similar activities.",
          "name": "reserved",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A prediction, in bytes, of how much larger the shard stores will eventually grow due to ongoing peer recoveries, restoring snapshots, and similar activities.",
          "name": "reserved_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total data set size of all shards assigned to selected nodes.\nThis includes the size of shards not stored fully on the nodes, such as the cache for partially mounted indices.",
          "name": "total_data_set_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total data set size, in bytes, of all shards assigned to selected nodes.\nThis includes the size of shards not stored fully on the nodes, such as the cache for partially mounted indices.",
          "name": "total_data_set_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L368-L395"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TranslogStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "earliest_last_modified_age",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "operations",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "uncommitted_operations",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "uncommitted_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "uncommitted_size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L397-L405"
    },
    {
      "kind": "interface",
      "name": {
        "name": "WarmerStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L407-L412"
    },
    {
      "kind": "interface",
      "name": {
        "name": "BulkStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "total_operations",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "avg_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "avg_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "avg_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "avg_size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L68-L78"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardsTotalStats",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "total_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L182-L184"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndicesStats",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "name": "primaries",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexStats",
              "namespace": "indices.stats"
            }
          }
        },
        {
          "name": "shards",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "ShardStats",
                  "namespace": "indices.stats"
                }
              }
            }
          }
        },
        {
          "name": "total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexStats",
              "namespace": "indices.stats"
            }
          }
        },
        {
          "name": "uuid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Uuid",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.1.0"
            }
          },
          "name": "health",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HealthStatus",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.1.0"
            }
          },
          "name": "status",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexMetadataState",
              "namespace": "indices.stats"
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L95-L110"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexStats",
        "namespace": "indices.stats"
      },
      "properties": [
        {
          "description": "Contains statistics about completions across all shards assigned to the node.",
          "name": "completion",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CompletionStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about documents across all primary shards assigned to the node.",
          "name": "docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DocStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about the field data cache across all shards assigned to the node.",
          "name": "fielddata",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FielddataStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about flush operations for the node.",
          "name": "flush",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FlushStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about get operations for the node.",
          "name": "get",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GetStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about indexing operations for the node.",
          "name": "indexing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexingStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about indices operations for the node.",
          "name": "indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndicesStats",
              "namespace": "indices.stats"
            }
          }
        },
        {
          "description": "Contains statistics about merge operations for the node.",
          "name": "merges",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MergesStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about the query cache across all shards assigned to the node.",
          "name": "query_cache",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryCacheStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about recovery operations for the node.",
          "name": "recovery",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RecoveryStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about refresh operations for the node.",
          "name": "refresh",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RefreshStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about the request cache across all shards assigned to the node.",
          "name": "request_cache",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RequestCacheStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about search operations for the node.",
          "name": "search",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about segments across all shards assigned to the node.",
          "name": "segments",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SegmentsStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about the size of shards assigned to the node.",
          "name": "store",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StoreStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about transaction log operations for the node.",
          "name": "translog",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TranslogStats",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains statistics about index warming operations for the node.",
          "name": "warmer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "WarmerStats",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "bulk",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BulkStats",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.15.0"
            }
          },
          "name": "shard_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardsTotalStats",
              "namespace": "indices.stats"
            }
          }
        }
      ],
      "specLocation": "indices/stats/types.ts#L52-L93"
    },
    {
      "kind": "interface",
      "name": {
        "name": "QueryCacheStats",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "Total number of entries added to the query cache across all shards assigned to selected nodes.\nThis number includes current and evicted entries.",
          "name": "cache_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of entries currently in the query cache across all shards assigned to selected nodes.",
          "name": "cache_size",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total number of query cache evictions across all shards assigned to selected nodes.",
          "name": "evictions",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total count of query cache hits across all shards assigned to selected nodes.",
          "name": "hit_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount of memory used for the query cache across all shards assigned to selected nodes.",
          "name": "memory_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total amount, in bytes, of memory used for the query cache across all shards assigned to selected nodes.",
          "name": "memory_size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total count of query cache misses across all shards assigned to selected nodes.",
          "name": "miss_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total count of hits and misses in the query cache across all shards assigned to selected nodes.",
          "name": "total_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Stats.ts#L192-L226"
    },
    {
      "kind": "interface",
      "name": {
        "name": "NodeReloadError",
        "namespace": "nodes._types"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "reload_exception",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ErrorCause",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "nodes/_types/NodeReloadResult.ts#L24-L27"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "global"
        },
        {
          "name": "exact"
        },
        {
          "name": "exact_fuzzy"
        },
        {
          "name": "fuzzy"
        },
        {
          "name": "prefix"
        },
        {
          "name": "suffix"
        },
        {
          "name": "contains"
        },
        {
          "name": "lt"
        },
        {
          "name": "lte"
        },
        {
          "name": "gt"
        },
        {
          "name": "gte"
        },
        {
          "name": "always"
        }
      ],
      "name": {
        "name": "QueryRuleCriteriaType",
        "namespace": "query_rules._types"
      },
      "specLocation": "query_rules/_types/QueryRuleset.ts#L55-L68"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "pinned"
        },
        {
          "name": "exclude"
        }
      ],
      "name": {
        "name": "QueryRuleType",
        "namespace": "query_rules._types"
      },
      "specLocation": "query_rules/_types/QueryRuleset.ts#L44-L47"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "min"
        },
        {
          "name": "max"
        },
        {
          "name": "sum"
        },
        {
          "name": "avg"
        },
        {
          "name": "value_count"
        }
      ],
      "name": {
        "name": "Metric",
        "namespace": "rollup._types"
      },
      "specLocation": "rollup/_types/Metric.ts#L22-L28"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "started"
        },
        {
          "name": "indexing"
        },
        {
          "name": "stopping"
        },
        {
          "name": "stopped"
        },
        {
          "name": "aborting"
        }
      ],
      "name": {
        "name": "IndexingJobState",
        "namespace": "rollup.get_jobs"
      },
      "specLocation": "rollup/get_jobs/types.ts#L66-L72"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "cluster"
        },
        {
          "name": "indices"
        },
        {
          "name": "shards"
        }
      ],
      "name": {
        "name": "StatsLevel",
        "namespace": "searchable_snapshots._types"
      },
      "specLocation": "searchable_snapshots/_types/stats.ts#L20-L24"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "rest"
        },
        {
          "name": "cross_cluster"
        }
      ],
      "name": {
        "name": "ApiKeyType",
        "namespace": "security._types"
      },
      "specLocation": "security/_types/ApiKey.ts#L115-L118"
    },
    {
      "isOpen": true,
      "kind": "enum",
      "members": [
        {
          "name": "all"
        },
        {
          "name": "cancel_task"
        },
        {
          "name": "manage"
        },
        {
          "name": "manage_api_key"
        },
        {
          "name": "manage_behavioral_analytics"
        },
        {
          "name": "manage_enrich"
        },
        {
          "name": "manage_index_templates"
        },
        {
          "name": "manage_inference"
        },
        {
          "name": "manage_ingest_pipelines"
        },
        {
          "name": "manage_logstash_pipelines"
        },
        {
          "name": "manage_ml"
        },
        {
          "name": "manage_own_api_key"
        },
        {
          "name": "manage_pipeline"
        },
        {
          "name": "manage_search_application"
        },
        {
          "name": "manage_search_query_rules"
        },
        {
          "name": "manage_search_synonyms"
        },
        {
          "name": "manage_security"
        },
        {
          "name": "manage_transform"
        },
        {
          "name": "monitor"
        },
        {
          "name": "monitor_enrich"
        },
        {
          "name": "monitor_inference"
        },
        {
          "name": "monitor_ml"
        },
        {
          "name": "monitor_transform"
        },
        {
          "name": "none"
        },
        {
          "name": "post_behavioral_analytics_event"
        },
        {
          "name": "read_pipeline"
        },
        {
          "name": "read_security"
        }
      ],
      "name": {
        "name": "ClusterPrivilege",
        "namespace": "security._types"
      },
      "specLocation": "security/_types/Privileges.ts#L42-L199"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "In this type of grant, you must supply the user ID and password for which you want to create the API key.",
          "name": "password"
        },
        {
          "description": "In this type of grant, you must supply an access token that was created by the Elasticsearch token service.",
          "name": "access_token"
        }
      ],
      "name": {
        "name": "GrantType",
        "namespace": "security._types"
      },
      "specLocation": "security/_types/GrantType.ts#L20-L29"
    },
    {
      "isOpen": true,
      "kind": "enum",
      "members": [
        {
          "name": "all"
        },
        {
          "name": "auto_configure"
        },
        {
          "name": "create"
        },
        {
          "name": "create_doc"
        },
        {
          "name": "create_index"
        },
        {
          "name": "delete"
        },
        {
          "name": "delete_index"
        },
        {
          "name": "index"
        },
        {
          "name": "maintenance"
        },
        {
          "name": "manage"
        },
        {
          "name": "manage_data_stream_lifecycle"
        },
        {
          "name": "monitor"
        },
        {
          "name": "none"
        },
        {
          "name": "read"
        },
        {
          "name": "view_index_metadata"
        },
        {
          "name": "write"
        }
      ],
      "name": {
        "name": "IndexPrivilege",
        "namespace": "security._types"
      },
      "specLocation": "security/_types/Privileges.ts#L362-L404"
    },
    {
      "codegenNames": [
        "json_text",
        "query",
        "template"
      ],
      "description": "While creating or updating a role you can provide either a JSON structure or a string to the API.\nHowever, the response provided by Elasticsearch will only be string with a json-as-text content.\n\nSince this is embedded in `IndicesPrivileges`, the same structure is used for clarity in both contexts.",
      "kind": "type_alias",
      "name": {
        "name": "IndicesPrivilegesQuery",
        "namespace": "security._types"
      },
      "specLocation": "security/_types/Privileges.ts#L317-L325",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "RoleTemplateQuery",
              "namespace": "security._types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "RoleTemplateQuery",
        "namespace": "security._types"
      },
      "properties": [
        {
          "description": "When you create a role, you can specify a query that defines the document level security permissions. You can optionally\nuse Mustache templates in the role query to insert the username of the current authenticated user into the role.\nLike other places in Elasticsearch that support templating or scripting, you can specify inline, stored, or file-based\ntemplates and define custom parameters. You access the details for the current authenticated user through the _user parameter.",
          "extDocId": "templating-role-query",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/field-and-document-access-control.html#templating-role-query",
          "name": "template",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RoleTemplateScript",
              "namespace": "security._types"
            }
          }
        }
      ],
      "specLocation": "security/_types/Privileges.ts#L327-L337"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RoleTemplateScript",
        "namespace": "security._types"
      },
      "properties": [
        {
          "name": "source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RoleTemplateInlineQuery",
              "namespace": "security._types"
            }
          }
        },
        {
          "description": "The `id` for a stored script.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies any named parameters that are passed into the script as variables.\nUse parameters instead of hard-coded values to decrease compile time.",
          "name": "params",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "Specifies the language the script is written in.",
          "name": "lang",
          "required": false,
          "serverDefault": "painless",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptLanguage",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "options",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "shortcutProperty": "source",
      "specLocation": "security/_types/Privileges.ts#L339-L357"
    },
    {
      "codegenNames": [
        "query_string",
        "query_object"
      ],
      "kind": "type_alias",
      "name": {
        "name": "RoleTemplateInlineQuery",
        "namespace": "security._types"
      },
      "specLocation": "security/_types/Privileges.ts#L359-L360",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "enum",
      "members": [],
      "name": {
        "name": "RemoteClusterPrivilege",
        "namespace": "security._types"
      },
      "specLocation": "security/_types/Privileges.ts#L201-L214"
    },
    {
      "isOpen": true,
      "kind": "enum",
      "members": [
        {
          "name": "search_application_query"
        }
      ],
      "name": {
        "name": "RestrictionWorkflow",
        "namespace": "security._types"
      },
      "specLocation": "security/_types/RoleDescriptor.ts#L134-L137"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "string"
        },
        {
          "name": "json"
        }
      ],
      "name": {
        "name": "TemplateFormat",
        "namespace": "security._types"
      },
      "specLocation": "security/_types/RoleTemplate.ts#L22-L25"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "UserProfileId",
        "namespace": "security._types"
      },
      "specLocation": "security/_types/UserProfile.ts#L25-L25",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "password"
        },
        {
          "name": "client_credentials"
        },
        {
          "name": "_kerberos"
        },
        {
          "name": "refresh_token"
        }
      ],
      "name": {
        "name": "AccessTokenGrantType",
        "namespace": "security.get_token"
      },
      "specLocation": "security/get_token/types.ts#L23-L28"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "access_token"
        },
        {
          "name": "password"
        }
      ],
      "name": {
        "name": "ApiKeyGrantType",
        "namespace": "security.grant_api_key"
      },
      "specLocation": "security/grant_api_key/types.ts#L48-L51"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ApplicationsPrivileges",
        "namespace": "security.has_privileges"
      },
      "specLocation": "security/has_privileges/types.ts#L46-L46",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "Name",
            "namespace": "_types"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "ResourcePrivileges",
            "namespace": "security.has_privileges"
          }
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ResourcePrivileges",
        "namespace": "security.has_privileges"
      },
      "specLocation": "security/has_privileges/types.ts#L47-L47",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "Name",
            "namespace": "_types"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "Privileges",
            "namespace": "security.has_privileges"
          }
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Privileges",
        "namespace": "security.has_privileges"
      },
      "specLocation": "security/has_privileges/types.ts#L48-L48",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "string",
            "namespace": "_builtins"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "boolean",
            "namespace": "_builtins"
          }
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "ApiKeyAggregate",
        "namespace": "security.query_api_keys"
      },
      "specLocation": "security/query_api_keys/types.ts#L122-L139",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "CardinalityAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ValueCountAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "StringTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "LongTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DoubleTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "UnmappedTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MultiTermsAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "MissingAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FilterAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "FiltersAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "RangeAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "DateRangeAggregate",
              "namespace": "_types.aggregations"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "CompositeAggregate",
              "namespace": "_types.aggregations"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "external_tag",
        "nonExhaustive": true
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "restart"
        },
        {
          "name": "remove"
        },
        {
          "name": "replace"
        }
      ],
      "name": {
        "name": "Type",
        "namespace": "shutdown._types"
      },
      "specLocation": "shutdown/_types/types.ts#L20-L24"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "not_started"
        },
        {
          "name": "in_progress"
        },
        {
          "name": "stalled"
        },
        {
          "name": "complete"
        }
      ],
      "name": {
        "name": "ShutdownStatus",
        "namespace": "shutdown.get_node"
      },
      "specLocation": "shutdown/get_node/ShutdownGetNodeResponse.ts#L45-L50"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "remove"
        },
        {
          "name": "restart"
        }
      ],
      "name": {
        "name": "ShutdownType",
        "namespace": "shutdown.get_node"
      },
      "specLocation": "shutdown/get_node/ShutdownGetNodeResponse.ts#L40-L43"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Repository",
        "namespace": "snapshot._types"
      },
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L24-L34",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "AzureRepository",
              "namespace": "snapshot._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "GcsRepository",
              "namespace": "snapshot._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "S3Repository",
              "namespace": "snapshot._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SharedFileSystemRepository",
              "namespace": "snapshot._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "ReadOnlyUrlRepository",
              "namespace": "snapshot._types"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "SourceOnlyRepository",
              "namespace": "snapshot._types"
            }
          }
        ],
        "kind": "union_of"
      },
      "variants": {
        "kind": "internal_tag",
        "nonExhaustive": true,
        "tag": "type"
      }
    },
    {
      "inherits": {
        "type": {
          "name": "RepositoryBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AzureRepository",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "azure"
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AzureRepositorySettings",
              "namespace": "snapshot._types"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L40-L43"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RepositoryBase",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "uuid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Uuid",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L36-L38"
    },
    {
      "inherits": {
        "type": {
          "name": "RepositorySettingsBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AzureRepositorySettings",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "client",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "container",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "base_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "readonly",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "location_mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L77-L83"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RepositorySettingsBase",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "chunk_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "compress",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_restore_bytes_per_sec",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_snapshot_bytes_per_sec",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L70-L75"
    },
    {
      "inherits": {
        "type": {
          "name": "RepositoryBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GcsRepository",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "gcs"
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GcsRepositorySettings",
              "namespace": "snapshot._types"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L45-L48"
    },
    {
      "inherits": {
        "type": {
          "name": "RepositorySettingsBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GcsRepositorySettings",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "bucket",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "client",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "base_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "readonly",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "application_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L85-L91"
    },
    {
      "inherits": {
        "type": {
          "name": "RepositoryBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "S3Repository",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "s3"
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "S3RepositorySettings",
              "namespace": "snapshot._types"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L50-L53"
    },
    {
      "inherits": {
        "type": {
          "name": "RepositorySettingsBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "S3RepositorySettings",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "bucket",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "client",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "base_path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "readonly",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "server_side_encryption",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "buffer_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "canned_acl",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "storage_class",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L93-L102"
    },
    {
      "inherits": {
        "type": {
          "name": "RepositoryBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SharedFileSystemRepository",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "fs"
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SharedFileSystemRepositorySettings",
              "namespace": "snapshot._types"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L55-L58"
    },
    {
      "inherits": {
        "type": {
          "name": "RepositorySettingsBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SharedFileSystemRepositorySettings",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "location",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_number_of_snapshots",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "readonly",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L104-L108"
    },
    {
      "inherits": {
        "type": {
          "name": "RepositoryBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ReadOnlyUrlRepository",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "url"
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ReadOnlyUrlRepositorySettings",
              "namespace": "snapshot._types"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L60-L63"
    },
    {
      "inherits": {
        "type": {
          "name": "RepositorySettingsBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ReadOnlyUrlRepositorySettings",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "http_max_retries",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "http_socket_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_number_of_snapshots",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "url",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L110-L115"
    },
    {
      "inherits": {
        "type": {
          "name": "RepositoryBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SourceOnlyRepository",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "literal_value",
            "value": "source"
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceOnlyRepositorySettings",
              "namespace": "snapshot._types"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L65-L68"
    },
    {
      "inherits": {
        "type": {
          "name": "RepositorySettingsBase",
          "namespace": "snapshot._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SourceOnlyRepositorySettings",
        "namespace": "snapshot._types"
      },
      "properties": [
        {
          "name": "delegate_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_number_of_snapshots",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "readonly"
          ],
          "name": "read_only",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "snapshot/_types/SnapshotRepository.ts#L117-L124"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Number of shards in the snapshot that were successfully stored in the repository.",
          "name": "DONE"
        },
        {
          "description": "Number of shards in the snapshot that were not successfully stored in the repository.",
          "name": "FAILURE"
        },
        {
          "description": "Number of shards in the snapshot that are in the finalizing stage of being stored in the repository.",
          "name": "FINALIZE"
        },
        {
          "description": "Number of shards in the snapshot that are in the initializing stage of being stored in the repository.",
          "name": "INIT"
        },
        {
          "description": "Number of shards in the snapshot that are in the started stage of being stored in the repository.",
          "name": "STARTED"
        }
      ],
      "name": {
        "name": "ShardsStatsStage",
        "namespace": "snapshot._types"
      },
      "specLocation": "snapshot/_types/SnapshotShardsStatsStage.ts#L20-L31"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "start_time"
        },
        {
          "name": "duration"
        },
        {
          "name": "name"
        },
        {
          "name": "index_count"
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.16.0"
            }
          },
          "name": "repository"
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.16.0"
            }
          },
          "name": "shard_count"
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.16.0"
            }
          },
          "name": "failed_shard_count"
        }
      ],
      "name": {
        "name": "SnapshotSort",
        "namespace": "snapshot._types"
      },
      "specLocation": "snapshot/_types/SnapshotInfo.ts#L73-L93"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Row",
        "namespace": "sql"
      },
      "specLocation": "sql/types.ts#L28-L28",
      "type": {
        "kind": "array_of",
        "value": {
          "kind": "user_defined_value"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "csv"
        },
        {
          "name": "json"
        },
        {
          "name": "tsv"
        },
        {
          "name": "txt"
        },
        {
          "name": "yaml"
        },
        {
          "name": "cbor"
        },
        {
          "name": "smile"
        }
      ],
      "name": {
        "name": "SqlFormat",
        "namespace": "sql.query"
      },
      "specLocation": "sql/query/QuerySqlRequest.ts#L124-L132"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "SynonymString",
        "namespace": "synonyms._types"
      },
      "specLocation": "synonyms/_types/SynonymRule.ts#L23-L23",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "Node ID",
          "name": "nodes"
        },
        {
          "description": "Parent task ID",
          "name": "parents"
        },
        {
          "description": "Do not group tasks.",
          "name": "none"
        }
      ],
      "name": {
        "name": "GroupBy",
        "namespace": "tasks._types"
      },
      "specLocation": "tasks/_types/GroupBy.ts#L20-L27"
    },
    {
      "codegenNames": [
        "flat",
        "grouped"
      ],
      "kind": "type_alias",
      "name": {
        "name": "TaskInfos",
        "namespace": "tasks._types"
      },
      "specLocation": "tasks/_types/TaskListResponseBase.ts#L40-L43",
      "type": {
        "items": [
          {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TaskInfo",
                "namespace": "tasks._types"
              }
            }
          },
          {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ParentTaskInfo",
                "namespace": "tasks._types"
              }
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "TaskInfo",
        "namespace": "tasks._types"
      },
      "properties": [
        {
          "name": "action",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "cancelled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "cancellable",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "headers",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "node",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NodeId",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "running_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "running_time_in_nanos",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitNanos",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "start_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Task status information can vary wildly from task to task.",
          "name": "status",
          "required": false,
          "type": {
            "kind": "user_defined_value"
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "parent_task_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TaskId",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "tasks/_types/TaskInfo.ts#L32-L47"
    },
    {
      "inherits": {
        "type": {
          "name": "TaskInfo",
          "namespace": "tasks._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ParentTaskInfo",
        "namespace": "tasks._types"
      },
      "properties": [
        {
          "name": "children",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TaskInfo",
                "namespace": "tasks._types"
              }
            }
          }
        }
      ],
      "specLocation": "tasks/_types/TaskListResponseBase.ts#L45-L47"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "awaits_successful_execution"
        },
        {
          "name": "ackable"
        },
        {
          "name": "acked"
        }
      ],
      "name": {
        "name": "AcknowledgementOptions",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Action.ts#L103-L107"
    },
    {
      "kind": "enum",
      "members": [
        {
          "description": "The action execution is simulated. Each action type defines its own simulation operation mode. For example, the email action creates the email that would have been sent but does not actually send it. In this mode, the action might be throttled if the current state of the watch indicates it should be.",
          "name": "simulate"
        },
        {
          "description": "Similar to the `simulate` mode, except the action is not throttled even if the current state of the watch indicates it should be.",
          "name": "force_simulate"
        },
        {
          "description": "Executes the action as it would have been executed if the watch had been triggered by its own trigger. The execution might be throttled if the current state of the watch indicates it should be.",
          "name": "execute"
        },
        {
          "description": "Similar to the `execute` mode, except the action is not throttled even if the current state of the watch indicates it should be.",
          "name": "force_execute"
        },
        {
          "description": "The action is skipped and is not executed or simulated. Effectively forces the action to be throttled.",
          "name": "skip"
        }
      ],
      "name": {
        "name": "ActionExecutionMode",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Action.ts#L67-L88"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "success"
        },
        {
          "name": "failure"
        },
        {
          "name": "simulated"
        },
        {
          "name": "throttled"
        }
      ],
      "name": {
        "name": "ActionStatusOptions",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Action.ts#L96-L101"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "email"
        },
        {
          "name": "webhook"
        },
        {
          "name": "index"
        },
        {
          "name": "logging"
        },
        {
          "name": "slack"
        },
        {
          "name": "pagerduty"
        }
      ],
      "name": {
        "name": "ActionType",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Action.ts#L58-L65"
    },
    {
      "kind": "type_alias",
      "name": {
        "name": "Actions",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Action.ts#L56-L56",
      "type": {
        "key": {
          "kind": "instance_of",
          "type": {
            "name": "IndexName",
            "namespace": "_types"
          }
        },
        "kind": "dictionary_of",
        "singleKey": false,
        "value": {
          "kind": "instance_of",
          "type": {
            "name": "ActionStatus",
            "namespace": "watcher._types"
          }
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "ActionStatus",
        "namespace": "watcher._types"
      },
      "properties": [
        {
          "name": "ack",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AcknowledgeState",
              "namespace": "watcher._types"
            }
          }
        },
        {
          "name": "last_execution",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExecutionState",
              "namespace": "watcher._types"
            }
          }
        },
        {
          "name": "last_successful_execution",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExecutionState",
              "namespace": "watcher._types"
            }
          }
        },
        {
          "name": "last_throttle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ThrottleState",
              "namespace": "watcher._types"
            }
          }
        }
      ],
      "specLocation": "watcher/_types/Action.ts#L125-L130"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AcknowledgeState",
        "namespace": "watcher._types"
      },
      "properties": [
        {
          "name": "state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AcknowledgementOptions",
              "namespace": "watcher._types"
            }
          }
        },
        {
          "name": "timestamp",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "watcher/_types/Action.ts#L109-L112"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ExecutionState",
        "namespace": "watcher._types"
      },
      "properties": [
        {
          "name": "successful",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "timestamp",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "reason",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "watcher/_types/Action.ts#L114-L118"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ThrottleState",
        "namespace": "watcher._types"
      },
      "properties": [
        {
          "name": "reason",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "timestamp",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "watcher/_types/Action.ts#L120-L123"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "not_eq"
        },
        {
          "name": "eq"
        },
        {
          "name": "lt"
        },
        {
          "name": "gt"
        },
        {
          "name": "lte"
        },
        {
          "name": "gte"
        }
      ],
      "name": {
        "name": "ConditionOp",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Conditions.ts#L41-L48"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "always"
        },
        {
          "name": "never"
        },
        {
          "name": "script"
        },
        {
          "name": "compare"
        },
        {
          "name": "array_compare"
        }
      ],
      "name": {
        "name": "ConditionType",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Conditions.ts#L64-L70"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "http"
        },
        {
          "name": "https"
        }
      ],
      "name": {
        "name": "ConnectionScheme",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Input.ts#L39-L42"
    },
    {
      "docId": "cron-expressions",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/api-conventions.html#api-cron-expressions",
      "kind": "type_alias",
      "name": {
        "name": "CronExpression",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Schedule.ts#L27-L30",
      "type": {
        "kind": "instance_of",
        "type": {
          "name": "string",
          "namespace": "_builtins"
        }
      }
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "json"
        },
        {
          "name": "yaml"
        }
      ],
      "name": {
        "name": "DataAttachmentFormat",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Actions.ts#L187-L190"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "sunday"
        },
        {
          "name": "monday"
        },
        {
          "name": "tuesday"
        },
        {
          "name": "wednesday"
        },
        {
          "name": "thursday"
        },
        {
          "name": "friday"
        },
        {
          "name": "saturday"
        }
      ],
      "name": {
        "name": "Day",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Schedule.ts#L37-L45"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "lowest"
        },
        {
          "name": "low"
        },
        {
          "name": "normal"
        },
        {
          "name": "high"
        },
        {
          "name": "highest"
        }
      ],
      "name": {
        "name": "EmailPriority",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Actions.ts#L197-L203"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "awaits_execution"
        },
        {
          "name": "started"
        },
        {
          "name": "input"
        },
        {
          "name": "condition"
        },
        {
          "name": "actions"
        },
        {
          "name": "watch_transform"
        },
        {
          "name": "aborted"
        },
        {
          "name": "finished"
        }
      ],
      "name": {
        "name": "ExecutionPhase",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Execution.ts#L49-L58"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "awaits_execution"
        },
        {
          "name": "checking"
        },
        {
          "name": "execution_not_needed"
        },
        {
          "name": "throttled"
        },
        {
          "name": "executed"
        },
        {
          "name": "failed"
        },
        {
          "name": "deleted_while_queued"
        },
        {
          "name": "not_executed_already_queued"
        }
      ],
      "name": {
        "name": "ExecutionStatus",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Execution.ts#L38-L47"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "head"
        },
        {
          "name": "get"
        },
        {
          "name": "post"
        },
        {
          "name": "put"
        },
        {
          "name": "delete"
        }
      ],
      "name": {
        "name": "HttpInputMethod",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Input.ts#L59-L65"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "http"
        },
        {
          "name": "search"
        },
        {
          "name": "simple"
        }
      ],
      "name": {
        "name": "InputType",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Input.ts#L100-L104"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "january"
        },
        {
          "name": "february"
        },
        {
          "name": "march"
        },
        {
          "name": "april"
        },
        {
          "name": "may"
        },
        {
          "name": "june"
        },
        {
          "name": "july"
        },
        {
          "name": "august"
        },
        {
          "name": "september"
        },
        {
          "name": "october"
        },
        {
          "name": "november"
        },
        {
          "name": "december"
        }
      ],
      "name": {
        "name": "Month",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Schedule.ts#L65-L78"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "link"
        },
        {
          "name": "image"
        }
      ],
      "name": {
        "name": "PagerDutyContextType",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Actions.ts#L67-L70"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "trigger"
        },
        {
          "name": "resolve"
        },
        {
          "name": "acknowledge"
        }
      ],
      "name": {
        "name": "PagerDutyEventType",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Actions.ts#L72-L76"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "some"
        },
        {
          "name": "all"
        }
      ],
      "name": {
        "name": "Quantifier",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Conditions.ts#L74-L77"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "json"
        },
        {
          "name": "yaml"
        },
        {
          "name": "text"
        }
      ],
      "name": {
        "name": "ResponseContentType",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Input.ts#L106-L110"
    },
    {
      "codegenNames": [
        "text",
        "hour_minute"
      ],
      "description": "A time of day, expressed either as `hh:mm`, `noon`, `midnight`, or an hour/minutes structure.",
      "kind": "type_alias",
      "name": {
        "name": "ScheduleTimeOfDay",
        "namespace": "watcher._types"
      },
      "specLocation": "watcher/_types/Schedule.ts#L99-L104",
      "type": {
        "items": [
          {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          },
          {
            "kind": "instance_of",
            "type": {
              "name": "HourAndMinute",
              "namespace": "watcher._types"
            }
          }
        ],
        "kind": "union_of"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "HourAndMinute",
        "namespace": "watcher._types"
      },
      "properties": [
        {
          "name": "hour",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "minute",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "watcher/_types/Schedule.ts#L106-L109"
    },
    {
      "kind": "enum",
      "members": [
        {
          "aliases": [
            "all"
          ],
          "name": "_all"
        },
        {
          "name": "queued_watches"
        },
        {
          "name": "current_watches"
        },
        {
          "name": "pending_watches"
        }
      ],
      "name": {
        "name": "WatcherMetric",
        "namespace": "watcher.stats"
      },
      "specLocation": "watcher/stats/types.ts#L42-L48"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "stopped"
        },
        {
          "name": "starting"
        },
        {
          "name": "started"
        },
        {
          "name": "stopping"
        }
      ],
      "name": {
        "name": "WatcherState",
        "namespace": "watcher.stats"
      },
      "specLocation": "watcher/stats/types.ts#L26-L31"
    },
    {
      "kind": "enum",
      "members": [
        {
          "name": "build"
        },
        {
          "name": "features"
        },
        {
          "name": "license"
        }
      ],
      "name": {
        "name": "XPackCategory",
        "namespace": "xpack.info"
      },
      "specLocation": "xpack/info/XPackInfoRequest.ts#L44-L48"
    },
    {
      "attachedBehaviors": [
        "CommonQueryParameters"
      ],
      "behaviors": [
        {
          "type": {
            "name": "CommonQueryParameters",
            "namespace": "_spec_utils"
          }
        }
      ],
      "kind": "interface",
      "name": {
        "name": "RequestBase",
        "namespace": "_types"
      },
      "properties": [],
      "specLocation": "_types/Base.ts#L34-L34"
    },
    {
      "description": "Implements a set of common query parameters all API's support.\nSince these can break the request structure these are listed explicitly as a behavior.\nIts up to individual clients to define support although `error_trace` and `pretty` are\nrecommended as a minimum.",
      "kind": "interface",
      "name": {
        "name": "CommonQueryParameters",
        "namespace": "_spec_utils"
      },
      "properties": [
        {
          "description": "When set to `true` Elasticsearch will include the full stack trace of errors\nwhen they occur.",
          "name": "error_trace",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Comma-separated list of filters in dot notation which reduce the response\nreturned by Elasticsearch.",
          "name": "filter_path",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "When set to `true` will return statistics in a format suitable for humans.\nFor example `\"exists_time\": \"1h\"` for humans and\n`\"eixsts_time_in_millis\": 3600000` for computers. When disabled the human\nreadable values will be omitted. This makes sense for responses being consumed\nonly by machines.",
          "name": "human",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If set to `true` the returned JSON will be \"pretty-formatted\". Only use\nthis option for debugging only.",
          "name": "pretty",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_spec_utils/behaviors.ts#L50-L84"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AcknowledgedResponseBase",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "For a successful response, this value is always true. On failure, an exception is returned instead.",
          "name": "acknowledged",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/Base.ts#L47-L50"
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "async_search._types.AsyncSearchDocumentResponseBase"
        }
      ],
      "inherits": {
        "type": {
          "name": "AsyncSearchResponseBase",
          "namespace": "async_search._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AsyncSearchDocumentResponseBase",
        "namespace": "async_search._types"
      },
      "properties": [
        {
          "name": "response",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TDocument",
                  "namespace": "async_search._types.AsyncSearchDocumentResponseBase"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "AsyncSearch",
              "namespace": "async_search._types"
            }
          }
        }
      ],
      "specLocation": "async_search/_types/AsyncSearchResponseBase.ts#L50-L54"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AsyncSearchResponseBase",
        "namespace": "async_search._types"
      },
      "properties": [
        {
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "When the query is no longer running, this property indicates whether the search failed or was successfully completed on all shards.\nWhile the query is running, `is_partial` is always set to `true`.",
          "name": "is_partial",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates whether the search is still running or has completed.\nNOTE: If the search failed after some shards returned their results or the node that is coordinating the async search dies, results may be partial even though `is_running` is `false`.",
          "name": "is_running",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates when the async search will expire.",
          "name": "expiration_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "expiration_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "start_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "start_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates when the async search completed. Only present\nwhen the search has completed.",
          "name": "completion_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "completion_time_in_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "async_search/_types/AsyncSearchResponseBase.ts#L24-L49"
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "async_search._types.AsyncSearch"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "AsyncSearch",
        "namespace": "async_search._types"
      },
      "properties": [
        {
          "description": "Partial aggregations results, coming from the shards that have already completed the execution of the query.",
          "name": "aggregations",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "AggregateName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Aggregate",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "name": "_clusters",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ClusterStatistics",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "hits",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TDocument",
                  "namespace": "async_search._types.AsyncSearch"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "HitsMetadata",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "max_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates how many reductions of the results have been performed.\nIf this number increases compared to the last retrieved results for a get asynch search request, you can expect additional results included in the search response.",
          "name": "num_reduce_phases",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "profile",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Profile",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "name": "pit_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_scroll_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScrollId",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates how many shards have run the query.\nNote that in order for shard results to be included in the search response, they need to be reduced first.",
          "name": "_shards",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardStatistics",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "suggest",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "SuggestionName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "array_of",
              "value": {
                "generics": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "name": "TDocument",
                      "namespace": "async_search._types.AsyncSearch"
                    }
                  }
                ],
                "kind": "instance_of",
                "type": {
                  "name": "Suggest",
                  "namespace": "_global.search._types"
                }
              }
            }
          }
        },
        {
          "name": "terminated_early",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "timed_out",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "took",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "async_search/_types/AsyncSearch.ts#L30-L56"
    },
    {
      "inherits": {
        "type": {
          "name": "AsyncSearchResponseBase",
          "namespace": "async_search._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StatusResponseBase",
        "namespace": "async_search.status"
      },
      "properties": [
        {
          "description": "Indicates how many shards have run the query so far.",
          "name": "_shards",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardStatistics",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Metadata about clusters involved in the cross-cluster search.\nNot shown for local-only searches.",
          "name": "_clusters",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ClusterStatistics",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If the async search completed, this field shows the status code of the search.\nFor example, 200 indicates that the async search was successfully completed.\n503 indicates that the async search was completed with an error.",
          "name": "completion_status",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "async_search/status/AsyncSearchStatusResponse.ts#L24-L38"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SlicedScroll",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/SlicedScroll.ts#L23-L27"
    },
    {
      "kind": "interface",
      "name": {
        "name": "OperationContainer",
        "namespace": "_global.bulk"
      },
      "properties": [
        {
          "description": "Indexes the specified document.\nIf the document exists, replaces the document and increments the version.\nThe following line must contain the source data to be indexed.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexOperation",
              "namespace": "_global.bulk"
            }
          }
        },
        {
          "description": "Indexes the specified document if it does not already exist.\nThe following line must contain the source data to be indexed.",
          "name": "create",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CreateOperation",
              "namespace": "_global.bulk"
            }
          }
        },
        {
          "description": "Performs a partial document update.\nThe following line must contain the partial document and update options.",
          "name": "update",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "UpdateOperation",
              "namespace": "_global.bulk"
            }
          }
        },
        {
          "description": "Removes the specified document from the index.",
          "name": "delete",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DeleteOperation",
              "namespace": "_global.bulk"
            }
          }
        }
      ],
      "specLocation": "_global/bulk/types.ts#L145-L167",
      "variants": {
        "kind": "container"
      }
    },
    {
      "inherits": {
        "type": {
          "name": "WriteOperation",
          "namespace": "_global.bulk"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IndexOperation",
        "namespace": "_global.bulk"
      },
      "properties": [],
      "specLocation": "_global/bulk/types.ts#L132-L132"
    },
    {
      "inherits": {
        "type": {
          "name": "OperationBase",
          "namespace": "_global.bulk"
        }
      },
      "kind": "interface",
      "name": {
        "name": "WriteOperation",
        "namespace": "_global.bulk"
      },
      "properties": [
        {
          "description": "A map from the full name of fields to the name of dynamic templates.\nDefaults to an empty map.\nIf a name matches a dynamic template, then that template will be applied regardless of other match predicates defined in the template.\nIf a field is already defined in the mapping, then this parameter wonâ€™t be used.",
          "name": "dynamic_templates",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "ID of the pipeline to use to preprocess incoming documents.\nIf the index has a default ingest pipeline specified, then setting the value to `_none` disables the default ingest pipeline for this request.\nIf a final pipeline is configured it will always run, regardless of the value of this parameter.",
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the requestâ€™s actions must target an index alias.",
          "name": "require_alias",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/bulk/types.ts#L109-L128"
    },
    {
      "kind": "interface",
      "name": {
        "name": "OperationBase",
        "namespace": "_global.bulk"
      },
      "properties": [
        {
          "description": "The document ID.",
          "name": "_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the index or index alias to perform the action on.",
          "name": "_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "if_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "if_seq_no",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SequenceNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/bulk/types.ts#L90-L107"
    },
    {
      "inherits": {
        "type": {
          "name": "WriteOperation",
          "namespace": "_global.bulk"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CreateOperation",
        "namespace": "_global.bulk"
      },
      "properties": [],
      "specLocation": "_global/bulk/types.ts#L130-L130"
    },
    {
      "inherits": {
        "type": {
          "name": "OperationBase",
          "namespace": "_global.bulk"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UpdateOperation",
        "namespace": "_global.bulk"
      },
      "properties": [
        {
          "description": "If `true`, the requestâ€™s actions must target an index alias.",
          "name": "require_alias",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "retry_on_conflict",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/bulk/types.ts#L136-L143"
    },
    {
      "inherits": {
        "type": {
          "name": "OperationBase",
          "namespace": "_global.bulk"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DeleteOperation",
        "namespace": "_global.bulk"
      },
      "properties": [],
      "specLocation": "_global/bulk/types.ts#L134-L134"
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.bulk.UpdateAction"
        },
        {
          "name": "TPartialDocument",
          "namespace": "_global.bulk.UpdateAction"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "UpdateAction",
        "namespace": "_global.bulk"
      },
      "properties": [
        {
          "description": "Set to false to disable setting 'result' in the response\nto 'noop' if no change to the document occurred.",
          "name": "detect_noop",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A partial update to an existing document.",
          "name": "doc",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TPartialDocument",
              "namespace": "_global.bulk.UpdateAction"
            }
          }
        },
        {
          "description": "Set to true to use the contents of 'doc' as the value of 'upsert'",
          "name": "doc_as_upsert",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Script to execute to update the document.",
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Set to true to execute the script whether or not the document exists.",
          "name": "scripted_upsert",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Set to false to disable source retrieval. You can also specify a comma-separated\nlist of the fields you want to retrieve.",
          "name": "_source",
          "required": false,
          "serverDefault": "true",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfig",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "If the document does not already exist, the contents of 'upsert' are inserted as a\nnew document. If the document exists, the 'script' is executed.",
          "name": "upsert",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TDocument",
              "namespace": "_global.bulk.UpdateAction"
            }
          }
        }
      ],
      "specLocation": "_global/bulk/types.ts#L169-L205"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ResponseItem",
        "namespace": "_global.bulk"
      },
      "properties": [
        {
          "description": "The document ID associated with the operation.",
          "name": "_id",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Name of the index associated with the operation.\nIf the operation targeted a data stream, this is the backing index into which the document was written.",
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "HTTP status code returned for the operation.",
          "name": "status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains additional information about the failed operation.\nThe parameter is only returned for failed operations.",
          "name": "error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ErrorCause",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The primary term assigned to the document for the operation.",
          "name": "_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Result of the operation.\nSuccessful values are `created`, `deleted`, and `updated`.",
          "name": "result",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The sequence number assigned to the document for the operation.\nSequence numbers are used to ensure an older version of a document doesnâ€™t overwrite a newer version.",
          "name": "_seq_no",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SequenceNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains shard information for the operation.",
          "name": "_shards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardStatistics",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The document version associated with the operation.\nThe document version is incremented each time the document is updated.",
          "name": "_version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "forced_refresh",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "get",
          "required": false,
          "type": {
            "generics": [
              {
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                },
                "kind": "dictionary_of",
                "singleKey": false,
                "value": {
                  "kind": "user_defined_value"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "InlineGet",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/bulk/types.ts#L37-L81"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            {
              "kind": "user_defined_value"
            }
          ],
          "meta": {
            "description": "Document metadata",
            "fieldname": "metadata"
          },
          "type": {
            "name": "AdditionalProperties",
            "namespace": "_spec_utils"
          }
        }
      ],
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_types.InlineGet"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "InlineGet",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "found",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "_seq_no",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SequenceNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TDocument",
              "namespace": "_types.InlineGet"
            }
          }
        }
      ],
      "specLocation": "_types/common.ts#L321-L334"
    },
    {
      "attachedBehaviors": [
        "CommonCatQueryParameters",
        "CommonQueryParameters"
      ],
      "behaviors": [
        {
          "type": {
            "name": "CommonCatQueryParameters",
            "namespace": "_spec_utils"
          }
        }
      ],
      "inherits": {
        "type": {
          "name": "RequestBase",
          "namespace": "_types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CatRequestBase",
        "namespace": "cat._types"
      },
      "properties": [],
      "specLocation": "cat/_types/CatBase.ts#L28-L30"
    },
    {
      "description": "Implements a set of common query parameters all Cat API's support.\nSince these can break the request structure these are listed explicitly as a behavior.",
      "kind": "interface",
      "name": {
        "name": "CommonCatQueryParameters",
        "namespace": "_spec_utils"
      },
      "properties": [
        {
          "description": "Specifies the format to return the columnar data in, can be set to\n`text`, `json`, `cbor`, `yaml`, or `smile`.",
          "name": "format",
          "required": false,
          "serverDefault": "text",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "List of columns to appear in the response. Supports simple wildcards.",
          "name": "h",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "When set to `true` will output available columns. This option\ncan't be combined with any other query string option.",
          "name": "help",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the request computes the list of selected nodes from the\nlocal cluster state. If `false` the list of selected nodes are computed\nfrom the cluster state of the master node. In both cases the coordinating\nnode will send requests for further information to each selected node.",
          "name": "local",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Period to wait for a connection to the master node.",
          "name": "master_timeout",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "List of columns that determine how the table should be sorted.\nSorting defaults to ascending and can be changed by setting `:asc`\nor `:desc` as a suffix to the column name.",
          "name": "s",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "When set to `true` will enable verbose output.",
          "name": "v",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_spec_utils/behaviors.ts#L86-L132"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AliasesRecord",
        "namespace": "cat.aliases"
      },
      "properties": [
        {
          "aliases": [
            "a"
          ],
          "description": "alias name",
          "name": "alias",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "i",
            "idx"
          ],
          "description": "index alias points to",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "f",
            "fi"
          ],
          "description": "filter",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ri",
            "routingIndex"
          ],
          "description": "index routing",
          "name": "routing.index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "rs",
            "routingSearch"
          ],
          "description": "search routing",
          "name": "routing.search",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "w",
            "isWriteIndex"
          ],
          "description": "write index",
          "name": "is_write_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "cat/aliases/types.ts#L22-L53"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ComponentTemplate",
        "namespace": "cat.component_templates"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "version",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "alias_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "mapping_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "settings_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "metadata_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "included_in",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "cat/component_templates/types.ts#L20-L28"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CountRecord",
        "namespace": "cat.count"
      },
      "properties": [
        {
          "aliases": [
            "t",
            "time"
          ],
          "description": "seconds since 1970-01-01 00:00:00",
          "name": "epoch",
          "required": false,
          "type": {
            "generics": [
              {
                "generics": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "name": "UnitSeconds",
                      "namespace": "_types"
                    }
                  }
                ],
                "kind": "instance_of",
                "type": {
                  "name": "EpochTime",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "aliases": [
            "ts",
            "hms",
            "hhmmss"
          ],
          "description": "time in HH:MM:SS",
          "name": "timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeOfDay",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "dc",
            "docs.count",
            "docsCount"
          ],
          "description": "the document count",
          "name": "count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "cat/count/types.ts#L23-L39"
    },
    {
      "kind": "interface",
      "name": {
        "name": "HelpRecord",
        "namespace": "cat.help"
      },
      "properties": [
        {
          "name": "endpoint",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "cat/help/types.ts#L20-L22"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndicesRecord",
        "namespace": "cat.indices"
      },
      "properties": [
        {
          "aliases": [
            "h"
          ],
          "description": "current health status",
          "name": "health",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "s"
          ],
          "description": "open/close status",
          "name": "status",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "i",
            "idx"
          ],
          "description": "index name",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "id"
          ],
          "description": "index uuid",
          "name": "uuid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "p",
            "shards.primary",
            "shardsPrimary"
          ],
          "description": "number of primary shards",
          "name": "pri",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "r",
            "shards.replica",
            "shardsReplica"
          ],
          "description": "number of replica shards",
          "name": "rep",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dc",
            "docsCount"
          ],
          "description": "available docs",
          "name": "docs.count",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "aliases": [
            "dd",
            "docsDeleted"
          ],
          "description": "deleted docs",
          "name": "docs.deleted",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "aliases": [
            "cd"
          ],
          "description": "index creation date (millisecond value)",
          "name": "creation.date",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "cds"
          ],
          "description": "index creation date (as string)",
          "name": "creation.date.string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ss",
            "storeSize"
          ],
          "description": "store size of primaries & replicas",
          "name": "store.size",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "store size of primaries",
          "name": "pri.store.size",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "stable",
              "visibility": "public"
            },
            "stack": {
              "since": "8.11.0",
              "stability": "stable"
            }
          },
          "description": "total size of dataset (including the cache for partially mounted indices)",
          "name": "dataset.size",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "aliases": [
            "cs",
            "completionSize"
          ],
          "description": "size of completion",
          "name": "completion.size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "size of completion",
          "name": "pri.completion.size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "fm",
            "fielddataMemory"
          ],
          "description": "used fielddata cache",
          "name": "fielddata.memory_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "used fielddata cache",
          "name": "pri.fielddata.memory_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "fe",
            "fielddataEvictions"
          ],
          "description": "fielddata evictions",
          "name": "fielddata.evictions",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "fielddata evictions",
          "name": "pri.fielddata.evictions",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "qcm",
            "queryCacheMemory"
          ],
          "description": "used query cache",
          "name": "query_cache.memory_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "used query cache",
          "name": "pri.query_cache.memory_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "qce",
            "queryCacheEvictions"
          ],
          "description": "query cache evictions",
          "name": "query_cache.evictions",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "query cache evictions",
          "name": "pri.query_cache.evictions",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "rcm",
            "requestCacheMemory"
          ],
          "description": "used request cache",
          "name": "request_cache.memory_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "used request cache",
          "name": "pri.request_cache.memory_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "rce",
            "requestCacheEvictions"
          ],
          "description": "request cache evictions",
          "name": "request_cache.evictions",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "request cache evictions",
          "name": "pri.request_cache.evictions",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "rchc",
            "requestCacheHitCount"
          ],
          "description": "request cache hit count",
          "name": "request_cache.hit_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "request cache hit count",
          "name": "pri.request_cache.hit_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "rcmc",
            "requestCacheMissCount"
          ],
          "description": "request cache miss count",
          "name": "request_cache.miss_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "request cache miss count",
          "name": "pri.request_cache.miss_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ft",
            "flushTotal"
          ],
          "description": "number of flushes",
          "name": "flush.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of flushes",
          "name": "pri.flush.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ftt",
            "flushTotalTime"
          ],
          "description": "time spent in flush",
          "name": "flush.total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in flush",
          "name": "pri.flush.total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "gc",
            "getCurrent"
          ],
          "description": "number of current get ops",
          "name": "get.current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of current get ops",
          "name": "pri.get.current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "gti",
            "getTime"
          ],
          "description": "time spent in get",
          "name": "get.time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in get",
          "name": "pri.get.time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "gto",
            "getTotal"
          ],
          "description": "number of get ops",
          "name": "get.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of get ops",
          "name": "pri.get.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "geti",
            "getExistsTime"
          ],
          "description": "time spent in successful gets",
          "name": "get.exists_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in successful gets",
          "name": "pri.get.exists_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "geto",
            "getExistsTotal"
          ],
          "description": "number of successful gets",
          "name": "get.exists_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of successful gets",
          "name": "pri.get.exists_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "gmti",
            "getMissingTime"
          ],
          "description": "time spent in failed gets",
          "name": "get.missing_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in failed gets",
          "name": "pri.get.missing_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "gmto",
            "getMissingTotal"
          ],
          "description": "number of failed gets",
          "name": "get.missing_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of failed gets",
          "name": "pri.get.missing_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "idc",
            "indexingDeleteCurrent"
          ],
          "description": "number of current deletions",
          "name": "indexing.delete_current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of current deletions",
          "name": "pri.indexing.delete_current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "idti",
            "indexingDeleteTime"
          ],
          "description": "time spent in deletions",
          "name": "indexing.delete_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in deletions",
          "name": "pri.indexing.delete_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "idto",
            "indexingDeleteTotal"
          ],
          "description": "number of delete ops",
          "name": "indexing.delete_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of delete ops",
          "name": "pri.indexing.delete_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "iic",
            "indexingIndexCurrent"
          ],
          "description": "number of current indexing ops",
          "name": "indexing.index_current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of current indexing ops",
          "name": "pri.indexing.index_current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "iiti",
            "indexingIndexTime"
          ],
          "description": "time spent in indexing",
          "name": "indexing.index_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in indexing",
          "name": "pri.indexing.index_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "iito",
            "indexingIndexTotal"
          ],
          "description": "number of indexing ops",
          "name": "indexing.index_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of indexing ops",
          "name": "pri.indexing.index_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "iif",
            "indexingIndexFailed"
          ],
          "description": "number of failed indexing ops",
          "name": "indexing.index_failed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of failed indexing ops",
          "name": "pri.indexing.index_failed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mc",
            "mergesCurrent"
          ],
          "description": "number of current merges",
          "name": "merges.current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of current merges",
          "name": "pri.merges.current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mcd",
            "mergesCurrentDocs"
          ],
          "description": "number of current merging docs",
          "name": "merges.current_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of current merging docs",
          "name": "pri.merges.current_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mcs",
            "mergesCurrentSize"
          ],
          "description": "size of current merges",
          "name": "merges.current_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "size of current merges",
          "name": "pri.merges.current_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mt",
            "mergesTotal"
          ],
          "description": "number of completed merge ops",
          "name": "merges.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of completed merge ops",
          "name": "pri.merges.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mtd",
            "mergesTotalDocs"
          ],
          "description": "docs merged",
          "name": "merges.total_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "docs merged",
          "name": "pri.merges.total_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mts",
            "mergesTotalSize"
          ],
          "description": "size merged",
          "name": "merges.total_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "size merged",
          "name": "pri.merges.total_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mtt",
            "mergesTotalTime"
          ],
          "description": "time spent in merges",
          "name": "merges.total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in merges",
          "name": "pri.merges.total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "rto",
            "refreshTotal"
          ],
          "description": "total refreshes",
          "name": "refresh.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "total refreshes",
          "name": "pri.refresh.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "rti",
            "refreshTime"
          ],
          "description": "time spent in refreshes",
          "name": "refresh.time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in refreshes",
          "name": "pri.refresh.time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "reto"
          ],
          "description": "total external refreshes",
          "name": "refresh.external_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "total external refreshes",
          "name": "pri.refresh.external_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "reti"
          ],
          "description": "time spent in external refreshes",
          "name": "refresh.external_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in external refreshes",
          "name": "pri.refresh.external_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "rli",
            "refreshListeners"
          ],
          "description": "number of pending refresh listeners",
          "name": "refresh.listeners",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of pending refresh listeners",
          "name": "pri.refresh.listeners",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sfc",
            "searchFetchCurrent"
          ],
          "description": "current fetch phase ops",
          "name": "search.fetch_current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "current fetch phase ops",
          "name": "pri.search.fetch_current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sfti",
            "searchFetchTime"
          ],
          "description": "time spent in fetch phase",
          "name": "search.fetch_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in fetch phase",
          "name": "pri.search.fetch_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sfto",
            "searchFetchTotal"
          ],
          "description": "total fetch ops",
          "name": "search.fetch_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "total fetch ops",
          "name": "pri.search.fetch_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "so",
            "searchOpenContexts"
          ],
          "description": "open search contexts",
          "name": "search.open_contexts",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "open search contexts",
          "name": "pri.search.open_contexts",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sqc",
            "searchQueryCurrent"
          ],
          "description": "current query phase ops",
          "name": "search.query_current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "current query phase ops",
          "name": "pri.search.query_current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sqti",
            "searchQueryTime"
          ],
          "description": "time spent in query phase",
          "name": "search.query_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in query phase",
          "name": "pri.search.query_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sqto",
            "searchQueryTotal"
          ],
          "description": "total query phase ops",
          "name": "search.query_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "total query phase ops",
          "name": "pri.search.query_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "scc",
            "searchScrollCurrent"
          ],
          "description": "open scroll contexts",
          "name": "search.scroll_current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "open scroll contexts",
          "name": "pri.search.scroll_current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "scti",
            "searchScrollTime"
          ],
          "description": "time scroll contexts held open",
          "name": "search.scroll_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time scroll contexts held open",
          "name": "pri.search.scroll_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "scto",
            "searchScrollTotal"
          ],
          "description": "completed scroll contexts",
          "name": "search.scroll_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "completed scroll contexts",
          "name": "pri.search.scroll_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sc",
            "segmentsCount"
          ],
          "description": "number of segments",
          "name": "segments.count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of segments",
          "name": "pri.segments.count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sm",
            "segmentsMemory"
          ],
          "description": "memory used by segments",
          "name": "segments.memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "memory used by segments",
          "name": "pri.segments.memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "siwm",
            "segmentsIndexWriterMemory"
          ],
          "description": "memory used by index writer",
          "name": "segments.index_writer_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "memory used by index writer",
          "name": "pri.segments.index_writer_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "svmm",
            "segmentsVersionMapMemory"
          ],
          "description": "memory used by version map",
          "name": "segments.version_map_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "memory used by version map",
          "name": "pri.segments.version_map_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sfbm",
            "fixedBitsetMemory"
          ],
          "description": "memory used by fixed bit sets for nested object field types and export type filters for types referred in _parent fields",
          "name": "segments.fixed_bitset_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "memory used by fixed bit sets for nested object field types and export type filters for types referred in _parent fields",
          "name": "pri.segments.fixed_bitset_memory",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "wc",
            "warmerCurrent"
          ],
          "description": "current warmer ops",
          "name": "warmer.current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "current warmer ops",
          "name": "pri.warmer.current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "wto",
            "warmerTotal"
          ],
          "description": "total warmer ops",
          "name": "warmer.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "total warmer ops",
          "name": "pri.warmer.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "wtt",
            "warmerTotalTime"
          ],
          "description": "time spent in warmers",
          "name": "warmer.total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spent in warmers",
          "name": "pri.warmer.total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "suc",
            "suggestCurrent"
          ],
          "description": "number of current suggest ops",
          "name": "suggest.current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of current suggest ops",
          "name": "pri.suggest.current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "suti",
            "suggestTime"
          ],
          "description": "time spend in suggest",
          "name": "suggest.time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spend in suggest",
          "name": "pri.suggest.time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "suto",
            "suggestTotal"
          ],
          "description": "number of suggest ops",
          "name": "suggest.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of suggest ops",
          "name": "pri.suggest.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "tm",
            "memoryTotal"
          ],
          "description": "total used memory",
          "name": "memory.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "total user memory",
          "name": "pri.memory.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sth"
          ],
          "description": "indicates if the index is search throttled",
          "name": "search.throttled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "bto",
            "bulkTotalOperation"
          ],
          "description": "number of bulk shard ops",
          "name": "bulk.total_operations",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "number of bulk shard ops",
          "name": "pri.bulk.total_operations",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "btti",
            "bulkTotalTime"
          ],
          "description": "time spend in shard bulk",
          "name": "bulk.total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "time spend in shard bulk",
          "name": "pri.bulk.total_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "btsi",
            "bulkTotalSizeInBytes"
          ],
          "description": "total size in bytes of shard bulk",
          "name": "bulk.total_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "total size in bytes of shard bulk",
          "name": "pri.bulk.total_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "bati",
            "bulkAvgTime"
          ],
          "description": "average time spend in shard bulk",
          "name": "bulk.avg_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "average time spend in shard bulk",
          "name": "pri.bulk.avg_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "basi",
            "bulkAvgSizeInBytes"
          ],
          "description": "average size in bytes of shard bulk",
          "name": "bulk.avg_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "average size in bytes of shard bulk",
          "name": "pri.bulk.avg_size_in_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "cat/indices/types.ts#L20-L808"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataFrameAnalyticsRecord",
        "namespace": "cat.ml_data_frame_analytics"
      },
      "properties": [
        {
          "description": "The identifier for the job.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "t"
          ],
          "description": "The type of analysis that the job performs.",
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ct",
            "createTime"
          ],
          "description": "The time when the job was created.",
          "name": "create_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "v"
          ],
          "description": "The version of Elasticsearch when the job was created.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "si",
            "sourceIndex"
          ],
          "description": "The name of the source index.",
          "name": "source_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "di",
            "destIndex"
          ],
          "description": "The name of the destination index.",
          "name": "dest_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "d"
          ],
          "description": "A description of the job.",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mml",
            "modelMemoryLimit"
          ],
          "description": "The approximate maximum amount of memory resources that are permitted for the job.",
          "name": "model_memory_limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "s"
          ],
          "description": "The current status of the job.",
          "name": "state",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "fr",
            "failureReason"
          ],
          "description": "Messages about the reason why the job failed.",
          "name": "failure_reason",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "p"
          ],
          "description": "The progress report for the job by phase.",
          "name": "progress",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ae",
            "assignmentExplanation"
          ],
          "description": "Messages related to the selection of a node.",
          "name": "assignment_explanation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ni",
            "nodeId"
          ],
          "description": "The unique identifier of the assigned node.",
          "name": "node.id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "nn",
            "nodeName"
          ],
          "description": "The name of the assigned node.",
          "name": "node.name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "ne",
            "nodeEphemeralId"
          ],
          "description": "The ephemeral identifier of the assigned node.",
          "name": "node.ephemeral_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "na",
            "nodeAddress"
          ],
          "description": "The network address of the assigned node.",
          "name": "node.address",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "cat/ml_data_frame_analytics/types.ts#L22-L102"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DatafeedsRecord",
        "namespace": "cat.ml_datafeeds"
      },
      "properties": [
        {
          "description": "The datafeed identifier.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "s"
          ],
          "description": "The status of the datafeed.",
          "name": "state",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DatafeedState",
              "namespace": "ml._types"
            }
          }
        },
        {
          "aliases": [
            "ae"
          ],
          "description": "For started datafeeds only, contains messages relating to the selection of a node.",
          "name": "assignment_explanation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "bc",
            "bucketsCount"
          ],
          "description": "The number of buckets processed.",
          "name": "buckets.count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sc",
            "searchCount"
          ],
          "description": "The number of searches run by the datafeed.",
          "name": "search.count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "st",
            "searchTime"
          ],
          "description": "The total time the datafeed spent searching, in milliseconds.",
          "name": "search.time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sba",
            "searchBucketAvg"
          ],
          "description": "The average search time per bucket, in milliseconds.",
          "name": "search.bucket_avg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "seah",
            "searchExpAvgHour"
          ],
          "description": "The exponential average search time per hour, in milliseconds.",
          "name": "search.exp_avg_hour",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ni",
            "nodeId"
          ],
          "description": "The unique identifier of the assigned node.\nFor started datafeeds only, this information pertains to the node upon which the datafeed is started.",
          "name": "node.id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "nn",
            "nodeName"
          ],
          "description": "The name of the assigned node.\nFor started datafeeds only, this information pertains to the node upon which the datafeed is started.",
          "name": "node.name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ne",
            "nodeEphemeralId"
          ],
          "description": "The ephemeral identifier of the assigned node.\nFor started datafeeds only, this information pertains to the node upon which the datafeed is started.",
          "name": "node.ephemeral_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "na",
            "nodeAddress"
          ],
          "description": "The network address of the assigned node.\nFor started datafeeds only, this information pertains to the node upon which the datafeed is started.",
          "name": "node.address",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "cat/ml_datafeeds/types.ts#L22-L87"
    },
    {
      "kind": "interface",
      "name": {
        "name": "JobsRecord",
        "namespace": "cat.ml_jobs"
      },
      "properties": [
        {
          "description": "The anomaly detection job identifier.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "s"
          ],
          "description": "The status of the anomaly detection job.",
          "name": "state",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JobState",
              "namespace": "ml._types"
            }
          }
        },
        {
          "aliases": [
            "ot"
          ],
          "description": "For open jobs only, the amount of time the job has been opened.",
          "name": "opened_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ae"
          ],
          "description": "For open anomaly detection jobs only, contains messages relating to the selection of a node to run the job.",
          "name": "assignment_explanation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dpr",
            "dataProcessedRecords"
          ],
          "description": "The number of input documents that have been processed by the anomaly detection job.\nThis value includes documents with missing fields, since they are nonetheless analyzed.\nIf you use datafeeds and have aggregations in your search query, the `processed_record_count` is the number of aggregation results processed, not the number of Elasticsearch documents.",
          "name": "data.processed_records",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dpf",
            "dataProcessedFields"
          ],
          "description": "The total number of fields in all the documents that have been processed by the anomaly detection job.\nOnly fields that are specified in the detector configuration object contribute to this count.\nThe timestamp is not included in this count.",
          "name": "data.processed_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dib",
            "dataInputBytes"
          ],
          "description": "The number of bytes of input data posted to the anomaly detection job.",
          "name": "data.input_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "dir",
            "dataInputRecords"
          ],
          "description": "The number of input documents posted to the anomaly detection job.",
          "name": "data.input_records",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dif",
            "dataInputFields"
          ],
          "description": "The total number of fields in input documents posted to the anomaly detection job.\nThis count includes fields that are not used in the analysis.\nHowever, be aware that if you are using a datafeed, it extracts only the required fields from the documents it retrieves before posting them to the job.",
          "name": "data.input_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "did",
            "dataInvalidDates"
          ],
          "description": "The number of input documents with either a missing date field or a date that could not be parsed.",
          "name": "data.invalid_dates",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dmf",
            "dataMissingFields"
          ],
          "description": "The number of input documents that are missing a field that the anomaly detection job is configured to analyze.\nInput documents with missing fields are still processed because it is possible that not all fields are missing.\nIf you are using datafeeds or posting data to the job in JSON format, a high `missing_field_count` is often not an indication of data issues.\nIt is not necessarily a cause for concern.",
          "name": "data.missing_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "doot",
            "dataOutOfOrderTimestamps"
          ],
          "description": "The number of input documents that have a timestamp chronologically preceding the start of the current anomaly detection bucket offset by the latency window.\nThis information is applicable only when you provide data to the anomaly detection job by using the post data API.\nThese out of order documents are discarded, since jobs require time series data to be in ascending chronological order.",
          "name": "data.out_of_order_timestamps",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "deb",
            "dataEmptyBuckets"
          ],
          "description": "The number of buckets which did not contain any data.\nIf your data contains many empty buckets, consider increasing your `bucket_span` or using functions that are tolerant to gaps in data such as mean, `non_null_sum` or `non_zero_count`.",
          "name": "data.empty_buckets",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dsb",
            "dataSparseBuckets"
          ],
          "description": "The number of buckets that contained few data points compared to the expected number of data points.\nIf your data contains many sparse buckets, consider using a longer `bucket_span`.",
          "name": "data.sparse_buckets",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "db",
            "dataBuckets"
          ],
          "description": "The total number of buckets processed.",
          "name": "data.buckets",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "der",
            "dataEarliestRecord"
          ],
          "description": "The timestamp of the earliest chronologically input document.",
          "name": "data.earliest_record",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dlr",
            "dataLatestRecord"
          ],
          "description": "The timestamp of the latest chronologically input document.",
          "name": "data.latest_record",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dl",
            "dataLast"
          ],
          "description": "The timestamp at which data was last analyzed, according to server time.",
          "name": "data.last",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dleb",
            "dataLastEmptyBucket"
          ],
          "description": "The timestamp of the last bucket that did not contain any data.",
          "name": "data.last_empty_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dlsb",
            "dataLastSparseBucket"
          ],
          "description": "The timestamp of the last bucket that was considered sparse.",
          "name": "data.last_sparse_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mb",
            "modelBytes"
          ],
          "description": "The number of bytes of memory used by the models.\nThis is the maximum value since the last time the model was persisted.\nIf the job is closed, this value indicates the latest size.",
          "name": "model.bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "mms",
            "modelMemoryStatus"
          ],
          "description": "The status of the mathematical models.",
          "name": "model.memory_status",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MemoryStatus",
              "namespace": "ml._types"
            }
          }
        },
        {
          "aliases": [
            "mbe",
            "modelBytesExceeded"
          ],
          "description": "The number of bytes over the high limit for memory usage at the last allocation failure.",
          "name": "model.bytes_exceeded",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "mml",
            "modelMemoryLimit"
          ],
          "description": "The upper limit for model memory usage, checked on increasing values.",
          "name": "model.memory_limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mbf",
            "modelByFields"
          ],
          "description": "The number of `by` field values that were analyzed by the models.\nThis value is cumulative for all detectors in the job.",
          "name": "model.by_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mof",
            "modelOverFields"
          ],
          "description": "The number of `over` field values that were analyzed by the models.\nThis value is cumulative for all detectors in the job.",
          "name": "model.over_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mpf",
            "modelPartitionFields"
          ],
          "description": "The number of `partition` field values that were analyzed by the models.\nThis value is cumulative for all detectors in the job.",
          "name": "model.partition_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mbaf",
            "modelBucketAllocationFailures"
          ],
          "description": "The number of buckets for which new entities in incoming data were not processed due to insufficient model memory.\nThis situation is also signified by a `hard_limit: memory_status` property value.",
          "name": "model.bucket_allocation_failures",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mcs",
            "modelCategorizationStatus"
          ],
          "description": "The status of categorization for the job.",
          "name": "model.categorization_status",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CategorizationStatus",
              "namespace": "ml._types"
            }
          }
        },
        {
          "aliases": [
            "mcdc",
            "modelCategorizedDocCount"
          ],
          "description": "The number of documents that have had a field categorized.",
          "name": "model.categorized_doc_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mtcc",
            "modelTotalCategoryCount"
          ],
          "description": "The number of categories created by categorization.",
          "name": "model.total_category_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "modelFrequentCategoryCount"
          ],
          "description": "The number of categories that match more than 1% of categorized documents.",
          "name": "model.frequent_category_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mrcc",
            "modelRareCategoryCount"
          ],
          "description": "The number of categories that match just one categorized document.",
          "name": "model.rare_category_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mdcc",
            "modelDeadCategoryCount"
          ],
          "description": "The number of categories created by categorization that will never be assigned again because another categoryâ€™s definition makes it a superset of the dead category.\nDead categories are a side effect of the way categorization has no prior training.",
          "name": "model.dead_category_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mfcc",
            "modelFailedCategoryCount"
          ],
          "description": "The number of times that categorization wanted to create a new category but couldnâ€™t because the job had hit its `model_memory_limit`.\nThis count does not track which specific categories failed to be created.\nTherefore you cannot use this value to determine the number of unique categories that were missed.",
          "name": "model.failed_category_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mlt",
            "modelLogTime"
          ],
          "description": "The timestamp when the model stats were gathered, according to server time.",
          "name": "model.log_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mt",
            "modelTimestamp"
          ],
          "description": "The timestamp of the last record when the model stats were gathered.",
          "name": "model.timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ft",
            "forecastsTotal"
          ],
          "description": "The number of individual forecasts currently available for the job.\nA value of one or more indicates that forecasts exist.",
          "name": "forecasts.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "fmmin",
            "forecastsMemoryMin"
          ],
          "description": "The minimum memory usage in bytes for forecasts related to the anomaly detection job.",
          "name": "forecasts.memory.min",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "fmmax",
            "forecastsMemoryMax"
          ],
          "description": "The maximum memory usage in bytes for forecasts related to the anomaly detection job.",
          "name": "forecasts.memory.max",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "fmavg",
            "forecastsMemoryAvg"
          ],
          "description": "The average memory usage in bytes for forecasts related to the anomaly detection job.",
          "name": "forecasts.memory.avg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "fmt",
            "forecastsMemoryTotal"
          ],
          "description": "The total memory usage in bytes for forecasts related to the anomaly detection job.",
          "name": "forecasts.memory.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "frmin",
            "forecastsRecordsMin"
          ],
          "description": "The minimum number of `model_forecast` documents written for forecasts related to the anomaly detection job.",
          "name": "forecasts.records.min",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "frmax",
            "forecastsRecordsMax"
          ],
          "description": "The maximum number of `model_forecast` documents written for forecasts related to the anomaly detection job.",
          "name": "forecasts.records.max",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "fravg",
            "forecastsRecordsAvg"
          ],
          "description": "The average number of `model_forecast` documents written for forecasts related to the anomaly detection job.",
          "name": "forecasts.records.avg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "frt",
            "forecastsRecordsTotal"
          ],
          "description": "The total number of `model_forecast` documents written for forecasts related to the anomaly detection job.",
          "name": "forecasts.records.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ftmin",
            "forecastsTimeMin"
          ],
          "description": "The minimum runtime in milliseconds for forecasts related to the anomaly detection job.",
          "name": "forecasts.time.min",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ftmax",
            "forecastsTimeMax"
          ],
          "description": "The maximum runtime in milliseconds for forecasts related to the anomaly detection job.",
          "name": "forecasts.time.max",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ftavg",
            "forecastsTimeAvg"
          ],
          "description": "The average runtime in milliseconds for forecasts related to the anomaly detection job.",
          "name": "forecasts.time.avg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ftt",
            "forecastsTimeTotal"
          ],
          "description": "The total runtime in milliseconds for forecasts related to the anomaly detection job.",
          "name": "forecasts.time.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ni",
            "nodeId"
          ],
          "description": "The uniqe identifier of the assigned node.",
          "name": "node.id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NodeId",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "nn",
            "nodeName"
          ],
          "description": "The name of the assigned node.",
          "name": "node.name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ne",
            "nodeEphemeralId"
          ],
          "description": "The ephemeral identifier of the assigned node.",
          "name": "node.ephemeral_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NodeId",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "na",
            "nodeAddress"
          ],
          "description": "The network address of the assigned node.",
          "name": "node.address",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "bc",
            "bucketsCount"
          ],
          "description": "The number of bucket results produced by the job.",
          "name": "buckets.count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "btt",
            "bucketsTimeTotal"
          ],
          "description": "The sum of all bucket processing times, in milliseconds.",
          "name": "buckets.time.total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "btmin",
            "bucketsTimeMin"
          ],
          "description": "The minimum of all bucket processing times, in milliseconds.",
          "name": "buckets.time.min",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "btmax",
            "bucketsTimeMax"
          ],
          "description": "The maximum of all bucket processing times, in milliseconds.",
          "name": "buckets.time.max",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "btea",
            "bucketsTimeExpAvg"
          ],
          "description": "The exponential moving average of all bucket processing times, in milliseconds.",
          "name": "buckets.time.exp_avg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "bteah",
            "bucketsTimeExpAvgHour"
          ],
          "description": "The exponential moving average of bucket processing times calculated in a one hour time window, in milliseconds.",
          "name": "buckets.time.exp_avg_hour",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "cat/ml_jobs/types.ts#L24-L347"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelsRecord",
        "namespace": "cat.ml_trained_models"
      },
      "properties": [
        {
          "description": "The model identifier.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "c",
            "createdBy"
          ],
          "description": "Information about the creator of the model.",
          "name": "created_by",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "hs",
            "modelHeapSize"
          ],
          "description": "The estimated heap size to keep the model in memory.",
          "name": "heap_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "o",
            "modelOperations"
          ],
          "description": "The estimated number of operations to use the model.\nThis number helps to measure the computational complexity of the model.",
          "name": "operations",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "l"
          ],
          "description": "The license level of the model.",
          "name": "license",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ct"
          ],
          "description": "The time the model was created.",
          "name": "create_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "v"
          ],
          "description": "The version of Elasticsearch when the model was created.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "d"
          ],
          "description": "A description of the model.",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ip",
            "ingestPipelines"
          ],
          "description": "The number of pipelines that are referencing the model.",
          "name": "ingest.pipelines",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "ic",
            "ingestCount"
          ],
          "description": "The total number of documents that are processed by the model.",
          "name": "ingest.count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "it",
            "ingestTime"
          ],
          "description": "The total time spent processing documents with thie model.",
          "name": "ingest.time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "icurr",
            "ingestCurrent"
          ],
          "description": "The total number of documents that are currently being handled by the model.",
          "name": "ingest.current",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "if",
            "ingestFailed"
          ],
          "description": "The total number of failed ingest attempts with the model.",
          "name": "ingest.failed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dfid",
            "dataFrameAnalytics"
          ],
          "description": "The identifier for the data frame analytics job that created the model.\nOnly displayed if the job is still available.",
          "name": "data_frame.id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dft",
            "dataFrameAnalyticsTime"
          ],
          "description": "The time the data frame analytics job was created.",
          "name": "data_frame.create_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dfsi",
            "dataFrameAnalyticsSrcIndex"
          ],
          "description": "The source index used to train in the data frame analysis.",
          "name": "data_frame.source_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dfa",
            "dataFrameAnalyticsAnalysis"
          ],
          "description": "The analysis used by the data frame to build the model.",
          "name": "data_frame.analysis",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.0.0"
            }
          },
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "cat/ml_trained_models/types.ts#L23-L115"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TransformsRecord",
        "namespace": "cat.transforms"
      },
      "properties": [
        {
          "description": "The transform identifier.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "s"
          ],
          "description": "The status of the transform.\nReturned values include:\n`aborting`: The transform is aborting.\n`failed: The transform failed. For more information about the failure, check the `reason` field.\n`indexing`: The transform is actively processing data and creating new documents.\n`started`: The transform is running but not actively indexing data.\n`stopped`: The transform is stopped.\n`stopping`: The transform is stopping.",
          "name": "state",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "c"
          ],
          "description": "The sequence number for the checkpoint.",
          "name": "checkpoint",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "docp",
            "documentsProcessed"
          ],
          "description": "The number of documents that have been processed from the source index of the transform.",
          "name": "documents_processed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "cp",
            "checkpointProgress"
          ],
          "description": "The progress of the next checkpoint that is currently in progress.",
          "name": "checkpoint_progress",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "aliases": [
            "lst",
            "lastSearchTime"
          ],
          "description": "The timestamp of the last search in the source indices.\nThis field is shown only if the transform is running.",
          "name": "last_search_time",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "aliases": [
            "cldt"
          ],
          "description": "The timestamp when changes were last detected in the source indices.",
          "name": "changes_last_detection_time",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "aliases": [
            "ct",
            "createTime"
          ],
          "description": "The time the transform was created.",
          "name": "create_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "v"
          ],
          "description": "The version of Elasticsearch that existed on the node when the transform was created.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "si",
            "sourceIndex"
          ],
          "description": "The source indices for the transform.",
          "name": "source_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "di",
            "destIndex"
          ],
          "description": "The destination index for the transform.",
          "name": "dest_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "p"
          ],
          "description": "The unique identifier for the ingest pipeline.",
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "d"
          ],
          "description": "The description of the transform.",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "tt"
          ],
          "description": "The type of transform: `batch` or `continuous`.",
          "name": "transform_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "f"
          ],
          "description": "The interval between checks for changes in the source indices when the transform is running continuously.",
          "name": "frequency",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "mpsz"
          ],
          "description": "The initial page size that is used for the composite aggregation for each checkpoint.",
          "name": "max_page_search_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dps"
          ],
          "description": "The number of input documents per second.",
          "name": "docs_per_second",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "r"
          ],
          "description": "If a transform has a `failed` state, these details describe the reason for failure.",
          "name": "reason",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "st"
          ],
          "description": "The total number of search operations on the source index for the transform.",
          "name": "search_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "sf"
          ],
          "description": "The total number of search failures.",
          "name": "search_failure",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "stime"
          ],
          "description": "The total amount of search time, in milliseconds.",
          "name": "search_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "it"
          ],
          "description": "The total number of index operations done by the transform.",
          "name": "index_total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "if"
          ],
          "description": "The total number of indexing failures.",
          "name": "index_failure",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "itime"
          ],
          "description": "The total time spent indexing documents, in milliseconds.",
          "name": "index_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "doci"
          ],
          "description": "The number of documents that have been indexed into the destination index for the transform.",
          "name": "documents_indexed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "dtime"
          ],
          "description": "The total time spent deleting documents, in milliseconds.",
          "name": "delete_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "docd"
          ],
          "description": "The number of documents deleted from the destination index due to the retention policy for the transform.",
          "name": "documents_deleted",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "tc"
          ],
          "description": "The number of times the transform has been triggered by the scheduler.\nFor example, the scheduler triggers the transform indexer to check for updates or ingest new data at an interval specified in the `frequency` property.",
          "name": "trigger_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "pp"
          ],
          "description": "The number of search or bulk index operations processed.\nDocuments are processed in batches instead of individually.",
          "name": "pages_processed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "pt"
          ],
          "description": "The total time spent processing results, in milliseconds.",
          "name": "processing_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "cdtea",
            "checkpointTimeExpAvg"
          ],
          "description": "The exponential moving average of the duration of the checkpoint, in milliseconds.",
          "name": "checkpoint_duration_time_exp_avg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "idea"
          ],
          "description": "The exponential moving average of the number of new documents that have been indexed.",
          "name": "indexed_documents_exp_avg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "aliases": [
            "pdea"
          ],
          "description": "The exponential moving average of the number of documents that have been processed.",
          "name": "processed_documents_exp_avg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "cat/transforms/types.ts#L22-L197"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ComponentTemplate",
        "namespace": "cluster._types"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "component_template",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ComponentTemplateNode",
              "namespace": "cluster._types"
            }
          }
        }
      ],
      "specLocation": "cluster/_types/ComponentTemplate.ts#L27-L30"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ComponentTemplateNode",
        "namespace": "cluster._types"
      },
      "properties": [
        {
          "name": "template",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ComponentTemplateSummary",
              "namespace": "cluster._types"
            }
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "docId": "mapping-meta-field",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-meta-field.html",
          "name": "_meta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "cluster/_types/ComponentTemplate.ts#L32-L37"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ComponentTemplateSummary",
        "namespace": "cluster._types"
      },
      "properties": [
        {
          "docId": "mapping-meta-field",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-meta-field.html",
          "name": "_meta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "settings",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IndexSettings",
                "namespace": "indices._types"
              }
            }
          }
        },
        {
          "name": "mappings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TypeMapping",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "aliases",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AliasDefinition",
                "namespace": "indices._types"
              }
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "stable"
            },
            "stack": {
              "since": "8.11.0",
              "stability": "stable"
            }
          },
          "name": "lifecycle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamLifecycleWithRollover",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "cluster/_types/ComponentTemplate.ts#L39-L51"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            {
              "kind": "user_defined_value"
            }
          ],
          "meta": {
            "description": "Additional settings not covered in this type.",
            "fieldname": "other_settings"
          },
          "type": {
            "name": "AdditionalProperties",
            "namespace": "_spec_utils"
          }
        }
      ],
      "docId": "index-modules-settings",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/index-modules.html#index-modules-settings",
      "kind": "interface",
      "name": {
        "name": "IndexSettings",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettings",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "routing_path",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "soft_deletes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SoftDeletes",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSegmentSort",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "number_of_shards",
          "required": false,
          "serverDefault": "1",
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "number_of_replicas",
          "required": false,
          "serverDefault": "0",
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "number_of_routing_shards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "check_on_startup",
          "required": false,
          "serverDefault": "false",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexCheckOnStartup",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "codec",
          "required": false,
          "serverDefault": "LZ4",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "routing_partition_size",
          "required": false,
          "serverDefault": "1",
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "load_fixed_bitset_filters_eagerly",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "hidden",
          "required": false,
          "serverDefault": "false",
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "auto_expand_replicas",
          "required": false,
          "serverDefault": "false",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "merge",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Merge",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "search",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SettingsSearch",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "refresh_interval",
          "required": false,
          "serverDefault": "1s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_result_window",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_inner_result_window",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_rescore_window",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_docvalue_fields_search",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_script_fields",
          "required": false,
          "serverDefault": 32,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_ngram_diff",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_shingle_diff",
          "required": false,
          "serverDefault": 3,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "blocks",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettingBlocks",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "max_refresh_listeners",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Settings to define analyzers, tokenizers, token filters and character filters.",
          "name": "analyze",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SettingsAnalyze",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "highlight",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SettingsHighlight",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "max_terms_count",
          "required": false,
          "serverDefault": 65536,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_regex_length",
          "required": false,
          "serverDefault": 1000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexRouting",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "gc_deletes",
          "required": false,
          "serverDefault": "60s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "default_pipeline",
          "required": false,
          "serverDefault": "_none",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PipelineName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "final_pipeline",
          "required": false,
          "serverDefault": "_none",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PipelineName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "lifecycle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettingsLifecycle",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "provided_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "creation_date",
          "required": false,
          "type": {
            "generics": [
              {
                "generics": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "name": "UnitMillis",
                      "namespace": "_types"
                    }
                  }
                ],
                "kind": "instance_of",
                "type": {
                  "name": "EpochTime",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "creation_date_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "uuid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Uuid",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexVersioning",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "verified_before_close",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "format",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "max_slices_per_scroll",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "translog",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Translog",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "query_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SettingsQueryString",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "priority",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "top_metrics_max_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "analysis",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettingsAnalysis",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "settings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettings",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "time_series",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettingsTimeSeries",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "queries",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Queries",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "Configure custom similarity settings to customize how search results are scored.",
          "name": "similarity",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SettingsSimilarity",
                "namespace": "indices._types"
              }
            }
          }
        },
        {
          "description": "Enable or disable dynamic mapping for an index.",
          "name": "mapping",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MappingLimitSettings",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "indexing.slowlog",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexingSlowlogSettings",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "Configure indexing back pressure limits.",
          "name": "indexing_pressure",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexingPressure",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "The store module allows you to control how index data is stored and accessed on disk.",
          "name": "store",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Storage",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L69-L169"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SoftDeletes",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "Indicates whether soft deletes are enabled on the index.",
          "name": "enabled",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The maximum period to retain a shard history retention lease before it is considered expired.\nShard history retention leases ensure that soft deletes are retained during merges on the Lucene\nindex. If a soft delete is merged away before it can be replicated to a follower the following\nprocess will fail due to incomplete history on the leader.",
          "name": "retention_lease",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RetentionLease",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L50-L63"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RetentionLease",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "period",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L65-L67"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexSegmentSort",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "order",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "SegmentSortOrder",
                  "namespace": "indices._types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "SegmentSortOrder",
                    "namespace": "indices._types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "mode",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "SegmentSortMode",
                  "namespace": "indices._types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "SegmentSortMode",
                    "namespace": "indices._types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "missing",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "SegmentSortMissing",
                  "namespace": "indices._types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "SegmentSortMissing",
                    "namespace": "indices._types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "indices/_types/IndexSegmentSort.ts#L22-L27"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Merge",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "scheduler",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MergeScheduler",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L332-L334"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MergeScheduler",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "max_thread_count",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "max_merge_count",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L336-L339"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsSearch",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "idle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchIdle",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "slowlog",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SlowlogSettings",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L240-L243"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SearchIdle",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "after",
          "required": false,
          "serverDefault": "30s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L245-L248"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SlowlogSettings",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "level",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "reformat",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "threshold",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SlowlogTresholds",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L490-L495"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SlowlogTresholds",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SlowlogTresholdLevels",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "fetch",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SlowlogTresholdLevels",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L497-L500"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SlowlogTresholdLevels",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "warn",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "info",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "debug",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "trace",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L502-L507"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexSettingBlocks",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "read_only",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "read_only_allow_delete",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "read",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "write",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "metadata",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L254-L260"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsAnalyze",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "max_token_count",
          "required": false,
          "serverDefault": "10000",
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L235-L238"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsHighlight",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "max_analyzed_offset",
          "required": false,
          "serverDefault": 1000000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L230-L233"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexRouting",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "allocation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexRoutingAllocation",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "rebalance",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexRoutingRebalance",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexRouting.ts#L22-L25"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexRoutingAllocation",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "enable",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexRoutingAllocationOptions",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "include",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexRoutingAllocationInclude",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "initial_recovery",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexRoutingAllocationInitialRecovery",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "disk",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexRoutingAllocationDisk",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexRouting.ts#L27-L32"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexRoutingAllocationInclude",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "_tier_preference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexRouting.ts#L52-L55"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexRoutingAllocationInitialRecovery",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexRouting.ts#L57-L59"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexRoutingAllocationDisk",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "threshold_enabled",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "indices/_types/IndexRouting.ts#L62-L64"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexRoutingRebalance",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "enable",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexRoutingRebalanceOptions",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexRouting.ts#L34-L36"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexSettingsLifecycle",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "The name of the policy to use to manage the index. For information about how Elasticsearch applies policy changes, see Policy updates.",
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates whether or not the index has been rolled over. Automatically set to true when ILM completes the rollover action.\nYou can explicitly set it to skip rollover.",
          "name": "indexing_complete",
          "required": false,
          "serverDefault": "false",
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "description": "If specified, this is the timestamp used to calculate the index age for its phase transitions. Use this setting\nif you create a new index that contains old data and want to use the original creation date to calculate the index\nage. Specified as a Unix epoch value in milliseconds.",
          "name": "origination_date",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Set to true to parse the origination date from the index name. This origination date is used to calculate the index age\nfor its phase transitions. The index name must match the pattern ^.*-{date_format}-\\\\d+, where the date_format is\nyyyy.MM.dd and the trailing digits are optional. An index that was rolled over would normally match the full format,\nfor example logs-2016.10.31-000002). If the index name doesnâ€™t match the pattern, index creation fails.",
          "name": "parse_origination_date",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "step",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettingsLifecycleStep",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "The index alias to update when the index rolls over. Specify when using a policy that contains a rollover action.\nWhen the index rolls over, the alias is updated to reflect that the index is no longer the write index. For more\ninformation about rolling indices, see Rollover.",
          "name": "rollover_alias",
          "required": false,
          "serverDefault": "",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L276-L309"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexSettingsLifecycleStep",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "Time to wait for the cluster to resolve allocation issues during an ILM shrink action. Must be greater than 1h (1 hour).\nSee Shard allocation for shrink.",
          "name": "wait_time_threshold",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L311-L317"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexVersioning",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "created",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "created_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L271-L274"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Translog",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "How often the translog is fsynced to disk and committed, regardless of write operations.\nValues less than 100ms are not allowed.",
          "name": "sync_interval",
          "required": false,
          "serverDefault": "5s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Whether or not to `fsync` and commit the translog after every index, delete, update, or bulk request.",
          "name": "durability",
          "required": false,
          "serverDefault": "string",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TranslogDurability",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "The translog stores all operations that are not yet safely persisted in Lucene (i.e., are not\npart of a Lucene commit point). Although these operations are available for reads, they will need\nto be replayed if the shard was stopped and had to be recovered. This setting controls the\nmaximum total size of these operations, to prevent recoveries from taking too long. Once the\nmaximum size has been reached a flush will happen, generating a new Lucene commit point.",
          "name": "flush_threshold_size",
          "required": false,
          "serverDefault": "512mb",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "retention",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TranslogRetention",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L341-L363"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TranslogRetention",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "This controls the total size of translog files to keep for each shard. Keeping more translog files increases\nthe chance of performing an operation based sync when recovering a replica. If the translog files are not\nsufficient, replica recovery will fall back to a file based sync. This setting is ignored, and should not be\nset, if soft deletes are enabled. Soft deletes are enabled by default in indices created in Elasticsearch\nversions 7.0.0 and later.",
          "name": "size",
          "required": false,
          "serverDefault": "512mb",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "This controls the maximum duration for which translog files are kept by each shard. Keeping more\ntranslog files increases the chance of performing an operation based sync when recovering replicas. If\nthe translog files are not sufficient, replica recovery will fall back to a file based sync. This setting\nis ignored, and should not be set, if soft deletes are enabled. Soft deletes are enabled by default in\nindices created in Elasticsearch versions 7.0.0 and later.",
          "name": "age",
          "required": false,
          "serverDefault": "12h",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L382-L401"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SettingsQueryString",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "lenient",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "boolean",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L250-L252"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexSettingsAnalysis",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "analyzer",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Analyzer",
                "namespace": "_types.analysis"
              }
            }
          }
        },
        {
          "name": "char_filter",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "CharFilter",
                "namespace": "_types.analysis"
              }
            }
          }
        },
        {
          "name": "filter",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TokenFilter",
                "namespace": "_types.analysis"
              }
            }
          }
        },
        {
          "name": "normalizer",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Normalizer",
                "namespace": "_types.analysis"
              }
            }
          }
        },
        {
          "name": "tokenizer",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Tokenizer",
                "namespace": "_types.analysis"
              }
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L319-L325"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexSettingsTimeSeries",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "end_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "start_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L327-L330"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Queries",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "cache",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CacheQueries",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L403-L405"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CacheQueries",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "enabled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L407-L409"
    },
    {
      "description": "Mapping Limit Settings",
      "docId": "mapping-settings-limit",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-settings-limit.html",
      "kind": "interface",
      "name": {
        "name": "MappingLimitSettings",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "coerce",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "total_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MappingLimitSettingsTotalFields",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "depth",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MappingLimitSettingsDepth",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "nested_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MappingLimitSettingsNestedFields",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "nested_objects",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MappingLimitSettingsNestedObjects",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "field_name_length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MappingLimitSettingsFieldNameLength",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "dimension_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MappingLimitSettingsDimensionFields",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "ignore_malformed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L411-L424"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MappingLimitSettingsTotalFields",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "The maximum number of fields in an index. Field and object mappings, as well as field aliases count towards this limit.\nThe limit is in place to prevent mappings and searches from becoming too large. Higher values can lead to performance\ndegradations and memory issues, especially in clusters with a high load or few resources.",
          "name": "limit",
          "required": false,
          "serverDefault": 1000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "This setting determines what happens when a dynamically mapped field would exceed the total fields limit. When set\nto false (the default), the index request of the document that tries to add a dynamic field to the mapping will fail\nwith the message Limit of total fields [X] has been exceeded. When set to true, the index request will not fail.\nInstead, fields that would exceed the limit are not added to the mapping, similar to dynamic: false.\nThe fields that were not added to the mapping will be added to the _ignored field.",
          "name": "ignore_dynamic_beyond_limit",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L426-L443"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MappingLimitSettingsDepth",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "The maximum depth for a field, which is measured as the number of inner objects. For instance, if all fields are defined\nat the root object level, then the depth is 1. If there is one object mapping, then the depth is 2, etc.",
          "name": "limit",
          "required": false,
          "serverDefault": 20,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L445-L452"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MappingLimitSettingsNestedFields",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "The maximum number of distinct nested mappings in an index. The nested type should only be used in special cases, when\narrays of objects need to be queried independently of each other. To safeguard against poorly designed mappings, this\nsetting limits the number of unique nested types per index.",
          "name": "limit",
          "required": false,
          "serverDefault": 50,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L454-L462"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MappingLimitSettingsNestedObjects",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps\nto prevent out of memory errors when a document contains too many nested objects.",
          "name": "limit",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L464-L471"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MappingLimitSettingsFieldNameLength",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "Setting for the maximum length of a field name. This setting isnâ€™t really something that addresses mappings explosion but\nmight still be useful if you want to limit the field length. It usually shouldnâ€™t be necessary to set this setting. The\ndefault is okay unless a user starts to add a huge number of fields with really long names. Default is `Long.MAX_VALUE` (no limit).",
          "name": "limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L473-L480"
    },
    {
      "kind": "interface",
      "name": {
        "name": "MappingLimitSettingsDimensionFields",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "[preview] This functionality is in technical preview and may be changed or removed in a future release.\nElastic will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
          "name": "limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L482-L488"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexingSlowlogSettings",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "level",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "reformat",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "threshold",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexingSlowlogTresholds",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L563-L568"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexingSlowlogTresholds",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "The indexing slow log, similar in functionality to the search slow log. The log file name ends with `_index_indexing_slowlog.json`.\nLog and the thresholds are configured in the same way as the search slowlog.",
          "docId": "index-modules-slowlog-slowlog",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/index-modules-slowlog.html#index-slow-log",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SlowlogTresholdLevels",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L570-L577"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexingPressure",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "memory",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexingPressureMemory",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L550-L552"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexingPressureMemory",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "Number of outstanding bytes that may be consumed by indexing requests. When this limit is reached or exceeded,\nthe node will reject new coordinating and primary operations. When replica operations consume 1.5x this limit,\nthe node will reject new replica operations. Defaults to 10% of the heap.",
          "name": "limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L554-L561"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Storage",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StorageType",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "You can restrict the use of the mmapfs and the related hybridfs store type via the setting node.store.allow_mmap.\nThis is a boolean setting indicating whether or not memory-mapping is allowed. The default is to allow it. This\nsetting is useful, for example, if you are in an environment where you can not control the ability to create a lot\nof memory maps so you need disable the ability to use memory-mapping.",
          "name": "allow_mmap",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexSettings.ts#L509-L518"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TypeMapping",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "all_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AllField",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "date_detection",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "dynamic",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DynamicMapping",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "dynamic_date_formats",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "dynamic_templates",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "DynamicTemplate",
                  "namespace": "_types.mapping"
                }
              }
            }
          }
        },
        {
          "name": "_field_names",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldNamesField",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "index_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexField",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "docId": "mapping-meta-field",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-meta-field.html",
          "name": "_meta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "numeric_detection",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "properties",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "PropertyName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Property",
                "namespace": "_types.mapping"
              }
            }
          }
        },
        {
          "name": "_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RoutingField",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SizeField",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceField",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "runtime",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RuntimeField",
                "namespace": "_types.mapping"
              }
            }
          }
        },
        {
          "name": "enabled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "subobjects",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.16.0"
            }
          },
          "name": "_data_stream_timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamTimestamp",
              "namespace": "_types.mapping"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/TypeMapping.ts#L34-L57"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AllField",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "analyzer",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "enabled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "omit_norms",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "search_analyzer",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "similarity",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "store",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "store_term_vector_offsets",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "store_term_vector_payloads",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "store_term_vector_positions",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "store_term_vectors",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/meta-fields.ts#L29-L40"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DynamicTemplate",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "mapping",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Property",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "runtime",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Property",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "containerProperty": true,
          "name": "match",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "containerProperty": true,
          "name": "path_match",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "containerProperty": true,
          "name": "unmatch",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "containerProperty": true,
          "name": "path_unmatch",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "containerProperty": true,
          "name": "match_mapping_type",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "containerProperty": true,
          "name": "unmatch_mapping_type",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "containerProperty": true,
          "name": "match_pattern",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MatchType",
              "namespace": "_types.mapping"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/dynamic-template.ts#L22-L42",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "FieldNamesField",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "enabled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/meta-fields.ts#L42-L44"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexField",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "enabled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/meta-fields.ts#L46-L48"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RoutingField",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "required",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/meta-fields.ts#L50-L52"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SizeField",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "enabled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/meta-fields.ts#L54-L56"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SourceField",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "compress",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "compress_threshold",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "enabled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "excludes",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "includes",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceFieldMode",
              "namespace": "_types.mapping"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/meta-fields.ts#L58-L65"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataStreamTimestamp",
        "namespace": "_types.mapping"
      },
      "properties": [
        {
          "name": "enabled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/mapping/TypeMapping.ts#L59-L61"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AliasDefinition",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "Query used to limit documents the alias can access.",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Value used to route indexing operations to a specific shard.\nIf specified, this overwrites the `routing` value for indexing operations.",
          "name": "index_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the index is the write index for the alias.",
          "name": "is_write_index",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Value used to route indexing and search operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Value used to route search operations to a specific shard.\nIf specified, this overwrites the `routing` value for search operations.",
          "name": "search_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.16.0"
            }
          },
          "description": "If `true`, the alias is hidden.\nAll indices for the alias must have the same `is_hidden` value.",
          "name": "is_hidden",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/_types/AliasDefinition.ts#L22-L54"
    },
    {
      "description": "Data stream lifecycle with rollover can be used to display the configuration including the default rollover conditions,\nif asked.",
      "kind": "interface",
      "name": {
        "name": "DataStreamLifecycleWithRollover",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "If defined, every document added to this data stream will be stored at least for this time frame.\nAny time after this duration the document could be deleted.\nWhen empty, every document in this data stream will be stored indefinitely.",
          "name": "data_retention",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The downsampling configuration to execute for the managed backing index after rollover.",
          "name": "downsampling",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamLifecycleDownsampling",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "The conditions which will trigger the rollover of a backing index as configured by the cluster setting `cluster.lifecycle.default.rollover`.\nThis property is an implementation detail and it will only be retrieved when the query param `include_defaults` is set to true.\nThe contents of this field are subject to change.",
          "name": "rollover",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamLifecycleRolloverConditions",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/DataStreamLifecycle.ts#L33-L55"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataStreamLifecycleDownsampling",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "The list of downsampling rounds to execute as part of this downsampling configuration",
          "name": "rounds",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DownsamplingRound",
                "namespace": "indices._types"
              }
            }
          }
        }
      ],
      "specLocation": "indices/_types/DataStreamLifecycleDownsampling.ts#L22-L27"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DownsamplingRound",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "The duration since rollover when this downsampling round should execute",
          "name": "after",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The downsample configuration to execute.",
          "name": "config",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DownsampleConfig",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/DownsamplingRound.ts#L23-L32"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DownsampleConfig",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "The interval at which to aggregate the original time series index.",
          "name": "fixed_interval",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DurationLarge",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/Downsample.ts#L22-L27"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataStreamLifecycleRolloverConditions",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "min_age",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_age",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "min_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_primary_shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_primary_shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_primary_shard_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_primary_shard_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/DataStreamLifecycle.ts#L57-L69"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexState",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "aliases",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Alias",
                "namespace": "indices._types"
              }
            }
          }
        },
        {
          "name": "mappings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TypeMapping",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "settings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettings",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "Default settings, included when the request's `include_default` is `true`.",
          "name": "defaults",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettings",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "data_stream",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamName",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "stable"
            },
            "stack": {
              "since": "8.11.0",
              "stability": "stable"
            }
          },
          "description": "Data stream lifecycle applicable if this is a data stream.",
          "name": "lifecycle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamLifecycle",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexState.ts#L27-L40"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Alias",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "Query used to limit documents the alias can access.",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Value used to route indexing operations to a specific shard.\nIf specified, this overwrites the `routing` value for indexing operations.",
          "name": "index_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the alias is hidden.\nAll indices for the alias must have the same `is_hidden` value.",
          "name": "is_hidden",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the index is the write index for the alias.",
          "name": "is_write_index",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Value used to route indexing and search operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Value used to route search operations to a specific shard.\nIf specified, this overwrites the `routing` value for search operations.",
          "name": "search_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/Alias.ts#L23-L53"
    },
    {
      "description": "Data stream lifecycle denotes that a data stream is managed by the data stream lifecycle and contains the configuration.",
      "kind": "interface",
      "name": {
        "name": "DataStreamLifecycle",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "data_retention",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "downsampling",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamLifecycleDownsampling",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/DataStreamLifecycle.ts#L25-L31"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Connector",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "api_key_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "api_key_secret_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "configuration",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConnectorConfiguration",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "custom_scheduling",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConnectorCustomScheduling",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "error",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "features",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConnectorFeatures",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "filtering",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FilteringConfig",
                "namespace": "connector._types"
              }
            }
          }
        },
        {
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_name",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "IndexName",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "is_native",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "language",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "last_access_control_sync_error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "last_access_control_sync_scheduled_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "last_access_control_sync_status",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SyncStatus",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "last_deleted_document_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "last_incremental_sync_scheduled_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "last_indexed_document_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "last_seen",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "last_sync_error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "last_sync_scheduled_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "last_sync_status",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SyncStatus",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "last_synced",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IngestPipelineParams",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "scheduling",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SchedulingConfiguration",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "service_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConnectorStatus",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "sync_cursor",
          "required": false,
          "type": {
            "kind": "user_defined_value"
          }
        },
        {
          "name": "sync_now",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L237-L268"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ConnectorFeatures",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "document_level_security",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FeatureEnabled",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "incremental_sync",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FeatureEnabled",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "native_connector_api_keys",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FeatureEnabled",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "sync_rules",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SyncRulesFeature",
              "namespace": "connector._types"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L224-L229"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FeatureEnabled",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "enabled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L215-L217"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SyncRulesFeature",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "advanced",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FeatureEnabled",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "basic",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FeatureEnabled",
              "namespace": "connector._types"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L219-L222"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FilteringConfig",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "active",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FilteringRules",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "domain",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "draft",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FilteringRules",
              "namespace": "connector._types"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L209-L213"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FilteringRules",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "advanced_snippet",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FilteringAdvancedSnippet",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "rules",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FilteringRule",
                "namespace": "connector._types"
              }
            }
          }
        },
        {
          "name": "validation",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FilteringRulesValidation",
              "namespace": "connector._types"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L203-L207"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FilteringAdvancedSnippet",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "created_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "updated_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "user_defined_value"
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L192-L196"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FilteringRule",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "created_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "order",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "policy",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FilteringPolicy",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "rule",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FilteringRuleRule",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "updated_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L170-L179"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FilteringRulesValidation",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "errors",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FilteringValidation",
                "namespace": "connector._types"
              }
            }
          }
        },
        {
          "name": "state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FilteringValidationState",
              "namespace": "connector._types"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L198-L201"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FilteringValidation",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "ids",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "messages",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L181-L184"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IngestPipelineParams",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "extract_binary_content",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "reduce_whitespace",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "run_ml_inference",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L148-L153"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SchedulingConfiguration",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "access_control",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConnectorScheduling",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "full",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConnectorScheduling",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "incremental",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConnectorScheduling",
              "namespace": "connector._types"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L231-L235"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ConnectorScheduling",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "enabled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The interval is expressed using the crontab syntax",
          "name": "interval",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "connector/_types/Connector.ts#L106-L110"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ConnectorSyncJob",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "cancelation_requested_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "canceled_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "completed_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "connector",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SyncJobConnectorReference",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "created_at",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "deleted_document_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "indexed_document_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "indexed_document_volume",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "job_type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SyncJobType",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "last_seen",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "metadata",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "name": "started_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SyncStatus",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "total_document_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "trigger_method",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SyncJobTriggerMethod",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "worker_hostname",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "connector/_types/SyncJob.ts#L53-L72"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SyncJobConnectorReference",
        "namespace": "connector._types"
      },
      "properties": [
        {
          "name": "configuration",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConnectorConfiguration",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "filtering",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FilteringRules",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "language",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IngestPipelineParams",
              "namespace": "connector._types"
            }
          }
        },
        {
          "name": "service_type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "sync_cursor",
          "required": false,
          "type": {
            "kind": "user_defined_value"
          }
        }
      ],
      "specLocation": "connector/_types/SyncJob.ts#L31-L40"
    },
    {
      "kind": "interface",
      "name": {
        "name": "WriteResponseBase",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_primary_term",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "result",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Result",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_seq_no",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SequenceNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_shards",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardStatistics",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_version",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "forced_refresh",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/Base.ts#L36-L45"
    },
    {
      "kind": "interface",
      "name": {
        "name": "BulkIndexByScrollFailure",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "cause",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ErrorCause",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/Errors.ts#L60-L66"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Retries",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "bulk",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "search",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Retries.ts#L22-L25"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ExecuteEnrichPolicyStatus",
        "namespace": "enrich.execute_policy"
      },
      "properties": [
        {
          "name": "phase",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "EnrichPolicyPhase",
              "namespace": "enrich.execute_policy"
            }
          }
        }
      ],
      "specLocation": "enrich/execute_policy/types.ts#L20-L22"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Summary",
        "namespace": "enrich._types"
      },
      "properties": [
        {
          "name": "config",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "PolicyType",
                "namespace": "enrich._types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Policy",
                "namespace": "enrich._types"
              }
            }
          }
        }
      ],
      "specLocation": "enrich/_types/Policy.ts#L24-L26"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Policy",
        "namespace": "enrich._types"
      },
      "properties": [
        {
          "name": "enrich_fields",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "indices",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "match_field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "elasticsearch_version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "enrich/_types/Policy.ts#L34-L41"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CoordinatorStats",
        "namespace": "enrich.stats"
      },
      "properties": [
        {
          "name": "executed_searches_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "node_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "queue_size",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "remote_requests_current",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "remote_requests_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "enrich/stats/types.ts#L30-L36"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ExecutingPolicy",
        "namespace": "enrich.stats"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "task",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TaskInfo",
              "namespace": "tasks._types"
            }
          }
        }
      ],
      "specLocation": "enrich/stats/types.ts#L25-L28"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CacheStats",
        "namespace": "enrich.stats"
      },
      "properties": [
        {
          "name": "node_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "hits",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "hits_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "misses",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "misses_time_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "evictions",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "size_in_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "enrich/stats/types.ts#L38-L50"
    },
    {
      "generics": [
        {
          "name": "TEvent",
          "namespace": "eql._types.EqlSearchResponseBase"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "EqlSearchResponseBase",
        "namespace": "eql._types"
      },
      "properties": [
        {
          "description": "Identifier for the search.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, the response does not contain complete search results.",
          "name": "is_partial",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, the search request is still executing.",
          "name": "is_running",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Milliseconds it took Elasticsearch to execute the request.",
          "name": "took",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, the request timed out before completion.",
          "name": "timed_out",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Contains matching events and sequences. Also contains related metadata.",
          "name": "hits",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TEvent",
                  "namespace": "eql._types.EqlSearchResponseBase"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EqlHits",
              "namespace": "eql._types"
            }
          }
        }
      ],
      "specLocation": "eql/_types/EqlSearchResponseBase.ts#L24-L49"
    },
    {
      "generics": [
        {
          "name": "TEvent",
          "namespace": "eql._types.EqlHits"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "EqlHits",
        "namespace": "eql._types"
      },
      "properties": [
        {
          "description": "Metadata about the number of matching events or sequences.",
          "name": "total",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TotalHits",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "Contains events matching the query. Each object represents a matching event.",
          "name": "events",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "TEvent",
                    "namespace": "eql._types.EqlHits"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "HitsEvent",
                "namespace": "eql._types"
              }
            }
          }
        },
        {
          "description": "Contains event sequences matching the query. Each object represents a matching sequence. This parameter is only returned for EQL queries containing a sequence.",
          "docId": "eql-sequences",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/eql-syntax.html#eql-sequences",
          "name": "sequences",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "TEvent",
                    "namespace": "eql._types.EqlHits"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "HitsSequence",
                "namespace": "eql._types"
              }
            }
          }
        }
      ],
      "specLocation": "eql/_types/EqlHits.ts#L25-L39"
    },
    {
      "generics": [
        {
          "name": "TEvent",
          "namespace": "eql._types.HitsEvent"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "HitsEvent",
        "namespace": "eql._types"
      },
      "properties": [
        {
          "description": "Name of the index containing the event.",
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Unique identifier for the event. This ID is only unique within the index.",
          "name": "_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Original JSON body passed for the event at index time.",
          "name": "_source",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TEvent",
              "namespace": "eql._types.HitsEvent"
            }
          }
        },
        {
          "description": "Set to `true` for events in a timespan-constrained sequence that do not meet a given condition.",
          "docId": "eql-missing-events",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/eql-syntax.html#eql-missing-events",
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "user_defined_value"
              }
            }
          }
        }
      ],
      "specLocation": "eql/_types/EqlHits.ts#L41-L54"
    },
    {
      "generics": [
        {
          "name": "TEvent",
          "namespace": "eql._types.HitsSequence"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "HitsSequence",
        "namespace": "eql._types"
      },
      "properties": [
        {
          "description": "Contains events matching the query. Each object represents a matching event.",
          "name": "events",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "TEvent",
                    "namespace": "eql._types.HitsSequence"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "HitsEvent",
                "namespace": "eql._types"
              }
            }
          }
        },
        {
          "description": "Shared field values used to constrain matches in the sequence. These are defined using the by keyword in the EQL query syntax.",
          "docId": "eql-sequences",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/eql-syntax.html#eql-sequences",
          "name": "join_keys",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "user_defined_value"
            }
          }
        }
      ],
      "specLocation": "eql/_types/EqlHits.ts#L56-L64"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TableValuesContainer",
        "namespace": "esql._types"
      },
      "properties": [
        {
          "name": "integer",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TableValuesIntegerValue",
                "namespace": "esql._types"
              }
            }
          }
        },
        {
          "name": "keyword",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TableValuesKeywordValue",
                "namespace": "esql._types"
              }
            }
          }
        },
        {
          "name": "long",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TableValuesLongValue",
                "namespace": "esql._types"
              }
            }
          }
        },
        {
          "name": "double",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TableValuesLongDouble",
                "namespace": "esql._types"
              }
            }
          }
        }
      ],
      "specLocation": "esql/_types/TableValuesContainer.ts#L22-L28",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "FieldCapability",
        "namespace": "_global.field_caps"
      },
      "properties": [
        {
          "description": "Whether this field can be aggregated on all indices.",
          "name": "aggregatable",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The list of indices where this field has the same type family, or null if all indices have the same type family for the field.",
          "name": "indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Merged metadata across all indices as a map of string keys to arrays of values. A value length of 1 indicates that all indices had the same value for this key, while a length of 2 or more indicates that not all indices had the same value for this key.",
          "name": "meta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The list of indices where this field is not aggregatable, or null if all indices have the same definition for the field.",
          "name": "non_aggregatable_indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The list of indices where this field is not searchable, or null if all indices have the same definition for the field.",
          "name": "non_searchable_indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Whether this field is indexed for search on all indices.",
          "name": "searchable",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Whether this field is registered as a metadata field.",
          "docId": "mapping-metadata",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-fields.html",
          "name": "metadata_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "since": "8.0.0",
              "stability": "experimental"
            }
          },
          "description": "Whether this field is used as a time series dimension.",
          "name": "time_series_dimension",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "since": "8.0.0",
              "stability": "experimental"
            }
          },
          "description": "Contains metric type if this fields is used as a time series\nmetrics, absent if the field is not used as metric.",
          "name": "time_series_metric",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeSeriesMetricType",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "since": "8.0.0",
              "stability": "experimental"
            }
          },
          "description": "If this list is present in response then some indices have the\nfield marked as a dimension and other indices, the ones in this list, do not.",
          "name": "non_dimension_indices",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "experimental"
            },
            "stack": {
              "since": "8.0.0",
              "stability": "experimental"
            }
          },
          "description": "The list of indices where this field is present if these indices\ndonâ€™t have the same `time_series_metric` value for this field.",
          "name": "metric_conflicts_indices",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "_global/field_caps/types.ts#L23-L81"
    },
    {
      "kind": "interface",
      "name": {
        "name": "StoredScript",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "Specifies the language the script is written in.",
          "name": "lang",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptLanguage",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "options",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The script source.",
          "name": "source",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/Scripting.ts#L47-L57"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Hop",
        "namespace": "graph._types"
      },
      "properties": [
        {
          "description": "Specifies one or more fields from which you want to extract terms that are associated with the specified vertices.",
          "name": "connections",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Hop",
              "namespace": "graph._types"
            }
          }
        },
        {
          "description": "An optional guiding query that constrains the Graph API as it explores connected terms.",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Contains the fields you are interested in.",
          "name": "vertices",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "VertexDefinition",
                "namespace": "graph._types"
              }
            }
          }
        }
      ],
      "specLocation": "graph/_types/Hop.ts#L23-L36"
    },
    {
      "kind": "interface",
      "name": {
        "name": "VertexDefinition",
        "namespace": "graph._types"
      },
      "properties": [
        {
          "description": "Prevents the specified terms from being included in the results.",
          "name": "exclude",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Identifies a field in the documents of interest.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Identifies the terms of interest that form the starting points from which you want to spider out.",
          "name": "include",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "VertexInclude",
                "namespace": "graph._types"
              }
            }
          }
        },
        {
          "description": "Specifies how many documents must contain a pair of terms before it is considered to be a useful connection.\nThis setting acts as a certainty threshold.",
          "name": "min_doc_count",
          "required": false,
          "serverDefault": 3,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Controls how many documents on a particular shard have to contain a pair of terms before the connection is returned for global consideration.",
          "name": "shard_min_doc_count",
          "required": false,
          "serverDefault": 2,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of vertex terms returned for each field.",
          "name": "size",
          "required": false,
          "serverDefault": 5,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "graph/_types/Vertex.ts#L30-L59"
    },
    {
      "kind": "interface",
      "name": {
        "name": "VertexInclude",
        "namespace": "graph._types"
      },
      "properties": [
        {
          "name": "boost",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "term",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "graph/_types/Vertex.ts#L61-L64"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ExploreControls",
        "namespace": "graph._types"
      },
      "properties": [
        {
          "description": "To avoid the top-matching documents sample being dominated by a single source of results, it is sometimes necessary to request diversity in the sample.\nYou can do this by selecting a single-value field and setting a maximum number of documents per value for that field.",
          "name": "sample_diversity",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SampleDiversity",
              "namespace": "graph._types"
            }
          }
        },
        {
          "description": "Each hop considers a sample of the best-matching documents on each shard.\nUsing samples improves the speed of execution and keeps exploration focused on meaningfully-connected terms.\nVery small values (less than 50) might not provide sufficient weight-of-evidence to identify significant connections between terms.\nVery large sample sizes can dilute the quality of the results and increase execution times.",
          "name": "sample_size",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The length of time in milliseconds after which exploration will be halted and the results gathered so far are returned.\nThis timeout is honored on a best-effort basis.\nExecution might overrun this timeout if, for example, a long pause is encountered while FieldData is loaded for a field.",
          "name": "timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Filters associated terms so only those that are significantly associated with your query are included.",
          "docId": "search-aggregations-bucket-significantterms-aggregation",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-significantterms-aggregation.html",
          "name": "use_significance",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "graph/_types/ExploreControls.ts#L24-L49"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SampleDiversity",
        "namespace": "graph._types"
      },
      "properties": [
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_docs_per_value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "graph/_types/ExploreControls.ts#L51-L54"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Connection",
        "namespace": "graph._types"
      },
      "properties": [
        {
          "name": "doc_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "source",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "target",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "weight",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "graph/_types/Connection.ts#L22-L27"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Vertex",
        "namespace": "graph._types"
      },
      "properties": [
        {
          "name": "depth",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "term",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "weight",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "graph/_types/Vertex.ts#L23-L28"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndicesBlockStatus",
        "namespace": "indices.add_block"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "blocked",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/add_block/IndicesAddBlockResponse.ts#L30-L33"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AnalyzeDetail",
        "namespace": "indices.analyze"
      },
      "properties": [
        {
          "name": "analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AnalyzerDetail",
              "namespace": "indices.analyze"
            }
          }
        },
        {
          "name": "charfilters",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "CharFilterDetail",
                "namespace": "indices.analyze"
              }
            }
          }
        },
        {
          "name": "custom_analyzer",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "tokenfilters",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TokenDetail",
                "namespace": "indices.analyze"
              }
            }
          }
        },
        {
          "name": "tokenizer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenDetail",
              "namespace": "indices.analyze"
            }
          }
        }
      ],
      "specLocation": "indices/analyze/types.ts#L24-L30"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AnalyzerDetail",
        "namespace": "indices.analyze"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "tokens",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ExplainAnalyzeToken",
                "namespace": "indices.analyze"
              }
            }
          }
        }
      ],
      "specLocation": "indices/analyze/types.ts#L32-L35"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            {
              "kind": "user_defined_value"
            }
          ],
          "meta": {
            "description": "Additional tokenizer-specific attributes",
            "fieldname": "attributes"
          },
          "type": {
            "name": "AdditionalProperties",
            "namespace": "_spec_utils"
          }
        }
      ],
      "kind": "interface",
      "name": {
        "name": "ExplainAnalyzeToken",
        "namespace": "indices.analyze"
      },
      "properties": [
        {
          "name": "bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "end_offset",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "keyword",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "position",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "positionLength",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "start_offset",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "termFrequency",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "token",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/analyze/types.ts#L52-L67"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CharFilterDetail",
        "namespace": "indices.analyze"
      },
      "properties": [
        {
          "name": "filtered_text",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/analyze/types.ts#L46-L49"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TokenDetail",
        "namespace": "indices.analyze"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "tokens",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ExplainAnalyzeToken",
                "namespace": "indices.analyze"
              }
            }
          }
        }
      ],
      "specLocation": "indices/analyze/types.ts#L71-L74"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AnalyzeToken",
        "namespace": "indices.analyze"
      },
      "properties": [
        {
          "name": "end_offset",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "position",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "positionLength",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "start_offset",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "token",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/analyze/types.ts#L37-L44"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataStreamsStatsItem",
        "namespace": "indices.data_streams_stats"
      },
      "properties": [
        {
          "description": "Current number of backing indices for the data stream.",
          "name": "backing_indices",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the data stream.",
          "name": "data_stream",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The data streamâ€™s highest `@timestamp` value, converted to milliseconds since the Unix epoch.\nNOTE: This timestamp is provided as a best effort.\nThe data stream may contain `@timestamp` values higher than this if one or more of the following conditions are met:\nThe stream contains closed backing indices;\nBacking indices with a lower generation contain higher `@timestamp` values.",
          "name": "maximum_timestamp",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total size of all shards for the data streamâ€™s backing indices.\nThis parameter is only returned if the `human` query parameter is `true`.",
          "name": "store_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Total size, in bytes, of all shards for the data streamâ€™s backing indices.",
          "name": "store_size_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/data_streams_stats/IndicesDataStreamsStatsResponse.ts#L45-L65"
    },
    {
      "inherits": {
        "type": {
          "name": "AcknowledgedResponseBase",
          "namespace": "_types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IndicesResponseBase",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "_shards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardStatistics",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Base.ts#L87-L89"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataStreamLifecycleExplain",
        "namespace": "indices.explain_data_lifecycle"
      },
      "properties": [
        {
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "managed_by_lifecycle",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index_creation_date_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "time_since_index_creation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "rollover_date_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "time_since_rollover",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "lifecycle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamLifecycleWithRollover",
              "namespace": "indices._types"
            }
          }
        },
        {
          "name": "generation_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/explain_data_lifecycle/IndicesExplainDataLifecycleResponse.ts#L31-L41"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexAliases",
        "namespace": "indices.get_alias"
      },
      "properties": [
        {
          "name": "aliases",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AliasDefinition",
                "namespace": "indices._types"
              }
            }
          }
        }
      ],
      "specLocation": "indices/get_alias/IndicesGetAliasResponse.ts#L37-L39"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataStreamWithLifecycle",
        "namespace": "indices.get_data_lifecycle"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "lifecycle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamLifecycle",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/get_data_lifecycle/IndicesGetDataLifecycleResponse.ts#L27-L30"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataStream",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "Custom metadata for the stream, copied from the `_meta` object of the streamâ€™s matching index template.\nIf empty, the response omits this property.",
          "docId": "mapping-meta-field",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-meta-field.html",
          "name": "_meta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the data stream allows custom routing on write request.",
          "name": "allow_custom_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Information about failure store backing indices",
          "name": "failure_store",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FailureStore",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "Current generation for the data stream. This number acts as a cumulative count of the streamâ€™s rollovers, starting at 1.",
          "name": "generation",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the data stream is hidden.",
          "name": "hidden",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Name of the current ILM lifecycle policy in the streamâ€™s matching index template.\nThis lifecycle policy is set in the `index.lifecycle.name` setting.\nIf the template does not include a lifecycle policy, this property is not included in the response.\nNOTE: A data streamâ€™s backing indices may be assigned different lifecycle policies. To retrieve the lifecycle policy for individual backing indices, use the get index settings API.",
          "name": "ilm_policy",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the lifecycle system that'll manage the next generation of the data stream.",
          "name": "next_generation_managed_by",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ManagedBy",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "Indicates if ILM should take precedence over DSL in case both are configured to managed this data stream.",
          "name": "prefer_ilm",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Array of objects containing information about the data streamâ€™s backing indices.\nThe last item in this array contains information about the streamâ€™s current write index.",
          "name": "indices",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DataStreamIndex",
                "namespace": "indices._types"
              }
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "stable"
            },
            "stack": {
              "since": "8.11.0",
              "stability": "stable"
            }
          },
          "description": "Contains the configuration for the data stream lifecycle of this data stream.",
          "name": "lifecycle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamLifecycleWithRollover",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "Name of the data stream.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the data stream is created and managed by cross-cluster replication and the local cluster can not write into this data stream or change its mappings.",
          "name": "replicated",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the next write to this data stream will trigger a rollover first and the document will be indexed in the new backing index. If the rollover fails the indexing request will fail too.",
          "name": "rollover_on_write",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Health status of the data stream.\nThis health status is based on the state of the primary and replica shards of the streamâ€™s backing indices.",
          "name": "status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HealthStatus",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.10.0"
            }
          },
          "description": "If `true`, the data stream is created and managed by an Elastic stack component and cannot be modified through normal user interaction.",
          "name": "system",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Name of the index template used to create the data streamâ€™s backing indices.\nThe templateâ€™s index pattern must match the name of this data stream.",
          "name": "template",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Information about the `@timestamp` field in the data stream.",
          "name": "timestamp_field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamTimestampField",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/DataStream.ts#L45-L127"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FailureStore",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "enabled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "indices",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DataStreamIndex",
                "namespace": "indices._types"
              }
            }
          }
        },
        {
          "name": "rollover_on_write",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/_types/DataStream.ts#L39-L43"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataStreamIndex",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "Name of the backing index.",
          "name": "index_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Universally unique identifier (UUID) for the index.",
          "name": "index_uuid",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Uuid",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the current ILM lifecycle policy configured for this backing index.",
          "name": "ilm_policy",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the lifecycle system that's currently managing this backing index.",
          "name": "managed_by",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ManagedBy",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "Indicates if ILM should take precedence over DSL in case both are configured to manage this index.",
          "name": "prefer_ilm",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/_types/DataStream.ts#L136-L157"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataStreamTimestampField",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "Name of the timestamp field for the data stream, which must be `@timestamp`. The `@timestamp` field must be included in every document indexed to the data stream.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/DataStream.ts#L129-L134"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexTemplateItem",
        "namespace": "indices.get_index_template"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_template",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexTemplate",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/get_index_template/IndicesGetIndexTemplateResponse.ts#L29-L32"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexTemplate",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "Name of the index template.",
          "name": "index_patterns",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An ordered list of component template names.\nComponent templates are merged in the order specified, meaning that the last component template specified has the highest precedence.",
          "name": "composed_of",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Name",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Template to be applied.\nIt may optionally include an `aliases`, `mappings`, or `settings` configuration.",
          "name": "template",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexTemplateSummary",
              "namespace": "indices._types"
            }
          }
        },
        {
          "description": "Version number used to manage index templates externally.\nThis number is not automatically generated by Elasticsearch.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Priority to determine index template precedence when a new data stream or index is created.\nThe index template with the highest priority is chosen.\nIf no priority is specified the template is treated as though it is of priority 0 (lowest priority).\nThis number is not automatically generated by Elasticsearch.",
          "name": "priority",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Optional user metadata about the index template. May have any contents.\nThis map is not automatically generated by Elasticsearch.",
          "docId": "mapping-meta-field",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/mapping-meta-field.html",
          "name": "_meta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "allow_auto_create",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If this object is included, the template is used to create data streams and their backing indices.\nSupports an empty object.\nData streams require a matching index template with a `data_stream` object.",
          "name": "data_stream",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexTemplateDataStreamConfiguration",
              "namespace": "indices._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.12.0"
            }
          },
          "description": "Marks this index template as deprecated.\nWhen creating or updating a non-deprecated index template that uses deprecated components,\nElasticsearch will emit a deprecation warning.",
          "name": "deprecated",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.7.0"
            }
          },
          "description": "A list of component template names that are allowed to be absent.",
          "name": "ignore_missing_component_templates",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexTemplate.ts#L28-L81"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexTemplateSummary",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "Aliases to add.\nIf the index template includes a `data_stream` object, these are data stream aliases.\nOtherwise, these are index aliases.\nData stream aliases ignore the `index_routing`, `routing`, and `search_routing` options.",
          "name": "aliases",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Alias",
                "namespace": "indices._types"
              }
            }
          }
        },
        {
          "description": "Mapping for fields in the index.\nIf specified, this mapping can include field names, field data types, and mapping parameters.",
          "name": "mappings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TypeMapping",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "description": "Configuration options for the index.",
          "name": "settings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettings",
              "namespace": "indices._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "stable"
            },
            "stack": {
              "since": "8.11.0",
              "stability": "stable"
            }
          },
          "name": "lifecycle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamLifecycleWithRollover",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexTemplate.ts#L96-L118"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexTemplateDataStreamConfiguration",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "description": "If true, the data stream is hidden.",
          "name": "hidden",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, the data stream supports custom routing.",
          "name": "allow_custom_routing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/_types/IndexTemplate.ts#L83-L94"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexMappingRecord",
        "namespace": "indices.get_mapping"
      },
      "properties": [
        {
          "name": "item",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TypeMapping",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "mappings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TypeMapping",
              "namespace": "_types.mapping"
            }
          }
        }
      ],
      "specLocation": "indices/get_mapping/IndicesGetMappingResponse.ts#L29-L32"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Action",
        "namespace": "indices.modify_data_stream"
      },
      "properties": [
        {
          "description": "Adds an existing index as a backing index for a data stream.\nThe index is hidden as part of this operation.\nWARNING: Adding indices with the `add_backing_index` action can potentially result in improper data stream behavior.\nThis should be considered an expert level API.",
          "name": "add_backing_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexAndDataStreamAction",
              "namespace": "indices.modify_data_stream"
            }
          }
        },
        {
          "description": "Removes a backing index from a data stream.\nThe index is unhidden as part of this operation.\nA data streamâ€™s write index cannot be removed.",
          "name": "remove_backing_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexAndDataStreamAction",
              "namespace": "indices.modify_data_stream"
            }
          }
        }
      ],
      "specLocation": "indices/modify_data_stream/types.ts#L22-L37",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexAndDataStreamAction",
        "namespace": "indices.modify_data_stream"
      },
      "properties": [
        {
          "description": "Data stream targeted by the action.",
          "name": "data_stream",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Index for the action.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/modify_data_stream/types.ts#L39-L44"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexTemplateMapping",
        "namespace": "indices.put_index_template"
      },
      "properties": [
        {
          "description": "Aliases to add.\nIf the index template includes a `data_stream` object, these are data stream aliases.\nOtherwise, these are index aliases.\nData stream aliases ignore the `index_routing`, `routing`, and `search_routing` options.",
          "name": "aliases",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Alias",
                "namespace": "indices._types"
              }
            }
          }
        },
        {
          "description": "Mapping for fields in the index.\nIf specified, this mapping can include field names, field data types, and mapping parameters.",
          "name": "mappings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TypeMapping",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "description": "Configuration options for the index.",
          "name": "settings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettings",
              "namespace": "indices._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {
              "stability": "stable"
            },
            "stack": {
              "since": "8.11.0",
              "stability": "stable"
            }
          },
          "name": "lifecycle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamLifecycle",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/put_index_template/IndicesPutIndexTemplateRequest.ts#L121-L143"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataStreamVisibility",
        "namespace": "indices._types"
      },
      "properties": [
        {
          "name": "hidden",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "allow_custom_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/_types/DataStream.ts#L159-L162"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ShardsOperationResponseBase",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "_shards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardStatistics",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Base.ts#L91-L94"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ResolveIndexItem",
        "namespace": "indices.resolve_index"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "aliases",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "attributes",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "data_stream",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/resolve_index/ResolveIndexResponse.ts#L30-L35"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ResolveIndexAliasItem",
        "namespace": "indices.resolve_index"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "indices",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/resolve_index/ResolveIndexResponse.ts#L37-L40"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ResolveIndexDataStreamsItem",
        "namespace": "indices.resolve_index"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataStreamName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "timestamp_field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "backing_indices",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/resolve_index/ResolveIndexResponse.ts#L42-L46"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RolloverConditions",
        "namespace": "indices.rollover"
      },
      "properties": [
        {
          "name": "min_age",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_age",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_age_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_size_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_size_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_primary_shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_primary_shard_size_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_primary_shard_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_primary_shard_size_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_primary_shard_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min_primary_shard_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/rollover/types.ts#L24-L40"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Overlapping",
        "namespace": "indices.simulate_template"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_patterns",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "indices/simulate_template/IndicesSimulateTemplateResponse.ts#L39-L42"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Template",
        "namespace": "indices.simulate_template"
      },
      "properties": [
        {
          "name": "aliases",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Alias",
                "namespace": "indices._types"
              }
            }
          }
        },
        {
          "name": "mappings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TypeMapping",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexSettings",
              "namespace": "indices._types"
            }
          }
        }
      ],
      "specLocation": "indices/simulate_template/IndicesSimulateTemplateResponse.ts#L33-L37"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Action",
        "namespace": "indices.update_aliases"
      },
      "properties": [
        {
          "description": "Adds a data stream or index to an alias.\nIf the alias doesnâ€™t exist, the `add` action creates it.",
          "name": "add",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AddAction",
              "namespace": "indices.update_aliases"
            }
          }
        },
        {
          "description": "Removes a data stream or index from an alias.",
          "name": "remove",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RemoveAction",
              "namespace": "indices.update_aliases"
            }
          }
        },
        {
          "description": "Deletes an index.\nYou cannot use this action on aliases or data streams.",
          "name": "remove_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RemoveIndexAction",
              "namespace": "indices.update_aliases"
            }
          }
        }
      ],
      "specLocation": "indices/update_aliases/types.ts#L23-L39",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "AddAction",
        "namespace": "indices.update_aliases"
      },
      "properties": [
        {
          "description": "Alias for the action.\nIndex alias names support date math.",
          "name": "alias",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexAlias",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Aliases for the action.\nIndex alias names support date math.",
          "name": "aliases",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "IndexAlias",
                  "namespace": "_types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "IndexAlias",
                    "namespace": "_types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Query used to limit documents the alias can access.",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Data stream or index for the action.\nSupports wildcards (`*`).",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Data streams or indices for the action.\nSupports wildcards (`*`).",
          "name": "indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Value used to route indexing operations to a specific shard.\nIf specified, this overwrites the `routing` value for indexing operations.\nData stream aliases donâ€™t support this parameter.",
          "name": "index_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the alias is hidden.",
          "name": "is_hidden",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, sets the write index or data stream for the alias.",
          "name": "is_write_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Value used to route indexing and search operations to a specific shard.\nData stream aliases donâ€™t support this parameter.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Value used to route search operations to a specific shard.\nIf specified, this overwrites the `routing` value for search operations.\nData stream aliases donâ€™t support this parameter.",
          "name": "search_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the alias must exist to perform the action.",
          "name": "must_exist",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/update_aliases/types.ts#L41-L95"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RemoveAction",
        "namespace": "indices.update_aliases"
      },
      "properties": [
        {
          "description": "Alias for the action.\nIndex alias names support date math.",
          "name": "alias",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexAlias",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Aliases for the action.\nIndex alias names support date math.",
          "name": "aliases",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "IndexAlias",
                  "namespace": "_types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "IndexAlias",
                    "namespace": "_types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Data stream or index for the action.\nSupports wildcards (`*`).",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Data streams or indices for the action.\nSupports wildcards (`*`).",
          "name": "indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the alias must exist to perform the action.",
          "name": "must_exist",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/update_aliases/types.ts#L97-L122"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RemoveIndexAction",
        "namespace": "indices.update_aliases"
      },
      "properties": [
        {
          "description": "Data stream or index for the action.\nSupports wildcards (`*`).",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Data streams or indices for the action.\nSupports wildcards (`*`).",
          "name": "indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the alias must exist to perform the action.",
          "name": "must_exist",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/update_aliases/types.ts#L124-L139"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndicesValidationExplanation",
        "namespace": "indices.validate_query"
      },
      "properties": [
        {
          "name": "error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "explanation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "valid",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "indices/validate_query/IndicesValidateQueryResponse.ts#L32-L37"
    },
    {
      "description": "Acknowledged response. For dry_run, contains the list of pipelines which reference the inference endpoint",
      "inherits": {
        "type": {
          "name": "AcknowledgedResponseBase",
          "namespace": "_types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DeleteInferenceEndpointResult",
        "namespace": "inference._types"
      },
      "properties": [
        {
          "name": "pipelines",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "inference/_types/Results.ts#L91-L96"
    },
    {
      "description": "Represents an inference endpoint as returned by the GET API",
      "inherits": {
        "type": {
          "name": "InferenceEndpoint",
          "namespace": "inference._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "InferenceEndpointInfo",
        "namespace": "inference._types"
      },
      "properties": [
        {
          "description": "The inference Id",
          "name": "inference_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The task type",
          "name": "task_type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TaskType",
              "namespace": "inference._types"
            }
          }
        }
      ],
      "specLocation": "inference/_types/Services.ts#L41-L53"
    },
    {
      "description": "Configuration options when storing the inference endpoint",
      "kind": "interface",
      "name": {
        "name": "InferenceEndpoint",
        "namespace": "inference._types"
      },
      "properties": [
        {
          "description": "The service type",
          "name": "service",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Settings specific to the service",
          "name": "service_settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ServiceSettings",
              "namespace": "inference._types"
            }
          }
        },
        {
          "description": "Task settings specific to the service and task type",
          "name": "task_settings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TaskSettings",
              "namespace": "inference._types"
            }
          }
        }
      ],
      "specLocation": "inference/_types/Services.ts#L23-L39"
    },
    {
      "description": "InferenceResult is an aggregation of mutually exclusive variants",
      "kind": "interface",
      "name": {
        "name": "InferenceResult",
        "namespace": "inference._types"
      },
      "properties": [
        {
          "name": "text_embedding_bytes",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TextEmbeddingByteResult",
                "namespace": "inference._types"
              }
            }
          }
        },
        {
          "name": "text_embedding",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TextEmbeddingResult",
                "namespace": "inference._types"
              }
            }
          }
        },
        {
          "name": "sparse_embedding",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SparseEmbeddingResult",
                "namespace": "inference._types"
              }
            }
          }
        },
        {
          "name": "completion",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "CompletionResult",
                "namespace": "inference._types"
              }
            }
          }
        },
        {
          "name": "rerank",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RankedDocument",
                "namespace": "inference._types"
              }
            }
          }
        }
      ],
      "specLocation": "inference/_types/Results.ts#L79-L89",
      "variants": {
        "kind": "container"
      }
    },
    {
      "description": "The text embedding result object for byte representation",
      "kind": "interface",
      "name": {
        "name": "TextEmbeddingByteResult",
        "namespace": "inference._types"
      },
      "properties": [
        {
          "name": "embedding",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DenseByteVector",
              "namespace": "inference._types"
            }
          }
        }
      ],
      "specLocation": "inference/_types/Results.ts#L46-L51"
    },
    {
      "description": "The text embedding result object",
      "kind": "interface",
      "name": {
        "name": "TextEmbeddingResult",
        "namespace": "inference._types"
      },
      "properties": [
        {
          "name": "embedding",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DenseVector",
              "namespace": "inference._types"
            }
          }
        }
      ],
      "specLocation": "inference/_types/Results.ts#L53-L58"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SparseEmbeddingResult",
        "namespace": "inference._types"
      },
      "properties": [
        {
          "name": "embedding",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SparseVector",
              "namespace": "inference._types"
            }
          }
        }
      ],
      "specLocation": "inference/_types/Results.ts#L36-L38"
    },
    {
      "description": "The completion result object",
      "kind": "interface",
      "name": {
        "name": "CompletionResult",
        "namespace": "inference._types"
      },
      "properties": [
        {
          "name": "result",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "inference/_types/Results.ts#L60-L65"
    },
    {
      "description": "The rerank result object representing a single ranked document\nid: the original index of the document in the request\nscore: the score of the document relative to the query\ntext: Optional, the text of the document, if requested",
      "kind": "interface",
      "name": {
        "name": "RankedDocument",
        "namespace": "inference._types"
      },
      "properties": [
        {
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "text",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "inference/_types/Results.ts#L67-L77"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ElasticsearchVersionInfo",
        "namespace": "_types"
      },
      "properties": [
        {
          "name": "build_date",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "build_flavor",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "build_hash",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "build_snapshot",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "build_type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "lucene_version",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "minimum_index_compatibility_version",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "minimum_wire_compatibility_version",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "number",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/Base.ts#L54-L64"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Pipeline",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Description of the ingest pipeline.",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Processors to run immediately after a processor failure.",
          "name": "on_failure",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ProcessorContainer",
                "namespace": "ingest._types"
              }
            }
          }
        },
        {
          "description": "Processors used to perform transformations on documents before indexing.\nProcessors run sequentially in the order specified.",
          "name": "processors",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ProcessorContainer",
                "namespace": "ingest._types"
              }
            }
          }
        },
        {
          "description": "Version number used by external systems to track ingest pipelines.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Marks this ingest pipeline as deprecated.\nWhen a deprecated ingest pipeline is referenced as the default or final pipeline when creating or updating a non-deprecated index template, Elasticsearch will emit a deprecation warning.",
          "name": "deprecated",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Arbitrary metadata about the ingest pipeline. This map is not automatically generated by Elasticsearch.",
          "name": "_meta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Pipeline.ts#L23-L51"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ProcessorContainer",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Appends one or more values to an existing array if the field already exists and it is an array.\nConverts a scalar to an array and appends one or more values to it if the field exists and it is a scalar.\nCreates an array containing the provided values if the field doesnâ€™t exist.\nAccepts a single value or an array of values.",
          "docId": "append-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/append-processor.html",
          "name": "append",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AppendProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "The attachment processor lets Elasticsearch extract file attachments in common formats (such as PPT, XLS, and PDF) by using the Apache text extraction library Tika.",
          "docId": "attachment",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/attachment.html",
          "name": "attachment",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AttachmentProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Converts a human readable byte value (for example `1kb`) to its value in bytes (for example `1024`).\nIf the field is an array of strings, all members of the array will be converted.\nSupported human readable units are \"b\", \"kb\", \"mb\", \"gb\", \"tb\", \"pb\" case insensitive.\nAn error will occur if the field is not a supported format or resultant value exceeds 2^63.",
          "docId": "bytes-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/bytes-processor.html",
          "name": "bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BytesProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Converts circle definitions of shapes to regular polygons which approximate them.",
          "docId": "ingest-circle-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ingest-circle-processor.html",
          "name": "circle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CircleProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Computes the Community ID for network flow data as defined in the\nCommunity ID Specification. You can use a community ID to correlate network\nevents related to a single flow.",
          "docId": "community-id-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/community-id-processor.html",
          "name": "community_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CommunityIDProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Converts a field in the currently ingested document to a different type, such as converting a string to an integer.\nIf the field value is an array, all members will be converted.",
          "docId": "convert-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/convert-processor.html",
          "name": "convert",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConvertProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Extracts fields from CSV line out of a single text field within a document.\nAny empty field in CSV will be skipped.",
          "docId": "csv-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/csv-processor.html",
          "name": "csv",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CsvProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Parses dates from fields, and then uses the date or timestamp as the timestamp for the document.",
          "docId": "data-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/date-processor.html",
          "name": "date",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "The purpose of this processor is to point documents to the right time based index based on a date or timestamp field in a document by using the date math index name support.",
          "docId": "date-index-name-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/date-index-name-processor.html",
          "name": "date_index_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateIndexNameProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Extracts structured fields out of a single text field by matching the text field against a delimiter-based pattern.",
          "docId": "dissect-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/dissect-processor.html",
          "name": "dissect",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DissectProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Expands a field with dots into an object field.\nThis processor allows fields with dots in the name to be accessible by other processors in the pipeline.\nOtherwise these fields canâ€™t be accessed by any processor.",
          "docId": "dot-expand-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/dot-expand-processor.html",
          "name": "dot_expander",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DotExpanderProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Drops the document without raising any errors.\nThis is useful to prevent the document from getting indexed based on some condition.",
          "docId": "drop-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/drop-processor.html",
          "name": "drop",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DropProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "The `enrich` processor can enrich documents with data from another index.",
          "docId": "enrich-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/enrich-processor.html",
          "name": "enrich",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "EnrichProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Raises an exception.\nThis is useful for when you expect a pipeline to fail and want to relay a specific message to the requester.",
          "docId": "fail-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/fail-processor.html",
          "name": "fail",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FailProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Computes a hash of the documentâ€™s content. You can use this hash for\ncontent fingerprinting.",
          "docId": "fingerprint-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/fingerprint-processor.html",
          "name": "fingerprint",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FingerprintProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Runs an ingest processor on each element of an array or object.",
          "docId": "foreach-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/foreach-processor.html",
          "name": "foreach",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ForeachProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Currently an undocumented alias for GeoIP Processor.",
          "name": "ip_location",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IpLocationProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Converts geo-grid definitions of grid tiles or cells to regular bounding boxes or polygons which describe their shape.\nThis is useful if there is a need to interact with the tile shapes as spatially indexable fields.",
          "docId": "geo-grid-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ingest-geo-grid-processor.html",
          "name": "geo_grid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoGridProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "The `geoip` processor adds information about the geographical location of an IPv4 or IPv6 address.",
          "docId": "geoip-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/geoip-processor.html",
          "name": "geoip",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoIpProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Extracts structured fields out of a single text field within a document.\nYou choose which field to extract matched fields from, as well as the grok pattern you expect will match.\nA grok pattern is like a regular expression that supports aliased expressions that can be reused.",
          "docId": "grok-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/grok-processor.html",
          "name": "grok",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GrokProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Converts a string field by applying a regular expression and a replacement.\nIf the field is an array of string, all members of the array will be converted.\nIf any non-string values are encountered, the processor will throw an exception.",
          "docId": "gsub-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/gsub-processor.html",
          "name": "gsub",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GsubProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Removes HTML tags from the field.\nIf the field is an array of strings, HTML tags will be removed from all members of the array.",
          "docId": "htmlstrip-processor",
          "name": "html_strip",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HtmlStripProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Uses a pre-trained data frame analytics model or a model deployed for natural language processing tasks to infer against the data that is being ingested in the pipeline.",
          "docId": "inference-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/inference-processor.html",
          "name": "inference",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "InferenceProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Joins each element of an array into a single string using a separator character between each element.\nThrows an error when the field is not an array.",
          "docId": "join-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/join-processor.html",
          "name": "join",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JoinProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Converts a JSON string into a structured JSON object.",
          "docId": "json-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/json-processor.html",
          "name": "json",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JsonProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "This processor helps automatically parse messages (or specific event fields) which are of the `foo=bar` variety.",
          "docId": "kv-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/kv-processor.html",
          "name": "kv",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "KeyValueProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Converts a string to its lowercase equivalent.\nIf the field is an array of strings, all members of the array will be converted.",
          "docId": "lowercase-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/lowercase-processor.html",
          "name": "lowercase",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "LowercaseProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Calculates the network direction given a source IP address, destination IP\naddress, and a list of internal networks.",
          "docId": "network-direction-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/network-direction-processor.html",
          "name": "network_direction",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NetworkDirectionProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Executes another pipeline.",
          "docId": "pipeline-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/pipeline-processor.html",
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PipelineProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "The Redact processor uses the Grok rules engine to obscure text in the input document matching the given Grok patterns.\nThe processor can be used to obscure Personal Identifying Information (PII) by configuring it to detect known patterns such as email or IP addresses.\nText that matches a Grok pattern is replaced with a configurable string such as `<EMAIL>` where an email address is matched or simply replace all matches with the text `<REDACTED>` if preferred.",
          "docId": "redact-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/redact-processor.html",
          "name": "redact",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RedactProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Extracts the registered domain (also known as the effective top-level\ndomain or eTLD), sub-domain, and top-level domain from a fully qualified\ndomain name (FQDN). Uses the registered domains defined in the Mozilla\nPublic Suffix List.",
          "docId": "registered-domain-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/registered-domain-processor.html",
          "name": "registered_domain",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RegisteredDomainProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Removes existing fields.\nIf one field doesnâ€™t exist, an exception will be thrown.",
          "docId": "remove-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/remove-processor.html",
          "name": "remove",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RemoveProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Renames an existing field.\nIf the field doesnâ€™t exist or the new name is already used, an exception will be thrown.",
          "docId": "rename-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/rename-processor.html",
          "name": "rename",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RenameProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Routes a document to another target index or data stream.\nWhen setting the `destination` option, the target is explicitly specified and the dataset and namespace options canâ€™t be set.\nWhen the `destination` option is not set, this processor is in a data stream mode. Note that in this mode, the reroute processor can only be used on data streams that follow the data stream naming scheme.",
          "docId": "reroute-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/reroute-processor.html",
          "name": "reroute",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RerouteProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Runs an inline or stored script on incoming documents.\nThe script runs in the `ingest` context.",
          "docId": "script-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/script-processor.html",
          "name": "script",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ScriptProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Adds a field with the specified value.\nIf the field already exists, its value will be replaced with the provided one.",
          "docId": "set-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/set-processor.html",
          "name": "set",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SetProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Sets user-related details (such as `username`, `roles`, `email`, `full_name`, `metadata`, `api_key`, `realm` and `authentication_type`) from the current authenticated user to the current document by pre-processing the ingest.",
          "docId": "ingest-node-set-security-user-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{banch}/ingest-node-set-security-user-processor.html",
          "name": "set_security_user",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SetSecurityUserProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Sorts the elements of an array ascending or descending.\nHomogeneous arrays of numbers will be sorted numerically, while arrays of strings or heterogeneous arrays of strings + numbers will be sorted lexicographically.\nThrows an error when the field is not an array.",
          "docId": "sort-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/sort-processor.html",
          "name": "sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Splits a field into an array using a separator character.\nOnly works on string fields.",
          "docId": "split-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/split-processor.html",
          "name": "split",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SplitProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Terminates the current ingest pipeline, causing no further processors to be run.\nThis will normally be executed conditionally, using the `if` option.",
          "docId": "terminate-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/terminate-processor.html",
          "name": "terminate",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TerminateProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Trims whitespace from a field.\nIf the field is an array of strings, all members of the array will be trimmed.\nThis only works on leading and trailing whitespace.",
          "docId": "trim-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/trim-processor.html",
          "name": "trim",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrimProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Converts a string to its uppercase equivalent.\nIf the field is an array of strings, all members of the array will be converted.",
          "docId": "uppercase-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/uppercase-processor.html",
          "name": "uppercase",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "UppercaseProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "URL-decodes a string.\nIf the field is an array of strings, all members of the array will be decoded.",
          "docId": "urldecode-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/urldecode-processor.html",
          "name": "urldecode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "UrlDecodeProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Parses a Uniform Resource Identifier (URI) string and extracts its components as an object.\nThis URI object includes properties for the URIâ€™s domain, path, fragment, port, query, scheme, user info, username, and password.",
          "docId": "uri-parts-processor",
          "name": "uri_parts",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "UriPartsProcessor",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "The `user_agent` processor extracts details from the user agent string a browser sends with its web requests.\nThis processor adds this information by default under the `user_agent` field.",
          "docId": "user-agent-processor",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/user-agent-processor.html",
          "name": "user_agent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "UserAgentProcessor",
              "namespace": "ingest._types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L27-L301",
      "variants": {
        "kind": "container",
        "nonExhaustive": true
      }
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AppendProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to be appended to.\nSupports template snippets.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The value to be appended. Supports template snippets.",
          "name": "value",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "user_defined_value"
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "user_defined_value"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "If `false`, the processor does not append values already present in the field.",
          "name": "allow_duplicates",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L328-L343"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ProcessorBase",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Description of the processor.\nUseful for describing the purpose of the processor or its configuration.",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Conditionally execute the processor.",
          "name": "if",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Ignore failures for the processor.",
          "name": "ignore_failure",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Handle failures for the processor.",
          "name": "on_failure",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ProcessorContainer",
                "namespace": "ingest._types"
              }
            }
          }
        },
        {
          "description": "Identifier for the processor.\nUseful for debugging and metrics.",
          "name": "tag",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L303-L326"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AttachmentProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to get the base64 encoded field from.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and field does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The number of chars being used for extraction to prevent huge fields.\nUse `-1` for no limit.",
          "name": "indexed_chars",
          "required": false,
          "serverDefault": 100000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field name from which you can overwrite the number of chars being used for extraction.",
          "name": "indexed_chars_field",
          "required": false,
          "serverDefault": "null",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Array of properties to select to be stored.\nCan be `content`, `title`, `name`, `author`, `keywords`, `date`, `content_type`, `content_length`, `language`.",
          "name": "properties",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The field that will hold the attachment information.",
          "name": "target_field",
          "required": false,
          "serverDefault": "attachment",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, the binary field will be removed from the document",
          "name": "remove_binary",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Field containing the name of the resource to decode.\nIf specified, the processor passes this resource name to the underlying Tika library to enable Resource Name Based Detection.",
          "name": "resource_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L345-L386"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "BytesProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to convert.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to assign the converted value to.\nBy default, the field is updated in-place.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L555-L571"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CircleProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The difference between the resulting inscribed distance from center to side and the circleâ€™s radius (measured in meters for `geo_shape`, unit-less for `shape`).",
          "name": "error_distance",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field to interpret as a circle. Either a string in WKT format or a map for GeoJSON.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Which field mapping type is to be used when processing the circle: `geo_shape` or `shape`.",
          "name": "shape_type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShapeType",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "The field to assign the polygon shape to\nBy default, the field is updated in-place.",
          "name": "target_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L573-L596"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CommunityIDProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Field containing the source IP address.",
          "name": "source_ip",
          "required": false,
          "serverDefault": "source.ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field containing the source port.",
          "name": "source_port",
          "required": false,
          "serverDefault": "source.port",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field containing the destination IP address.",
          "name": "destination_ip",
          "required": false,
          "serverDefault": "destination.ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field containing the destination port.",
          "name": "destination_port",
          "required": false,
          "serverDefault": "destination.port",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field containing the IANA number.",
          "name": "iana_number",
          "required": false,
          "serverDefault": "network.iana_number",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field containing the ICMP type.",
          "name": "icmp_type",
          "required": false,
          "serverDefault": "icmp.type",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field containing the ICMP code.",
          "name": "icmp_code",
          "required": false,
          "serverDefault": "icmp.code",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field containing the transport protocol name or number. Used only when the\niana_number field is not present. The following protocol names are currently\nsupported: eigrp, gre, icmp, icmpv6, igmp, ipv6-icmp, ospf, pim, sctp, tcp, udp",
          "name": "transport",
          "required": false,
          "serverDefault": "network.transport",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Output field for the community ID.",
          "name": "target_field",
          "required": false,
          "serverDefault": "network.community_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Seed for the community ID hash. Must be between 0 and 65535 (inclusive). The\nseed can prevent hash collisions between network domains, such as a staging\nand production network that use the same addressing scheme.",
          "name": "seed",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true and any required fields are missing, the processor quietly exits\nwithout modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L598-L659"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ConvertProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field whose value is to be converted.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to assign the converted value to.\nBy default, the `field` is updated in-place.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The type to convert the existing value to.",
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConvertType",
              "namespace": "ingest._types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L672-L692"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "CsvProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Value used to fill empty fields.\nEmpty fields are skipped if this is not provided.\nAn empty field is one with no value (2 consecutive separators) or empty quotes (`\"\"`).",
          "name": "empty_value",
          "required": false,
          "type": {
            "kind": "user_defined_value"
          }
        },
        {
          "description": "The field to extract data from.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Quote used in CSV, has to be single character string.",
          "name": "quote",
          "required": false,
          "serverDefault": "\"",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Separator used in CSV, has to be single character string.",
          "name": "separator",
          "required": false,
          "serverDefault": ",",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The array of fields to assign extracted values to.",
          "name": "target_fields",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Trim whitespaces in unquoted fields.",
          "name": "trim",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L694-L727"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to get the date from.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An array of the expected date formats.\nCan be a java time pattern or one of the following formats: ISO8601, UNIX, UNIX_MS, or TAI64N.",
          "name": "formats",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The locale to use when parsing the date, relevant when parsing month names or week days.\nSupports template snippets.",
          "name": "locale",
          "required": false,
          "serverDefault": "ENGLISH",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field that will hold the parsed date.",
          "name": "target_field",
          "required": false,
          "serverDefault": "`@timestamp`",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The timezone to use when parsing the date.\nSupports template snippets.",
          "name": "timezone",
          "required": false,
          "serverDefault": "UTC",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The format to use when writing the date to target_field. Must be a valid\njava time pattern.",
          "name": "output_format",
          "required": false,
          "serverDefault": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L769-L802"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DateIndexNameProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "An array of the expected date formats for parsing dates / timestamps in the document being preprocessed.\nCan be a java time pattern or one of the following formats: ISO8601, UNIX, UNIX_MS, or TAI64N.",
          "name": "date_formats",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "How to round the date when formatting the date into the index name. Valid values are:\n`y` (year), `M` (month), `w` (week), `d` (day), `h` (hour), `m` (minute) and `s` (second).\nSupports template snippets.",
          "name": "date_rounding",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to get the date or timestamp from.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The format to be used when printing the parsed date into the index name.\nA valid java time pattern is expected here.\nSupports template snippets.",
          "name": "index_name_format",
          "required": false,
          "serverDefault": "yyyy-MM-dd",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A prefix of the index name to be prepended before the printed date.\nSupports template snippets.",
          "name": "index_name_prefix",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The locale to use when parsing the date from the document being preprocessed, relevant when parsing month names or week days.",
          "name": "locale",
          "required": false,
          "serverDefault": "ENGLISH",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The timezone to use when parsing the date and when date math index supports resolves expressions into concrete index names.",
          "name": "timezone",
          "required": false,
          "serverDefault": "UTC",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L729-L767"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DissectProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The character(s) that separate the appended fields.",
          "name": "append_separator",
          "required": false,
          "serverDefault": "\"\"",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to dissect.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The pattern to apply to the field.",
          "name": "pattern",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L804-L823"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DotExpanderProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to expand into an object field.\nIf set to `*`, all top-level fields will be expanded.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Controls the behavior when there is already an existing nested object that conflicts with the expanded field.\nWhen `false`, the processor will merge conflicts by combining the old and the new values into an array.\nWhen `true`, the value from the expanded field will overwrite the existing value.",
          "name": "override",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field that contains the field to expand.\nOnly required if the field to expand is part another object field, because the `field` option can only understand leaf fields.",
          "name": "path",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L825-L843"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DropProcessor",
        "namespace": "ingest._types"
      },
      "properties": [],
      "specLocation": "ingest/_types/Processors.ts#L845-L845"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "EnrichProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field in the input document that matches the policies match_field used to retrieve the enrichment data.\nSupports template snippets.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The maximum number of matched documents to include under the configured target field.\nThe `target_field` will be turned into a json array if `max_matches` is higher than 1, otherwise `target_field` will become a json object.\nIn order to avoid documents getting too large, the maximum allowed value is 128.",
          "name": "max_matches",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If processor will update fields with pre-existing non-null-valued field.\nWhen set to `false`, such fields will not be touched.",
          "name": "override",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The name of the enrich policy to use.",
          "name": "policy_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A spatial relation operator used to match the geoshape of incoming documents to documents in the enrich index.\nThis option is only used for `geo_match` enrich policy types.",
          "name": "shape_relation",
          "required": false,
          "serverDefault": "INTERSECTS",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoShapeRelation",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field added to incoming documents to contain enrich data. This field contains both the `match_field` and `enrich_fields` specified in the enrich policy.\nSupports template snippets.",
          "name": "target_field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L847-L886"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FailProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The error message thrown by the processor.\nSupports template snippets.",
          "name": "message",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L888-L894"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "FingerprintProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Array of fields to include in the fingerprint. For objects, the processor\nhashes both the field key and value. For other fields, the processor hashes\nonly the field value.",
          "name": "fields",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Output field for the fingerprint.",
          "name": "target_field",
          "required": false,
          "serverDefault": "fingerprint",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Salt value for the hash function.",
          "name": "salt",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The hash method used to compute the fingerprint. Must be one of MD5, SHA-1,\nSHA-256, SHA-512, or MurmurHash3.",
          "name": "method",
          "required": false,
          "serverDefault": "SHA-1",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FingerprintDigest",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "If true, the processor ignores any missing fields. If all fields are\nmissing, the processor silently exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L904-L932"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ForeachProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Field containing array or object values.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the processor silently exits without changing the document if the `field` is `null` or missing.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Ingest processor to run on each element.",
          "name": "processor",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ProcessorContainer",
              "namespace": "ingest._types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L934-L948"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "IpLocationProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The database filename referring to a database the module ships with (GeoLite2-City.mmdb, GeoLite2-Country.mmdb, or GeoLite2-ASN.mmdb) or a custom database in the ingest-geoip config directory.",
          "name": "database_file",
          "required": false,
          "serverDefault": "GeoLite2-City.mmdb",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to get the ip address from for the geographical lookup.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, only the first found IP location data will be returned, even if the field contains an array.",
          "name": "first_only",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Controls what properties are added to the `target_field` based on the IP location lookup.",
          "name": "properties",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The field that will hold the geographical information looked up from the MaxMind database.",
          "name": "target_field",
          "required": false,
          "serverDefault": "geoip",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` (and if `ingest.geoip.downloader.eager.download` is `false`), the missing database is downloaded when the pipeline is created.\nElse, the download is triggered by when the pipeline is used as the `default_pipeline` or `final_pipeline` in an index.",
          "name": "download_database_on_pipeline_creation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L478-L512"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoGridProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to interpret as a geo-tile.=\nThe field format is determined by the `tile_type`.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Three tile formats are understood: geohash, geotile and geohex.",
          "name": "tile_type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoGridTileType",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "The field to assign the polygon shape to, by default, the `field` is updated in-place.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If specified and a parent tile exists, save that tile address to this field.",
          "name": "parent_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If specified and children tiles exist, save those tile addresses to this field as an array of strings.",
          "name": "children_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If specified and intersecting non-child tiles exist, save their addresses to this field as an array of strings.",
          "name": "non_children_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If specified, save the tile precision (zoom) as an integer to this field.",
          "name": "precision_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Which format to save the generated polygon in.",
          "name": "target_format",
          "required": false,
          "serverDefault": "geojson",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoGridTargetFormat",
              "namespace": "ingest._types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L388-L429"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GeoIpProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The database filename referring to a database the module ships with (GeoLite2-City.mmdb, GeoLite2-Country.mmdb, or GeoLite2-ASN.mmdb) or a custom database in the ingest-geoip config directory.",
          "name": "database_file",
          "required": false,
          "serverDefault": "GeoLite2-City.mmdb",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to get the ip address from for the geographical lookup.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, only the first found geoip data will be returned, even if the field contains an array.",
          "name": "first_only",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Controls what properties are added to the `target_field` based on the geoip lookup.",
          "name": "properties",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The field that will hold the geographical information looked up from the MaxMind database.",
          "name": "target_field",
          "required": false,
          "serverDefault": "geoip",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` (and if `ingest.geoip.downloader.eager.download` is `false`), the missing database is downloaded when the pipeline is created.\nElse, the download is triggered by when the pipeline is used as the `default_pipeline` or `final_pipeline` in an index.",
          "name": "download_database_on_pipeline_creation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L442-L476"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GrokProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Must be disabled or v1. If v1, the processor uses patterns with Elastic\nCommon Schema (ECS) field names.",
          "name": "ecs_compatibility",
          "required": false,
          "serverDefault": "disabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to use for grok expression parsing.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A map of pattern-name and pattern tuples defining custom patterns to be used by the current processor.\nPatterns matching existing names will override the pre-existing definition.",
          "name": "pattern_definitions",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "An ordered list of grok expression to match and extract named captures with.\nReturns on the first expression in the list that matches.",
          "name": "patterns",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "GrokPattern",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "When `true`, `_ingest._grok_match_index` will be inserted into your matched documentâ€™s metadata with the index into the pattern found in `patterns` that matched.",
          "name": "trace_match",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L950-L981"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "GsubProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to apply the replacement to.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The pattern to be replaced.",
          "name": "pattern",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The string to replace the matching patterns with.",
          "name": "replacement",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to assign the converted value to\nBy default, the `field` is updated in-place.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L983-L1007"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "HtmlStripProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The string-valued field to remove HTML tags from.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document,",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to assign the converted value to\nBy default, the `field` is updated in-place.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1009-L1025"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "InferenceProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The ID or alias for the trained model, or the ID of the deployment.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field added to incoming documents to contain results objects.",
          "name": "target_field",
          "required": false,
          "serverDefault": "ml.inference.<processor_tag>",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maps the document field names to the known field names of the model.\nThis mapping takes precedence over any default mappings provided in the model configuration.",
          "name": "field_map",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "Contains the inference type and its options.",
          "name": "inference_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "InferenceConfig",
              "namespace": "ingest._types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1027-L1046"
    },
    {
      "kind": "interface",
      "name": {
        "name": "InferenceConfig",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Regression configuration for inference.",
          "name": "regression",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "InferenceConfigRegression",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "Classification configuration for inference.",
          "name": "classification",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "InferenceConfigClassification",
              "namespace": "ingest._types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1048-L1060",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "InferenceConfigRegression",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field that is added to incoming documents to contain the inference prediction.",
          "name": "results_field",
          "required": false,
          "serverDefault": "<dependent_variable>_prediction",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of feature importance values per document.",
          "name": "num_top_feature_importance_values",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1062-L1073"
    },
    {
      "kind": "interface",
      "name": {
        "name": "InferenceConfigClassification",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Specifies the number of top class predictions to return.",
          "name": "num_top_classes",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of feature importance values per document.",
          "name": "num_top_feature_importance_values",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction.",
          "name": "results_field",
          "required": false,
          "serverDefault": "<dependent_variable>_prediction",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the field to which the top classes are written.",
          "name": "top_classes_results_field",
          "required": false,
          "serverDefault": "top_classes",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the type of the predicted field to write.\nValid values are: `string`, `number`, `boolean`.",
          "name": "prediction_field_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1075-L1101"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "JoinProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Field containing array values to join.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The separator character.",
          "name": "separator",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to assign the joined value to.\nBy default, the field is updated in-place.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1103-L1118"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "JsonProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Flag that forces the parsed JSON to be added at the top level of the document.\n`target_field` must not be set when this option is chosen.",
          "name": "add_to_root",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "When set to `replace`, root fields that conflict with fields from the parsed JSON will be overridden.\nWhen set to `merge`, conflicting fields will be merged.\nOnly applicable `if add_to_root` is set to true.",
          "name": "add_to_root_conflict_strategy",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JsonProcessorConflictStrategy",
              "namespace": "ingest._types"
            }
          }
        },
        {
          "description": "When set to `true`, the JSON parser will not fail if the JSON contains duplicate keys.\nInstead, the last encountered value for any duplicate key wins.",
          "name": "allow_duplicate_keys",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to be parsed.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field that the converted structured object will be written into.\nAny existing content in this field will be overwritten.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1120-L1149"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KeyValueProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "List of keys to exclude from document.",
          "name": "exclude_keys",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The field to be parsed.\nSupports template snippets.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Regex pattern to use for splitting key-value pairs.",
          "name": "field_split",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "List of keys to filter and insert into document.\nDefaults to including all keys.",
          "name": "include_keys",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Prefix to be added to extracted keys.",
          "name": "prefix",
          "required": false,
          "serverDefault": "null",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`. strip brackets `()`, `<>`, `[]` as well as quotes `'` and `\"` from extracted values.",
          "name": "strip_brackets",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to insert the extracted keys into.\nDefaults to the root of the document.\nSupports template snippets.",
          "name": "target_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "String of characters to trim from extracted keys.",
          "name": "trim_key",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "String of characters to trim from extracted values.",
          "name": "trim_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Regex pattern to use for splitting the key from the value within a key-value pair.",
          "name": "value_split",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1158-L1210"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "LowercaseProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to make lowercase.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to assign the converted value to.\nBy default, the field is updated in-place.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1212-L1228"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "NetworkDirectionProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Field containing the source IP address.",
          "name": "source_ip",
          "required": false,
          "serverDefault": "source.ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Field containing the destination IP address.",
          "name": "destination_ip",
          "required": false,
          "serverDefault": "destination.ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Output field for the network direction.",
          "name": "target_field",
          "required": false,
          "serverDefault": "network.direction",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "List of internal networks. Supports IPv4 and IPv6 addresses and ranges in\nCIDR notation. Also supports the named ranges listed below. These may be\nconstructed with template snippets. Must specify only one of\ninternal_networks or internal_networks_field.",
          "name": "internal_networks",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "A field on the given document to read the internal_networks configuration\nfrom.",
          "name": "internal_networks_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true and any required fields are missing, the processor quietly exits\nwithout modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1230-L1264"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "PipelineProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The name of the pipeline to execute.\nSupports template snippets.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Whether to ignore missing pipelines instead of failing.",
          "name": "ignore_missing_pipeline",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1266-L1277"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RedactProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to be redacted",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A list of grok expressions to match and redact named captures with",
          "name": "patterns",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "GrokPattern",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "pattern_definitions",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Start a redacted section with this token",
          "name": "prefix",
          "required": false,
          "serverDefault": "<",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "End a redacted section with this token",
          "name": "suffix",
          "required": false,
          "serverDefault": ">",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true` and the current license does not support running redact processors, then the processor quietly exits without modifying the document",
          "name": "skip_if_unlicensed",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.16.0"
            }
          },
          "description": "If `true` then ingest metadata `_ingest._redact._is_redacted` is set to `true` if the document has been redacted",
          "name": "trace_redact",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1279-L1320"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RegisteredDomainProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Field containing the source FQDN.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Object field containing extracted domain components. If an empty string,\nthe processor adds components to the documentâ€™s root.",
          "name": "target_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true and any required fields are missing, the processor quietly exits\nwithout modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1322-L1338"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RemoveProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Fields to be removed. Supports template snippets.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Fields to be kept. When set, all fields other than those specified are removed.",
          "name": "keep",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1340-L1354"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RenameProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to be renamed.\nSupports template snippets.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The new name of the field.\nSupports template snippets.",
          "name": "target_field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1356-L1372"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RerouteProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "A static value for the target. Canâ€™t be set when the dataset or namespace option is set.",
          "name": "destination",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Field references or a static value for the dataset part of the data stream name.\nIn addition to the criteria for index names, cannot contain - and must be no longer than 100 characters.\nExample values are nginx.access and nginx.error.\n\nSupports field references with a mustache-like syntax (denoted as {{double}} or {{{triple}}} curly braces).\nWhen resolving field references, the processor replaces invalid characters with _. Uses the <dataset> part\nof the index name as a fallback if all field references resolve to a null, missing, or non-string value.\n\ndefault {{data_stream.dataset}}",
          "name": "dataset",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Field references or a static value for the namespace part of the data stream name. See the criteria for\nindex names for allowed characters. Must be no longer than 100 characters.\n\nSupports field references with a mustache-like syntax (denoted as {{double}} or {{{triple}}} curly braces).\nWhen resolving field references, the processor replaces invalid characters with _. Uses the <namespace> part\nof the index name as a fallback if all field references resolve to a null, missing, or non-string value.\n\ndefault {{data_stream.namespace}}",
          "name": "namespace",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "string",
                    "namespace": "_builtins"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1374-L1402"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ScriptProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "ID of a stored script.\nIf no `source` is specified, this parameter is required.",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Script language.",
          "name": "lang",
          "required": false,
          "serverDefault": "painless",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Object containing parameters for the script.",
          "name": "params",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "Inline script.\nIf no `id` is specified, this parameter is required.",
          "name": "source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1404-L1424"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SetProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The origin field which will be copied to `field`, cannot set `value` simultaneously.\nSupported data types are `boolean`, `number`, `array`, `object`, `string`, `date`, etc.",
          "name": "copy_from",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field to insert, upsert, or update.\nSupports template snippets.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `value` is a template snippet that evaluates to `null` or the empty string, the processor quietly exits without modifying the document.",
          "name": "ignore_empty_value",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The media type for encoding `value`.\nApplies only when value is a template snippet.\nMust be one of `application/json`, `text/plain`, or `application/x-www-form-urlencoded`.",
          "name": "media_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true` processor will update fields with pre-existing non-null-valued field.\nWhen set to `false`, such fields will not be touched.",
          "name": "override",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The value to be set for the field.\nSupports template snippets.\nMay specify only one of `value` or `copy_from`.",
          "name": "value",
          "required": false,
          "type": {
            "kind": "user_defined_value"
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1426-L1460"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SetSecurityUserProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to store the user information into.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Controls what user related properties are added to the field.",
          "name": "properties",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1462-L1471"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SortProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to be sorted.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The sort order to use.\nAccepts `\"asc\"` or `\"desc\"`.",
          "name": "order",
          "required": false,
          "serverDefault": "asc",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortOrder",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field to assign the sorted value to.\nBy default, the field is updated in-place.",
          "name": "target_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1478-L1494"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "SplitProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to split.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Preserves empty trailing fields, if any.",
          "name": "preserve_trailing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A regex which matches the separator, for example, `,` or `\\s+`.",
          "name": "separator",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to assign the split value to.\nBy default, the field is updated in-place.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1496-L1521"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TerminateProcessor",
        "namespace": "ingest._types"
      },
      "properties": [],
      "specLocation": "ingest/_types/Processors.ts#L1523-L1523"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TrimProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The string-valued field to trim whitespace from.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to assign the trimmed value to.\nBy default, the field is updated in-place.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1525-L1541"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UppercaseProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to make uppercase.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to assign the converted value to.\nBy default, the field is updated in-place.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1543-L1559"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UrlDecodeProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field to decode.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field to assign the converted value to.\nBy default, the field is updated in-place.",
          "name": "target_field",
          "required": false,
          "serverDefault": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1561-L1577"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UriPartsProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "Field containing the URI string.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the processor copies the unparsed URI to `<target_field>.original`.",
          "name": "keep_original",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the processor removes the `field` after parsing the URI string.\nIf parsing fails, the processor does not remove the `field`.",
          "name": "remove_if_successful",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Output field for the URI object.",
          "name": "target_field",
          "required": false,
          "serverDefault": "url",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L1579-L1605"
    },
    {
      "inherits": {
        "type": {
          "name": "ProcessorBase",
          "namespace": "ingest._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UserAgentProcessor",
        "namespace": "ingest._types"
      },
      "properties": [
        {
          "description": "The field containing the user agent string.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true` and `field` does not exist, the processor quietly exits without modifying the document.",
          "name": "ignore_missing",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The name of the file in the `config/ingest-user-agent` directory containing the regular expressions for parsing the user agent string. Both the directory and the file have to be created before starting Elasticsearch. If not specified, ingest-user-agent will use the `regexes.yaml` from uap-core it ships with.",
          "name": "regex_file",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field that will be filled with the user agent details.",
          "name": "target_field",
          "required": false,
          "serverDefault": "user_agent",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Controls what properties are added to `target_field`.",
          "name": "properties",
          "required": false,
          "serverDefault": [
            "name",
            "major",
            "minor",
            "patch",
            "build",
            "os",
            "os_name",
            "os_major",
            "os_minor",
            "device"
          ],
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "UserAgentProperty",
                "namespace": "ingest._types"
              }
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.9.0",
              "stability": "beta"
            }
          },
          "description": "Extracts device type from the user agent string on a best-effort basis.",
          "name": "extract_device_type",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/_types/Processors.ts#L514-L545"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Document",
        "namespace": "ingest.simulate"
      },
      "properties": [
        {
          "description": "Unique identifier for the document.\nThis ID must be unique within the `_index`.",
          "name": "_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the index containing the document.",
          "name": "_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "JSON body for the document.",
          "name": "_source",
          "required": true,
          "type": {
            "kind": "user_defined_value"
          }
        }
      ],
      "specLocation": "ingest/simulate/types.ts#L62-L76"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SimulateDocumentResult",
        "namespace": "ingest.simulate"
      },
      "properties": [
        {
          "name": "doc",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DocumentSimulation",
              "namespace": "ingest.simulate"
            }
          }
        },
        {
          "name": "error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ErrorCause",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "processor_results",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "PipelineSimulation",
                "namespace": "ingest.simulate"
              }
            }
          }
        }
      ],
      "specLocation": "ingest/simulate/types.ts#L46-L50"
    },
    {
      "attachedBehaviors": [
        "AdditionalProperties"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          ],
          "meta": {
            "description": "Additional metadata",
            "fieldname": "metadata"
          },
          "type": {
            "name": "AdditionalProperties",
            "namespace": "_spec_utils"
          }
        }
      ],
      "description": "The simulated document, with optional metadata.",
      "kind": "interface",
      "name": {
        "name": "DocumentSimulation",
        "namespace": "ingest.simulate"
      },
      "properties": [
        {
          "description": "Unique identifier for the document. This ID must be unique within the `_index`.",
          "name": "_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the index containing the document.",
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_ingest",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ingest",
              "namespace": "ingest.simulate"
            }
          }
        },
        {
          "description": "Value used to send the document to a specific primary shard.",
          "name": "_routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "JSON body for the document.",
          "name": "_source",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "",
          "name": "_version",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "VersionNumber",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Stringified",
              "namespace": "_spec_utils"
            }
          }
        },
        {
          "name": "_version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/simulate/types.ts#L78-L108"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Ingest",
        "namespace": "ingest.simulate"
      },
      "properties": [
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.16.0"
            }
          },
          "name": "_redact",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Redact",
              "namespace": "ingest.simulate"
            }
          }
        },
        {
          "name": "timestamp",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/simulate/types.ts#L29-L37"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Redact",
        "namespace": "ingest.simulate"
      },
      "properties": [
        {
          "description": "indicates if document has been redacted",
          "name": "_is_redacted",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ingest/simulate/types.ts#L39-L44"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PipelineSimulation",
        "namespace": "ingest.simulate"
      },
      "properties": [
        {
          "name": "doc",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DocumentSimulation",
              "namespace": "ingest.simulate"
            }
          }
        },
        {
          "name": "tag",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "processor_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "status",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ActionStatusOptions",
              "namespace": "watcher._types"
            }
          }
        },
        {
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "ignored_error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ErrorCause",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ErrorCause",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ingest/simulate/types.ts#L52-L60"
    },
    {
      "kind": "interface",
      "name": {
        "name": "LicenseInformation",
        "namespace": "license.get"
      },
      "properties": [
        {
          "name": "expiry_date",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "expiry_date_in_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "issue_date",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "issue_date_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "issued_to",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "issuer",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_nodes",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "long",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "max_resource_units",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "integer",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "LicenseStatus",
              "namespace": "license._types"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "LicenseType",
              "namespace": "license._types"
            }
          }
        },
        {
          "name": "uid",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Uuid",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "start_date_in_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "license/get/types.ts#L25-L38"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Pipeline",
        "namespace": "logstash._types"
      },
      "properties": [
        {
          "description": "Description of the pipeline.\nThis description is not used by Elasticsearch or Logstash.",
          "name": "description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Date the pipeline was last updated.\nMust be in the `yyyy-MM-dd'T'HH:mm:ss.SSSZZ` strict_date_time format.",
          "name": "last_modified",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Optional metadata about the pipeline.\nMay have any contents.\nThis metadata is not generated or used by Elasticsearch or Logstash.",
          "name": "pipeline_metadata",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PipelineMetadata",
              "namespace": "logstash._types"
            }
          }
        },
        {
          "description": "User who last updated the pipeline.",
          "name": "username",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Configuration for the pipeline.",
          "docId": "logstash-configuration-file-structure",
          "docUrl": "https://www.elastic.co/guide/en/logstash/{branch}/configuration-file-structure.html",
          "name": "pipeline",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Settings for the pipeline.\nSupports only flat keys in dot notation.",
          "docId": "logstash-logstash-settings-file",
          "docUrl": "https://www.elastic.co/guide/en/logstash/{branch}/logstash-settings-file.html",
          "name": "pipeline_settings",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PipelineSettings",
              "namespace": "logstash._types"
            }
          }
        }
      ],
      "specLocation": "logstash/_types/Pipeline.ts#L60-L92"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PipelineMetadata",
        "namespace": "logstash._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "version",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "logstash/_types/Pipeline.ts#L23-L26"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PipelineSettings",
        "namespace": "logstash._types"
      },
      "properties": [
        {
          "description": "The number of workers that will, in parallel, execute the filter and output stages of the pipeline.",
          "docId": "logstash-logstash-settings-file",
          "docUrl": "https://www.elastic.co/guide/en/logstash/{branch}/logstash-settings-file.html",
          "name": "pipeline.workers",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum number of events an individual worker thread will collect from inputs before attempting to execute its filters and outputs.",
          "name": "pipeline.batch.size",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "When creating pipeline event batches, how long in milliseconds to wait for each event before dispatching an undersized batch to pipeline workers.",
          "name": "pipeline.batch.delay",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The internal queuing model to use for event buffering.",
          "docId": "logstash-logstash-settings-file",
          "docUrl": "https://www.elastic.co/guide/en/logstash/{branch}/logstash-settings-file.html",
          "name": "queue.type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The total capacity of the queue (`queue.type: persisted`) in number of bytes.",
          "name": "queue.max_bytes.number",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The total capacity of the queue (`queue.type: persisted`) in terms of units of bytes.",
          "name": "queue.max_bytes.units",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The maximum number of written events before forcing a checkpoint when persistent queues are enabled (`queue.type: persisted`).",
          "name": "queue.checkpoint.writes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "logstash/_types/Pipeline.ts#L28-L59"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Operation",
        "namespace": "_global.mget"
      },
      "properties": [
        {
          "description": "The unique document ID.",
          "name": "_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The index that contains the document.",
          "name": "_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The key for the primary shard the document resides on. Required if routing is used during indexing.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `false`, excludes all _source fields.",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SourceConfig",
              "namespace": "_global.search._types"
            }
          }
        },
        {
          "description": "The stored fields you want to retrieve.",
          "name": "stored_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/mget/types.ts#L32-L55"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AnalysisConfig",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The size of the interval that the analysis is aggregated into, typically between `5m` and `1h`. This value should be either a whole number of days or equate to a\nwhole number of buckets in one day. If the anomaly detection job uses a datafeed with aggregations, this value must also be divisible by the interval of the date histogram aggregation.",
          "name": "bucket_span",
          "required": false,
          "serverDefault": "5m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `categorization_field_name` is specified, you can also define the analyzer that is used to interpret the categorization field. This property cannot be used at the same time as `categorization_filters`. The categorization analyzer specifies how the `categorization_field` is interpreted by the categorization process. The `categorization_analyzer` field can be specified either as a string or as an object. If it is a string, it must refer to a built-in analyzer or one added by another plugin.",
          "name": "categorization_analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CategorizationAnalyzer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "If this property is specified, the values of the specified field will be categorized. The resulting categories must be used in a detector by setting `by_field_name`, `over_field_name`, or `partition_field_name` to the keyword `mlcategory`.",
          "name": "categorization_field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `categorization_field_name` is specified, you can also define optional filters. This property expects an array of regular expressions. The expressions are used to filter out matching sequences from the categorization field values. You can use this functionality to fine tune the categorization by excluding sequences from consideration when categories are defined. For example, you can exclude SQL statements that appear in your log files. This property cannot be used at the same time as `categorization_analyzer`. If you only want to define simple regular expression filters that are applied prior to tokenization, setting this property is the easiest method. If you also want to customize the tokenizer or post-tokenization filtering, use the `categorization_analyzer` property instead and include the filters as pattern_replace character filters. The effect is exactly the same.",
          "name": "categorization_filters",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Detector configuration objects specify which data fields a job analyzes. They also specify which analytical functions are used. You can specify multiple detectors for a job. If the detectors array does not contain at least one detector, no analysis can occur and an error is returned.",
          "name": "detectors",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Detector",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "A comma separated list of influencer field names. Typically these can be the by, over, or partition fields that are used in the detector configuration. You might also want to use a field name that is not specifically named in a detector, but is available as part of the input data. When you use multiple detectors, the use of influencers is recommended as it aggregates results for each influencer entity.",
          "name": "influencers",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "The size of the window in which to expect data that is out of time order. If you specify a non-zero value, it must be greater than or equal to one second. NOTE: Latency is applicable only when you send data by using the post data API.",
          "name": "latency",
          "required": false,
          "serverDefault": "0",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option. Affects the pruning of models that have not been updated for the given time duration. The value must be set to a multiple of the `bucket_span`. If set too low, important information may be removed from the model. For jobs created in 8.1 and later, the default value is the greater of `30d` or 20 times `bucket_span`.",
          "name": "model_prune_window",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "This functionality is reserved for internal use. It is not supported for use in customer environments and is not subject to the support SLA of official GA features. If set to `true`, the analysis will automatically find correlations between metrics for a given by field value and report anomalies when those correlations cease to hold. For example, suppose CPU and memory usage on host A is usually highly correlated with the same metrics on host B. Perhaps this correlation occurs because they are running a load-balanced application. If you enable this property, anomalies will be reported when, for example, CPU usage on host A is high and the value of CPU usage on host B is low. That is to say, youâ€™ll see an anomaly when the CPU of host A is unusual given the CPU of host B. To use the `multivariate_by_fields` property, you must also specify `by_field_name` in your detector.",
          "name": "multivariate_by_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Settings related to how categorization interacts with partition fields.",
          "name": "per_partition_categorization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PerPartitionCategorization",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "If this property is specified, the data that is fed to the job is expected to be pre-summarized. This property value is the name of the field that contains the count of raw data points that have been summarized. The same `summary_count_field_name` applies to all detectors in the job. NOTE: The `summary_count_field_name` property cannot be used with the `metric` function.",
          "name": "summary_count_field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Analysis.ts#L29-L77"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Detector",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The field used to split the data. In particular, this property is used for analyzing the splits with respect to their own history. It is used for finding unusual values in the context of the split.",
          "name": "by_field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Custom rules enable you to customize the way detectors operate. For example, a rule may dictate conditions under which results should be skipped. Kibana refers to custom rules as job rules.",
          "name": "custom_rules",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DetectionRule",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "A description of the detector.",
          "name": "detector_description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A unique identifier for the detector. This identifier is based on the order of the detectors in the `analysis_config`, starting at zero. If you specify a value for this property, it is ignored.",
          "name": "detector_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If set, frequent entities are excluded from influencing the anomaly results. Entities can be considered frequent over time or frequent in a population. If you are working with both over and by fields, you can set `exclude_frequent` to `all` for both fields, or to `by` or `over` for those specific fields.",
          "name": "exclude_frequent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExcludeFrequent",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that the detector uses in the function. If you use an event rate function such as count or rare, do not specify this field. The `field_name` cannot contain double quotes or backslashes.",
          "name": "field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The analysis function that is used. For example, `count`, `rare`, `mean`, `min`, `max`, or `sum`.",
          "name": "function",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field used to split the data. In particular, this property is used for analyzing the splits with respect to the history of all splits. It is used for finding unusual values in the population of all splits.",
          "name": "over_field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field used to segment the analysis. When you use this property, you have completely independent baselines for each value of this field.",
          "name": "partition_field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines whether a new series is used as the null series when there is no value for the by or partition fields.",
          "name": "use_null",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Detector.ts#L25-L67"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DetectionRule",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The set of actions to be triggered when the rule applies. If more than one action is specified the effects of all actions are combined.",
          "name": "actions",
          "required": false,
          "serverDefault": [
            "skip_result"
          ],
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RuleAction",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "An array of numeric conditions when the rule applies. A rule must either have a non-empty scope or at least one condition. Multiple conditions are combined together with a logical AND.",
          "name": "conditions",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RuleCondition",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "A scope of series where the rule applies. A rule must either have a non-empty scope or at least one condition. By default, the scope includes all series. Scoping is allowed for any of the fields that are also specified in `by_field_name`, `over_field_name`, or `partition_field_name`.",
          "name": "scope",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "FilterRef",
                "namespace": "ml._types"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/Rule.ts#L25-L39"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RuleCondition",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Specifies the result property to which the condition applies. If your detector uses `lat_long`, `metric`, `rare`, or `freq_rare` functions, you can only specify conditions that apply to time.",
          "name": "applies_to",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AppliesTo",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Specifies the condition operator. The available options are greater than, greater than or equals, less than, and less than or equals.",
          "name": "operator",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ConditionOperator",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The value that is compared against the `applies_to` field using the operator.",
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Rule.ts#L52-L65"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FilterRef",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The identifier for the filter.",
          "name": "filter_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If set to `include`, the rule applies for values in the filter. If set to `exclude`, the rule applies for values not in the filter.",
          "name": "filter_type",
          "required": false,
          "serverDefault": "include",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FilterType",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Filter.ts#L31-L41"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PerPartitionCategorization",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "To enable this setting, you must also set the `partition_field_name` property to the same value in every detector that uses the keyword `mlcategory`. Otherwise, job creation fails.",
          "name": "enabled",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "This setting can be set to true only if per-partition categorization is enabled. If true, both categorization and subsequent anomaly detection stops for partitions where the categorization status changes to warn. This setting makes it viable to have a job where it is expected that categorization works well for some partitions but not others; you do not pay the cost of bad categorization forever in the partitions where it works badly.",
          "name": "stop_on_warn",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Analysis.ts#L150-L159"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationContainer",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Classification evaluation evaluates the results of a classification analysis which outputs a prediction that identifies to which of the classes each document belongs.",
          "name": "classification",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationClassification",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Outlier detection evaluates the results of an outlier detection analysis which outputs the probability that each document is an outlier.",
          "name": "outlier_detection",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationOutlierDetection",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Regression evaluation evaluates the results of a regression analysis which outputs a prediction of values.",
          "name": "regression",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationRegression",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeEvaluation.ts#L25-L33",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationClassification",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The field of the index which contains the ground truth. The data type of this field can be boolean or integer. If the data type is integer, the value has to be either 0 (false) or 1 (true).",
          "name": "actual_field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field in the index which contains the predicted value, in other words the results of the classification analysis.",
          "name": "predicted_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field of the index which is an array of documents of the form { \"class_name\": XXX, \"class_probability\": YYY }. This field must be defined as nested in the mappings.",
          "name": "top_classes_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the metrics that are used for the evaluation.",
          "name": "metrics",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationClassificationMetrics",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeEvaluation.ts#L35-L44"
    },
    {
      "inherits": {
        "type": {
          "name": "DataframeEvaluationMetrics",
          "namespace": "ml._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationClassificationMetrics",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Accuracy of predictions (per-class and overall).",
          "name": "accuracy",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "Multiclass confusion matrix.",
          "name": "multiclass_confusion_matrix",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeEvaluation.ts#L73-L78"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationMetrics",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The AUC ROC (area under the curve of the receiver operating characteristic) score and optionally the curve. It is calculated for a specific class (provided as \"class_name\") treated as positive.",
          "name": "auc_roc",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationClassificationMetricsAucRoc",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Precision of predictions (per-class and average).",
          "name": "precision",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "Recall of predictions (per-class and average).",
          "name": "recall",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeEvaluation.ts#L64-L71"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationClassificationMetricsAucRoc",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Name of the only class that is treated as positive during AUC ROC calculation. Other classes are treated as negative (\"one-vs-all\" strategy). All the evaluated documents must have class_name in the list of their top classes.",
          "name": "class_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Whether or not the curve should be returned in addition to the score. Default value is false.",
          "name": "include_curve",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeEvaluation.ts#L85-L90"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationOutlierDetection",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The field of the index which contains the ground truth. The data type of this field can be boolean or integer. If the data type is integer, the value has to be either 0 (false) or 1 (true).",
          "name": "actual_field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field of the index that defines the probability of whether the item belongs to the class in question or not. Itâ€™s the field that contains the results of the analysis.",
          "name": "predicted_probability_field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the metrics that are used for the evaluation.",
          "name": "metrics",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationOutlierDetectionMetrics",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeEvaluation.ts#L46-L53"
    },
    {
      "inherits": {
        "type": {
          "name": "DataframeEvaluationMetrics",
          "namespace": "ml._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationOutlierDetectionMetrics",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Accuracy of predictions (per-class and overall).",
          "name": "confusion_matrix",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeEvaluation.ts#L80-L83"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationRegression",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The field of the index which contains the ground truth. The data type of this field must be numerical.",
          "name": "actual_field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field in the index that contains the predicted value, in other words the results of the regression analysis.",
          "name": "predicted_field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the metrics that are used for the evaluation. For more information on mse, msle, and huber, consult the Jupyter notebook on regression loss functions.",
          "name": "metrics",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationRegressionMetrics",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeEvaluation.ts#L55-L62"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationRegressionMetrics",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Average squared difference between the predicted values and the actual (ground truth) value. For more information, read this wiki article.",
          "docUrl": "https://en.wikipedia.org/wiki/Mean_squared_error",
          "name": "mse",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "Average squared difference between the logarithm of the predicted values and the logarithm of the actual (ground truth) value.",
          "name": "msle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationRegressionMetricsMsle",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Pseudo Huber loss function.",
          "docUrl": "https://en.wikipedia.org/wiki/Huber_loss#Pseudo-Huber_loss_function",
          "name": "huber",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationRegressionMetricsHuber",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Proportion of the variance in the dependent variable that is predictable from the independent variables.",
          "docUrl": "https://en.wikipedia.org/wiki/Coefficient_of_determination",
          "name": "r_squared",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeEvaluation.ts#L92-L110"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationRegressionMetricsMsle",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Defines the transition point at which you switch from minimizing quadratic error to minimizing quadratic log error. Defaults to 1.",
          "name": "offset",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeEvaluation.ts#L112-L115"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationRegressionMetricsHuber",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Approximates 1/2 (prediction - actual)2 for values much less than delta and approximates a straight line with slope delta for values much larger than delta. Defaults to 1. Delta needs to be greater than 0.",
          "name": "delta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeEvaluation.ts#L117-L120"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeClassificationSummary",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "description": "The AUC ROC (area under the curve of the receiver operating characteristic) score and optionally the curve.\nIt is calculated for a specific class (provided as \"class_name\") treated as positive.",
          "name": "auc_roc",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationSummaryAucRoc",
              "namespace": "ml.evaluate_data_frame"
            }
          }
        },
        {
          "description": "Accuracy of predictions (per-class and overall).",
          "name": "accuracy",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeClassificationSummaryAccuracy",
              "namespace": "ml.evaluate_data_frame"
            }
          }
        },
        {
          "description": "Multiclass confusion matrix.",
          "name": "multiclass_confusion_matrix",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeClassificationSummaryMulticlassConfusionMatrix",
              "namespace": "ml.evaluate_data_frame"
            }
          }
        },
        {
          "description": "Precision of predictions (per-class and average).",
          "name": "precision",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeClassificationSummaryPrecision",
              "namespace": "ml.evaluate_data_frame"
            }
          }
        },
        {
          "description": "Recall of predictions (per-class and average).",
          "name": "recall",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeClassificationSummaryRecall",
              "namespace": "ml.evaluate_data_frame"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L44-L66"
    },
    {
      "inherits": {
        "type": {
          "name": "DataframeEvaluationValue",
          "namespace": "ml.evaluate_data_frame"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationSummaryAucRoc",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "name": "curve",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeEvaluationSummaryAucRocCurveItem",
                "namespace": "ml.evaluate_data_frame"
              }
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L91-L93"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationValue",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L87-L89"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationSummaryAucRocCurveItem",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "name": "tpr",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "fpr",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "threshold",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L95-L99"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeClassificationSummaryAccuracy",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "name": "classes",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeEvaluationClass",
                "namespace": "ml.evaluate_data_frame"
              }
            }
          }
        },
        {
          "name": "overall_accuracy",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L111-L114"
    },
    {
      "inherits": {
        "type": {
          "name": "DataframeEvaluationValue",
          "namespace": "ml.evaluate_data_frame"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DataframeEvaluationClass",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "name": "class_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L116-L118"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeClassificationSummaryMulticlassConfusionMatrix",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "name": "confusion_matrix",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ConfusionMatrixItem",
                "namespace": "ml.evaluate_data_frame"
              }
            }
          }
        },
        {
          "name": "other_actual_class_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L120-L123"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ConfusionMatrixItem",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "name": "actual_class",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "actual_class_doc_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "predicted_classes",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ConfusionMatrixPrediction",
                "namespace": "ml.evaluate_data_frame"
              }
            }
          }
        },
        {
          "name": "other_predicted_class_doc_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L125-L130"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ConfusionMatrixPrediction",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "name": "predicted_class",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L132-L135"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeClassificationSummaryPrecision",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "name": "classes",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeEvaluationClass",
                "namespace": "ml.evaluate_data_frame"
              }
            }
          }
        },
        {
          "name": "avg_precision",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L101-L104"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeClassificationSummaryRecall",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "name": "classes",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeEvaluationClass",
                "namespace": "ml.evaluate_data_frame"
              }
            }
          }
        },
        {
          "name": "avg_recall",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L106-L109"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeOutlierDetectionSummary",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "description": "The AUC ROC (area under the curve of the receiver operating characteristic) score and optionally the curve.",
          "name": "auc_roc",
          "required": false,
          "serverDefault": "{\"include_curve\": false}",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationSummaryAucRoc",
              "namespace": "ml.evaluate_data_frame"
            }
          }
        },
        {
          "description": "Set the different thresholds of the outlier score at where the metric is calculated.",
          "name": "precision",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Set the different thresholds of the outlier score at where the metric is calculated.",
          "name": "recall",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Set the different thresholds of the outlier score at where the metrics (`tp` - true positive, `fp` - false positive, `tn` - true negative, `fn` - false negative) are calculated.",
          "name": "confusion_matrix",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ConfusionMatrixThreshold",
                "namespace": "ml.evaluate_data_frame"
              }
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L24-L42"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ConfusionMatrixThreshold",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "codegenName": "true_positive",
          "description": "True Positive",
          "name": "tp",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "codegenName": "false_positive",
          "description": "False Positive",
          "name": "fp",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "codegenName": "true_negative",
          "description": "True Negative",
          "name": "tn",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "codegenName": "false_negative",
          "description": "False Negative",
          "name": "fn",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L137-L158"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeRegressionSummary",
        "namespace": "ml.evaluate_data_frame"
      },
      "properties": [
        {
          "description": "Pseudo Huber loss function.",
          "name": "huber",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationValue",
              "namespace": "ml.evaluate_data_frame"
            }
          }
        },
        {
          "description": "Average squared difference between the predicted values and the actual (`ground truth`) value.",
          "name": "mse",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationValue",
              "namespace": "ml.evaluate_data_frame"
            }
          }
        },
        {
          "description": "Average squared difference between the logarithm of the predicted values and the logarithm of the actual (`ground truth`) value.",
          "name": "msle",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationValue",
              "namespace": "ml.evaluate_data_frame"
            }
          }
        },
        {
          "description": "Proportion of the variance in the dependent variable that is predictable from the independent variables.",
          "name": "r_squared",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeEvaluationValue",
              "namespace": "ml.evaluate_data_frame"
            }
          }
        }
      ],
      "specLocation": "ml/evaluate_data_frame/types.ts#L68-L85"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CalendarEvent",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "A string that uniquely identifies a calendar.",
          "name": "calendar_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "event_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A description of the scheduled event.",
          "name": "description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The timestamp for the end of the scheduled event in milliseconds since the epoch or ISO 8601 format.",
          "name": "end_time",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The timestamp for the beginning of the scheduled event in milliseconds since the epoch or ISO 8601 format.",
          "name": "start_time",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/CalendarEvent.ts#L23-L33"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Page",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Skips the specified number of items.",
          "name": "from",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum number of items to obtain.",
          "name": "size",
          "required": false,
          "serverDefault": 10000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Page.ts#L22-L33"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Calendar",
        "namespace": "ml.get_calendars"
      },
      "properties": [
        {
          "description": "A string that uniquely identifies a calendar.",
          "name": "calendar_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A description of the calendar.",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "An array of anomaly detection job identifiers.",
          "name": "job_ids",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "ml/get_calendars/types.ts#L22-L29"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalyticsSummary",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "allow_lazy_start",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "analysis",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "analyzed_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisAnalyzedFields",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The security privileges that the job uses to run its queries. If Elastic Stack security features were disabled at the time of the most recent update to the job, this property is omitted.",
          "name": "authorization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalyticsAuthorization",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "create_time",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "dest",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalyticsDestination",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_num_threads",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "model_memory_limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "source",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalyticsSource",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L305-L321"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysisContainer",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The configuration information necessary to perform classification.",
          "docId": "ml-classification",
          "docUrl": "https://www.elastic.co/guide/en/machine-learning/{branch}/ml-dfa-classification.html",
          "name": "classification",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisClassification",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The configuration information necessary to perform outlier detection. NOTE: Advanced parameters are for fine-tuning classification analysis. They are set automatically by hyperparameter optimization to give the minimum validation error. It is highly recommended to use the default values unless you fully understand the function of these parameters.",
          "docId": "ml-classification",
          "docUrl": "https://www.elastic.co/guide/en/machine-learning/{branch}/ml-dfa-classification.html",
          "name": "outlier_detection",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisOutlierDetection",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The configuration information necessary to perform regression. NOTE: Advanced parameters are for fine-tuning regression analysis. They are set automatically by hyperparameter optimization to give the minimum validation error. It is highly recommended to use the default values unless you fully understand the function of these parameters.",
          "docId": "ml-regression",
          "docUrl": "https://www.elastic.co/guide/en/machine-learning/{branch}/ml-dfa-regression.html",
          "name": "regression",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisRegression",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L83-L100",
      "variants": {
        "kind": "container"
      }
    },
    {
      "inherits": {
        "type": {
          "name": "DataframeAnalysis",
          "namespace": "ml._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysisClassification",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "class_assignment_objective",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Defines the number of categories for which the predicted probabilities are reported. It must be non-negative or -1. If it is -1 or greater than the total number of categories, probabilities are reported for all categories; if you have a large number of categories, there could be a significant effect on the size of your destination index. NOTE: To use the AUC ROC evaluation method, `num_top_classes` must be set to -1 or a value greater than or equal to the total number of categories.",
          "name": "num_top_classes",
          "required": false,
          "serverDefault": 2,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L226-L235"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysis",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Advanced configuration option. Machine learning uses loss guided tree growing, which means that the decision trees grow where the regularized loss decreases most quickly. This parameter affects loss calculations by acting as a multiplier of the tree depth. Higher alpha values result in shallower trees and faster training times. By default, this value is calculated during hyperparameter optimization. It must be greater than or equal to zero.",
          "name": "alpha",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines which field of the document is to be predicted. It must match one of the fields in the index being used to train. If this field is missing from a document, then that document will not be used for training, but a prediction with the trained model will be generated for it. It is also known as continuous target variable.\nFor classification analysis, the data type of the field must be numeric (`integer`, `short`, `long`, `byte`), categorical (`ip` or `keyword`), or `boolean`. There must be no more than 30 different values in this field.\nFor regression analysis, the data type of the field must be numeric.",
          "name": "dependent_variable",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Advanced configuration option. Controls the fraction of data that is used to compute the derivatives of the loss function for tree training. A small value results in the use of a small fraction of the data. If this value is set to be less than 1, accuracy typically improves. However, too small a value may result in poor convergence for the ensemble and so require more trees. By default, this value is calculated during hyperparameter optimization. It must be greater than zero and less than or equal to 1.",
          "name": "downsample_factor",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option. Specifies whether the training process should finish if it is not finding any better performing models. If disabled, the training process can take significantly longer and the chance of finding a better performing model is unremarkable.",
          "name": "early_stopping_enabled",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Advanced configuration option. The shrinkage applied to the weights. Smaller values result in larger forests which have a better generalization error. However, larger forests cause slower training. By default, this value is calculated during hyperparameter optimization. It must be a value between 0.001 and 1.",
          "name": "eta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option. Specifies the rate at which `eta` increases for each new tree that is added to the forest. For example, a rate of 1.05 increases `eta` by 5% for each extra tree. By default, this value is calculated during hyperparameter optimization. It must be between 0.5 and 2.",
          "name": "eta_growth_rate_per_tree",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option. Defines the fraction of features that will be used when selecting a random bag for each candidate split. By default, this value is calculated during hyperparameter optimization.",
          "name": "feature_bag_fraction",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option. A collection of feature preprocessors that modify one or more included fields. The analysis uses the resulting one or more features instead of the original document field. However, these features are ephemeral; they are not stored in the destination index. Multiple `feature_processors` entries can refer to the same document fields. Automatic categorical feature encoding still occurs for the fields that are unprocessed by a custom processor or that have categorical values. Use this property only if you want to override the automatic feature encoding of the specified fields.",
          "name": "feature_processors",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalysisFeatureProcessor",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "Advanced configuration option. Regularization parameter to prevent overfitting on the training data set. Multiplies a linear penalty associated with the size of individual trees in the forest. A high gamma value causes training to prefer small trees. A small gamma value results in larger individual trees and slower training. By default, this value is calculated during hyperparameter optimization. It must be a nonnegative value.",
          "name": "gamma",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option. Regularization parameter to prevent overfitting on the training data set. Multiplies an L2 regularization term which applies to leaf weights of the individual trees in the forest. A high lambda value causes training to favor small leaf weights. This behavior makes the prediction function smoother at the expense of potentially not being able to capture relevant relationships between the features and the dependent variable. A small lambda value results in large individual trees and slower training. By default, this value is calculated during hyperparameter optimization. It must be a nonnegative value.",
          "name": "lambda",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option. A multiplier responsible for determining the maximum number of hyperparameter optimization steps in the Bayesian optimization procedure. The maximum number of steps is determined based on the number of undefined hyperparameters times the maximum optimization rounds per hyperparameter. By default, this value is calculated during hyperparameter optimization.",
          "name": "max_optimization_rounds_per_hyperparameter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "maximum_number_trees"
          ],
          "description": "Advanced configuration option. Defines the maximum number of decision trees in the forest. The maximum value is 2000. By default, this value is calculated during hyperparameter optimization.",
          "name": "max_trees",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option. Specifies the maximum number of feature importance values per document to return. By default, no feature importance calculation occurs.",
          "name": "num_top_feature_importance_values",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines the name of the prediction field in the results. Defaults to `<dependent_variable>_prediction`.",
          "name": "prediction_field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines the seed for the random generator that is used to pick training data. By default, it is randomly generated. Set it to a specific value to use the same training data each time you start a job (assuming other related parameters such as `source` and `analyzed_fields` are the same).",
          "name": "randomize_seed",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option. Machine learning uses loss guided tree growing, which means that the decision trees grow where the regularized loss decreases most quickly. This soft limit combines with the `soft_tree_depth_tolerance` to penalize trees that exceed the specified depth; the regularized loss increases quickly beyond this depth. By default, this value is calculated during hyperparameter optimization. It must be greater than or equal to 0.",
          "name": "soft_tree_depth_limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option. This option controls how quickly the regularized loss increases when the tree depth exceeds `soft_tree_depth_limit`. By default, this value is calculated during hyperparameter optimization. It must be greater than or equal to 0.01.",
          "name": "soft_tree_depth_tolerance",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines what percentage of the eligible documents that will be used for training. Documents that are ignored by the analysis (for example those that contain arrays with more than one value) wonâ€™t be included in the calculation for used percentage.",
          "name": "training_percent",
          "required": false,
          "serverDefault": 100,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Percentage",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L133-L212"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysisFeatureProcessor",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The configuration information necessary to perform frequency encoding.",
          "name": "frequency_encoding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisFeatureProcessorFrequencyEncoding",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The configuration information necessary to perform multi encoding. It allows multiple processors to be changed together. This way the output of a processor can then be passed to another as an input.",
          "name": "multi_encoding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisFeatureProcessorMultiEncoding",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The configuration information necessary to perform n-gram encoding. Features created by this encoder have the following name format: <feature_prefix>.<ngram><string position>. For example, if the feature_prefix is f, the feature name for the second unigram in a string is f.11.",
          "name": "n_gram_encoding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisFeatureProcessorNGramEncoding",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The configuration information necessary to perform one hot encoding.",
          "name": "one_hot_encoding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisFeatureProcessorOneHotEncoding",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The configuration information necessary to perform target mean encoding.",
          "name": "target_mean_encoding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisFeatureProcessorTargetMeanEncoding",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L245-L257",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysisFeatureProcessorFrequencyEncoding",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The resulting feature name.",
          "name": "feature_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The resulting frequency map for the field value. If the field value is missing from the frequency_map, the resulting value is 0.",
          "name": "frequency_map",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L259-L266"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysisFeatureProcessorMultiEncoding",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The ordered array of custom processors to execute. Must be more than 1.",
          "name": "processors",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L268-L271"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysisFeatureProcessorNGramEncoding",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The feature name prefix. Defaults to ngram_<start>_<length>.",
          "name": "feature_prefix",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The name of the text field to encode.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the length of the n-gram substring. Defaults to 50. Must be greater than 0.",
          "name": "length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies which n-grams to gather. Itâ€™s an array of integer values where the minimum value is 1, and a maximum value is 5.",
          "name": "n_grams",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Specifies the zero-indexed start of the n-gram substring. Negative values are allowed for encoding n-grams of string suffixes. Defaults to 0.",
          "name": "start",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "custom",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L273-L285"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysisFeatureProcessorOneHotEncoding",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The name of the field to encode.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The one hot map mapping the field value with the column name.",
          "name": "hot_map",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L287-L292"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysisFeatureProcessorTargetMeanEncoding",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The default value if field value is not found in the target_map.",
          "name": "default_value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The resulting feature name.",
          "name": "feature_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The name of the field to encode.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field value to target mean transition map.",
          "name": "target_map",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L294-L303"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysisOutlierDetection",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Specifies whether the feature influence calculation is enabled.",
          "name": "compute_feature_influence",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The minimum outlier score that a document needs to have in order to calculate its feature influence score. Value range: 0-1.",
          "name": "feature_influence_threshold",
          "required": false,
          "serverDefault": 0.1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The method that outlier detection uses. Available methods are `lof`, `ldof`, `distance_kth_nn`, `distance_knn`, and `ensemble`. The default value is ensemble, which means that outlier detection uses an ensemble of different methods and normalises and combines their individual outlier scores to obtain the overall outlier score.",
          "name": "method",
          "required": false,
          "serverDefault": "ensemble",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Defines the value for how many nearest neighbors each method of outlier detection uses to calculate its outlier score. When the value is not set, different values are used for different ensemble members. This default behavior helps improve the diversity in the ensemble; only override it if you are confident that the value you choose is appropriate for the data set.",
          "name": "n_neighbors",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The proportion of the data set that is assumed to be outlying prior to outlier detection. For example, 0.05 means it is assumed that 5% of values are real outliers and 95% are inliers.",
          "name": "outlier_fraction",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, the following operation is performed on the columns before computing outlier scores: `(x_i - mean(x_i)) / sd(x_i)`.",
          "name": "standardization_enabled",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L102-L131"
    },
    {
      "inherits": {
        "type": {
          "name": "DataframeAnalysis",
          "namespace": "ml._types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysisRegression",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The loss function used during regression. Available options are `mse` (mean squared error), `msle` (mean squared logarithmic error), `huber` (Pseudo-Huber loss).",
          "name": "loss_function",
          "required": false,
          "serverDefault": "mse",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A positive number that is used as a parameter to the `loss_function`.",
          "name": "loss_function_parameter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L214-L224"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalysisAnalyzedFields",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "An array of strings that defines the fields that will be excluded from the analysis. You do not need to add fields with unsupported data types to excludes, these fields are excluded from the analysis automatically.",
          "name": "includes",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "An array of strings that defines the fields that will be included in the analysis.",
          "name": "excludes",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "shortcutProperty": "includes",
      "specLocation": "ml/_types/DataframeAnalytics.ts#L237-L243"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalyticsAuthorization",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "If an API key was used for the most recent update to the job, its name and identifier are listed in the response.",
          "name": "api_key",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ApiKeyAuthorization",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "If a user ID was used for the most recent update to the job, its roles at the time of the update are listed in the response.",
          "name": "roles",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "If a service account was used for the most recent update to the job, the account name is listed in the response.",
          "name": "service_account",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Authorization.ts#L45-L57"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ApiKeyAuthorization",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The identifier for the API key.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The name of the API key.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Authorization.ts#L20-L29"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalyticsDestination",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Defines the destination index to store the results of the data frame analytics job.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines the name of the field in which to store the results of the analysis. Defaults to `ml`.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L76-L81"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalyticsSource",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Index or indices on which to perform the analysis. It can be a single index or index pattern as well as an array of indices or patterns. NOTE: If your source indices contain documents with the same IDs, only the document that is indexed last appears in the destination index.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The Elasticsearch query domain-specific language (DSL). This value corresponds to the query object in an Elasticsearch search POST body. All the options that are supported by Elasticsearch can be used, as this object is passed verbatim to Elasticsearch. By default, this property has the following value: {\"match_all\": {}}.",
          "docId": "query-dsl",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl.html",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Definitions of runtime fields that will become part of the mapping of the destination index.",
          "name": "runtime_mappings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RuntimeFields",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "description": "Specify `includes` and/or `excludes patterns to select which fields will be present in the destination. Fields that are excluded cannot be included in the analysis.",
          "name": "_source",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisAnalyzedFields",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L38-L52"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalytics",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "An object containing information about the analysis job.",
          "name": "analysis_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalyticsStatsContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "For running jobs only, contains messages relating to the selection of a node to run the job.",
          "name": "assignment_explanation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "An object that provides counts for the quantity of documents skipped, used in training, or available for testing.",
          "name": "data_counts",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalyticsStatsDataCounts",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The unique identifier of the data frame analytics job.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An object describing memory usage of the analytics. It is present only after the job is started and memory usage is reported.",
          "name": "memory_usage",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalyticsStatsMemoryUsage",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The progress report of the data frame analytics job by phase.",
          "name": "progress",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DataframeAnalyticsStatsProgress",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "The status of the data frame analytics job, which can be one of the following values: failed, started, starting, stopping, stopped.",
          "name": "state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeState",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L323-L343"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalyticsStatsContainer",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "An object containing information about the classification analysis job.",
          "name": "classification_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalyticsStatsHyperparameters",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "An object containing information about the outlier detection job.",
          "name": "outlier_detection_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalyticsStatsOutlierDetection",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "An object containing information about the regression analysis.",
          "name": "regression_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalyticsStatsHyperparameters",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L372-L380",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalyticsStatsHyperparameters",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "An object containing the parameters of the classification analysis job.",
          "name": "hyperparameters",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Hyperparameters",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The number of iterations on the analysis.",
          "name": "iteration",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The timestamp when the statistics were reported in milliseconds since the epoch.",
          "name": "timestamp",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An object containing time statistics about the data frame analytics job.",
          "name": "timing_stats",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimingStats",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "An object containing information about validation loss.",
          "name": "validation_loss",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ValidationLoss",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L382-L401"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Hyperparameters",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Advanced configuration option.\nMachine learning uses loss guided tree growing, which means that the decision trees grow where the regularized loss decreases most quickly.\nThis parameter affects loss calculations by acting as a multiplier of the tree depth.\nHigher alpha values result in shallower trees and faster training times.\nBy default, this value is calculated during hyperparameter optimization.\nIt must be greater than or equal to zero.",
          "name": "alpha",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nRegularization parameter to prevent overfitting on the training data set.\nMultiplies an L2 regularization term which applies to leaf weights of the individual trees in the forest.\nA high lambda value causes training to favor small leaf weights.\nThis behavior makes the prediction function smoother at the expense of potentially not being able to capture relevant relationships between the features and the dependent variable.\nA small lambda value results in large individual trees and slower training.\nBy default, this value is calculated during hyperparameter optimization.\nIt must be a nonnegative value.",
          "name": "lambda",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nRegularization parameter to prevent overfitting on the training data set.\nMultiplies a linear penalty associated with the size of individual trees in the forest.\nA high gamma value causes training to prefer small trees.\nA small gamma value results in larger individual trees and slower training.\nBy default, this value is calculated during hyperparameter optimization.\nIt must be a nonnegative value.",
          "name": "gamma",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nThe shrinkage applied to the weights.\nSmaller values result in larger forests which have a better generalization error.\nHowever, larger forests cause slower training.\nBy default, this value is calculated during hyperparameter optimization.\nIt must be a value between `0.001` and `1`.",
          "name": "eta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nSpecifies the rate at which `eta` increases for each new tree that is added to the forest.\nFor example, a rate of 1.05 increases `eta` by 5% for each extra tree.\nBy default, this value is calculated during hyperparameter optimization.\nIt must be between `0.5` and `2`.",
          "name": "eta_growth_rate_per_tree",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nDefines the fraction of features that will be used when selecting a random bag for each candidate split.\nBy default, this value is calculated during hyperparameter optimization.",
          "name": "feature_bag_fraction",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nControls the fraction of data that is used to compute the derivatives of the loss function for tree training.\nA small value results in the use of a small fraction of the data.\nIf this value is set to be less than 1, accuracy typically improves.\nHowever, too small a value may result in poor convergence for the ensemble and so require more trees.\nBy default, this value is calculated during hyperparameter optimization.\nIt must be greater than zero and less than or equal to 1.",
          "name": "downsample_factor",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If the algorithm fails to determine a non-trivial tree (more than a single leaf), this parameter determines how many of such consecutive failures are tolerated.\nOnce the number of attempts exceeds the threshold, the forest training stops.",
          "name": "max_attempts_to_add_tree",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nA multiplier responsible for determining the maximum number of hyperparameter optimization steps in the Bayesian optimization procedure.\nThe maximum number of steps is determined based on the number of undefined hyperparameters times the maximum optimization rounds per hyperparameter.\nBy default, this value is calculated during hyperparameter optimization.",
          "name": "max_optimization_rounds_per_hyperparameter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nDefines the maximum number of decision trees in the forest.\nThe maximum value is 2000.\nBy default, this value is calculated during hyperparameter optimization.",
          "name": "max_trees",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum number of folds for the cross-validation procedure.",
          "name": "num_folds",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Determines the maximum number of splits for every feature that can occur in a decision tree when the tree is trained.",
          "name": "num_splits_per_feature",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nMachine learning uses loss guided tree growing, which means that the decision trees grow where the regularized loss decreases most quickly.\nThis soft limit combines with the `soft_tree_depth_tolerance` to penalize trees that exceed the specified depth; the regularized loss increases quickly beyond this depth.\nBy default, this value is calculated during hyperparameter optimization.\nIt must be greater than or equal to 0.",
          "name": "soft_tree_depth_limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nThis option controls how quickly the regularized loss increases when the tree depth exceeds `soft_tree_depth_limit`.\nBy default, this value is calculated during hyperparameter optimization.\nIt must be greater than or equal to 0.01.",
          "name": "soft_tree_depth_tolerance",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L418-L524"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TimingStats",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Runtime of the analysis in milliseconds.",
          "name": "elapsed_time",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Runtime of the latest iteration of the analysis in milliseconds.",
          "name": "iteration_time",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L562-L567"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ValidationLoss",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Validation loss values for every added decision tree during the forest growing procedure.",
          "name": "fold_values",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The type of the loss metric. For example, binomial_logistic.",
          "name": "loss_type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L569-L574"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalyticsStatsOutlierDetection",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The list of job parameters specified by the user or determined by algorithmic heuristics.",
          "name": "parameters",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "OutlierDetectionParameters",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The timestamp when the statistics were reported in milliseconds since the epoch.",
          "name": "timestamp",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An object containing time statistics about the data frame analytics job.",
          "name": "timing_stats",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimingStats",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L403-L416"
    },
    {
      "kind": "interface",
      "name": {
        "name": "OutlierDetectionParameters",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Specifies whether the feature influence calculation is enabled.",
          "name": "compute_feature_influence",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The minimum outlier score that a document needs to have in order to calculate its feature influence score.\nValue range: 0-1",
          "name": "feature_influence_threshold",
          "required": false,
          "serverDefault": 0.1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The method that outlier detection uses.\nAvailable methods are `lof`, `ldof`, `distance_kth_nn`, `distance_knn`, and `ensemble`.\nThe default value is ensemble, which means that outlier detection uses an ensemble of different methods and normalises and combines their individual outlier scores to obtain the overall outlier score.",
          "name": "method",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Defines the value for how many nearest neighbors each method of outlier detection uses to calculate its outlier score.\nWhen the value is not set, different values are used for different ensemble members.\nThis default behavior helps improve the diversity in the ensemble; only override it if you are confident that the value you choose is appropriate for the data set.",
          "name": "n_neighbors",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The proportion of the data set that is assumed to be outlying prior to outlier detection.\nFor example, 0.05 means it is assumed that 5% of values are real outliers and 95% are inliers.",
          "name": "outlier_fraction",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the following operation is performed on the columns before computing outlier scores: (x_i - mean(x_i)) / sd(x_i).",
          "name": "standardization_enabled",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L526-L560"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalyticsStatsDataCounts",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The number of documents that are skipped during the analysis because they contained values that are not supported by the analysis. For example, outlier detection does not support missing fields so it skips documents with missing fields. Likewise, all types of analysis skip documents that contain arrays with more than one element.",
          "name": "skipped_docs_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of documents that are not used for training the model and can be used for testing.",
          "name": "test_docs_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of documents that are used for training the model.",
          "name": "training_docs_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L363-L370"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalyticsStatsMemoryUsage",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "This value is present when the status is hard_limit and it is a new estimate of how much memory the job needs.",
          "name": "memory_reestimate_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of bytes used at the highest peak of memory usage.",
          "name": "peak_usage_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The memory usage status.",
          "name": "status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The timestamp when memory usage was calculated.",
          "name": "timestamp",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L352-L361"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframeAnalyticsStatsProgress",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Defines the phase of the data frame analytics job.",
          "name": "phase",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The progress that the data frame analytics job has made expressed in percentage.",
          "name": "progress_percent",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/DataframeAnalytics.ts#L345-L350"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DatafeedStats",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "For started datafeeds only, contains messages relating to the selection of a node.",
          "name": "assignment_explanation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A numerical character string that uniquely identifies the datafeed.\nThis identifier can contain lowercase alphanumeric characters (a-z and 0-9), hyphens, and underscores.\nIt must start and end with alphanumeric characters.",
          "name": "datafeed_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The status of the datafeed, which can be one of the following values: `starting`, `started`, `stopping`, `stopped`.",
          "name": "state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DatafeedState",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "An object that provides statistical information about timing aspect of this datafeed.",
          "name": "timing_stats",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DatafeedTimingStats",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "An object containing the running state for this datafeed.\nIt is only provided if the datafeed is started.",
          "name": "running_state",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DatafeedRunningState",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Datafeed.ts#L142-L171"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DatafeedTimingStats",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The number of buckets processed.",
          "name": "bucket_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The exponential average search time per hour, in milliseconds.",
          "name": "exponential_average_search_time_per_hour_ms",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitFloatMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Identifier for the anomaly detection job.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of searches run by the datafeed.",
          "name": "search_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The total time the datafeed spent searching, in milliseconds.",
          "name": "total_search_time_ms",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitFloatMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The average search time per bucket, in milliseconds.",
          "name": "average_search_time_per_bucket_ms",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitFloatMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Datafeed.ts#L173-L198"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DatafeedRunningState",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Indicates if the datafeed is \"real-time\"; meaning that the datafeed has no configured `end` time.",
          "name": "real_time_configured",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates whether the datafeed has finished running on the available past data.\nFor datafeeds without a configured `end` time, this means that the datafeed is now running on \"real-time\" data.",
          "name": "real_time_running",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Provides the latest time interval the datafeed has searched.",
          "name": "search_interval",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RunningStateSearchInterval",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Datafeed.ts#L200-L214"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RunningStateSearchInterval",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The end time.",
          "name": "end",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The end time as an epoch in milliseconds.",
          "name": "end_ms",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The start time.",
          "name": "start",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The start time as an epoch in milliseconds.",
          "name": "start_ms",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Datafeed.ts#L216-L233"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Datafeed",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "aliases": [
            "aggs"
          ],
          "name": "aggregations",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AggregationContainer",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "description": "The security privileges that the datafeed uses to run its queries. If Elastic Stack security features were disabled at the time of the most recent update to the datafeed, this property is omitted.",
          "name": "authorization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DatafeedAuthorization",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "chunking_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ChunkingConfig",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "datafeed_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "frequency",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "indices",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "indexes",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_empty_searches",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "extDocId": "query-dsl",
          "extDocUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl.html",
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "name": "query_delay",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "script_fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ScriptField",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "scroll_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "delayed_data_check_config",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DelayedDataCheckConfig",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "runtime_mappings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RuntimeFields",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "name": "indices_options",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndicesOptions",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Datafeed.ts#L36-L60"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DatafeedAuthorization",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "If an API key was used for the most recent update to the datafeed, its name and identifier are listed in the response.",
          "name": "api_key",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ApiKeyAuthorization",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "If a user ID was used for the most recent update to the datafeed, its roles at the time of the update are listed in the response.",
          "name": "roles",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "If a service account was used for the most recent update to the datafeed, the account name is listed in the response.",
          "name": "service_account",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Authorization.ts#L31-L43"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ChunkingConfig",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "If the mode is `auto`, the chunk size is dynamically calculated;\nthis is the recommended value when the datafeed does not use aggregations.\nIf the mode is `manual`, chunking is applied according to the specified `time_span`;\nuse this mode when the datafeed uses aggregations. If the mode is `off`, no chunking is applied.",
          "name": "mode",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ChunkingMode",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The time span that each search will be querying. This setting is applicable only when the `mode` is set to `manual`.",
          "name": "time_span",
          "required": false,
          "serverDefault": "3h",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Datafeed.ts#L241-L254"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DelayedDataCheckConfig",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The window of time that is searched for late data. This window of time ends with the latest finalized bucket.\nIt defaults to null, which causes an appropriate `check_window` to be calculated when the real-time datafeed runs.\nIn particular, the default `check_window` span calculation is based on the maximum of `2h` or `8 * bucket_span`.",
          "name": "check_window",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies whether the datafeed periodically checks for delayed data.",
          "name": "enabled",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Datafeed.ts#L121-L132"
    },
    {
      "description": "Controls how to deal with unavailable concrete indices (closed or missing), how wildcard expressions are expanded\nto actual indices (all, closed or open indices) and how to deal with wildcard expressions that resolve to no indices.",
      "kind": "interface",
      "name": {
        "name": "IndicesOptions",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "If false, the request returns an error if any wildcard expression, index alias, or `_all` value targets only\nmissing or closed indices. This behavior applies even if the request targets other open indices. For example,\na request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.",
          "name": "allow_no_indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Type of index that wildcard patterns can match. If the request can target data streams, this argument\ndetermines whether wildcard expressions match hidden data streams. Supports comma-separated values,\nsuch as `open,hidden`.",
          "name": "expand_wildcards",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExpandWildcards",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, missing or closed indices are not included in the response.",
          "name": "ignore_unavailable",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, concrete, expanded or aliased indices are ignored when frozen.",
          "name": "ignore_throttled",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/common.ts#L336-L363"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Filter",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "A description of the filter.",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A string that uniquely identifies a filter.",
          "name": "filter_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An array of strings which is the filter item list.",
          "name": "items",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/Filter.ts#L22-L29"
    },
    {
      "kind": "interface",
      "name": {
        "name": "JobStats",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "For open anomaly detection jobs only, contains messages relating to the selection of a node to run the job.",
          "name": "assignment_explanation",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "An object that describes the quantity of input to the job and any related error counts.\nThe `data_count` values are cumulative for the lifetime of a job.\nIf a model snapshot is reverted or old results are deleted, the job counts are not reset.",
          "name": "data_counts",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataCounts",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "An object that provides statistical information about forecasts belonging to this job.\nSome statistics are omitted if no forecasts have been made.",
          "name": "forecasts_stats",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JobForecastStatistics",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Identifier for the anomaly detection job.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "An object that provides information about the size and contents of the model.",
          "name": "model_size_stats",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ModelSizeStats",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "For open jobs only, the elapsed time for which the job has been open.",
          "name": "open_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The status of the anomaly detection job, which can be one of the following values: `closed`, `closing`, `failed`, `opened`, `opening`.",
          "name": "state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JobState",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "An object that provides statistical information about timing aspect of this job.",
          "name": "timing_stats",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JobTimingStats",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Indicates that the process of deleting the job is in progress but not yet completed. It is only reported when `true`.",
          "name": "deleting",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Job.ts#L284-L330"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataCounts",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "bucket_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "earliest_record_timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "empty_bucket_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "input_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "input_field_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "input_record_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "invalid_date_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "last_data_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "latest_empty_bucket_timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "latest_record_timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "latest_sparse_bucket_timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "latest_bucket_timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "log_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "missing_field_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "out_of_order_timestamp_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "processed_field_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "processed_record_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "sparse_bucket_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Job.ts#L352-L372"
    },
    {
      "kind": "interface",
      "name": {
        "name": "JobForecastStatistics",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "memory_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JobStatistics",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "processing_time_ms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JobStatistics",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "records",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JobStatistics",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "status",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "long",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "forecasted_jobs",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Job.ts#L343-L350"
    },
    {
      "kind": "interface",
      "name": {
        "name": "JobStatistics",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "avg",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "min",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Job.ts#L54-L59"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ModelSizeStats",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "bucket_allocation_failures_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "log_time",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "memory_status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MemoryStatus",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "model_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "model_bytes_exceeded",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "model_bytes_memory_limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "peak_model_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "assignment_memory_basis",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "result_type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "total_by_field_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_over_field_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_partition_field_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "categorization_status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CategorizationStatus",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "categorized_doc_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "dead_category_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "failed_category_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "frequent_category_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "rare_category_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_category_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Model.ts#L59-L81"
    },
    {
      "kind": "interface",
      "name": {
        "name": "JobTimingStats",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "average_bucket_processing_time_ms",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitFloatMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "bucket_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "exponential_average_bucket_processing_time_ms",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitFloatMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "exponential_average_bucket_processing_time_per_hour_ms",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitFloatMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_bucket_processing_time_ms",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitFloatMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "maximum_bucket_processing_time_ms",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitFloatMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "minimum_bucket_processing_time_ms",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitFloatMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Job.ts#L332-L341"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Job",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Advanced configuration option.\nSpecifies whether this job can open when there is insufficient machine learning node capacity for it to be immediately assigned to a node.",
          "name": "allow_lazy_open",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The analysis configuration, which specifies how to analyze the data.\nAfter you create a job, you cannot change the analysis configuration; all the properties are informational.",
          "name": "analysis_config",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AnalysisConfig",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Limits can be applied for the resources required to hold the mathematical models in memory.\nThese limits are approximate and can be set per job.\nThey do not control the memory used by other processes, for example the Elasticsearch Java processes.",
          "name": "analysis_limits",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AnalysisLimits",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nThe time between each periodic persistence of the model.\nThe default value is a randomized value between 3 to 4 hours, which avoids all jobs persisting at exactly the same time.\nThe smallest allowed value is 1 hour.",
          "name": "background_persist_interval",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "blocked",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JobBlocked",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "create_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nContains custom metadata about the job.",
          "name": "custom_settings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CustomSettings",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Advanced configuration option, which affects the automatic removal of old model snapshots for this job.\nIt specifies a period of time (in days) after which only the first snapshot per day is retained.\nThis period is relative to the timestamp of the most recent snapshot for this job.\nValid values range from 0 to `model_snapshot_retention_days`.",
          "name": "daily_model_snapshot_retention_after_days",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The data description defines the format of the input data when you send data to the job by using the post data API.\nNote that when configuring a datafeed, these properties are automatically set.\nWhen data is received via the post data API, it is not stored in Elasticsearch.\nOnly the results for anomaly detection are retained.",
          "name": "data_description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataDescription",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The datafeed, which retrieves data from Elasticsearch for analysis by the job.\nYou can associate only one datafeed with each anomaly detection job.",
          "name": "datafeed_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Datafeed",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Indicates that the process of deleting the job is in progress but not yet completed.\nIt is only reported when `true`.",
          "name": "deleting",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A description of the job.",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If the job closed or failed, this is the time the job finished, otherwise it is `null`.\nThis property is informational; you cannot change its value.",
          "name": "finished_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A list of job groups.\nA job can belong to no groups or many.",
          "name": "groups",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Identifier for the anomaly detection job.\nThis identifier can contain lowercase alphanumeric characters (a-z and 0-9), hyphens, and underscores.\nIt must start and end with alphanumeric characters.",
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Reserved for future use, currently set to `anomaly_detector`.",
          "name": "job_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The machine learning configuration version number at which the the job was created.",
          "name": "job_version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "This advanced configuration option stores model information along with the results.\nIt provides a more detailed view into anomaly detection.\nModel plot provides a simplified and indicative view of the model and its bounds.",
          "name": "model_plot_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ModelPlotConfig",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "model_snapshot_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option, which affects the automatic removal of old model snapshots for this job.\nIt specifies the maximum period of time (in days) that snapshots are retained.\nThis period is relative to the timestamp of the most recent snapshot for this job.\nBy default, snapshots ten days older than the newest snapshot are deleted.",
          "name": "model_snapshot_retention_days",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nThe period over which adjustments to the score are applied, as new data is seen.\nThe default value is the longer of 30 days or 100 `bucket_spans`.",
          "name": "renormalization_window_days",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A text string that affects the name of the machine learning results index.\nThe default value is `shared`, which generates an index named `.ml-anomalies-shared`.",
          "name": "results_index_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nThe period of time (in days) that results are retained.\nAge is calculated relative to the timestamp of the latest bucket result.\nIf this property has a non-null value, once per day at 00:30 (server time), results that are the specified number of days older than the latest bucket result are deleted from Elasticsearch.\nThe default value is null, which means all results are retained.\nAnnotations generated by the system also count as results for retention purposes; they are deleted after the same number of days as results.\nAnnotations added by users are retained forever.",
          "name": "results_retention_days",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Job.ts#L61-L180"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AnalysisLimits",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The maximum number of examples stored per category in memory and in the results data store. If you increase this value, more examples are available, however it requires that you have more storage available. If you set this value to 0, no examples are stored. NOTE: The `categorization_examples_limit` applies only to analysis that uses categorization.",
          "name": "categorization_examples_limit",
          "required": false,
          "serverDefault": 4,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The approximate maximum amount of memory resources that are required for analytical processing. Once this limit is approached, data pruning becomes more aggressive. Upon exceeding this limit, new entities are not modeled. If the `xpack.ml.max_model_memory_limit` setting has a value greater than 0 and less than 1024mb, that value is used instead of the default. The default value is relatively small to ensure that high resource usage is a conscious decision. If you have jobs that are expected to analyze high cardinality fields, you will likely need to use a higher value. If you specify a number instead of a string, the units are assumed to be MiB. Specifying a string is recommended for clarity. If you specify a byte size unit of `b` or `kb` and the number does not equate to a discrete number of megabytes, it is rounded down to the closest MiB. The minimum valid value is 1 MiB. If you specify a value less than 1 MiB, an error occurs. If you specify a value for the `xpack.ml.max_model_memory_limit` setting, an error occurs when you try to create jobs that have `model_memory_limit` values greater than that setting value.",
          "name": "model_memory_limit",
          "required": false,
          "serverDefault": "1024mb",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Analysis.ts#L161-L172"
    },
    {
      "kind": "interface",
      "name": {
        "name": "JobBlocked",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "reason",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "JobBlockedReason",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "task_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TaskId",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Job.ts#L392-L395"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataDescription",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Only JSON format is supported at this time.",
          "name": "format",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The name of the field that contains the timestamp.",
          "name": "time_field",
          "required": false,
          "serverDefault": "time",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The time format, which can be `epoch`, `epoch_ms`, or a custom pattern. The value `epoch` refers to UNIX or Epoch time (the number of seconds since 1 Jan 1970). The value `epoch_ms` indicates that time is measured in milliseconds since the epoch. The `epoch` and `epoch_ms` time formats accept either integer or real values. Custom patterns must conform to the Java DateTimeFormatter class. When you use date-time formatting patterns, it is recommended that you provide the full date, time and time zone. For example: `yyyy-MM-dd'T'HH:mm:ssX`. If the pattern that you specify is not sufficient to produce a complete timestamp, job creation fails.",
          "name": "time_format",
          "required": false,
          "serverDefault": "epoch",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "field_delimiter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Job.ts#L374-L390"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ModelPlotConfig",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.9.0"
            }
          },
          "description": "If true, enables calculation and storage of the model change annotations for each entity that is being analyzed.",
          "name": "annotations_enabled",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If true, enables calculation and storage of the model bounds for each entity that is being analyzed.",
          "name": "enabled",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.9.0"
            }
          },
          "description": "Limits data collection to this comma separated list of partition or by field values. If terms are not specified or it is an empty string, no filtering is applied. Wildcards are not supported. Only the specified terms can be viewed when using the Single Metric Viewer.",
          "name": "terms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/ModelPlot.ts#L23-L42"
    },
    {
      "kind": "interface",
      "name": {
        "name": "OverallBucket",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The length of the bucket in seconds. Matches the job with the longest bucket_span value.",
          "name": "bucket_span",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitSeconds",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, this is an interim result. In other words, the results are calculated based on partial input data.",
          "name": "is_interim",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "An array of objects that contain the max_anomaly_score per job_id.",
          "name": "jobs",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "OverallBucketJob",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "The top_n average of the maximum bucket anomaly_score per job.",
          "name": "overall_score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Internal. This is always set to overall_bucket.",
          "name": "result_type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The start time of the bucket for which these results were calculated.",
          "name": "timestamp",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The start time of the bucket for which these results were calculated.",
          "name": "timestamp_string",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Bucket.ts#L129-L144"
    },
    {
      "kind": "interface",
      "name": {
        "name": "OverallBucketJob",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "job_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "max_anomaly_score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Bucket.ts#L145-L148"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelConfig",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Identifier for the trained model.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The model type",
          "name": "model_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelType",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "A comma delimited string of tags. A trained model can have many tags, or none.",
          "name": "tags",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The Elasticsearch version number in which the trained model was created.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "compressed_definition",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Information on the creator of the trained model.",
          "name": "created_by",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The time when the trained model was created.",
          "name": "create_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Any field map described in the inference configuration takes precedence.",
          "name": "default_field_map",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The free-text description of the trained model.",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The estimated heap usage in bytes to keep the trained model in memory.",
          "name": "estimated_heap_memory_usage_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The estimated number of operations to use the trained model.",
          "name": "estimated_operations",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "True if the full model definition is present.",
          "name": "fully_defined",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The default configuration for inference. This can be either a regression, classification, or one of the many NLP focused configurations. It must match the underlying definition.trained_model's target_type. For pre-packaged models such as ELSER the config is not required.",
          "name": "inference_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "InferenceConfigCreateContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The input field names for the model definition.",
          "name": "input",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelConfigInput",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The license level of the trained model.",
          "name": "license_level",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "An object containing metadata about the trained model. For example, models created by data frame analytics contain analysis_config and input objects.",
          "name": "metadata",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelConfigMetadata",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "model_size_bytes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "location",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelLocation",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "prefix_strings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelPrefixStrings",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L164-L199"
    },
    {
      "description": "Inference configuration provided when storing the model config",
      "kind": "interface",
      "name": {
        "name": "InferenceConfigCreateContainer",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Regression configuration for inference.",
          "name": "regression",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RegressionInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Classification configuration for inference.",
          "name": "classification",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ClassificationInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.0.0"
            }
          },
          "description": "Text classification configuration for inference.",
          "name": "text_classification",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TextClassificationInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.0.0"
            }
          },
          "description": "Zeroshot classification configuration for inference.",
          "name": "zero_shot_classification",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ZeroShotClassificationInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.0.0"
            }
          },
          "description": "Fill mask configuration for inference.",
          "name": "fill_mask",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FillMaskInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.0.0"
            }
          },
          "description": "Named entity recognition configuration for inference.",
          "name": "ner",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NerInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.0.0"
            }
          },
          "description": "Pass through configuration for inference.",
          "name": "pass_through",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PassThroughInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.0.0"
            }
          },
          "description": "Text embedding configuration for inference.",
          "name": "text_embedding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TextEmbeddingInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.8.0"
            }
          },
          "description": "Text expansion configuration for inference.",
          "name": "text_expansion",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TextExpansionInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.3.0"
            }
          },
          "description": "Question answering configuration for inference.",
          "name": "question_answering",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QuestionAnsweringInferenceOptions",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L23-L80",
      "variants": {
        "kind": "container"
      }
    },
    {
      "description": "Text classification configuration options",
      "kind": "interface",
      "name": {
        "name": "TextClassificationInferenceOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Specifies the number of top class predictions to return. Defaults to 0.",
          "name": "num_top_classes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The tokenization options",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenizationConfigContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Classification labels to apply other than the stored labels. Must have the same deminsions as the default configured labels",
          "name": "classification_labels",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L189-L199"
    },
    {
      "description": "Tokenization options stored in inference configuration",
      "kind": "interface",
      "name": {
        "name": "TokenizationConfigContainer",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Indicates BERT tokenization and its options",
          "name": "bert",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NlpBertTokenizationConfig",
              "namespace": "ml._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.1.0"
            }
          },
          "description": "Indicates MPNET tokenization and its options",
          "name": "mpnet",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NlpBertTokenizationConfig",
              "namespace": "ml._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.2.0"
            }
          },
          "description": "Indicates RoBERTa tokenization and its options",
          "name": "roberta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NlpRobertaTokenizationConfig",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L110-L129",
      "variants": {
        "kind": "container"
      }
    },
    {
      "description": "BERT and MPNet tokenization configuration options",
      "kind": "interface",
      "name": {
        "name": "NlpBertTokenizationConfig",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Should the tokenizer lower case the text",
          "name": "do_lower_case",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Is tokenization completed with special tokens",
          "name": "with_special_tokens",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum input sequence length for the model",
          "name": "max_sequence_length",
          "required": false,
          "serverDefault": 512,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Should tokenization input be automatically truncated before sending to the model for inference",
          "name": "truncate",
          "required": false,
          "serverDefault": "first",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenizationTruncate",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Tokenization spanning options. Special value of -1 indicates no spanning takes place",
          "name": "span",
          "required": false,
          "serverDefault": -1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L131-L158"
    },
    {
      "description": "RoBERTa tokenization configuration options",
      "kind": "interface",
      "name": {
        "name": "NlpRobertaTokenizationConfig",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Should the tokenizer prefix input with a space character",
          "name": "add_prefix_space",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Is tokenization completed with special tokens",
          "name": "with_special_tokens",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Maximum input sequence length for the model",
          "name": "max_sequence_length",
          "required": false,
          "serverDefault": 512,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Should tokenization input be automatically truncated before sending to the model for inference",
          "name": "truncate",
          "required": false,
          "serverDefault": "first",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenizationTruncate",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Tokenization spanning options. Special value of -1 indicates no spanning takes place",
          "name": "span",
          "required": false,
          "serverDefault": -1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L160-L187"
    },
    {
      "description": "Zero shot classification configuration options",
      "kind": "interface",
      "name": {
        "name": "ZeroShotClassificationInferenceOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The tokenization options to update when inferring",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenizationConfigContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Hypothesis template used when tokenizing labels for prediction",
          "name": "hypothesis_template",
          "required": false,
          "serverDefault": "\"This example is {}.\"",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The zero shot classification labels indicating entailment, neutral, and contradiction\nMust contain exactly and only entailment, neutral, and contradiction",
          "name": "classification_labels",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Indicates if more than one true label exists.",
          "name": "multi_label",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The labels to predict.",
          "name": "labels",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L201-L222"
    },
    {
      "description": "Fill mask inference options",
      "kind": "interface",
      "name": {
        "name": "FillMaskInferenceOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The string/token which will be removed from incoming documents and replaced with the inference prediction(s).\nIn a response, this field contains the mask token for the specified model/tokenizer. Each model and tokenizer\nhas a predefined mask token which cannot be changed. Thus, it is recommended not to set this value in requests.\nHowever, if this field is present in a request, its value must match the predefined value for that model/tokenizer,\notherwise the request will fail.",
          "name": "mask_token",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies the number of top class predictions to return. Defaults to 0.",
          "name": "num_top_classes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The tokenization options to update when inferring",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenizationConfigContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L266-L280"
    },
    {
      "description": "Named entity recognition options",
      "kind": "interface",
      "name": {
        "name": "NerInferenceOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The tokenization options",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenizationConfigContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The token classification labels. Must be IOB formatted tags",
          "name": "classification_labels",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "vocabulary",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Vocabulary",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L255-L264"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Vocabulary",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L233-L235"
    },
    {
      "description": "Pass through configuration options",
      "kind": "interface",
      "name": {
        "name": "PassThroughInferenceOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The tokenization options",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenizationConfigContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "vocabulary",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Vocabulary",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L224-L231"
    },
    {
      "description": "Text embedding inference options",
      "kind": "interface",
      "name": {
        "name": "TextEmbeddingInferenceOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The number of dimensions in the embedding output",
          "name": "embedding_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The tokenization options",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenizationConfigContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L237-L245"
    },
    {
      "description": "Text expansion inference options",
      "kind": "interface",
      "name": {
        "name": "TextExpansionInferenceOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The tokenization options",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenizationConfigContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L247-L253"
    },
    {
      "description": "Question answering inference options",
      "kind": "interface",
      "name": {
        "name": "QuestionAnsweringInferenceOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Specifies the number of top class predictions to return. Defaults to 0.",
          "name": "num_top_classes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The tokenization options to update when inferring",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenizationConfigContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The maximum answer length to consider",
          "name": "max_answer_length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L282-L292"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelConfigInput",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "An array of input field names for the model.",
          "name": "field_names",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L201-L204"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelConfigMetadata",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "model_aliases",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "An object that contains the baseline for feature importance values. For regression analysis, it is a single value. For classification analysis, there is a value for each class.",
          "name": "feature_importance_baseline",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "List of the available hyperparameters optimized during the fine_parameter_tuning phase as well as specified by the user.",
          "name": "hyperparameters",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Hyperparameter",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "An array of the total feature importance for each feature used from the training data set. This array of objects is returned if data frame analytics trained the model and the request includes total_feature_importance in the include request parameter.",
          "name": "total_feature_importance",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TotalFeatureImportance",
                "namespace": "ml._types"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L206-L214"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Hyperparameter",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "A positive number showing how much the parameter influences the variation of the loss function. For hyperparameters with values that are not specified by the user but tuned during hyperparameter optimization.",
          "docId": "ml-regression-loss",
          "docUrl": "https://www.elastic.co/guide/en/machine-learning/{branch}/dfa-regression-lossfunction.html",
          "name": "absolute_importance",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the hyperparameter.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A number between 0 and 1 showing the proportion of influence on the variation of the loss function among all tuned hyperparameters. For hyperparameters with values that are not specified by the user but tuned during hyperparameter optimization.",
          "name": "relative_importance",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indicates if the hyperparameter is specified by the user (true) or optimized (false).",
          "name": "supplied",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The value of the hyperparameter, either optimized or specified by the user.",
          "name": "value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L216-L230"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TotalFeatureImportance",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The feature for which this importance was calculated.",
          "name": "feature_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A collection of feature importance statistics related to the training data set for this particular feature.",
          "name": "importance",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TotalFeatureImportanceStatistics",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "If the trained model is a classification model, feature importance statistics are gathered per target class value.",
          "name": "classes",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TotalFeatureImportanceClass",
                "namespace": "ml._types"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L232-L239"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TotalFeatureImportanceStatistics",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The average magnitude of this feature across all the training data. This value is the average of the absolute values of the importance for this feature.",
          "name": "mean_magnitude",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum importance value across all the training data for this feature.",
          "name": "max",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum importance value across all the training data for this feature.",
          "name": "min",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L248-L255"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TotalFeatureImportanceClass",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The target class value. Could be a string, boolean, or number.",
          "name": "class_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A collection of feature importance statistics related to the training data set for this particular feature.",
          "name": "importance",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TotalFeatureImportanceStatistics",
                "namespace": "ml._types"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L241-L246"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelLocation",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelLocationIndex",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L416-L418"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelLocationIndex",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L420-L422"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelPrefixStrings",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "String prepended to input at ingest",
          "name": "ingest",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "String prepended to input at search",
          "name": "search",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L424-L433"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelStats",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "A collection of deployment stats, which is present when the models are deployed.",
          "name": "deployment_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelDeploymentStats",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "A collection of inference stats fields.",
          "name": "inference_stats",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelInferenceStats",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "A collection of ingest stats for the model across all nodes.\nThe values are summations of the individual node statistics.\nThe format matches the ingest section in the nodes stats API.",
          "docId": "cluster-nodes-stats",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/cluster-nodes-stats.html",
          "name": "ingest",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        },
        {
          "description": "The unique identifier of the trained model.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A collection of model size stats.",
          "name": "model_size_stats",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelSizeStats",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The number of ingest pipelines that currently refer to the model.",
          "name": "pipeline_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L41-L59"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelDeploymentStats",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The detailed allocation status for the deployment.",
          "name": "allocation_status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelDeploymentAllocationStatus",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "cache_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The unique identifier for the trained model deployment.",
          "name": "deployment_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The sum of `error_count` for all nodes in the deployment.",
          "name": "error_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The sum of `inference_count` for all nodes in the deployment.",
          "name": "inference_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The unique identifier for the trained model.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The deployment stats for each node that currently has the model allocated.\nIn serverless, stats are reported for a single unnamed virtual node.",
          "name": "nodes",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TrainedModelDeploymentNodesStats",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "The number of allocations requested.",
          "name": "number_of_allocations",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of inference requests that can be queued before new requests are rejected.",
          "name": "queue_capacity",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The sum of `rejected_execution_count` for all nodes in the deployment.\nIndividual nodes reject an inference request if the inference queue is full.\nThe queue size is controlled by the `queue_capacity` setting in the start\ntrained model deployment API.",
          "name": "rejected_execution_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The reason for the current deployment state. Usually only populated when\nthe model is not deployed to a node.",
          "name": "reason",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The epoch timestamp when the deployment started.",
          "name": "start_time",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The overall state of the deployment.",
          "name": "state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DeploymentAssignmentState",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The number of threads used be each allocation during inference.",
          "name": "threads_per_allocation",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The sum of `timeout_count` for all nodes in the deployment.",
          "name": "timeout_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L61-L101"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelDeploymentAllocationStatus",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The current number of nodes where the model is allocated.",
          "name": "allocation_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The detailed allocation state related to the nodes.",
          "name": "state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DeploymentAllocationState",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The desired number of nodes for model allocation.",
          "name": "target_allocation_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L390-L397"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelDeploymentNodesStats",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The average time for each inference call to complete on this node.",
          "name": "average_inference_time_ms",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitFloatMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of errors when evaluating the trained model.",
          "name": "error_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The total number of inference calls made against this node for this model.",
          "name": "inference_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The epoch time stamp of the last inference call for the model on this node.",
          "name": "last_access",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of allocations assigned to this node.",
          "name": "number_of_allocations",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of inference requests queued to be processed.",
          "name": "number_of_pending_requests",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of inference requests that were not processed because the queue was full.",
          "name": "rejection_execution_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The current routing state and reason for the current routing state for this allocation.",
          "name": "routing_state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelAssignmentRoutingTable",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The epoch timestamp when the allocation started.",
          "name": "start_time",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of threads used by each allocation during inference.",
          "name": "threads_per_allocation",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of inference requests that timed out before being processed.",
          "name": "timeout_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L132-L162"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelAssignmentRoutingTable",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The reason for the current state. It is usually populated only when the\n`routing_state` is `failed`.",
          "name": "reason",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The current routing state.",
          "name": "routing_state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RoutingState",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Current number of allocations.",
          "name": "current_allocations",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Target number of allocations.",
          "name": "target_allocations",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L370-L388"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelInferenceStats",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The number of times the model was loaded for inference and was not retrieved from the cache.\nIf this number is close to the `inference_count`, the cache is not being appropriately used.\nThis can be solved by increasing the cache size or its time-to-live (TTL).\nRefer to general machine learning settings for the appropriate settings.",
          "docId": "ml-settings",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ml-settings.html",
          "name": "cache_miss_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of failures when using the model for inference.",
          "name": "failure_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The total number of times the model has been called for inference.\nThis is across all inference contexts, including all pipelines.",
          "name": "inference_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of inference calls where all the training features for the model were missing.",
          "name": "missing_all_fields_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The time when the statistics were last updated.",
          "name": "timestamp",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L103-L123"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelSizeStats",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The size of the model in bytes.",
          "name": "model_size_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The amount of memory required to load the model in bytes.",
          "name": "required_native_memory_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L125-L130"
    },
    {
      "kind": "interface",
      "name": {
        "name": "InferenceConfigUpdateContainer",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Regression configuration for inference.",
          "name": "regression",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RegressionInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Classification configuration for inference.",
          "name": "classification",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ClassificationInferenceOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Text classification configuration for inference.",
          "name": "text_classification",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TextClassificationInferenceUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Zeroshot classification configuration for inference.",
          "name": "zero_shot_classification",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ZeroShotClassificationInferenceUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Fill mask configuration for inference.",
          "name": "fill_mask",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FillMaskInferenceUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Named entity recognition configuration for inference.",
          "name": "ner",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NerInferenceUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Pass through configuration for inference.",
          "name": "pass_through",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PassThroughInferenceUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Text embedding configuration for inference.",
          "name": "text_embedding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TextEmbeddingInferenceUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Text expansion configuration for inference.",
          "name": "text_expansion",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TextExpansionInferenceUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Question answering configuration for inference",
          "name": "question_answering",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QuestionAnsweringInferenceUpdateOptions",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L296-L318",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "TextClassificationInferenceUpdateOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Specifies the number of top class predictions to return. Defaults to 0.",
          "name": "num_top_classes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The tokenization options to update when inferring",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NlpTokenizationUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Classification labels to apply other than the stored labels. Must have the same deminsions as the default configured labels",
          "name": "classification_labels",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L363-L372"
    },
    {
      "kind": "interface",
      "name": {
        "name": "NlpTokenizationUpdateOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Truncate options to apply",
          "name": "truncate",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TokenizationTruncate",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Span options to apply",
          "name": "span",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L356-L361"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ZeroShotClassificationInferenceUpdateOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The tokenization options to update when inferring",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NlpTokenizationUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Update the configured multi label option. Indicates if more than one true label exists. Defaults to the configured value.",
          "name": "multi_label",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The labels to predict.",
          "name": "labels",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L374-L383"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FillMaskInferenceUpdateOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Specifies the number of top class predictions to return. Defaults to 0.",
          "name": "num_top_classes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The tokenization options to update when inferring",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NlpTokenizationUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L411-L418"
    },
    {
      "kind": "interface",
      "name": {
        "name": "NerInferenceUpdateOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The tokenization options to update when inferring",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NlpTokenizationUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L404-L409"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PassThroughInferenceUpdateOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The tokenization options to update when inferring",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NlpTokenizationUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L385-L390"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TextEmbeddingInferenceUpdateOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NlpTokenizationUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L392-L396"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TextExpansionInferenceUpdateOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NlpTokenizationUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L398-L402"
    },
    {
      "kind": "interface",
      "name": {
        "name": "QuestionAnsweringInferenceUpdateOptions",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The question to answer given the inference context",
          "name": "question",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies the number of top class predictions to return. Defaults to 0.",
          "name": "num_top_classes",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The tokenization options to update when inferring",
          "name": "tokenization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "NlpTokenizationUpdateOptions",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.",
          "name": "results_field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The maximum answer length to consider for extraction",
          "name": "max_answer_length",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L420-L431"
    },
    {
      "kind": "interface",
      "name": {
        "name": "InferenceResponseResult",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "If the model is trained for named entity recognition (NER) tasks, the response contains the recognized entities.",
          "name": "entities",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TrainedModelEntities",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "Indicates whether the input text was truncated to meet the model's maximum sequence length limit. This property\nis present only when it is true.",
          "name": "is_truncated",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If the model is trained for a text classification or zero shot classification task, the response is the\npredicted class.\nFor named entity recognition (NER) tasks, it contains the annotated text output.\nFor fill mask tasks, it contains the top prediction for replacing the mask token.\nFor text embedding tasks, it contains the raw numerical text embedding values.\nFor regression models, its a numerical value\nFor classification models, it may be an integer, double, boolean or string depending on prediction type",
          "name": "predicted_value",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "PredictedValue",
                  "namespace": "ml._types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "PredictedValue",
                    "namespace": "ml._types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "For fill mask tasks, the response contains the input text sequence with the mask token replaced by the predicted\nvalue.\nAdditionally",
          "name": "predicted_value_sequence",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies a probability for the predicted value.",
          "name": "prediction_probability",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies a confidence score for the predicted value.",
          "name": "prediction_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "For fill mask, text classification, and zero shot classification tasks, the response contains a list of top\nclass entries.",
          "name": "top_classes",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TopClassEntry",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "If the request failed, the response contains the reason for the failure.",
          "name": "warning",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The feature importance for the inference results. Relevant only for classification or regression models",
          "name": "feature_importance",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TrainedModelInferenceFeatureImportance",
                "namespace": "ml._types"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L459-L507"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelEntities",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "class_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "class_probability",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "entity",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "start_pos",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "end_pos",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L433-L439"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TopClassEntry",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "class_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "class_probability",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "class_score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L440-L444"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelInferenceFeatureImportance",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "feature_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "importance",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "classes",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TrainedModelInferenceClassImportance",
                "namespace": "ml._types"
              }
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L451-L455"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelInferenceClassImportance",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "name": "class_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "importance",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/inference.ts#L446-L449"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DataframePreviewConfig",
        "namespace": "ml.preview_data_frame_analytics"
      },
      "properties": [
        {
          "name": "source",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalyticsSource",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "analysis",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisContainer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "model_memory_limit",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "max_num_threads",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "analyzed_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataframeAnalysisAnalyzedFields",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/preview_data_frame_analytics/types.ts#L27-L33"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DatafeedConfig",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "aliases": [
            "aggs"
          ],
          "description": "If set, the datafeed performs aggregation searches. Support for aggregations is limited and should be used only with low cardinality data.",
          "name": "aggregations",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AggregationContainer",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "description": "Datafeeds might be required to search over long time periods, for several months or years. This search is split into time chunks in order to ensure the load on Elasticsearch is managed. Chunking configuration controls how the size of these time chunks are calculated and is an advanced configuration option.",
          "name": "chunking_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ChunkingConfig",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "A numerical character string that uniquely identifies the datafeed. This identifier can contain lowercase alphanumeric characters (a-z and 0-9), hyphens, and underscores. It must start and end with alphanumeric characters. The default value is the job identifier.",
          "name": "datafeed_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies whether the datafeed checks for missing data and the size of the window. The datafeed can optionally search over indices that have already been read in an effort to determine whether any data has subsequently been added to the index. If missing data is found, it is a good indication that the `query_delay` option is set too low and the data is being indexed after the datafeed has passed that moment in time. This check runs only on real-time datafeeds.",
          "name": "delayed_data_check_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DelayedDataCheckConfig",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The interval at which scheduled queries are made while the datafeed runs in real time. The default value is either the bucket span for short bucket spans, or, for longer bucket spans, a sensible fraction of the bucket span. For example: `150s`. When `frequency` is shorter than the bucket span, interim results for the last (partial) bucket are written then eventually overwritten by the full bucket results. If the datafeed uses aggregations, this value must be divisible by the interval of the date histogram aggregation.",
          "name": "frequency",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "aliases": [
            "indexes"
          ],
          "description": "An array of index names. Wildcards are supported. If any indices are in remote clusters, the machine learning nodes must have the `remote_cluster_client` role.",
          "name": "indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies index expansion options that are used during search.",
          "name": "indices_options",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndicesOptions",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "job_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If a real-time datafeed has never seen any data (including during any initial training period) then it will automatically stop itself and close its associated job after this many real-time searches that return no documents. In other words, it will stop after `frequency` times `max_empty_searches` of real-time operation. If not set then a datafeed with no end time that sees no data will remain started until it is explicitly stopped.",
          "name": "max_empty_searches",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The Elasticsearch query domain-specific language (DSL). This value corresponds to the query object in an Elasticsearch search POST body. All the options that are supported by Elasticsearch can be used, as this object is passed verbatim to Elasticsearch.",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "The number of seconds behind real time that data is queried. For example, if data from 10:04 a.m. might not be searchable in Elasticsearch until 10:06 a.m., set this property to 120 seconds. The default value is randomly selected between `60s` and `120s`. This randomness improves the query performance when there are multiple jobs running on the same node.",
          "name": "query_delay",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies runtime fields for the datafeed search.",
          "name": "runtime_mappings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RuntimeFields",
              "namespace": "_types.mapping"
            }
          }
        },
        {
          "description": "Specifies scripts that evaluate custom expressions and returns script fields to the datafeed. The detector configuration objects in a job can contain functions that use these script fields.",
          "name": "script_fields",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ScriptField",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "The size parameter that is used in Elasticsearch searches when the datafeed does not use aggregations. The maximum value is the value of `index.max_result_window`, which is 10,000 by default.",
          "name": "scroll_size",
          "required": false,
          "serverDefault": 1000,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Datafeed.ts#L62-L119"
    },
    {
      "kind": "interface",
      "name": {
        "name": "JobConfig",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Advanced configuration option. Specifies whether this job can open when there is insufficient machine learning node capacity for it to be immediately assigned to a node.",
          "docId": "ml-put-job",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/ml-put-job.html",
          "name": "allow_lazy_open",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The analysis configuration, which specifies how to analyze the data.\nAfter you create a job, you cannot change the analysis configuration; all the properties are informational.",
          "name": "analysis_config",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AnalysisConfig",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Limits can be applied for the resources required to hold the mathematical models in memory.\nThese limits are approximate and can be set per job.\nThey do not control the memory used by other processes, for example the Elasticsearch Java processes.",
          "name": "analysis_limits",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AnalysisLimits",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nThe time between each periodic persistence of the model.\nThe default value is a randomized value between 3 to 4 hours, which avoids all jobs persisting at exactly the same time.\nThe smallest allowed value is 1 hour.",
          "name": "background_persist_interval",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nContains custom metadata about the job.",
          "name": "custom_settings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CustomSettings",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Advanced configuration option, which affects the automatic removal of old model snapshots for this job.\nIt specifies a period of time (in days) after which only the first snapshot per day is retained.\nThis period is relative to the timestamp of the most recent snapshot for this job.",
          "name": "daily_model_snapshot_retention_after_days",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The data description defines the format of the input data when you send data to the job by using the post data API.\nNote that when configure a datafeed, these properties are automatically set.",
          "name": "data_description",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DataDescription",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The datafeed, which retrieves data from Elasticsearch for analysis by the job.\nYou can associate only one datafeed with each anomaly detection job.",
          "name": "datafeed_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DatafeedConfig",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "A description of the job.",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A list of job groups. A job can belong to no groups or many.",
          "name": "groups",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Identifier for the anomaly detection job.\nThis identifier can contain lowercase alphanumeric characters (a-z and 0-9), hyphens, and underscores.\nIt must start and end with alphanumeric characters.",
          "name": "job_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Reserved for future use, currently set to `anomaly_detector`.",
          "name": "job_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "This advanced configuration option stores model information along with the results.\nIt provides a more detailed view into anomaly detection.\nModel plot provides a simplified and indicative view of the model and its bounds.",
          "name": "model_plot_config",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ModelPlotConfig",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Advanced configuration option, which affects the automatic removal of old model snapshots for this job.\nIt specifies the maximum period of time (in days) that snapshots are retained.\nThis period is relative to the timestamp of the most recent snapshot for this job.\nThe default value is `10`, which means snapshots ten days older than the newest snapshot are deleted.",
          "name": "model_snapshot_retention_days",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nThe period over which adjustments to the score are applied, as new data is seen.\nThe default value is the longer of 30 days or 100 `bucket_spans`.",
          "name": "renormalization_window_days",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A text string that affects the name of the machine learning results index.\nThe default value is `shared`, which generates an index named `.ml-anomalies-shared`.",
          "name": "results_index_name",
          "required": false,
          "serverDefault": "shared",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Advanced configuration option.\nThe period of time (in days) that results are retained.\nAge is calculated relative to the timestamp of the latest bucket result.\nIf this property has a non-null value, once per day at 00:30 (server time), results that are the specified number of days older than the latest bucket result are deleted from Elasticsearch.\nThe default value is null, which means all results are retained.\nAnnotations generated by the system also count as results for retention purposes; they are deleted after the same number of days as results.\nAnnotations added by users are retained forever.",
          "name": "results_retention_days",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Job.ts#L182-L283"
    },
    {
      "attachedBehaviors": [
        "OverloadOf"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "AnalysisConfig",
                "namespace": "ml._types"
              }
            }
          ],
          "type": {
            "name": "OverloadOf",
            "namespace": "_spec_utils"
          }
        }
      ],
      "kind": "interface",
      "name": {
        "name": "AnalysisConfigRead",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The size of the interval that the analysis is aggregated into, typically between `5m` and `1h`.",
          "name": "bucket_span",
          "required": true,
          "serverDefault": "5m",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `categorization_field_name` is specified, you can also define the analyzer that is used to interpret the categorization field.\nThis property cannot be used at the same time as `categorization_filters`.\nThe categorization analyzer specifies how the `categorization_field` is interpreted by the categorization process.",
          "name": "categorization_analyzer",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CategorizationAnalyzer",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "If this property is specified, the values of the specified field will be categorized.\nThe resulting categories must be used in a detector by setting `by_field_name`, `over_field_name`, or `partition_field_name` to the keyword `mlcategory`.",
          "name": "categorization_field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `categorization_field_name` is specified, you can also define optional filters.\nThis property expects an array of regular expressions.\nThe expressions are used to filter out matching sequences from the categorization field values.",
          "name": "categorization_filters",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "An array of detector configuration objects.\nDetector configuration objects specify which data fields a job analyzes.\nThey also specify which analytical functions are used.\nYou can specify multiple detectors for a job.",
          "name": "detectors",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DetectorRead",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "A comma separated list of influencer field names.\nTypically these can be the by, over, or partition fields that are used in the detector configuration.\nYou might also want to use a field name that is not specifically named in a detector, but is available as part of the input data.\nWhen you use multiple detectors, the use of influencers is recommended as it aggregates results for each influencer entity.",
          "name": "influencers",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Advanced configuration option.\nAffects the pruning of models that have not been updated for the given time duration.\nThe value must be set to a multiple of the `bucket_span`.\nIf set too low, important information may be removed from the model.\nTypically, set to `30d` or longer.\nIf not set, model pruning only occurs if the model memory status reaches the soft limit or the hard limit.\nFor jobs created in 8.1 and later, the default value is the greater of `30d` or 20 times `bucket_span`.",
          "name": "model_prune_window",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The size of the window in which to expect data that is out of time order.\nDefaults to no latency.\nIf you specify a non-zero value, it must be greater than or equal to one second.",
          "name": "latency",
          "required": false,
          "serverDefault": "0",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "This functionality is reserved for internal use.\nIt is not supported for use in customer environments and is not subject to the support SLA of official GA features.\nIf set to `true`, the analysis will automatically find correlations between metrics for a given by field value and report anomalies when those correlations cease to hold.",
          "name": "multivariate_by_fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Settings related to how categorization interacts with partition fields.",
          "name": "per_partition_categorization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "PerPartitionCategorization",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "If this property is specified, the data that is fed to the job is expected to be pre-summarized.\nThis property value is the name of the field that contains the count of raw data points that have been summarized.\nThe same `summary_count_field_name` applies to all detectors in the job.",
          "name": "summary_count_field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Analysis.ts#L79-L148"
    },
    {
      "description": "A class that implements `OverloadOf` should have the exact same properties with the same types.\nIt can change if a property is required or not. There is no need to port the descriptions\nand js doc tags, the compiler will do that for you.",
      "generics": [
        {
          "name": "TDefinition",
          "namespace": "_spec_utils.OverloadOf"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "OverloadOf",
        "namespace": "_spec_utils"
      },
      "properties": [],
      "specLocation": "_spec_utils/behaviors.ts#L134-L140"
    },
    {
      "attachedBehaviors": [
        "OverloadOf"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "Detector",
                "namespace": "ml._types"
              }
            }
          ],
          "type": {
            "name": "OverloadOf",
            "namespace": "_spec_utils"
          }
        }
      ],
      "kind": "interface",
      "name": {
        "name": "DetectorRead",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The field used to split the data.\nIn particular, this property is used for analyzing the splits with respect to their own history.\nIt is used for finding unusual values in the context of the split.",
          "name": "by_field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An array of custom rule objects, which enable you to customize the way detectors operate.\nFor example, a rule may dictate to the detector conditions under which results should be skipped.\nKibana refers to custom rules as job rules.",
          "name": "custom_rules",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DetectionRule",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "A description of the detector.",
          "name": "detector_description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A unique identifier for the detector.\nThis identifier is based on the order of the detectors in the `analysis_config`, starting at zero.",
          "name": "detector_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Contains one of the following values: `all`, `none`, `by`, or `over`.\nIf set, frequent entities are excluded from influencing the anomaly results.\nEntities can be considered frequent over time or frequent in a population.\nIf you are working with both over and by fields, then you can set `exclude_frequent` to all for both fields, or to `by` or `over` for those specific fields.",
          "name": "exclude_frequent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExcludeFrequent",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The field that the detector uses in the function.\nIf you use an event rate function such as `count` or `rare`, do not specify this field.",
          "name": "field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The analysis function that is used.\nFor example, `count`, `rare`, `mean`, `min`, `max`, and `sum`.",
          "docId": "ml-functions",
          "docUrl": "https://www.elastic.co/guide/en/machine-learning/{branch}/ml-functions.html",
          "name": "function",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The field used to split the data.\nIn particular, this property is used for analyzing the splits with respect to the history of all splits.\nIt is used for finding unusual values in the population of all splits.",
          "name": "over_field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The field used to segment the analysis.\nWhen you use this property, you have completely independent baselines for each value of this field.",
          "name": "partition_field_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines whether a new series is used as the null series when there is no value for the by or partition fields.",
          "name": "use_null",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Detector.ts#L69-L125"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Definition",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "description": "Collection of preprocessors",
          "name": "preprocessors",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Preprocessor",
                "namespace": "ml.put_trained_model"
              }
            }
          }
        },
        {
          "description": "The definition of the trained model.",
          "name": "trained_model",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModel",
              "namespace": "ml.put_trained_model"
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L24-L29"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Preprocessor",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "name": "frequency_encoding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FrequencyEncodingPreprocessor",
              "namespace": "ml.put_trained_model"
            }
          }
        },
        {
          "name": "one_hot_encoding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "OneHotEncodingPreprocessor",
              "namespace": "ml.put_trained_model"
            }
          }
        },
        {
          "name": "target_mean_encoding",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TargetMeanEncodingPreprocessor",
              "namespace": "ml.put_trained_model"
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L31-L36",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "FrequencyEncodingPreprocessor",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "feature_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "frequency_map",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L38-L42"
    },
    {
      "kind": "interface",
      "name": {
        "name": "OneHotEncodingPreprocessor",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "hot_map",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L44-L47"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TargetMeanEncodingPreprocessor",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "feature_name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "target_map",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "double",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "default_value",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L49-L54"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModel",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "description": "The definition for a binary decision tree.",
          "name": "tree",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelTree",
              "namespace": "ml.put_trained_model"
            }
          }
        },
        {
          "description": "The definition of a node in a tree.\nThere are two major types of nodes: leaf nodes and not-leaf nodes.\n- Leaf nodes only need node_index and leaf_value defined.\n- All other nodes need split_feature, left_child, right_child, threshold, decision_type, and default_left defined.",
          "name": "tree_node",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelTreeNode",
              "namespace": "ml.put_trained_model"
            }
          }
        },
        {
          "description": "The definition for an ensemble model",
          "name": "ensemble",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Ensemble",
              "namespace": "ml.put_trained_model"
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L60-L72"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelTree",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "name": "classification_labels",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "feature_names",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "target_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "tree_structure",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TrainedModelTreeNode",
                "namespace": "ml.put_trained_model"
              }
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L74-L79"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelTreeNode",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "name": "decision_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "default_left",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "leaf_value",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "left_child",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "node_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "right_child",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "split_feature",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "split_gain",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "threshold",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L81-L91"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Ensemble",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "name": "aggregate_output",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "AggregateOutput",
              "namespace": "ml.put_trained_model"
            }
          }
        },
        {
          "name": "classification_labels",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "feature_names",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "target_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "trained_models",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TrainedModel",
                "namespace": "ml.put_trained_model"
              }
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L93-L99"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AggregateOutput",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "name": "logistic_regression",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Weights",
              "namespace": "ml.put_trained_model"
            }
          }
        },
        {
          "name": "weighted_sum",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Weights",
              "namespace": "ml.put_trained_model"
            }
          }
        },
        {
          "name": "weighted_mode",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Weights",
              "namespace": "ml.put_trained_model"
            }
          }
        },
        {
          "name": "exponent",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Weights",
              "namespace": "ml.put_trained_model"
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L101-L106"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Weights",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "name": "weights",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L108-L110"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Input",
        "namespace": "ml.put_trained_model"
      },
      "properties": [
        {
          "name": "field_names",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Names",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/put_trained_model/types.ts#L56-L58"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelAssignment",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The overall assignment state.",
          "name": "assignment_state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DeploymentAssignmentState",
              "namespace": "ml._types"
            }
          }
        },
        {
          "name": "max_assigned_allocations",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The allocation state for each node.",
          "name": "routing_table",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TrainedModelAssignmentRoutingTable",
                "namespace": "ml._types"
              }
            }
          }
        },
        {
          "description": "The timestamp when the deployment started.",
          "name": "start_time",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "task_parameters",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainedModelAssignmentTaskParameters",
              "namespace": "ml._types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L399-L414"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TrainedModelAssignmentTaskParameters",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "The size of the trained model in bytes.",
          "name": "model_bytes",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The unique identifier for the trained model.",
          "name": "model_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The unique identifier for the trained model deployment.",
          "name": "deployment_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.4.0"
            }
          },
          "description": "The size of the trained model cache.",
          "name": "cache_size",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ByteSize",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The total number of allocations this model is assigned across ML nodes.",
          "name": "number_of_allocations",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "priority",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TrainingPriority",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "Number of inference requests are allowed in the queue at a time.",
          "name": "queue_capacity",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of threads per allocation.",
          "name": "threads_per_allocation",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "ml/_types/TrainedModel.ts#L312-L345"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AnalysisMemoryLimit",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "Limits can be applied for the resources required to hold the mathematical models in memory. These limits are approximate and can be set per job. They do not control the memory used by other processes, for example the Elasticsearch Java processes.",
          "name": "model_memory_limit",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Analysis.ts#L174-L179"
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.msearch.MultiSearchResult"
        }
      ],
      "kind": "interface",
      "name": {
        "name": "MultiSearchResult",
        "namespace": "_global.msearch"
      },
      "properties": [
        {
          "name": "took",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "responses",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "name": "TDocument",
                    "namespace": "_global.msearch.MultiSearchResult"
                  }
                }
              ],
              "kind": "instance_of",
              "type": {
                "name": "ResponseItem",
                "namespace": "_global.msearch"
              }
            }
          }
        }
      ],
      "specLocation": "_global/msearch/types.ts#L206-L209"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Operation",
        "namespace": "_global.mtermvectors"
      },
      "properties": [
        {
          "description": "The ID of the document.",
          "name": "_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The index of the document.",
          "name": "_index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An artificial document (a document not present in the index) for which you want to retrieve term vectors.",
          "name": "doc",
          "required": false,
          "type": {
            "kind": "user_defined_value"
          }
        },
        {
          "description": "Comma-separated list or wildcard expressions of fields to include in the statistics.\nUsed as the default list unless a specific field list is provided in the `completion_fields` or `fielddata_fields` parameters.",
          "name": "fields",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If `true`, the response includes the document count, sum of document frequencies, and sum of total term frequencies.",
          "name": "field_statistics",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Filter terms based on their tf-idf scores.",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Filter",
              "namespace": "_global.termvectors"
            }
          }
        },
        {
          "description": "If `true`, the response includes term offsets.",
          "name": "offsets",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the response includes term payloads.",
          "name": "payloads",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, the response includes term positions.",
          "name": "positions",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Custom value used to route operations to a specific shard.",
          "name": "routing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "If true, the response includes term frequency and document frequency.",
          "name": "term_statistics",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "If `true`, returns the document version as part of a hit.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specific version type.",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/mtermvectors/types.ts#L35-L94"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Filter",
        "namespace": "_global.termvectors"
      },
      "properties": [
        {
          "description": "Ignore words which occur in more than this many docs.\nDefaults to unbounded.",
          "name": "max_doc_freq",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum number of terms that must be returned per field.",
          "name": "max_num_terms",
          "required": false,
          "serverDefault": 25,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Ignore words with more than this frequency in the source doc.\nDefaults to unbounded.",
          "name": "max_term_freq",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The maximum word length above which words will be ignored.\nDefaults to unbounded.",
          "name": "max_word_length",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Ignore terms which do not occur in at least this many docs.",
          "name": "min_doc_freq",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Ignore words with less than this frequency in the source doc.",
          "name": "min_term_freq",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum word length below which words will be ignored.",
          "name": "min_word_length",
          "required": false,
          "serverDefault": 0,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/termvectors/types.ts#L49-L86"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TermVectorsResult",
        "namespace": "_global.mtermvectors"
      },
      "properties": [
        {
          "name": "_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionNumber",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "took",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "found",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "term_vectors",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TermVector",
                "namespace": "_global.termvectors"
              }
            }
          }
        },
        {
          "name": "error",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ErrorCause",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/mtermvectors/types.ts#L96-L104"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TermVector",
        "namespace": "_global.termvectors"
      },
      "properties": [
        {
          "name": "field_statistics",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldStatistics",
              "namespace": "_global.termvectors"
            }
          }
        },
        {
          "name": "terms",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Term",
                "namespace": "_global.termvectors"
              }
            }
          }
        }
      ],
      "specLocation": "_global/termvectors/types.ts#L23-L26"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FieldStatistics",
        "namespace": "_global.termvectors"
      },
      "properties": [
        {
          "name": "doc_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "sum_doc_freq",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "sum_ttf",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/termvectors/types.ts#L28-L32"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Term",
        "namespace": "_global.termvectors"
      },
      "properties": [
        {
          "name": "doc_freq",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "term_freq",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "tokens",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Token",
                "namespace": "_global.termvectors"
              }
            }
          }
        },
        {
          "name": "ttf",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/termvectors/types.ts#L34-L40"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Token",
        "namespace": "_global.termvectors"
      },
      "properties": [
        {
          "name": "end_offset",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "payload",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "position",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "start_offset",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/termvectors/types.ts#L42-L47"
    },
    {
      "kind": "interface",
      "name": {
        "name": "QueryRule",
        "namespace": "query_rules._types"
      },
      "properties": [
        {
          "name": "rule_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryRuleType",
              "namespace": "query_rules._types"
            }
          }
        },
        {
          "name": "criteria",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "QueryRuleCriteria",
                  "namespace": "query_rules._types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "QueryRuleCriteria",
                    "namespace": "query_rules._types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "name": "actions",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryRuleActions",
              "namespace": "query_rules._types"
            }
          }
        },
        {
          "name": "priority",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "query_rules/_types/QueryRuleset.ts#L36-L42"
    },
    {
      "kind": "interface",
      "name": {
        "name": "QueryRuleCriteria",
        "namespace": "query_rules._types"
      },
      "properties": [
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryRuleCriteriaType",
              "namespace": "query_rules._types"
            }
          }
        },
        {
          "name": "metadata",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "values",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "user_defined_value"
            }
          }
        }
      ],
      "specLocation": "query_rules/_types/QueryRuleset.ts#L49-L53"
    },
    {
      "kind": "interface",
      "name": {
        "name": "QueryRuleActions",
        "namespace": "query_rules._types"
      },
      "properties": [
        {
          "name": "ids",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "name": "docs",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "PinnedDoc",
                "namespace": "_types.query_dsl"
              }
            }
          }
        }
      ],
      "specLocation": "query_rules/_types/QueryRuleset.ts#L70-L73"
    },
    {
      "kind": "interface",
      "name": {
        "name": "QueryRuleset",
        "namespace": "query_rules._types"
      },
      "properties": [
        {
          "description": "Query Ruleset unique identifier",
          "name": "ruleset_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Rules associated with the query ruleset",
          "name": "rules",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "QueryRule",
                "namespace": "query_rules._types"
              }
            }
          }
        }
      ],
      "specLocation": "query_rules/_types/QueryRuleset.ts#L25-L34"
    },
    {
      "kind": "interface",
      "name": {
        "name": "QueryRulesetListItem",
        "namespace": "query_rules.list_rulesets"
      },
      "properties": [
        {
          "description": "Ruleset unique identifier",
          "name": "ruleset_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The number of rules associated with this ruleset",
          "name": "rule_total_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A map of criteria type (e.g. exact) to the number of rules of that type",
          "name": "rule_criteria_types_counts",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "A map of rule type (e.g. pinned) to the number of rules of that type",
          "name": "rule_type_counts",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "integer",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "query_rules/list_rulesets/types.ts#L23-L42"
    },
    {
      "kind": "interface",
      "name": {
        "name": "QueryRulesetMatchedRule",
        "namespace": "query_rules.test"
      },
      "properties": [
        {
          "description": "Ruleset unique identifier",
          "name": "ruleset_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Rule unique identifier within that ruleset",
          "name": "rule_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "query_rules/test/QueryRulesetTestResponse.ts#L30-L39"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RankEvalRequestItem",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "description": "The search requestâ€™s ID, used to group result details later.",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The query being evaluated.",
          "name": "request",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankEvalQuery",
              "namespace": "_global.rank_eval"
            }
          }
        },
        {
          "description": "List of document ratings",
          "name": "ratings",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "DocumentRating",
                "namespace": "_global.rank_eval"
              }
            }
          }
        },
        {
          "description": "The search template Id",
          "name": "template_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The search template parameters.",
          "name": "params",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L98-L109"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RankEvalQuery",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "name": "query",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "shortcutProperty": "query",
      "specLocation": "_global/rank_eval/types.ts#L111-L117"
    },
    {
      "kind": "interface",
      "name": {
        "name": "DocumentRating",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "description": "The document ID.",
          "name": "_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The documentâ€™s index. For data streams, this should be the documentâ€™s backing index.",
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The documentâ€™s relevance with regard to this search request.",
          "name": "rating",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L119-L126"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RankEvalMetric",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "name": "precision",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankEvalMetricPrecision",
              "namespace": "_global.rank_eval"
            }
          }
        },
        {
          "name": "recall",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankEvalMetricRecall",
              "namespace": "_global.rank_eval"
            }
          }
        },
        {
          "name": "mean_reciprocal_rank",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankEvalMetricMeanReciprocalRank",
              "namespace": "_global.rank_eval"
            }
          }
        },
        {
          "name": "dcg",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankEvalMetricDiscountedCumulativeGain",
              "namespace": "_global.rank_eval"
            }
          }
        },
        {
          "name": "expected_reciprocal_rank",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankEvalMetricExpectedReciprocalRank",
              "namespace": "_global.rank_eval"
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L90-L96"
    },
    {
      "description": "Precision at K (P@k)",
      "docId": "k-precision",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-rank-eval.html#k-precision",
      "inherits": {
        "type": {
          "name": "RankEvalMetricRatingTreshold",
          "namespace": "_global.rank_eval"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankEvalMetricPrecision",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "description": "Controls how unlabeled documents in the search results are counted. If set to true, unlabeled documents are ignored and neither count as relevant or irrelevant. Set to false (the default), they are treated as irrelevant.",
          "name": "ignore_unlabeled",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L42-L52"
    },
    {
      "inherits": {
        "type": {
          "name": "RankEvalMetricBase",
          "namespace": "_global.rank_eval"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankEvalMetricRatingTreshold",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "description": "Sets the rating threshold above which documents are considered to be \"relevant\".",
          "name": "relevant_rating_threshold",
          "required": false,
          "serverDefault": 1,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L34-L40"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RankEvalMetricBase",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "description": "Sets the maximum number of documents retrieved per query. This value will act in place of the usual size parameter in the query.",
          "name": "k",
          "required": false,
          "serverDefault": 10,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L26-L32"
    },
    {
      "description": "Recall at K (R@k)",
      "docId": "k-recall",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-rank-eval.html#k-recall",
      "inherits": {
        "type": {
          "name": "RankEvalMetricRatingTreshold",
          "namespace": "_global.rank_eval"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankEvalMetricRecall",
        "namespace": "_global.rank_eval"
      },
      "properties": [],
      "specLocation": "_global/rank_eval/types.ts#L54-L58"
    },
    {
      "description": "Mean Reciprocal Rank",
      "docId": "mean-reciprocal",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-rank-eval.html#_mean_reciprocal_rank",
      "inherits": {
        "type": {
          "name": "RankEvalMetricRatingTreshold",
          "namespace": "_global.rank_eval"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankEvalMetricMeanReciprocalRank",
        "namespace": "_global.rank_eval"
      },
      "properties": [],
      "specLocation": "_global/rank_eval/types.ts#L60-L64"
    },
    {
      "description": "Discounted cumulative gain (DCG)",
      "docId": "dcg",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-rank-eval.html#_discounted_cumulative_gain_dcg",
      "inherits": {
        "type": {
          "name": "RankEvalMetricBase",
          "namespace": "_global.rank_eval"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankEvalMetricDiscountedCumulativeGain",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "description": "If set to true, this metric will calculate the Normalized DCG.",
          "docUrl": "https://en.wikipedia.org/wiki/Discounted_cumulative_gain#Normalized_DCG",
          "name": "normalize",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L66-L77"
    },
    {
      "description": "Expected Reciprocal Rank (ERR)",
      "docId": "expected-reciprocal",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-rank-eval.html#_expected_reciprocal_rank_err",
      "inherits": {
        "type": {
          "name": "RankEvalMetricBase",
          "namespace": "_global.rank_eval"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RankEvalMetricExpectedReciprocalRank",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "description": "The highest relevance grade used in the user-supplied relevance judgments.",
          "name": "maximum_relevance",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L79-L88"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RankEvalMetricDetail",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "description": "The metric_score in the details section shows the contribution of this query to the global quality metric score",
          "name": "metric_score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The unrated_docs section contains an _index and _id entry for each document in the search result for this query that didnâ€™t have a ratings value. This can be used to ask the user to supply ratings for these documents",
          "name": "unrated_docs",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "UnratedDocument",
                "namespace": "_global.rank_eval"
              }
            }
          }
        },
        {
          "description": "The hits section shows a grouping of the search results with their supplied ratings",
          "name": "hits",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RankEvalHitItem",
                "namespace": "_global.rank_eval"
              }
            }
          }
        },
        {
          "description": "The metric_details give additional information about the calculated quality metric (e.g. how many of the retrieved documents were relevant). The content varies for each metric but allows for better interpretation of the results",
          "name": "metric_details",
          "required": true,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "user_defined_value"
              }
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L128-L137"
    },
    {
      "kind": "interface",
      "name": {
        "name": "UnratedDocument",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "name": "_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L150-L153"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RankEvalHitItem",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "name": "hit",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RankEvalHit",
              "namespace": "_global.rank_eval"
            }
          }
        },
        {
          "name": "rating",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "double",
                  "namespace": "_types"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "name": "null",
                  "namespace": "_builtins"
                }
              }
            ],
            "kind": "union_of"
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L139-L142"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RankEvalHit",
        "namespace": "_global.rank_eval"
      },
      "properties": [
        {
          "name": "_id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_score",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/rank_eval/types.ts#L144-L148"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Destination",
        "namespace": "_global.reindex"
      },
      "properties": [
        {
          "description": "The name of the data stream, index, or index alias you are copying to.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Set to `create` to only index documents that do not already exist.\nImportant: To reindex to a data stream destination, this argument must be `create`.",
          "name": "op_type",
          "required": false,
          "serverDefault": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "OpType",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The name of the pipeline to use.",
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "By default, a document's routing is preserved unless itâ€™s changed by the script.\nSet to `discard` to set routing to `null`,  or `=value` to route using the specified `value`.",
          "name": "routing",
          "required": false,
          "serverDefault": "keep",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Routing",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The versioning to use for the indexing operation.",
          "name": "version_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionType",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/reindex/types.ts#L39-L64"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Source",
        "namespace": "_global.reindex"
      },
      "properties": [
        {
          "description": "The name of the data stream, index, or alias you are copying from.\nAccepts a comma-separated list to reindex from multiple sources.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the documents to reindex using the Query DSL.",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "A remote instance of Elasticsearch that you want to index from.",
          "name": "remote",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RemoteSource",
              "namespace": "_global.reindex"
            }
          }
        },
        {
          "description": "The number of documents to index per batch.\nUse when indexing from remote to ensure that the batches fit within the on-heap buffer, which defaults to a maximum size of 100 MB.",
          "name": "size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Slice the reindex request manually using the provided slice ID and total number of slices.",
          "name": "slice",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SlicedScroll",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Sort",
              "namespace": "_types"
            }
          }
        },
        {
          "codegenName": "source_fields",
          "description": "If `true` reindexes all source fields.\nSet to a list to reindex select fields.",
          "name": "_source",
          "required": false,
          "serverDefault": "true",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "runtime_mappings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RuntimeFields",
              "namespace": "_types.mapping"
            }
          }
        }
      ],
      "specLocation": "_global/reindex/types.ts#L66-L97"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RemoteSource",
        "namespace": "_global.reindex"
      },
      "properties": [
        {
          "description": "The remote connection timeout.\nDefaults to 30 seconds.",
          "name": "connect_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "An object containing the headers of the request.",
          "name": "headers",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "The URL for the remote instance of Elasticsearch that you want to index from.",
          "name": "host",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Host",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The username to use for authentication with the remote host.",
          "name": "username",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Username",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The password to use for authentication with the remote host.",
          "name": "password",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Password",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The remote socket read timeout. Defaults to 30 seconds.",
          "name": "socket_timeout",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/reindex/types.ts#L99-L125"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PainlessContextSetup",
        "namespace": "_global.scripts_painless_execute"
      },
      "properties": [
        {
          "description": "Document thatâ€™s temporarily indexed in-memory and accessible from the script.",
          "name": "document",
          "required": true,
          "type": {
            "kind": "user_defined_value"
          }
        },
        {
          "description": "Index containing a mapping thatâ€™s compatible with the indexed document.\nYou may specify a remote index by prefixing the index with the remote cluster alias.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Use this parameter to specify a query for computing a score.",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        }
      ],
      "specLocation": "_global/scripts_painless_execute/types.ts#L25-L39"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RetrieverContainer",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "A retriever that replaces the functionality of a traditional query.",
          "name": "standard",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "StandardRetriever",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A retriever that replaces the functionality  of a knn search.",
          "name": "knn",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "KnnRetriever",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A retriever that produces top documents from reciprocal rank fusion (RRF).",
          "name": "rrf",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RRFRetriever",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A retriever that reranks the top documents based on a reranking model using the InferenceAPI",
          "name": "text_similarity_reranker",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TextSimilarityReranker",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A retriever that replaces the functionality of a rule query.",
          "name": "rule",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RuleRetriever",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Retriever.ts#L28-L42",
      "variants": {
        "kind": "container"
      }
    },
    {
      "inherits": {
        "type": {
          "name": "RetrieverBase",
          "namespace": "_types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "StandardRetriever",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "Defines a query to retrieve a set of top documents.",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Defines a search after object parameter used for pagination.",
          "name": "search_after",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortResults",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Maximum number of documents to collect for each shard.",
          "name": "terminate_after",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A sort object that that specifies the order of matching documents.",
          "name": "sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Sort",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Collapses the top documents by a specified key into a single top document per key.",
          "name": "collapse",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldCollapse",
              "namespace": "_global.search._types"
            }
          }
        }
      ],
      "specLocation": "_types/Retriever.ts#L51-L62"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RetrieverBase",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "Query to filter the documents that can match.",
          "name": "filter",
          "required": false,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "QueryContainer",
                  "namespace": "_types.query_dsl"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "QueryContainer",
                    "namespace": "_types.query_dsl"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "Minimum _score for matching documents. Documents with a lower _score are not included in the top documents.",
          "name": "min_score",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Retriever.ts#L44-L49"
    },
    {
      "inherits": {
        "type": {
          "name": "RetrieverBase",
          "namespace": "_types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "KnnRetriever",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "The name of the vector field to search against.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Query vector. Must have the same number of dimensions as the vector field you are searching against. You must provide a query_vector_builder or query_vector, but not both.",
          "name": "query_vector",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryVector",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines a model to build a query vector.",
          "name": "query_vector_builder",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryVectorBuilder",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of nearest neighbors to return as top hits.",
          "name": "k",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of nearest neighbor candidates to consider per shard.",
          "name": "num_candidates",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The minimum similarity required for a document to be considered a match.",
          "name": "similarity",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Retriever.ts#L64-L77"
    },
    {
      "inherits": {
        "type": {
          "name": "RetrieverBase",
          "namespace": "_types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RRFRetriever",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "A list of child retrievers to specify which sets of returned top documents will have the RRF formula applied to them.",
          "name": "retrievers",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RetrieverContainer",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "This value determines how much influence documents in individual result sets per query have over the final ranked result set.",
          "name": "rank_constant",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "This value determines the size of the individual result sets per query.",
          "name": "rank_window_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Retriever.ts#L79-L86"
    },
    {
      "inherits": {
        "type": {
          "name": "RetrieverBase",
          "namespace": "_types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "TextSimilarityReranker",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "The nested retriever which will produce the first-level results, that will later be used for reranking.",
          "name": "retriever",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RetrieverContainer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "This value determines how many documents we will consider from the nested retriever.",
          "name": "rank_window_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Unique identifier of the inference endpoint created using the inference API.",
          "name": "inference_id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The text snippet used as the basis for similarity comparison",
          "name": "inference_text",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The document field to be used for text similarity comparisons. This field should contain the text that will be evaluated against the inference_text",
          "name": "field",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "_types/Retriever.ts#L88-L99"
    },
    {
      "inherits": {
        "type": {
          "name": "RetrieverBase",
          "namespace": "_types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "RuleRetriever",
        "namespace": "_types"
      },
      "properties": [
        {
          "description": "The ruleset IDs containing the rules this retriever is evaluating against.",
          "name": "ruleset_ids",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Id",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "The match criteria that will determine if a rule in the provided rulesets should be applied.",
          "name": "match_criteria",
          "required": true,
          "type": {
            "kind": "user_defined_value"
          }
        },
        {
          "description": "The retriever whose results rules should be applied to.",
          "name": "retriever",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RetrieverContainer",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "This value determines the size of the individual result set.",
          "name": "rank_window_size",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_types/Retriever.ts#L101-L110"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SearchApplication",
        "namespace": "search_application._types"
      },
      "properties": [
        {
          "description": "Search Application name.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indices that are part of the Search Application.",
          "name": "indices",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Last time the Search Application was updated.",
          "name": "updated_at_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Analytics collection associated to the Search Application.",
          "name": "analytics_collection_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Search template to use on search operations.",
          "name": "template",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SearchApplicationTemplate",
              "namespace": "search_application._types"
            }
          }
        }
      ],
      "specLocation": "search_application/_types/SearchApplication.ts#L24-L45"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SearchApplicationTemplate",
        "namespace": "search_application._types"
      },
      "properties": [
        {
          "description": "The associated mustache template.",
          "name": "script",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Script",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "search_application/_types/SearchApplication.ts#L47-L52"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AnalyticsCollection",
        "namespace": "search_application._types"
      },
      "properties": [
        {
          "description": "Data stream for the collection.",
          "name": "event_data_stream",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "EventDataStream",
              "namespace": "search_application._types"
            }
          }
        }
      ],
      "specLocation": "search_application/_types/BehavioralAnalytics.ts#L22-L27"
    },
    {
      "kind": "interface",
      "name": {
        "name": "EventDataStream",
        "namespace": "search_application._types"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "search_application/_types/BehavioralAnalytics.ts#L29-L31"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SearchApplicationListItem",
        "namespace": "search_application.list"
      },
      "properties": [
        {
          "description": "Search Application name",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Indices that are part of the Search Application",
          "name": "indices",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IndexName",
                "namespace": "_types"
              }
            }
          }
        },
        {
          "description": "Last time the Search Application was updated",
          "name": "updated_at_millis",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Analytics collection associated to the Search Application",
          "name": "analytics_collection_name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "search_application/list/SearchApplicationsListResponse.ts#L31-L48"
    },
    {
      "inherits": {
        "type": {
          "name": "AcknowledgedResponseBase",
          "namespace": "_types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "AnalyticsAcknowledgeResponseBase",
        "namespace": "search_application.put_behavioral_analytics"
      },
      "properties": [
        {
          "description": "The name of the analytics collection created or updated",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "search_application/put_behavioral_analytics/BehavioralAnalyticsPutResponse.ts#L27-L32"
    },
    {
      "kind": "interface",
      "name": {
        "name": "AuthenticateApiKey",
        "namespace": "security.authenticate"
      },
      "properties": [
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "name",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "security/authenticate/SecurityAuthenticateResponse.ts#L44-L47"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RealmInfo",
        "namespace": "security._types"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "security/_types/RealmInfo.ts#L22-L25"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Token",
        "namespace": "security.authenticate"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.14.0"
            }
          },
          "name": "type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "security/authenticate/types.ts#L22-L29"
    },
    {
      "kind": "interface",
      "name": {
        "name": "RoleDescriptor",
        "namespace": "security._types"
      },
      "properties": [
        {
          "description": "A list of cluster privileges. These privileges define the cluster level actions that API keys are able to execute.",
          "name": "cluster",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ClusterPrivilege",
                "namespace": "security._types"
              }
            }
          }
        },
        {
          "aliases": [
            "index"
          ],
          "description": "A list of indices permissions entries.",
          "name": "indices",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IndicesPrivileges",
                "namespace": "security._types"
              }
            }
          }
        },
        {
          "description": "A list of application privilege entries",
          "name": "applications",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ApplicationPrivileges",
                "namespace": "security._types"
              }
            }
          }
        },
        {
          "description": "Optional meta-data. Within the metadata object, keys that begin with `_` are reserved for system usage.",
          "name": "metadata",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A list of users that the API keys can impersonate. *Note*: in Serverless, the run-as feature is disabled. For API compatibility, you can still specify an empty `run_as` field, but a non-empty list will be rejected.",
          "docId": "run-as-privilege",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/run-as-privilege.html",
          "name": "run_as",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "Optional description of the role descriptor",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Restriction for when the role descriptor is allowed to be effective.",
          "name": "restriction",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Restriction",
              "namespace": "security._types"
            }
          }
        },
        {
          "name": "transient_metadata",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "user_defined_value"
            }
          }
        }
      ],
      "specLocation": "security/_types/RoleDescriptor.ts#L33-L80"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndicesPrivileges",
        "namespace": "security._types"
      },
      "properties": [
        {
          "description": "The document fields that the owners of the role have read access to.",
          "docId": "field-and-document-access-control",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/field-and-document-access-control.html",
          "name": "field_security",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldSecurity",
              "namespace": "security._types"
            }
          }
        },
        {
          "description": "A list of indices (or index name patterns) to which the permissions in this entry apply.",
          "name": "names",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "IndexName",
                  "namespace": "_types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "IndexName",
                    "namespace": "_types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "The index level privileges that owners of the role have on the specified indices.",
          "name": "privileges",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IndexPrivilege",
                "namespace": "security._types"
              }
            }
          }
        },
        {
          "description": "A search query that defines the documents the owners of the role have access to. A document within the specified indices must match this query for it to be accessible by the owners of the role.",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndicesPrivilegesQuery",
              "namespace": "security._types"
            }
          }
        }
      ],
      "specLocation": "security/_types/Privileges.ts#L217-L243"
    },
    {
      "kind": "interface",
      "name": {
        "name": "FieldSecurity",
        "namespace": "security._types"
      },
      "properties": [
        {
          "name": "except",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "grant",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Fields",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "security/_types/FieldSecurity.ts#L22-L25"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ApplicationPrivileges",
        "namespace": "security._types"
      },
      "properties": [
        {
          "description": "The name of the application to which this entry applies.",
          "name": "application",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A list of strings, where each element is the name of an application privilege or action.",
          "name": "privileges",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "A list resources to which the privileges are applied.",
          "name": "resources",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "security/_types/Privileges.ts#L27-L40"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Restriction",
        "namespace": "security._types"
      },
      "properties": [
        {
          "name": "workflows",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RestrictionWorkflow",
                "namespace": "security._types"
              }
            }
          }
        }
      ],
      "specLocation": "security/_types/RoleDescriptor.ts#L130-L132"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ApiKey",
        "namespace": "security._types"
      },
      "properties": [
        {
          "description": "Id for the API key",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Name of the API key.",
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.10.0"
            }
          },
          "description": "The type of the API key (e.g. `rest` or `cross_cluster`).",
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ApiKeyType",
              "namespace": "security._types"
            }
          }
        },
        {
          "description": "Creation time for the API key in milliseconds.",
          "name": "creation",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Expiration time for the API key in milliseconds.",
          "name": "expiration",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Invalidation status for the API key.\nIf the key has been invalidated, it has a value of `true`. Otherwise, it is `false`.",
          "name": "invalidated",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.12.0"
            }
          },
          "description": "If the key has been invalidated, invalidation time in milliseconds.",
          "name": "invalidation",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Principal for which this API key was created",
          "name": "username",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Username",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Realm name of the principal for which this API key was created.",
          "name": "realm",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.14.0"
            }
          },
          "description": "Realm type of the principal for which this API key was created",
          "name": "realm_type",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.13.0"
            }
          },
          "description": "Metadata of the API key",
          "name": "metadata",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The role descriptors assigned to this API key when it was created or last updated.\nAn empty role descriptor means the API key inherits the owner userâ€™s permissions.",
          "name": "role_descriptors",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RoleDescriptor",
                "namespace": "security._types"
              }
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.5.0"
            }
          },
          "description": "The owner userâ€™s permissions associated with the API key.\nIt is a point-in-time snapshot captured at creation and subsequent updates.\nAn API keyâ€™s effective permissions are an intersection of its assigned privileges and the owner userâ€™s permissions.",
          "name": "limited_by",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "key": {
                "kind": "instance_of",
                "type": {
                  "name": "string",
                  "namespace": "_builtins"
                }
              },
              "kind": "dictionary_of",
              "singleKey": false,
              "value": {
                "kind": "instance_of",
                "type": {
                  "name": "RoleDescriptor",
                  "namespace": "security._types"
                }
              }
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.10.0"
            }
          },
          "description": "The access granted to cross-cluster API keys.\nThe access is composed of permissions for cross cluster search and cross cluster replication.\nAt least one of them must be specified.\nWhen specified, the new access assignment fully replaces the previously assigned access.",
          "name": "access",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Access",
              "namespace": "security._types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.14.0"
            }
          },
          "description": "The profile uid for the API key owner principal, if requested and if it exists",
          "name": "profile_uid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Sorting values when using the `sort` parameter with the `security.query_api_keys` API.",
          "name": "_sort",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SortResults",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "security/_types/ApiKey.ts#L27-L113"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Access",
        "namespace": "security._types"
      },
      "properties": [
        {
          "description": "A list of indices permission entries for cross-cluster replication.",
          "name": "replication",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ReplicationAccess",
                "namespace": "security._types"
              }
            }
          }
        },
        {
          "description": "A list of indices permission entries for cross-cluster search.",
          "name": "search",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "SearchAccess",
                "namespace": "security._types"
              }
            }
          }
        }
      ],
      "specLocation": "security/_types/Access.ts#L22-L31"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ReplicationAccess",
        "namespace": "security._types"
      },
      "properties": [
        {
          "description": "A list of indices (or index name patterns) to which the permissions in this entry apply.",
          "name": "names",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "IndexName",
                  "namespace": "_types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "IndexName",
                    "namespace": "_types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "This needs to be set to true if the patterns in the names field should cover system indices.",
          "name": "allow_restricted_indices",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "security/_types/Privileges.ts#L418-L428"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SearchAccess",
        "namespace": "security._types"
      },
      "properties": [
        {
          "description": "The document fields that the owners of the role have read access to.",
          "docId": "field-and-document-access-control",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/field-and-document-access-control.html",
          "name": "field_security",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "FieldSecurity",
              "namespace": "security._types"
            }
          }
        },
        {
          "description": "A list of indices (or index name patterns) to which the permissions in this entry apply.",
          "name": "names",
          "required": true,
          "type": {
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "IndexName",
                  "namespace": "_types"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "name": "IndexName",
                    "namespace": "_types"
                  }
                }
              }
            ],
            "kind": "union_of"
          }
        },
        {
          "description": "A search query that defines the documents the owners of the role have access to. A document within the specified indices must match this query for it to be accessible by the owners of the role.",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndicesPrivilegesQuery",
              "namespace": "security._types"
            }
          }
        }
      ],
      "specLocation": "security/_types/Privileges.ts#L430-L450"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ApplicationPrivilegesCheck",
        "namespace": "security.has_privileges"
      },
      "properties": [
        {
          "description": "The name of the application.",
          "name": "application",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "A list of the privileges that you want to check for the specified resources. May be either application privilege names, or the names of actions that are granted by those privileges",
          "name": "privileges",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "A list of resource names against which the privileges should be checked",
          "name": "resources",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "security/has_privileges/types.ts#L24-L31"
    },
    {
      "kind": "interface",
      "name": {
        "name": "IndexPrivilegesCheck",
        "namespace": "security.has_privileges"
      },
      "properties": [
        {
          "description": "A list of indices.",
          "name": "names",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A list of the privileges that you want to check for the specified indices.",
          "name": "privileges",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "IndexPrivilege",
                "namespace": "security._types"
              }
            }
          }
        },
        {
          "description": "This needs to be set to true (default is false) if using wildcards or regexps for patterns that cover restricted indices.\nImplicitly, restricted indices do not match index patterns because restricted indices usually have limited privileges and including them in pattern tests would render most such tests false.\nIf restricted indices are explicitly included in the names list, privileges will be checked against them regardless of the value of allow_restricted_indices.",
          "name": "allow_restricted_indices",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "security/has_privileges/types.ts#L33-L44"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ApiKeyAggregationContainer",
        "namespace": "security.query_api_keys"
      },
      "properties": [
        {
          "aliases": [
            "aggs"
          ],
          "containerProperty": true,
          "description": "Sub-aggregations for this aggregation.\nOnly applies to bucket aggregations.",
          "name": "aggregations",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ApiKeyAggregationContainer",
                "namespace": "security.query_api_keys"
              }
            }
          }
        },
        {
          "containerProperty": true,
          "name": "meta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A single-value metrics aggregation that calculates an approximate count of distinct values.",
          "docId": "search-aggregations-metrics-cardinality-aggregation",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-cardinality-aggregation.html",
          "name": "cardinality",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CardinalityAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket aggregation that creates composite buckets from different sources.\nUnlike the other multi-bucket aggregations, you can use the `composite` aggregation to paginate *all* buckets from a multi-level aggregation efficiently.",
          "name": "composite",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CompositeAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket value source based aggregation that enables the user to define a set of date ranges - each representing a bucket.",
          "docId": "search-aggregations-bucket-daterange-aggregation",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-daterange-aggregation.html",
          "name": "date_range",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateRangeAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single bucket aggregation that narrows the set of documents to those that match a query.",
          "docId": "search-aggregations-bucket-filter-aggregation",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-filter-aggregation.html",
          "name": "filter",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ApiKeyQueryContainer",
              "namespace": "security.query_api_keys"
            }
          }
        },
        {
          "description": "A multi-bucket aggregation where each bucket contains the documents that match a query.",
          "docId": "search-aggregations-bucket-filters-aggregation",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-filters-aggregation.html",
          "name": "filters",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ApiKeyFiltersAggregation",
              "namespace": "security.query_api_keys"
            }
          }
        },
        {
          "name": "missing",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MissingAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket value source based aggregation that enables the user to define a set of ranges - each representing a bucket.",
          "docId": "search-aggregations-bucket-range-aggregation",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-range-aggregation.html",
          "name": "range",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RangeAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A multi-bucket value source based aggregation where buckets are dynamically built - one per unique value.",
          "docId": "search-aggregations-bucket-terms-aggregation",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-bucket-terms-aggregation.html",
          "name": "terms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "A single-value metrics aggregation that counts the number of values that are extracted from the aggregated documents.",
          "docId": "search-aggregations-metrics-valuecount-aggregation",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/search-aggregations-metrics-valuecount-aggregation.html",
          "name": "value_count",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ValueCountAggregation",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "security/query_api_keys/types.ts#L63-L120",
      "variants": {
        "kind": "container",
        "nonExhaustive": true
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "ApiKeyQueryContainer",
        "namespace": "security.query_api_keys"
      },
      "properties": [
        {
          "description": "matches documents matching boolean combinations of other queries.",
          "docId": "query-dsl-bool-query",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-bool-query.html",
          "name": "bool",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "BoolQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that contain an indexed value for a field.",
          "docId": "query-dsl-exists-query",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-exists-query.html",
          "name": "exists",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ExistsQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents based on their IDs.\nThis query uses document IDs stored in the `_id` field.",
          "docId": "query-dsl-ids-query",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-ids-query.html",
          "name": "ids",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IdsQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that match a provided text, number, date or boolean value.\nThe provided text is analyzed before matching.",
          "docId": "query-dsl-match-query",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-query.html",
          "name": "match",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "MatchQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Matches all documents, giving them all a `_score` of 1.0.",
          "docId": "query-dsl-match-all-query",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-match-all-query.html",
          "name": "match_all",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "MatchAllQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that contain a specific prefix in a provided field.",
          "docId": "query-dsl-prefix-query",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-prefix-query.html",
          "name": "prefix",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "PrefixQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Returns documents that contain terms within a provided range.",
          "docId": "query-dsl-range-query",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-range-query.html",
          "name": "range",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "RangeQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Returns documents based on a provided query string, using a parser with a limited but fault-tolerant syntax.",
          "docId": "query-dsl-simple-query-string-query",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-simple-query-string-query.html",
          "name": "simple_query_string",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SimpleQueryStringQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that contain an exact term in a provided field.\nTo return a document, the query term must exactly match the queried field's value, including whitespace and capitalization.",
          "docId": "query-dsl-term-query",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-term-query.html",
          "name": "term",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "TermQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        },
        {
          "description": "Returns documents that contain one or more exact terms in a provided field.\nTo return a document, one or more terms must exactly match a field value, including whitespace and capitalization.",
          "docId": "query-dsl-terms-query",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-terms-query.html",
          "name": "terms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsQuery",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "description": "Returns documents that contain terms matching a wildcard pattern.",
          "docId": "query-dsl-wildcard-query",
          "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/{branch}/query-dsl-wildcard-query.html",
          "name": "wildcard",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            },
            "kind": "dictionary_of",
            "singleKey": true,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "WildcardQuery",
                "namespace": "_types.query_dsl"
              }
            }
          }
        }
      ],
      "specLocation": "security/query_api_keys/types.ts#L141-L205",
      "variants": {
        "kind": "container",
        "nonExhaustive": true
      }
    },
    {
      "inherits": {
        "type": {
          "name": "BucketAggregationBase",
          "namespace": "_types.aggregations"
        }
      },
      "kind": "interface",
      "name": {
        "name": "ApiKeyFiltersAggregation",
        "namespace": "security.query_api_keys"
      },
      "properties": [
        {
          "description": "Collection of queries from which to build buckets.",
          "name": "filters",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "ApiKeyQueryContainer",
                  "namespace": "security.query_api_keys"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "Buckets",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "description": "Set to `true` to add a bucket to the response which will contain all documents that do not match any of the given filters.",
          "name": "other_bucket",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The key with which the other bucket is returned.",
          "name": "other_bucket_key",
          "required": false,
          "serverDefault": "_other_",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "By default, the named filters aggregation returns the buckets as an object.\nSet to `false` to return the buckets as an array of objects.",
          "name": "keyed",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "security/query_api_keys/types.ts#L207-L227"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Column",
        "namespace": "sql"
      },
      "properties": [
        {
          "name": "name",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Name",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "type",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "sql/types.ts#L23-L26"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SynonymsUpdateResult",
        "namespace": "synonyms._types"
      },
      "properties": [
        {
          "description": "Update operation result",
          "name": "result",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Result",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Updating synonyms in a synonym set reloads the associated analyzers.\nThis is the analyzers reloading result",
          "name": "reload_analyzers_details",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ReloadResult",
              "namespace": "indices.reload_search_analyzers"
            }
          }
        }
      ],
      "specLocation": "synonyms/_types/SynonymsUpdateResult.ts#L23-L34"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ReloadResult",
        "namespace": "indices.reload_search_analyzers"
      },
      "properties": [
        {
          "name": "reload_details",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "ReloadDetails",
                "namespace": "indices.reload_search_analyzers"
              }
            }
          }
        },
        {
          "name": "_shards",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ShardStatistics",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "indices/reload_search_analyzers/types.ts#L22-L25"
    },
    {
      "kind": "interface",
      "name": {
        "name": "ReloadDetails",
        "namespace": "indices.reload_search_analyzers"
      },
      "properties": [
        {
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "reloaded_analyzers",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "name": "reloaded_node_ids",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        }
      ],
      "specLocation": "indices/reload_search_analyzers/types.ts#L27-L31"
    },
    {
      "attachedBehaviors": [
        "OverloadOf"
      ],
      "behaviors": [
        {
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "name": "SynonymRule",
                "namespace": "synonyms._types"
              }
            }
          ],
          "type": {
            "name": "OverloadOf",
            "namespace": "_spec_utils"
          }
        }
      ],
      "kind": "interface",
      "name": {
        "name": "SynonymRuleRead",
        "namespace": "synonyms._types"
      },
      "properties": [
        {
          "description": "Synonym Rule identifier",
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Synonyms, in Solr format, that conform the synonym rule. See https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-synonym-graph-tokenfilter.html#_solr_synonyms_2",
          "name": "synonyms",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SynonymString",
              "namespace": "synonyms._types"
            }
          }
        }
      ],
      "specLocation": "synonyms/_types/SynonymRule.ts#L38-L47"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SynonymRule",
        "namespace": "synonyms._types"
      },
      "properties": [
        {
          "description": "Synonym Rule identifier",
          "name": "id",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Synonyms, in Solr format, that conform the synonym rule. See https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-synonym-graph-tokenfilter.html#_solr_synonyms_2",
          "name": "synonyms",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SynonymString",
              "namespace": "synonyms._types"
            }
          }
        }
      ],
      "specLocation": "synonyms/_types/SynonymRule.ts#L26-L35"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SynonymsSetItem",
        "namespace": "synonyms.get_synonyms_sets"
      },
      "properties": [
        {
          "description": "Synonyms set identifier",
          "name": "synonyms_set",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Number of synonym rules that the synonym set contains",
          "name": "count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "synonyms/get_synonyms_sets/SynonymsSetsGetResponse.ts#L30-L39"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TransformSummary",
        "namespace": "transform.get_transform"
      },
      "properties": [
        {
          "description": "The security privileges that the transform uses to run its queries. If Elastic Stack security features were disabled at the time of the most recent update to the transform, this property is omitted.",
          "name": "authorization",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TransformAuthorization",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "The time the transform was created.",
          "name": "create_time",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Free text description of the transform.",
          "name": "description",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "The destination for the transform.",
          "name": "dest",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Destination",
              "namespace": "_global.reindex"
            }
          }
        },
        {
          "name": "frequency",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "latest",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Latest",
              "namespace": "transform._types"
            }
          }
        },
        {
          "description": "The pivot method transforms the data by aggregating and grouping it.",
          "name": "pivot",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Pivot",
              "namespace": "transform._types"
            }
          }
        },
        {
          "name": "retention_policy",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RetentionPolicyContainer",
              "namespace": "transform._types"
            }
          }
        },
        {
          "description": "Defines optional transform settings.",
          "name": "settings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Settings",
              "namespace": "transform._types"
            }
          }
        },
        {
          "description": "The source of the data for the transform.",
          "name": "source",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Source",
              "namespace": "transform._types"
            }
          }
        },
        {
          "description": "Defines the properties transforms require to run continuously.",
          "name": "sync",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "SyncContainer",
              "namespace": "transform._types"
            }
          }
        },
        {
          "description": "The version of Elasticsearch that existed on the node when the transform was created.",
          "name": "version",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "VersionString",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "_meta",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Metadata",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/get_transform/types.ts#L33-L61"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TransformAuthorization",
        "namespace": "ml._types"
      },
      "properties": [
        {
          "description": "If an API key was used for the most recent update to the transform, its name and identifier are listed in the response.",
          "name": "api_key",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "ApiKeyAuthorization",
              "namespace": "ml._types"
            }
          }
        },
        {
          "description": "If a user ID was used for the most recent update to the transform, its roles at the time of the update are listed in the response.",
          "name": "roles",
          "required": false,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            }
          }
        },
        {
          "description": "If a service account was used for the most recent update to the transform, the account name is listed in the response.",
          "name": "service_account",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "ml/_types/Authorization.ts#L59-L71"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Latest",
        "namespace": "transform._types"
      },
      "properties": [
        {
          "description": "Specifies the date field that is used to identify the latest documents.",
          "name": "sort",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies an array of one or more fields that are used to group the data.",
          "name": "unique_key",
          "required": true,
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "Field",
                "namespace": "_types"
              }
            }
          }
        }
      ],
      "specLocation": "transform/_types/Transform.ts#L47-L52"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Pivot",
        "namespace": "transform._types"
      },
      "properties": [
        {
          "aliases": [
            "aggs"
          ],
          "description": "Defines how to aggregate the grouped data. The following aggregations are currently supported: average, bucket\nscript, bucket selector, cardinality, filter, geo bounds, geo centroid, geo line, max, median absolute deviation,\nmin, missing, percentiles, rare terms, scripted metric, stats, sum, terms, top metrics, value count, weighted\naverage.",
          "name": "aggregations",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "AggregationContainer",
                "namespace": "_types.aggregations"
              }
            }
          }
        },
        {
          "description": "Defines how to group the data. More than one grouping can be defined per pivot. The following groupings are\ncurrently supported: date histogram, geotile grid, histogram, terms.",
          "name": "group_by",
          "required": false,
          "type": {
            "key": {
              "kind": "instance_of",
              "type": {
                "name": "string",
                "namespace": "_builtins"
              }
            },
            "kind": "dictionary_of",
            "singleKey": false,
            "value": {
              "kind": "instance_of",
              "type": {
                "name": "PivotGroupByContainer",
                "namespace": "transform._types"
              }
            }
          }
        }
      ],
      "specLocation": "transform/_types/Transform.ts#L54-L68"
    },
    {
      "kind": "interface",
      "name": {
        "name": "PivotGroupByContainer",
        "namespace": "transform._types"
      },
      "properties": [
        {
          "name": "date_histogram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateHistogramAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "geotile_grid",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "GeoTileGridAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "histogram",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HistogramAggregation",
              "namespace": "_types.aggregations"
            }
          }
        },
        {
          "name": "terms",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TermsAggregation",
              "namespace": "_types.aggregations"
            }
          }
        }
      ],
      "specLocation": "transform/_types/Transform.ts#L70-L78",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "RetentionPolicyContainer",
        "namespace": "transform._types"
      },
      "properties": [
        {
          "description": "Specifies that the transform uses a time field to set the retention policy.",
          "name": "time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RetentionPolicy",
              "namespace": "transform._types"
            }
          }
        }
      ],
      "specLocation": "transform/_types/Transform.ts#L80-L86",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "RetentionPolicy",
        "namespace": "transform._types"
      },
      "properties": [
        {
          "description": "The date field that is used to calculate the age of the document.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Specifies the maximum age of a document in the destination index. Documents that are older than the configured\nvalue are removed from the destination index.",
          "name": "max_age",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/_types/Transform.ts#L88-L96"
    },
    {
      "description": "The source of the data for the transform.",
      "kind": "interface",
      "name": {
        "name": "Settings",
        "namespace": "transform._types"
      },
      "properties": [
        {
          "description": "Specifies whether the transform checkpoint ranges should be optimized for performance. Such optimization can align\ncheckpoint ranges with the date histogram interval when date histogram is specified as a group source in the\ntransform config. As a result, less document updates in the destination index will be performed thus improving\noverall performance.",
          "name": "align_checkpoints",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Defines if dates in the ouput should be written as ISO formatted string or as millis since epoch. epoch_millis was\nthe default for transforms created before version 7.11. For compatible output set this value to `true`.",
          "name": "dates_as_epoch_millis",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies whether the transform should deduce the destination index mappings from the transform configuration.",
          "name": "deduce_mappings",
          "required": false,
          "serverDefault": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        },
        {
          "description": "Specifies a limit on the number of input documents per second. This setting throttles the transform by adding a\nwait time between search requests. The default value is null, which disables throttling.",
          "name": "docs_per_second",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "float",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "Defines the initial page size to use for the composite aggregation for each checkpoint. If circuit breaker\nexceptions occur, the page size is dynamically adjusted to a lower value. The minimum value is `10` and the\nmaximum is `65,536`.",
          "name": "max_page_search_size",
          "required": false,
          "serverDefault": 500,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "integer",
              "namespace": "_types"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "8.5.0"
            }
          },
          "description": "If `true`, the transform runs in unattended mode. In unattended mode, the transform retries indefinitely in case\nof an error which means the transform never fails. Setting the number of retries other than infinite fails in\nvalidation.",
          "name": "unattended",
          "required": false,
          "serverDefault": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "boolean",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "transform/_types/Transform.ts#L98-L144"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Source",
        "namespace": "transform._types"
      },
      "properties": [
        {
          "description": "The source indices for the transform. It can be a single index, an index pattern (for example, `\"my-index-*\"\"`), an\narray of indices (for example, `[\"my-index-000001\", \"my-index-000002\"]`), or an array of index patterns (for\nexample, `[\"my-index-*\", \"my-other-index-*\"]`. For remote indices use the syntax `\"remote_name:index_name\"`. If\nany indices are in remote clusters then the master node and at least one transform node must have the `remote_cluster_client` node role.",
          "name": "index",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Indices",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "A query clause that retrieves a subset of data from the source index.",
          "name": "query",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "QueryContainer",
              "namespace": "_types.query_dsl"
            }
          }
        },
        {
          "availability": {
            "serverless": {},
            "stack": {
              "since": "7.12.0"
            }
          },
          "description": "Definitions of search-time runtime fields that can be used by the transform. For search runtime fields all data\nnodes, including remote nodes, must be 7.12 or later.",
          "name": "runtime_mappings",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "RuntimeFields",
              "namespace": "_types.mapping"
            }
          }
        }
      ],
      "specLocation": "transform/_types/Transform.ts#L146-L165"
    },
    {
      "kind": "interface",
      "name": {
        "name": "SyncContainer",
        "namespace": "transform._types"
      },
      "properties": [
        {
          "description": "Specifies that the transform uses a time field to synchronize the source and destination indices.",
          "name": "time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TimeSync",
              "namespace": "transform._types"
            }
          }
        }
      ],
      "specLocation": "transform/_types/Transform.ts#L169-L175",
      "variants": {
        "kind": "container"
      }
    },
    {
      "kind": "interface",
      "name": {
        "name": "TimeSync",
        "namespace": "transform._types"
      },
      "properties": [
        {
          "description": "The time delay between the current time and the latest input data time.",
          "name": "delay",
          "required": false,
          "serverDefault": "60s",
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Duration",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The date field that is used to identify new documents in the source. In general, itâ€™s a good idea to use a field\nthat contains the ingest timestamp. If you use a different field, you might need to set the delay such that it\naccounts for data transmission delays.",
          "name": "field",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Field",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/_types/Transform.ts#L177-L189"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TransformStats",
        "namespace": "transform.get_transform_stats"
      },
      "properties": [
        {
          "name": "checkpointing",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Checkpointing",
              "namespace": "transform.get_transform_stats"
            }
          }
        },
        {
          "name": "health",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TransformStatsHealth",
              "namespace": "transform.get_transform_stats"
            }
          }
        },
        {
          "name": "id",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "Id",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "reason",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "state",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        },
        {
          "name": "stats",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TransformIndexerStats",
              "namespace": "transform.get_transform_stats"
            }
          }
        }
      ],
      "specLocation": "transform/get_transform_stats/types.ts#L31-L42"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Checkpointing",
        "namespace": "transform.get_transform_stats"
      },
      "properties": [
        {
          "name": "changes_last_detected_at",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "changes_last_detected_at_date_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "last",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CheckpointStats",
              "namespace": "transform.get_transform_stats"
            }
          }
        },
        {
          "name": "next",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "CheckpointStats",
              "namespace": "transform.get_transform_stats"
            }
          }
        },
        {
          "name": "operations_behind",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "last_search_time",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/get_transform_stats/types.ts#L85-L92"
    },
    {
      "kind": "interface",
      "name": {
        "name": "CheckpointStats",
        "namespace": "transform.get_transform_stats"
      },
      "properties": [
        {
          "name": "checkpoint",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "checkpoint_progress",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "TransformProgress",
              "namespace": "transform.get_transform_stats"
            }
          }
        },
        {
          "name": "timestamp",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "timestamp_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "time_upper_bound",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "DateTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "time_upper_bound_millis",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/get_transform_stats/types.ts#L76-L83"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TransformProgress",
        "namespace": "transform.get_transform_stats"
      },
      "properties": [
        {
          "name": "docs_indexed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "docs_processed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "docs_remaining",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "percent_complete",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "total_docs",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/get_transform_stats/types.ts#L48-L54"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TransformStatsHealth",
        "namespace": "transform.get_transform_stats"
      },
      "properties": [
        {
          "name": "status",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "HealthStatus",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/get_transform_stats/types.ts#L44-L46"
    },
    {
      "kind": "interface",
      "name": {
        "name": "TransformIndexerStats",
        "namespace": "transform.get_transform_stats"
      },
      "properties": [
        {
          "name": "delete_time_in_ms",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "EpochTime",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "documents_indexed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "documents_deleted",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "documents_processed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "exponential_avg_checkpoint_duration_ms",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitFloatMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "exponential_avg_documents_indexed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "exponential_avg_documents_processed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "double",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_failures",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_time_in_ms",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "index_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "pages_processed",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "processing_time_in_ms",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "processing_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "search_failures",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "search_time_in_ms",
          "required": true,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "UnitMillis",
                  "namespace": "_types"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "DurationValue",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "search_total",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        },
        {
          "name": "trigger_count",
          "required": true,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "long",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "transform/get_transform_stats/types.ts#L56-L74"
    },
    {
      "kind": "interface",
      "name": {
        "name": "Destination",
        "namespace": "transform._types"
      },
      "properties": [
        {
          "description": "The destination index for the transform. The mappings of the destination index are deduced based on the source\nfields when possible. If alternate mappings are required, use the create index API prior to starting the\ntransform.",
          "name": "index",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "IndexName",
              "namespace": "_types"
            }
          }
        },
        {
          "description": "The unique identifier for an ingest pipeline.",
          "name": "pipeline",
          "required": false,
          "type": {
            "kind": "instance_of",
            "type": {
              "name": "string",
              "namespace": "_builtins"
            }
          }
        }
      ],
      "specLocation": "transform/_types/Transform.ts#L34-L45"
    },
    {
      "generics": [
        {
          "name": "TDocument",
          "namespace": "_global.update.UpdateWriteResponseBase"
        }
      ],
      "inherits": {
        "type": {
          "name": "WriteResponseBase",
          "namespace": "_types"
        }
      },
      "kind": "interface",
      "name": {
        "name": "UpdateWriteResponseBase",
        "namespace": "_global.update"
      },
      "properties": [
        {
          "name": "get",
          "required": false,
          "type": {
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "name": "TDocument",
                  "namespace": "_global.update.UpdateWriteResponseBase"
                }
              }
            ],
            "kind": "instance_of",
            "type": {
              "name": "InlineGet",
              "namespace": "_types"
            }
          }
        }
      ],
      "specLocation": "_global/update/UpdateResponse.ts#L23-L25"
    }
  ]
}