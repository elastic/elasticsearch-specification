{
  "endpointErrors": {
    "async_search.delete": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "async_search.get": {
      "request": [
        "Request: should not have a body"
      ],
      "response": [
        "type_alias definition _types.aggregations:Aggregate / instance_of - Non-leaf type cannot be used here: '_types.aggregations:StatsAggregate'",
        "type_alias definition _types.aggregations:Aggregate / instance_of - Non-leaf type cannot be used here: '_types.aggregations:ExtendedStatsAggregate'",
        "type_alias definition _types.aggregations:Buckets / union_of / dictionary_of / instance_of - No type definition for '_types.aggregations:TBucket'",
        "type_alias definition _types.aggregations:Buckets / union_of / array_of / instance_of - No type definition for '_types.aggregations:TBucket'",
        "type_alias definition _spec_utils:Void / instance_of - No type definition for 'internal:void'",
        "type_alias definition _types.aggregations:Aggregate / instance_of - Non-leaf type cannot be used here: '_types.aggregations:RangeAggregate'",
        "type_alias definition _global.search._types:Suggest - A tagged union should not have generic parameters",
        "type_alias definition _global.search._types:Suggest / instance_of / Generics / instance_of - No type definition for '_global.search._types:TDocument'",
        "type_alias definition _global.search._types:Suggest - Expected 1 generic parameters but got 0"
      ]
    },
    "async_search.status": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "async_search.submit": {
      "request": [
        "Request: query parameter 'ccs_minimize_roundtrips' does not exist in the json spec",
        "Request: query parameter 'min_compatible_shard_node' does not exist in the json spec",
        "Request: query parameter 'pre_filter_shard_size' does not exist in the json spec",
        "Request: query parameter 'scroll' does not exist in the json spec",
        "Request: query parameter 'rest_total_hits_as_int' does not exist in the json spec"
      ],
      "response": []
    },
    "autoscaling.delete_autoscaling_policy": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "autoscaling.get_autoscaling_capacity": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "autoscaling.get_autoscaling_policy": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "cat.aliases": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.aliases:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.allocation": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.allocation:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.count": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.count:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.fielddata": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'v'",
        "Request: missing json spec query parameter 'fields'",
        "Request: should not have a body",
        "request definition cat.fielddata:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.health": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'time'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.health:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.help": {
      "request": [
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: should not have a body",
        "request definition cat.help:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.indices": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'time'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.indices:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.master": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.master:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.ml_data_frame_analytics": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'time'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.ml_data_frame_analytics:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.ml_datafeeds": {
      "request": [
        "Request: should not have a body",
        "request definition cat.ml_datafeeds:Request / query - Property 'format' is already defined in an ancestor class",
        "request definition cat.ml_datafeeds:Request / query - Property 'h' is already defined in an ancestor class",
        "request definition cat.ml_datafeeds:Request / query - Property 'help' is already defined in an ancestor class",
        "request definition cat.ml_datafeeds:Request / query - Property 's' is already defined in an ancestor class",
        "request definition cat.ml_datafeeds:Request / query - Property 'v' is already defined in an ancestor class",
        "request definition cat.ml_datafeeds:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.ml_jobs": {
      "request": [
        "Request: should not have a body",
        "request definition cat.ml_jobs:Request / query - Property 'format' is already defined in an ancestor class",
        "request definition cat.ml_jobs:Request / query - Property 'h' is already defined in an ancestor class",
        "request definition cat.ml_jobs:Request / query - Property 'help' is already defined in an ancestor class",
        "request definition cat.ml_jobs:Request / query - Property 's' is already defined in an ancestor class",
        "request definition cat.ml_jobs:Request / query - Property 'v' is already defined in an ancestor class",
        "request definition cat.ml_jobs:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.ml_trained_models": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'time'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.ml_trained_models:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.nodeattrs": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.nodeattrs:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.nodes": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'time'",
        "Request: missing json spec query parameter 'v'",
        "Request: missing json spec query parameter 'include_unloaded_segments'",
        "Request: should not have a body",
        "request definition cat.nodes:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.pending_tasks": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'time'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.pending_tasks:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.plugins": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 'include_bootstrap'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.plugins:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.recovery": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 'index'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'time'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.recovery:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.repositories": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.repositories:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.segments": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.segments:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.shards": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'time'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.shards:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.snapshots": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'time'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.snapshots:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.tasks": {
      "request": [
        "Request: query parameter 'node_id' does not exist in the json spec",
        "Request: query parameter 'parent_task' does not exist in the json spec",
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'nodes'",
        "Request: missing json spec query parameter 'parent_task_id'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'time'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.tasks:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.templates": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.templates:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.thread_pool": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'local'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.thread_pool:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "cat.transforms": {
      "request": [
        "Request: missing json spec query parameter 'format'",
        "Request: missing json spec query parameter 'h'",
        "Request: missing json spec query parameter 'help'",
        "Request: missing json spec query parameter 's'",
        "Request: missing json spec query parameter 'time'",
        "Request: missing json spec query parameter 'v'",
        "Request: should not have a body",
        "request definition cat.transforms:Request / body - A request with inherited properties must have a PropertyBody"
      ],
      "response": []
    },
    "ccr.delete_auto_follow_pattern": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ccr.follow_info": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ccr.follow_stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ccr.get_auto_follow_pattern": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ccr.pause_auto_follow_pattern": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ccr.pause_follow": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ccr.resume_auto_follow_pattern": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ccr.stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ccr.unfollow": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "cluster.delete_component_template": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "cluster.delete_voting_config_exclusions": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "cluster.exists_component_template": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "cluster.get_component_template": {
      "request": [
        "Request: query parameter 'flat_settings' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "cluster.get_settings": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "cluster.health": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "cluster.pending_tasks": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "cluster.post_voting_config_exclusions": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "cluster.put_component_template": {
      "request": [
        "Request: missing json spec query parameter 'timeout'",
        "request definition cluster.put_component_template:Request / body / Property 'template' / instance_of - Non-leaf type cannot be used here: 'indices._types:IndexState'"
      ],
      "response": []
    },
    "cluster.remote_info": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "cluster.state": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "cluster.stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "dangling_indices.delete_dangling_index": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "dangling_indices.import_dangling_index": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "dangling_indices.list_dangling_indices": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "data_frame_transform_deprecated.delete_transform": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "data_frame_transform_deprecated.get_transform": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "data_frame_transform_deprecated.get_transform_stats": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "data_frame_transform_deprecated.preview_transform": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "data_frame_transform_deprecated.put_transform": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "data_frame_transform_deprecated.start_transform": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "data_frame_transform_deprecated.stop_transform": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "data_frame_transform_deprecated.update_transform": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "delete": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "delete_by_query_rethrottle": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "delete_script": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "enrich.delete_policy": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "enrich.execute_policy": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "enrich.get_policy": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "enrich.stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "eql.delete": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "eql.get": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "eql.get_status": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "eql.search": {
      "request": [
        "Request: query parameter 'allow_no_indices' does not exist in the json spec",
        "Request: query parameter 'expand_wildcards' does not exist in the json spec",
        "Request: query parameter 'ignore_unavailable' does not exist in the json spec"
      ],
      "response": []
    },
    "exists": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "exists_source": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "features.get_features": {
      "request": [
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "features.reset_features": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "fleet.global_checkpoints": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "fleet.msearch": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "fleet.search": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "get": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "get_script": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "get_script_context": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "get_script_languages": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "get_source": {
      "request": [
        "Request: query parameter 'stored_fields' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "ilm.delete_lifecycle": {
      "request": [
        "Request: query parameter 'master_timeout' does not exist in the json spec",
        "Request: query parameter 'timeout' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "ilm.explain_lifecycle": {
      "request": [
        "Request: query parameter 'master_timeout' does not exist in the json spec",
        "Request: query parameter 'timeout' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "ilm.get_lifecycle": {
      "request": [
        "Request: query parameter 'master_timeout' does not exist in the json spec",
        "Request: query parameter 'timeout' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "ilm.get_status": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ilm.put_lifecycle": {
      "request": [
        "Request: query parameter 'master_timeout' does not exist in the json spec",
        "Request: query parameter 'timeout' does not exist in the json spec"
      ],
      "response": []
    },
    "ilm.remove_policy": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ilm.retry": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ilm.start": {
      "request": [
        "Request: query parameter 'master_timeout' does not exist in the json spec",
        "Request: query parameter 'timeout' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "ilm.stop": {
      "request": [
        "Request: query parameter 'master_timeout' does not exist in the json spec",
        "Request: query parameter 'timeout' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.add_block": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.analyze": {
      "request": [
        "Request: missing json spec query parameter 'index'"
      ],
      "response": []
    },
    "indices.clear_cache": {
      "request": [
        "Request: missing json spec query parameter 'index'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.close": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.create_data_stream": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.data_streams_stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.delete": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.delete_alias": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.delete_data_stream": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.delete_index_template": {
      "request": [
        "Request: missing json spec query parameter 'timeout'",
        "Request: missing json spec query parameter 'master_timeout'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.delete_template": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.disk_usage": {
      "request": [
        "Request: query parameter 'master_timeout' does not exist in the json spec",
        "Request: query parameter 'timeout' does not exist in the json spec",
        "Request: query parameter 'wait_for_active_shards' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.exists": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.exists_alias": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.exists_index_template": {
      "request": [
        "Request: missing json spec query parameter 'flat_settings'",
        "Request: missing json spec query parameter 'local'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.exists_template": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.exists_type": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.field_usage_stats": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "indices.flush": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.flush_synced": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.forcemerge": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.freeze": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.get": {
      "request": [
        "Request: should not have a body"
      ],
      "response": [
        "response definition indices.get:Response / Inherits / Generics / instance_of - Non-leaf type cannot be used here: 'indices._types:IndexState'"
      ]
    },
    "indices.get_alias": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.get_data_stream": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.get_field_mapping": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.get_index_template": {
      "request": [
        "Request: query parameter 'include_type_name' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.get_mapping": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.get_settings": {
      "request": [
        "Request: should not have a body"
      ],
      "response": [
        "response definition indices.get_settings:Response / Inherits / Generics / instance_of - Non-leaf type cannot be used here: 'indices._types:IndexState'"
      ]
    },
    "indices.get_template": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.get_upgrade": {
      "request": [
        "Request: missing json spec query parameter 'ignore_unavailable'",
        "Request: missing json spec query parameter 'allow_no_indices'",
        "Request: missing json spec query parameter 'expand_wildcards'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.migrate_to_data_stream": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.modify_data_stream": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "indices.open": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.promote_data_stream": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.put_index_template": {
      "request": [
        "Request: missing json spec query parameter 'create'",
        "Request: missing json spec query parameter 'cause'",
        "Request: missing json spec query parameter 'master_timeout'"
      ],
      "response": []
    },
    "indices.put_template": {
      "request": [
        "Request: query parameter 'flat_settings' does not exist in the json spec",
        "Request: query parameter 'timeout' does not exist in the json spec"
      ],
      "response": []
    },
    "indices.recovery": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.refresh": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.reload_search_analyzers": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.resolve_index": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.segments": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.shard_stores": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.shrink": {
      "request": [
        "Request: missing json spec query parameter 'copy_settings'"
      ],
      "response": []
    },
    "indices.simulate_index_template": {
      "request": [
        "Request: missing json spec query parameter 'cause'"
      ],
      "response": []
    },
    "indices.simulate_template": {
      "request": [
        "Request: missing json spec query parameter 'cause'"
      ],
      "response": []
    },
    "indices.split": {
      "request": [
        "Request: missing json spec query parameter 'copy_settings'"
      ],
      "response": []
    },
    "indices.stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.unfreeze": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "indices.upgrade": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "info": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ingest.delete_pipeline": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ingest.geo_ip_stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ingest.get_pipeline": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ingest.processor_grok": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ingest.put_pipeline": {
      "request": [
        "Request: missing json spec query parameter 'if_version'"
      ],
      "response": []
    },
    "license.delete": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "license.get": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "license.get_basic_status": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "license.get_trial_status": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "license.post_start_basic": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "license.post_start_trial": {
      "request": [
        "Request: query parameter 'type_query_string' does not exist in the json spec",
        "Request: missing json spec query parameter 'type'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "logstash.delete_pipeline": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "logstash.get_pipeline": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "mget": {
      "request": [],
      "response": [
        "type_alias definition _global.mget:ResponseItem / union_of / instance_of / Generics / instance_of - No type definition for '_global.mget:TDocument'"
      ]
    },
    "migration.deprecations": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "migration.get_feature_upgrade_status": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "migration.post_feature_upgrade": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "ml.delete_calendar": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.delete_calendar_event": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.delete_calendar_job": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.delete_data_frame_analytics": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.delete_datafeed": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.delete_filter": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.delete_forecast": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.delete_job": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.delete_model_snapshot": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.delete_trained_model": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.delete_trained_model_alias": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.evaluate_data_frame": {
      "request": [],
      "response": [
        "interface definition ml.evaluate_data_frame:DataframeRegressionSummary / Property 'huber' / instance_of - Non-leaf type cannot be used here: 'ml.evaluate_data_frame:DataframeEvaluationValue'",
        "interface definition ml.evaluate_data_frame:DataframeRegressionSummary / Property 'mse' / instance_of - Non-leaf type cannot be used here: 'ml.evaluate_data_frame:DataframeEvaluationValue'",
        "interface definition ml.evaluate_data_frame:DataframeRegressionSummary / Property 'msle' / instance_of - Non-leaf type cannot be used here: 'ml.evaluate_data_frame:DataframeEvaluationValue'",
        "interface definition ml.evaluate_data_frame:DataframeRegressionSummary / Property 'r_squared' / instance_of - Non-leaf type cannot be used here: 'ml.evaluate_data_frame:DataframeEvaluationValue'"
      ]
    },
    "ml.find_file_structure": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "ml.flush_job": {
      "request": [
        "Request: missing json spec query parameter 'calc_interim'",
        "Request: missing json spec query parameter 'start'",
        "Request: missing json spec query parameter 'end'",
        "Request: missing json spec query parameter 'advance_time'"
      ],
      "response": []
    },
    "ml.forecast": {
      "request": [
        "Request: missing json spec query parameter 'duration'",
        "Request: missing json spec query parameter 'expires_in'",
        "Request: missing json spec query parameter 'max_model_memory'"
      ],
      "response": []
    },
    "ml.get_calendar_events": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.get_data_frame_analytics": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.get_data_frame_analytics_stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.get_datafeed_stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.get_datafeeds": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.get_filters": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.get_job_stats": {
      "request": [
        "Request: missing json spec query parameter 'allow_no_match'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.get_jobs": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.get_model_snapshot_upgrade_stats": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "ml.get_overall_buckets": {
      "request": [
        "Request: missing json spec query parameter 'allow_no_jobs'"
      ],
      "response": []
    },
    "ml.get_trained_models": {
      "request": [
        "Request: missing json spec query parameter 'include_model_definition'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.get_trained_models_stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.info": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.put_calendar_job": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.put_job": {
      "request": [
        "Request: missing json spec query parameter 'ignore_unavailable'",
        "Request: missing json spec query parameter 'allow_no_indices'",
        "Request: missing json spec query parameter 'ignore_throttled'",
        "Request: missing json spec query parameter 'expand_wildcards'"
      ],
      "response": []
    },
    "ml.put_trained_model": {
      "request": [
        "Request: missing json spec query parameter 'defer_definition_decompression'"
      ],
      "response": []
    },
    "ml.put_trained_model_alias": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.reset_job": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.revert_model_snapshot": {
      "request": [
        "Request: missing json spec query parameter 'delete_intervening_results'"
      ],
      "response": []
    },
    "ml.set_upgrade_mode": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "ml.start_datafeed": {
      "request": [
        "Request: missing json spec query parameter 'end'",
        "Request: missing json spec query parameter 'timeout'"
      ],
      "response": []
    },
    "ml.stop_datafeed": {
      "request": [
        "Request: missing json spec query parameter 'timeout'"
      ],
      "response": []
    },
    "ml.upgrade_job_snapshot": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "msearch": {
      "request": [
        "Request: query parameter 'allow_no_indices' does not exist in the json spec",
        "Request: query parameter 'expand_wildcards' does not exist in the json spec",
        "Request: query parameter 'ignore_throttled' does not exist in the json spec",
        "Request: query parameter 'ignore_unavailable' does not exist in the json spec"
      ],
      "response": [
        "type_alias definition _global.msearch:ResponseItem / union_of / instance_of / Generics / instance_of - No type definition for '_global.msearch:TDocument'"
      ]
    },
    "nodes.clear_repositories_metering_archive": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "nodes.get_repositories_metering_info": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "nodes.hot_threads": {
      "request": [
        "Request: query parameter 'master_timeout' does not exist in the json spec",
        "Request: missing json spec query parameter 'sort'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "nodes.info": {
      "request": [
        "Request: query parameter 'master_timeout' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "nodes.reload_secure_settings": {
      "request": [],
      "response": [
        "interface definition nodes._types:OperatingSystem / Property 'swap' / instance_of - Non-leaf type cannot be used here: 'nodes._types:MemoryStats'",
        "interface definition nodes._types:Process / Property 'mem' / instance_of - Non-leaf type cannot be used here: 'nodes._types:MemoryStats'"
      ]
    },
    "nodes.stats": {
      "request": [
        "Request: query parameter 'master_timeout' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "nodes.usage": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "open_point_in_time": {
      "request": [
        "Request: missing json spec query parameter 'preference'",
        "Request: missing json spec query parameter 'routing'",
        "Request: missing json spec query parameter 'ignore_unavailable'",
        "Request: missing json spec query parameter 'expand_wildcards'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "ping": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "put_script": {
      "request": [
        "Request: missing json spec query parameter 'context'"
      ],
      "response": []
    },
    "reindex": {
      "request": [
        "Request: query parameter 'require_alias' does not exist in the json spec",
        "Request: missing json spec query parameter 'max_docs'"
      ],
      "response": []
    },
    "reindex_rethrottle": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "rollup.delete_job": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "rollup.get_jobs": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "rollup.get_rollup_caps": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "rollup.get_rollup_index_caps": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "rollup.start_job": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "rollup.stop_job": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "search": {
      "request": [],
      "response": [
        "Non-leaf type cannot be used here: '_global.search:Response'"
      ]
    },
    "search_mvt": {
      "request": [
        "Request: missing json spec query parameter 'track_total_hits'"
      ],
      "response": [
        "type_alias definition _types:MapboxVectorTiles / instance_of - No type definition for 'internal:binary'"
      ]
    },
    "search_shards": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "searchable_snapshots.cache_stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "searchable_snapshots.clear_cache": {
      "request": [
        "Request: query parameter 'pretty' does not exist in the json spec",
        "Request: query parameter 'human' does not exist in the json spec",
        "Request: missing json spec query parameter 'index'",
        "Request: should not have a body",
        "request definition searchable_snapshots.clear_cache:Request / query - Property 'pretty' is already defined in an ancestor class",
        "request definition searchable_snapshots.clear_cache:Request / query - Property 'human' is already defined in an ancestor class"
      ],
      "response": []
    },
    "searchable_snapshots.repository_stats": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "searchable_snapshots.stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.authenticate": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.clear_api_key_cache": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.clear_cached_privileges": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.clear_cached_realms": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.clear_cached_roles": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.clear_cached_service_tokens": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.create_service_token": {
      "request": [
        "Request: missing json spec query parameter 'refresh'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.delete_privileges": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.delete_role": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.delete_role_mapping": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.delete_service_token": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.delete_user": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.disable_user": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.enable_user": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.get_api_key": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.get_builtin_privileges": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.get_privileges": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.get_role": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.get_role_mapping": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.get_service_accounts": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.get_service_credentials": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.get_user": {
      "request": [
        "Request: should not have a body"
      ],
      "response": [
        "response definition security.get_user:Response / Inherits / Generics / instance_of - Non-leaf type cannot be used here: 'security._types:User'"
      ]
    },
    "security.get_user_privileges": {
      "request": [
        "Request: query parameter 'application' does not exist in the json spec",
        "Request: query parameter 'priviledge' does not exist in the json spec",
        "Request: should not have a body"
      ],
      "response": []
    },
    "security.grant_api_key": {
      "request": [
        "Request: missing json spec query parameter 'refresh'"
      ],
      "response": []
    },
    "security.query_api_keys": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "security.saml_authenticate": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "security.saml_complete_logout": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "security.saml_invalidate": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "security.saml_logout": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "security.saml_prepare_authentication": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "security.saml_service_provider_metadata": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "shutdown.delete_node": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "shutdown.get_node": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "slm.delete_lifecycle": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "slm.execute_lifecycle": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "slm.execute_retention": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "slm.get_lifecycle": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "slm.get_stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "slm.get_status": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "slm.put_lifecycle": {
      "request": [
        "Request: query parameter 'master_timeout' does not exist in the json spec",
        "Request: query parameter 'timeout' does not exist in the json spec"
      ],
      "response": []
    },
    "slm.start": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "slm.stop": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "snapshot.cleanup_repository": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "snapshot.clone": {
      "request": [
        "Request: query parameter 'timeout' does not exist in the json spec"
      ],
      "response": []
    },
    "snapshot.delete": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "snapshot.delete_repository": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "snapshot.get": {
      "request": [
        "Request: query parameter 'human' does not exist in the json spec",
        "Request: should not have a body",
        "request definition snapshot.get:Request / query - Property 'human' is already defined in an ancestor class"
      ],
      "response": []
    },
    "snapshot.get_repository": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "snapshot.repository_analyze": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "snapshot.restore": {
      "request": [
        "request definition snapshot.restore:Request / body / Property 'index_settings' / instance_of - 'indices.put_settings:Request' is a request and must only be used in endpoints"
      ],
      "response": []
    },
    "snapshot.status": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "snapshot.verify_repository": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "sql.delete_async": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "sql.get_async": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "sql.get_async_status": {
      "request": [
        "Missing request & response"
      ],
      "response": []
    },
    "ssl.certificates": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "tasks.cancel": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "tasks.get": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "tasks.list": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "transform.delete_transform": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "transform.get_transform": {
      "request": [
        "Request: should not have a body"
      ],
      "response": [
        "interface definition transform._types:SyncContainer - Property time is a single-variant and must be required"
      ]
    },
    "transform.get_transform_stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "transform.preview_transform": {
      "request": [
        "interface definition transform._types:RetentionPolicyContainer - Property time is a single-variant and must be required"
      ],
      "response": [
        "response definition transform.preview_transform:Response / body / Property 'generated_dest_index' / instance_of - Non-leaf type cannot be used here: 'indices._types:IndexState'"
      ]
    },
    "transform.start_transform": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "transform.stop_transform": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "transform.upgrade_transforms": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "update_by_query": {
      "request": [
        "Request: missing json spec query parameter 'q'",
        "Request: missing json spec query parameter 'max_docs'"
      ],
      "response": []
    },
    "update_by_query_rethrottle": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "watcher.ack_watch": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "watcher.activate_watch": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "watcher.deactivate_watch": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "watcher.delete_watch": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "watcher.execute_watch": {
      "request": [
        "interface definition watcher._types:SearchInputRequestDefinition / Property 'template' / instance_of - '_global.search_template:Request' is a request and must only be used in endpoints",
        "interface definition watcher._types:HttpInput / Property 'request' / instance_of - Non-leaf type cannot be used here: 'watcher._types:HttpInputRequestDefinition'",
        "interface definition watcher._types:TriggerContainer - Property schedule is a single-variant and must be required"
      ],
      "response": [
        "interface definition watcher._types:TriggerEventContainer - Property schedule is a single-variant and must be required"
      ]
    },
    "watcher.get_watch": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "watcher.start": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "watcher.stats": {
      "request": [
        "Request: should not have a body"
      ],
      "response": [
        "interface definition watcher.stats:WatcherNodeStats / Property 'queued_watches' / array_of / instance_of - Non-leaf type cannot be used here: 'watcher.stats:WatchRecordQueuedStats'"
      ]
    },
    "watcher.stop": {
      "request": [
        "Request: should not have a body"
      ],
      "response": []
    },
    "xpack.info": {
      "request": [
        "Request: missing json spec query parameter 'accept_enterprise'",
        "Request: should not have a body"
      ],
      "response": []
    },
    "xpack.usage": {
      "request": [
        "Request: should not have a body"
      ],
      "response": [
        "response definition xpack.usage:Response / body / Property 'aggregate_metric' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Base'",
        "interface definition xpack.usage:WatcherWatch / Property 'input' / dictionary_of / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Counter'",
        "interface definition xpack.usage:WatcherWatch / Property 'condition' / dictionary_of / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Counter'",
        "interface definition xpack.usage:WatcherWatch / Property 'action' / dictionary_of / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Counter'",
        "interface definition xpack.usage:WatcherWatchTriggerSchedule / Property 'cron' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Counter'",
        "interface definition xpack.usage:WatcherWatchTriggerSchedule / Property '_all' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Counter'",
        "interface definition xpack.usage:WatcherWatchTrigger / Property '_all' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Counter'",
        "interface definition xpack.usage:Watcher / Property 'count' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Counter'",
        "response definition xpack.usage:Response / body / Property 'data_frame' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Base'",
        "response definition xpack.usage:Response / body / Property 'data_science' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Base'",
        "response definition xpack.usage:Response / body / Property 'enrich' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Base'",
        "response definition xpack.usage:Response / body / Property 'graph' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Base'",
        "response definition xpack.usage:Response / body / Property 'logstash' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Base'",
        "response definition xpack.usage:Response / body / Property 'rollup' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Base'",
        "response definition xpack.usage:Response / body / Property 'spatial' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Base'",
        "interface definition xpack.usage:Security / Property 'api_key_service' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:FeatureToggle'",
        "interface definition xpack.usage:Security / Property 'anonymous' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:FeatureToggle'",
        "interface definition xpack.usage:Security / Property 'fips_140' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:FeatureToggle'",
        "interface definition xpack.usage:Ssl / Property 'http' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:FeatureToggle'",
        "interface definition xpack.usage:Ssl / Property 'transport' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:FeatureToggle'",
        "interface definition xpack.usage:Security / Property 'system_key' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:FeatureToggle'",
        "interface definition xpack.usage:Security / Property 'token_service' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:FeatureToggle'",
        "interface definition xpack.usage:Security / Property 'operator_privileges' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Base'",
        "response definition xpack.usage:Response / body / Property 'transform' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Base'",
        "response definition xpack.usage:Response / body / Property 'voting_only' / instance_of - Non-leaf type cannot be used here: 'xpack.usage:Base'"
      ]
    }
  },
  "generalErrors": []
}