# summary:
method_request: GET _text_structure/test_grok_pattern
description: Run `GET _text_structure/test_grok_pattern` to test a Grok pattern.
# type: request
value: "{

  \  \"grok_pattern\": \"Hello %{WORD:first_name} %{WORD:last_name}\",

  \  \"text\": [

  \    \"Hello John Doe\",

  \    \"this does not match\"

  \  ]

  }"
alternatives:
  - language: Python
    code: |-
      resp = client.text_structure.test_grok_pattern(
          grok_pattern="Hello %{WORD:first_name} %{WORD:last_name}",
          text=[
              "Hello John Doe",
              "this does not match"
          ],
      )
  - language: JavaScript
    code: |-
      const response = await client.textStructure.testGrokPattern({
        grok_pattern: "Hello %{WORD:first_name} %{WORD:last_name}",
        text: ["Hello John Doe", "this does not match"],
      });
  - language: Ruby
    code: |-
      response = client.text_structure.test_grok_pattern(
        body: {
          "grok_pattern": "Hello %{WORD:first_name} %{WORD:last_name}",
          "text": [
            "Hello John Doe",
            "this does not match"
          ]
        }
      )
  - language: PHP
    code: |-
      $resp = $client->textStructure()->testGrokPattern([
          "body" => [
              "grok_pattern" => "Hello %{WORD:first_name} %{WORD:last_name}",
              "text" => array(
                  "Hello John Doe",
                  "this does not match",
              ),
          ],
      ]);
  - language: curl
    code:
      'curl -X GET -H "Authorization: ApiKey $ELASTIC_API_KEY" -H "Content-Type: application/json" -d ''{"grok_pattern":"Hello
      %{WORD:first_name} %{WORD:last_name}","text":["Hello John Doe","this does not match"]}''
      "$ELASTICSEARCH_URL/_text_structure/test_grok_pattern"'
  - language: Java
    code: |
      client.textStructure().testGrokPattern(t -> t
          .grokPattern("Hello %{WORD:first_name} %{WORD:last_name}")
          .text(List.of("Hello John Doe","this does not match"))
      );
