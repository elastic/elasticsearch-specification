summary: A chat completion task with tool_calls
description:
  Run `POST _inference/chat_completion/openai-completion/_stream` to perform a chat completion using an Assistant message
  with `tool_calls`.
method_request: 'POST _inference/chat_completion/openai-completion/_stream'
# type: "request"
value: |-
  {
    "messages": [
        {
            "role": "assistant",
            "content": "Let's find out what the weather is",
            "tool_calls": [ 
                {
                    "id": "call_KcAjWtAww20AihPHphUh46Gd",
                    "type": "function",
                    "function": {
                        "name": "get_current_weather",
                        "arguments": "{\"location\":\"Boston, MA\"}"
                    }
                }
            ]
        },
        { 
            "role": "tool",
            "content": "The weather is cold",
            "tool_call_id": "call_KcAjWtAww20AihPHphUh46Gd"
        }
    ]
  }
alternatives:
  - language: Python
    code: |-
      resp = client.inference.chat_completion_unified(
          inference_id="openai-completion",
          chat_completion_request={
              "messages": [
                  {
                      "role": "assistant",
                      "content": "Let's find out what the weather is",
                      "tool_calls": [
                          {
                              "id": "call_KcAjWtAww20AihPHphUh46Gd",
                              "type": "function",
                              "function": {
                                  "name": "get_current_weather",
                                  "arguments": "{\"location\":\"Boston, MA\"}"
                              }
                          }
                      ]
                  },
                  {
                      "role": "tool",
                      "content": "The weather is cold",
                      "tool_call_id": "call_KcAjWtAww20AihPHphUh46Gd"
                  }
              ]
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.inference.chatCompletionUnified({
        inference_id: "openai-completion",
        chat_completion_request: {
          messages: [
            {
              role: "assistant",
              content: "Let's find out what the weather is",
              tool_calls: [
                {
                  id: "call_KcAjWtAww20AihPHphUh46Gd",
                  type: "function",
                  function: {
                    name: "get_current_weather",
                    arguments: '{"location":"Boston, MA"}',
                  },
                },
              ],
            },
            {
              role: "tool",
              content: "The weather is cold",
              tool_call_id: "call_KcAjWtAww20AihPHphUh46Gd",
            },
          ],
        },
      });
  - language: Ruby
    code: |-
      response = client.inference.chat_completion_unified(
        inference_id: "openai-completion",
        body: {
          "messages": [
            {
              "role": "assistant",
              "content": "Let's find out what the weather is",
              "tool_calls": [
                {
                  "id": "call_KcAjWtAww20AihPHphUh46Gd",
                  "type": "function",
                  "function": {
                    "name": "get_current_weather",
                    "arguments": "{\"location\":\"Boston, MA\"}"
                  }
                }
              ]
            },
            {
              "role": "tool",
              "content": "The weather is cold",
              "tool_call_id": "call_KcAjWtAww20AihPHphUh46Gd"
            }
          ]
        }
      )
  - language: PHP
    code: |-
      $resp = $client->inference()->chatCompletionUnified([
          "inference_id" => "openai-completion",
          "body" => [
              "messages" => array(
                  [
                      "role" => "assistant",
                      "content" => "Let's find out what the weather is",
                      "tool_calls" => array(
                          [
                              "id" => "call_KcAjWtAww20AihPHphUh46Gd",
                              "type" => "function",
                              "function" => [
                                  "name" => "get_current_weather",
                                  "arguments" => "{\"location\":\"Boston, MA\"}",
                              ],
                          ],
                      ),
                  ],
                  [
                      "role" => "tool",
                      "content" => "The weather is cold",
                      "tool_call_id" => "call_KcAjWtAww20AihPHphUh46Gd",
                  ],
              ),
          ],
      ]);
  - language: curl
    code:
      "curl -X POST -H \"Authorization: ApiKey $ELASTIC_API_KEY\" -H \"Content-Type: application/json\" -d
      '{\"messages\":[{\"role\":\"assistant\",\"content\":\"Let'\"'\"'s find out what the weather
      is\",\"tool_calls\":[{\"id\":\"call_KcAjWtAww20AihPHphUh46Gd\",\"type\":\"function\",\"function\":{\"name\":\"get_current_wea\
      ther\",\"arguments\":\"{\\\"location\\\":\\\"Boston, MA\\\"}\"}}]},{\"role\":\"tool\",\"content\":\"The weather is
      cold\",\"tool_call_id\":\"call_KcAjWtAww20AihPHphUh46Gd\"}]}'
      \"$ELASTICSEARCH_URL/_inference/chat_completion/openai-completion/_stream\""
  - language: Java
    code: |
      client.inference().chatCompletionUnified(c -> c
        .inferenceId("openai-completion")
        .chatCompletionRequest(ch -> ch
            .messages(List.of(Message.of(m -> m
                    .content(co -> co
                        .string("Let's find out what the weather is")
                    )
                    .role("assistant")
                    .toolCalls(t -> t
                        .id("call_KcAjWtAww20AihPHphUh46Gd")
                        .function(f -> f
                            .arguments("{\"location\":\"Boston, MA\"}")
                            .name("get_current_weather")
                        )
                        .type("function")
                    )),Message.of(me -> me
                    .content(co -> co
                        .string("The weather is cold")
                    )
                    .role("tool")
                    .toolCallId("call_KcAjWtAww20AihPHphUh46Gd"))))
        )
      );
