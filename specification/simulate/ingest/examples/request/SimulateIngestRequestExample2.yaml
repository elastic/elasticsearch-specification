summary: Pipeline substitions
method_request: POST /_ingest/_simulate
description:
  In this example the index `my-index` has a default pipeline called `my-pipeline` and a final pipeline called
  `my-final-pipeline`. But a substitute definition of `my-pipeline` is provided in `pipeline_substitutions`. The substitute
  `my-pipeline` will be used in place of the `my-pipeline` that is in the system, and then the `my-final-pipeline` that is already
  defined in the system will run.
# type: request
value:
  docs:
    - _index: my-index
      _id: 123
      _source:
        foo: bar
    - _index: my-index
      _id: 456
      _source:
        foo: rab
  pipeline_substitutions:
    my-pipeline:
      processors:
        - uppercase:
            field: foo
alternatives:
  - language: Python
    code: |-
      resp = client.simulate.ingest(
          docs=[
              {
                  "_index": "my-index",
                  "_id": 123,
                  "_source": {
                      "foo": "bar"
                  }
              },
              {
                  "_index": "my-index",
                  "_id": 456,
                  "_source": {
                      "foo": "rab"
                  }
              }
          ],
          pipeline_substitutions={
              "my-pipeline": {
                  "processors": [
                      {
                          "uppercase": {
                              "field": "foo"
                          }
                      }
                  ]
              }
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.simulate.ingest({
        docs: [
          {
            _index: "my-index",
            _id: 123,
            _source: {
              foo: "bar",
            },
          },
          {
            _index: "my-index",
            _id: 456,
            _source: {
              foo: "rab",
            },
          },
        ],
        pipeline_substitutions: {
          "my-pipeline": {
            processors: [
              {
                uppercase: {
                  field: "foo",
                },
              },
            ],
          },
        },
      });
  - language: Ruby
    code: |-
      response = client.simulate.ingest(
        body: {
          "docs": [
            {
              "_index": "my-index",
              "_id": 123,
              "_source": {
                "foo": "bar"
              }
            },
            {
              "_index": "my-index",
              "_id": 456,
              "_source": {
                "foo": "rab"
              }
            }
          ],
          "pipeline_substitutions": {
            "my-pipeline": {
              "processors": [
                {
                  "uppercase": {
                    "field": "foo"
                  }
                }
              ]
            }
          }
        }
      )
  - language: PHP
    code: |-
      $resp = $client->simulate()->ingest([
          "body" => [
              "docs" => array(
                  [
                      "_index" => "my-index",
                      "_id" => 123,
                      "_source" => [
                          "foo" => "bar",
                      ],
                  ],
                  [
                      "_index" => "my-index",
                      "_id" => 456,
                      "_source" => [
                          "foo" => "rab",
                      ],
                  ],
              ),
              "pipeline_substitutions" => [
                  "my-pipeline" => [
                      "processors" => array(
                          [
                              "uppercase" => [
                                  "field" => "foo",
                              ],
                          ],
                      ),
                  ],
              ],
          ],
      ]);
  - language: curl
    code:
      "curl -X POST -H \"Authorization: ApiKey $ELASTIC_API_KEY\" -H \"Content-Type: application/json\" -d
      '{\"docs\":[{\"_index\":\"my-index\",\"_id\":123,\"_source\":{\"foo\":\"bar\"}},{\"_index\":\"my-index\",\"_id\":456,\"_source\
      \":{\"foo\":\"rab\"}}],\"pipeline_substitutions\":{\"my-pipeline\":{\"processors\":[{\"uppercase\":{\"field\":\"foo\"}}]}}}'
      \"$ELASTICSEARCH_URL/_ingest/_simulate\""
