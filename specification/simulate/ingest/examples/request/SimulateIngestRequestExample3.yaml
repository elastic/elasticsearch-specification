summary: Component template substitutions
method_request: POST /_ingest/_simulate
description: >
  In this example, imagine that the index `my-index` has a strict mapping with only the `foo` keyword field defined. Say that field
  mapping came from a component template named `my-mappings-template`. You want to test adding a new field, `bar`. So a substitute
  definition of `my-mappings-template` is provided in `component_template_substitutions`. The substitute `my-mappings-template` will
  be used in place of the existing mapping for `my-index` and in place of the `my-mappings-template` that is in the system.
# type: request
value: |-
  {
    "docs": [
      {
        "_index": "my-index",
        "_id": "123",
        "_source": {
          "foo": "foo"
        }
      },
      {
        "_index": "my-index",
        "_id": "456",
        "_source": {
          "bar": "rab"
        }
      }
    ],
    "component_template_substitutions": {
      "my-mappings_template": {
        "template": {
          "mappings": {
            "dynamic": "strict",
            "properties": {
              "foo": {
                "type": "keyword"
              },
              "bar": {
                "type": "keyword"
              }
            }
          }
        }
      }
    }
  }
alternatives:
  - language: Python
    code: |-
      resp = client.simulate.ingest(
          docs=[
              {
                  "_index": "my-index",
                  "_id": "123",
                  "_source": {
                      "foo": "foo"
                  }
              },
              {
                  "_index": "my-index",
                  "_id": "456",
                  "_source": {
                      "bar": "rab"
                  }
              }
          ],
          component_template_substitutions={
              "my-mappings_template": {
                  "template": {
                      "mappings": {
                          "dynamic": "strict",
                          "properties": {
                              "foo": {
                                  "type": "keyword"
                              },
                              "bar": {
                                  "type": "keyword"
                              }
                          }
                      }
                  }
              }
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.simulate.ingest({
        docs: [
          {
            _index: "my-index",
            _id: "123",
            _source: {
              foo: "foo",
            },
          },
          {
            _index: "my-index",
            _id: "456",
            _source: {
              bar: "rab",
            },
          },
        ],
        component_template_substitutions: {
          "my-mappings_template": {
            template: {
              mappings: {
                dynamic: "strict",
                properties: {
                  foo: {
                    type: "keyword",
                  },
                  bar: {
                    type: "keyword",
                  },
                },
              },
            },
          },
        },
      });
  - language: Ruby
    code: |-
      response = client.simulate.ingest(
        body: {
          "docs": [
            {
              "_index": "my-index",
              "_id": "123",
              "_source": {
                "foo": "foo"
              }
            },
            {
              "_index": "my-index",
              "_id": "456",
              "_source": {
                "bar": "rab"
              }
            }
          ],
          "component_template_substitutions": {
            "my-mappings_template": {
              "template": {
                "mappings": {
                  "dynamic": "strict",
                  "properties": {
                    "foo": {
                      "type": "keyword"
                    },
                    "bar": {
                      "type": "keyword"
                    }
                  }
                }
              }
            }
          }
        }
      )
  - language: PHP
    code: |-
      $resp = $client->simulate()->ingest([
          "body" => [
              "docs" => array(
                  [
                      "_index" => "my-index",
                      "_id" => "123",
                      "_source" => [
                          "foo" => "foo",
                      ],
                  ],
                  [
                      "_index" => "my-index",
                      "_id" => "456",
                      "_source" => [
                          "bar" => "rab",
                      ],
                  ],
              ),
              "component_template_substitutions" => [
                  "my-mappings_template" => [
                      "template" => [
                          "mappings" => [
                              "dynamic" => "strict",
                              "properties" => [
                                  "foo" => [
                                      "type" => "keyword",
                                  ],
                                  "bar" => [
                                      "type" => "keyword",
                                  ],
                              ],
                          ],
                      ],
                  ],
              ],
          ],
      ]);
  - language: curl
    code:
      "curl -X POST -H \"Authorization: ApiKey $ELASTIC_API_KEY\" -H \"Content-Type: application/json\" -d
      '{\"docs\":[{\"_index\":\"my-index\",\"_id\":\"123\",\"_source\":{\"foo\":\"foo\"}},{\"_index\":\"my-index\",\"_id\":\"456\",\
      \"_source\":{\"bar\":\"rab\"}}],\"component_template_substitutions\":{\"my-mappings_template\":{\"template\":{\"mappings\":{\
      \"dynamic\":\"strict\",\"properties\":{\"foo\":{\"type\":\"keyword\"},\"bar\":{\"type\":\"keyword\"}}}}}}}'
      \"$ELASTICSEARCH_URL/_ingest/_simulate\""
