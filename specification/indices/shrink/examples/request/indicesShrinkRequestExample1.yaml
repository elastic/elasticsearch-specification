summary: Shrink an existing index into a new index with fewer primary shards.
method_request: POST /my_source_index/_shrink/my_target_index
# description: ''
# type: request
value: "{

  \  \"settings\": {

  \    \"index.routing.allocation.require._name\": null,

  \    \"index.blocks.write\": null

  \  }

  }"
alternatives:
  - language: Python
    code: |-
      resp = client.indices.shrink(
          index="my_source_index",
          target="my_target_index",
          settings={
              "index.routing.allocation.require._name": None,
              "index.blocks.write": None
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.indices.shrink({
        index: "my_source_index",
        target: "my_target_index",
        settings: {
          "index.routing.allocation.require._name": null,
          "index.blocks.write": null,
        },
      });
  - language: Ruby
    code: |-
      response = client.indices.shrink(
        index: "my_source_index",
        target: "my_target_index",
        body: {
          "settings": {
            "index.routing.allocation.require._name": nil,
            "index.blocks.write": nil
          }
        }
      )
  - language: PHP
    code: |-
      $resp = $client->indices()->shrink([
          "index" => "my_source_index",
          "target" => "my_target_index",
          "body" => [
              "settings" => [
                  "index.routing.allocation.require._name" => null,
                  "index.blocks.write" => null,
              ],
          ],
      ]);
  - language: curl
    code:
      'curl -X POST -H "Authorization: ApiKey $ELASTIC_API_KEY" -H "Content-Type: application/json" -d
      ''{"settings":{"index.routing.allocation.require._name":null,"index.blocks.write":null}}''
      "$ELASTICSEARCH_URL/my_source_index/_shrink/my_target_index"'
