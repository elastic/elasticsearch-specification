summary: Filter context
method_request: POST /_scripts/painless/_execute
description: >
  Run `POST /_scripts/painless/_execute` with a `filter` context. It treats scripts as if they were run inside a script query. For
  testing purposes, a document must be provided so that it will be temporarily indexed in-memory and is accessible from the script.
  More precisely, the `_source`, stored fields, and doc values of such a document are available to the script being tested.
# type: request
value: |-
  {
    "script": {
      "source": "doc['field'].value.length() <= params.max_length",
      "params": {
        "max_length": 4
      }
    },
    "context": "filter",
    "context_setup": {
      "index": "my-index-000001",
      "document": {
        "field": "four"
      }
    }
  }
alternatives:
  - language: Python
    code: |-
      resp = client.scripts_painless_execute(
          script={
              "source": "doc['field'].value.length() <= params.max_length",
              "params": {
                  "max_length": 4
              }
          },
          context="filter",
          context_setup={
              "index": "my-index-000001",
              "document": {
                  "field": "four"
              }
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.scriptsPainlessExecute({
        script: {
          source: "doc['field'].value.length() <= params.max_length",
          params: {
            max_length: 4,
          },
        },
        context: "filter",
        context_setup: {
          index: "my-index-000001",
          document: {
            field: "four",
          },
        },
      });
  - language: Ruby
    code: |-
      response = client.scripts_painless_execute(
        body: {
          "script": {
            "source": "doc['field'].value.length() <= params.max_length",
            "params": {
              "max_length": 4
            }
          },
          "context": "filter",
          "context_setup": {
            "index": "my-index-000001",
            "document": {
              "field": "four"
            }
          }
        }
      )
  - language: PHP
    code: |-
      $resp = $client->scriptsPainlessExecute([
          "body" => [
              "script" => [
                  "source" => "doc['field'].value.length() <= params.max_length",
                  "params" => [
                      "max_length" => 4,
                  ],
              ],
              "context" => "filter",
              "context_setup" => [
                  "index" => "my-index-000001",
                  "document" => [
                      "field" => "four",
                  ],
              ],
          ],
      ]);
  - language: curl
    code:
      "curl -X POST -H \"Authorization: ApiKey $ELASTIC_API_KEY\" -H \"Content-Type: application/json\" -d
      '{\"script\":{\"source\":\"doc['\"'\"'field'\"'\"'].value.length() <=
      params.max_length\",\"params\":{\"max_length\":4}},\"context\":\"filter\",\"context_setup\":{\"index\":\"my-index-000001\",\"\
      document\":{\"field\":\"four\"}}}' \"$ELASTICSEARCH_URL/_scripts/painless/_execute\""
