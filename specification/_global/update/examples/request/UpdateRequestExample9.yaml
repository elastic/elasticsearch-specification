summary: Upsert
method_request: POST test/_update/1
description: >
  Run `POST test/_update/1` to perfom an upsert. If the document does not already exist, the contents of the upsert element are
  inserted as a new document. If the document exists, the script is run.
# type: request
value: "{

  \  \"script\": {

  \    \"source\": \"ctx._source.counter += params.count\",

  \    \"lang\": \"painless\",

  \    \"params\": {

  \      \"count\": 4

  \    }

  \  },

  \  \"upsert\": {

  \    \"counter\": 1

  \  }

  }"
alternatives:
  - language: Python
    code: |-
      resp = client.update(
          index="test",
          id="1",
          script={
              "source": "ctx._source.counter += params.count",
              "lang": "painless",
              "params": {
                  "count": 4
              }
          },
          upsert={
              "counter": 1
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.update({
        index: "test",
        id: 1,
        script: {
          source: "ctx._source.counter += params.count",
          lang: "painless",
          params: {
            count: 4,
          },
        },
        upsert: {
          counter: 1,
        },
      });
  - language: Ruby
    code: |-
      response = client.update(
        index: "test",
        id: "1",
        body: {
          "script": {
            "source": "ctx._source.counter += params.count",
            "lang": "painless",
            "params": {
              "count": 4
            }
          },
          "upsert": {
            "counter": 1
          }
        }
      )
  - language: PHP
    code: |-
      $resp = $client->update([
          "index" => "test",
          "id" => "1",
          "body" => [
              "script" => [
                  "source" => "ctx._source.counter += params.count",
                  "lang" => "painless",
                  "params" => [
                      "count" => 4,
                  ],
              ],
              "upsert" => [
                  "counter" => 1,
              ],
          ],
      ]);
  - language: curl
    code:
      'curl -X POST -H "Authorization: ApiKey $ELASTIC_API_KEY" -H "Content-Type: application/json" -d
      ''{"script":{"source":"ctx._source.counter +=
      params.count","lang":"painless","params":{"count":4}},"upsert":{"counter":1}}''
      "$ELASTICSEARCH_URL/test/_update/1"'
