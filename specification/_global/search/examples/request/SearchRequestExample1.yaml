summary: A simple term search
method_request: GET /my-index-000001/_search?from=40&size=20
description: >
  Run `GET /my-index-000001/_search?from=40&size=20` to run a search.
# type: request
value: |-
  {
    "query": {
      "term": {
        "user.id": "kimchy"
      }
    }
  }
alternatives:
  - language: Python
    code: |-
      resp = client.search(
          index="my-index-000001",
          from="40",
          size="20",
          query={
              "term": {
                  "user.id": "kimchy"
              }
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.search({
        index: "my-index-000001",
        from: 40,
        size: 20,
        query: {
          term: {
            "user.id": "kimchy",
          },
        },
      });
  - language: Ruby
    code: |-
      response = client.search(
        index: "my-index-000001",
        from: "40",
        size: "20",
        body: {
          "query": {
            "term": {
              "user.id": "kimchy"
            }
          }
        }
      )
  - language: PHP
    code: |-
      $resp = $client->search([
          "index" => "my-index-000001",
          "from" => "40",
          "size" => "20",
          "body" => [
              "query" => [
                  "term" => [
                      "user.id" => "kimchy",
                  ],
              ],
          ],
      ]);
  - language: curl
    code:
      'curl -X GET -H "Authorization: ApiKey $ELASTIC_API_KEY" -H "Content-Type: application/json" -d
      ''{"query":{"term":{"user.id":"kimchy"}}}'' "$ELASTICSEARCH_URL/my-index-000001/_search?from=40&size=20"'
  - language: Java
    code: |
      client.search(s -> s
          .from(40)
          .index("my-index-000001")
          .query(q -> q
              .term(t -> t
                  .field("user.id")
                  .value(FieldValue.of("kimchy"))
              )
          )
          .size(20)
      ,Void.class);
