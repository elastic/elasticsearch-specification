# summary:
method_request: 'GET museums/_mvt/location/13/4207/2692'
description: >
  Run `GET museums/_mvt/location/13/4207/2692` to search an index for `location` values that intersect the `13/4207/2692` vector
  tile.
# type: "request"
value: |-
  {
    "grid_agg": "geotile",
    "grid_precision": 2,
    "fields": [
      "name",
      "price"
    ],
    "query": {
      "term": {
        "included": true
      }
    },
    "aggs": {
      "min_price": {
        "min": {
          "field": "price"
        }
      },
      "max_price": {
        "max": {
          "field": "price"
        }
      },
      "avg_price": {
        "avg": {
          "field": "price"
        }
      }
    }
  }
alternatives:
  - language: Python
    code: |-
      resp = client.search_mvt(
          index="museums",
          field="location",
          zoom="13",
          x="4207",
          y="2692",
          grid_agg="geotile",
          grid_precision=2,
          fields=[
              "name",
              "price"
          ],
          query={
              "term": {
                  "included": True
              }
          },
          aggs={
              "min_price": {
                  "min": {
                      "field": "price"
                  }
              },
              "max_price": {
                  "max": {
                      "field": "price"
                  }
              },
              "avg_price": {
                  "avg": {
                      "field": "price"
                  }
              }
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.searchMvt({
        index: "museums",
        field: "location",
        zoom: 13,
        x: 4207,
        y: 2692,
        grid_agg: "geotile",
        grid_precision: 2,
        fields: ["name", "price"],
        query: {
          term: {
            included: true,
          },
        },
        aggs: {
          min_price: {
            min: {
              field: "price",
            },
          },
          max_price: {
            max: {
              field: "price",
            },
          },
          avg_price: {
            avg: {
              field: "price",
            },
          },
        },
      });
  - language: Ruby
    code: |-
      response = client.search_mvt(
        index: "museums",
        field: "location",
        zoom: "13",
        x: "4207",
        y: "2692",
        body: {
          "grid_agg": "geotile",
          "grid_precision": 2,
          "fields": [
            "name",
            "price"
          ],
          "query": {
            "term": {
              "included": true
            }
          },
          "aggs": {
            "min_price": {
              "min": {
                "field": "price"
              }
            },
            "max_price": {
              "max": {
                "field": "price"
              }
            },
            "avg_price": {
              "avg": {
                "field": "price"
              }
            }
          }
        }
      )
  - language: PHP
    code: |-
      $resp = $client->searchMvt([
          "index" => "museums",
          "field" => "location",
          "zoom" => "13",
          "x" => "4207",
          "y" => "2692",
          "body" => [
              "grid_agg" => "geotile",
              "grid_precision" => 2,
              "fields" => array(
                  "name",
                  "price",
              ),
              "query" => [
                  "term" => [
                      "included" => true,
                  ],
              ],
              "aggs" => [
                  "min_price" => [
                      "min" => [
                          "field" => "price",
                      ],
                  ],
                  "max_price" => [
                      "max" => [
                          "field" => "price",
                      ],
                  ],
                  "avg_price" => [
                      "avg" => [
                          "field" => "price",
                      ],
                  ],
              ],
          ],
      ]);
  - language: curl
    code:
      "curl -X GET -H \"Authorization: ApiKey $ELASTIC_API_KEY\" -H \"Content-Type: application/json\" -d
      '{\"grid_agg\":\"geotile\",\"grid_precision\":2,\"fields\":[\"name\",\"price\"],\"query\":{\"term\":{\"included\":true}},\"ag\
      gs\":{\"min_price\":{\"min\":{\"field\":\"price\"}},\"max_price\":{\"max\":{\"field\":\"price\"}},\"avg_price\":{\"avg\":{\"f\
      ield\":\"price\"}}}}' \"$ELASTICSEARCH_URL/museums/_mvt/location/13/4207/2692\""
