# summary:
method_request: GET /my-index-000001/_explain/0
description: >
  Run `GET /my-index-000001/_explain/0` with the request body. Alternatively, run `GET
  /my-index-000001/_explain/0?q=message:elasticsearch`
# type: request
value: |-
  {
    "query" : {
      "match" : { "message" : "elasticsearch" }
    }
  }
alternatives:
  - language: Python
    code: |-
      resp = client.explain(
          index="my-index-000001",
          id="0",
          query={
              "match": {
                  "message": "elasticsearch"
              }
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.explain({
        index: "my-index-000001",
        id: 0,
        query: {
          match: {
            message: "elasticsearch",
          },
        },
      });
  - language: Ruby
    code: |-
      response = client.explain(
        index: "my-index-000001",
        id: "0",
        body: {
          "query": {
            "match": {
              "message": "elasticsearch"
            }
          }
        }
      )
  - language: PHP
    code: |-
      $resp = $client->explain([
          "index" => "my-index-000001",
          "id" => "0",
          "body" => [
              "query" => [
                  "match" => [
                      "message" => "elasticsearch",
                  ],
              ],
          ],
      ]);
  - language: curl
    code:
      'curl -X GET -H "Authorization: ApiKey $ELASTIC_API_KEY" -H "Content-Type: application/json" -d
      ''{"query":{"match":{"message":"elasticsearch"}}}'' "$ELASTICSEARCH_URL/my-index-000001/_explain/0"'
  - language: Java
    code: |
      client.explain(e -> e
          .id("0")
          .index("my-index-000001")
          .query(q -> q
              .match(m -> m
                  .field("message")
                  .query(FieldValue.of("elasticsearch"))
              )
          )
      );
