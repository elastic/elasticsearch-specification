# summary:
method_request: POST _transform/_preview
description: Run `POST _transform/_preview` to preview a transform that uses the pivot method.
# type: request
value:
  source:
    index: kibana_sample_data_ecommerce
  pivot:
    group_by:
      customer_id:
        terms:
          field: customer_id
          missing_bucket: true
    aggregations:
      max_price:
        max:
          field: taxful_total_price
alternatives:
  - language: Python
    code: |-
      resp = client.transform.preview_transform(
          source={
              "index": "kibana_sample_data_ecommerce"
          },
          pivot={
              "group_by": {
                  "customer_id": {
                      "terms": {
                          "field": "customer_id",
                          "missing_bucket": True
                      }
                  }
              },
              "aggregations": {
                  "max_price": {
                      "max": {
                          "field": "taxful_total_price"
                      }
                  }
              }
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.transform.previewTransform({
        source: {
          index: "kibana_sample_data_ecommerce",
        },
        pivot: {
          group_by: {
            customer_id: {
              terms: {
                field: "customer_id",
                missing_bucket: true,
              },
            },
          },
          aggregations: {
            max_price: {
              max: {
                field: "taxful_total_price",
              },
            },
          },
        },
      });
  - language: Ruby
    code: |-
      response = client.transform.preview_transform(
        body: {
          "source": {
            "index": "kibana_sample_data_ecommerce"
          },
          "pivot": {
            "group_by": {
              "customer_id": {
                "terms": {
                  "field": "customer_id",
                  "missing_bucket": true
                }
              }
            },
            "aggregations": {
              "max_price": {
                "max": {
                  "field": "taxful_total_price"
                }
              }
            }
          }
        }
      )
  - language: PHP
    code: |-
      $resp = $client->transform()->previewTransform([
          "body" => [
              "source" => [
                  "index" => "kibana_sample_data_ecommerce",
              ],
              "pivot" => [
                  "group_by" => [
                      "customer_id" => [
                          "terms" => [
                              "field" => "customer_id",
                              "missing_bucket" => true,
                          ],
                      ],
                  ],
                  "aggregations" => [
                      "max_price" => [
                          "max" => [
                              "field" => "taxful_total_price",
                          ],
                      ],
                  ],
              ],
          ],
      ]);
  - language: curl
    code:
      "curl -X POST -H \"Authorization: ApiKey $ELASTIC_API_KEY\" -H \"Content-Type: application/json\" -d
      '{\"source\":{\"index\":\"kibana_sample_data_ecommerce\"},\"pivot\":{\"group_by\":{\"customer_id\":{\"terms\":{\"field\":\"cu\
      stomer_id\",\"missing_bucket\":true}}},\"aggregations\":{\"max_price\":{\"max\":{\"field\":\"taxful_total_price\"}}}}}'
      \"$ELASTICSEARCH_URL/_transform/_preview\""
