/*
 * Licensed to Elasticsearch B.V. under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch B.V. licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import { RequestBase } from '@_types/Base'
import { Indices, Metadata, Name } from '@_types/common'
import { Duration } from '@_types/Time'

/**
 * @rest_spec_name snapshot.create
 * @availability stack since=0.0.0 stability=stable
 */
export interface Request extends RequestBase {
  path_parts: {
    /**
     * Repository for the snapshot.
     */
    repository: Name
    /**
     * Name of the snapshot. Must be unique in the repository.
     */
    snapshot: Name
  }
  query_parameters: {
    /**
     * Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.
     * @server_default 30s
     */
    master_timeout?: Duration
    /**
     *  If `true`, the request returns a response when the snapshot is complete. If `false`, the request returns a response when the snapshot initializes.
     * @server_default false
     */
    wait_for_completion?: boolean
  }
  body: {
    /**
     * If `true`, the request ignores data streams and indices in `indices` that are missing or closed. If `false`, the request returns an error for any data stream or index that is missing or closed.
     * @server_default false
     */
    ignore_unavailable?: boolean
    /**
     * If `true`, the current cluster state is included in the snapshot. The cluster state includes persistent cluster settings, composable index templates, legacy index templates, ingest pipelines, and ILM policies. It also includes data stored in system indices, such as Watches and task records (configurable via `feature_states`).
     * @server_default true
     */
    include_global_state?: boolean
    /**
     * Data streams and indices to include in the snapshot. Supports multi-target syntax. Includes all data streams and indices by default.
     */
    indices?: Indices
    /**
     * Feature states to include in the snapshot. Each feature state includes one or more system indices containing related data. You can view a list of eligible features using the get features API. If `include_global_state` is `true`, all current feature states are included by default. If `include_global_state` is `false`, no feature states are included by default.
     */
    feature_states?: string[]
    /**
     * Optional metadata for the snapshot. May have any contents. Must be less than 1024 bytes. This map is not automatically generated by Elasticsearch.
     */
    metadata?: Metadata
    /**
     * If `true`, allows restoring a partial snapshot of indices with unavailable shards. Only shards that were successfully included in the snapshot will be restored. All missing shards will be recreated as empty. If `false`, the entire restore operation will fail if one or more indices included in the snapshot do not have all primary shards available.
     * @server_default false
     */
    partial?: boolean
  }
}
