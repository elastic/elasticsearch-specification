summary: Roles for multiple groups
method_request: POST /_security/role_mapping/mapping5
description: >
  Run `POST /_security/role_mapping/mapping5` to use an array syntax for the groups field when there are multiple groups. This
  pattern matches any of the groups (rather than all of the groups).
# type: request
value: |-
  {
    "role_templates": [
      {
        "template": { "source": "{{#tojson}}groups{{/tojson}}" }, 
        "format" : "json" 
      }
    ],
    "rules": {
      "field" : { "realm.name" : "saml1" }
    },
    "enabled": true
  }
alternatives:
  - language: Python
    code: |-
      resp = client.security.put_role_mapping(
          name="mapping5",
          role_templates=[
              {
                  "template": {
                      "source": "{{#tojson}}groups{{/tojson}}"
                  },
                  "format": "json"
              }
          ],
          rules={
              "field": {
                  "realm.name": "saml1"
              }
          },
          enabled=True,
      )
  - language: JavaScript
    code: |-
      const response = await client.security.putRoleMapping({
        name: "mapping5",
        role_templates: [
          {
            template: {
              source: "{{#tojson}}groups{{/tojson}}",
            },
            format: "json",
          },
        ],
        rules: {
          field: {
            "realm.name": "saml1",
          },
        },
        enabled: true,
      });
  - language: Ruby
    code: |-
      response = client.security.put_role_mapping(
        name: "mapping5",
        body: {
          "role_templates": [
            {
              "template": {
                "source": "{{#tojson}}groups{{/tojson}}"
              },
              "format": "json"
            }
          ],
          "rules": {
            "field": {
              "realm.name": "saml1"
            }
          },
          "enabled": true
        }
      )
  - language: PHP
    code: |-
      $resp = $client->security()->putRoleMapping([
          "name" => "mapping5",
          "body" => [
              "role_templates" => array(
                  [
                      "template" => [
                          "source" => "{{#tojson}}groups{{/tojson}}",
                      ],
                      "format" => "json",
                  ],
              ),
              "rules" => [
                  "field" => [
                      "realm.name" => "saml1",
                  ],
              ],
              "enabled" => true,
          ],
      ]);
  - language: curl
    code:
      "curl -X POST -H \"Authorization: ApiKey $ELASTIC_API_KEY\" -H \"Content-Type: application/json\" -d
      '{\"role_templates\":[{\"template\":{\"source\":\"{{#tojson}}groups{{/tojson}}\"},\"format\":\"json\"}],\"rules\":{\"field\":{\
      \"realm.name\":\"saml1\"}},\"enabled\":true}' \"$ELASTICSEARCH_URL/_security/role_mapping/mapping5\""
