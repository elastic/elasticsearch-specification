summary: Roles for specific realms
method_request: POST /_security/role_mapping/mapping3
description: >
  Run `POST /_security/role_mapping/mapping3` to match users who authenticated against a specific realm.
# type: request
value: |-
  {
    "roles": [ "ldap-user" ],
    "enabled": true,
    "rules": {
      "field" : { "realm.name" : "ldap1" }
    }
  }
alternatives:
  - language: Python
    code: |-
      resp = client.security.put_role_mapping(
          name="mapping3",
          roles=[
              "ldap-user"
          ],
          enabled=True,
          rules={
              "field": {
                  "realm.name": "ldap1"
              }
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.security.putRoleMapping({
        name: "mapping3",
        roles: ["ldap-user"],
        enabled: true,
        rules: {
          field: {
            "realm.name": "ldap1",
          },
        },
      });
  - language: Ruby
    code: |-
      response = client.security.put_role_mapping(
        name: "mapping3",
        body: {
          "roles": [
            "ldap-user"
          ],
          "enabled": true,
          "rules": {
            "field": {
              "realm.name": "ldap1"
            }
          }
        }
      )
  - language: PHP
    code: |-
      $resp = $client->security()->putRoleMapping([
          "name" => "mapping3",
          "body" => [
              "roles" => array(
                  "ldap-user",
              ),
              "enabled" => true,
              "rules" => [
                  "field" => [
                      "realm.name" => "ldap1",
                  ],
              ],
          ],
      ]);
  - language: curl
    code:
      'curl -X POST -H "Authorization: ApiKey $ELASTIC_API_KEY" -H "Content-Type: application/json" -d
      ''{"roles":["ldap-user"],"enabled":true,"rules":{"field":{"realm.name":"ldap1"}}}''
      "$ELASTICSEARCH_URL/_security/role_mapping/mapping3"'
  - language: Java
    code: |
      client.security().putRoleMapping(p -> p
          .enabled(true)
          .name("mapping3")
          .roles("ldap-user")
          .rules(r -> r
              .field(NamedValue.of("realm.name",List.of(FieldValue.of("ldap1"))))
          )
      );
