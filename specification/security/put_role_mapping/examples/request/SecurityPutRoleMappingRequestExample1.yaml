summary: Roles for all users
method_request: POST /_security/role_mapping/mapping1
description: >
  Run `POST /_security/role_mapping/mapping1` to assign the `user` role to all users.
# type: request
value: |-
  {
    "roles": [ "user"],
    "enabled": true, 
    "rules": {
      "field" : { "username" : "*" }
    },
    "metadata" : { 
      "version" : 1
    }
  }
alternatives:
  - language: Python
    code: |-
      resp = client.security.put_role_mapping(
          name="mapping1",
          roles=[
              "user"
          ],
          enabled=True,
          rules={
              "field": {
                  "username": "*"
              }
          },
          metadata={
              "version": 1
          },
      )
  - language: JavaScript
    code: |-
      const response = await client.security.putRoleMapping({
        name: "mapping1",
        roles: ["user"],
        enabled: true,
        rules: {
          field: {
            username: "*",
          },
        },
        metadata: {
          version: 1,
        },
      });
  - language: Ruby
    code: |-
      response = client.security.put_role_mapping(
        name: "mapping1",
        body: {
          "roles": [
            "user"
          ],
          "enabled": true,
          "rules": {
            "field": {
              "username": "*"
            }
          },
          "metadata": {
            "version": 1
          }
        }
      )
  - language: PHP
    code: |-
      $resp = $client->security()->putRoleMapping([
          "name" => "mapping1",
          "body" => [
              "roles" => array(
                  "user",
              ),
              "enabled" => true,
              "rules" => [
                  "field" => [
                      "username" => "*",
                  ],
              ],
              "metadata" => [
                  "version" => 1,
              ],
          ],
      ]);
  - language: curl
    code:
      'curl -X POST -H "Authorization: ApiKey $ELASTIC_API_KEY" -H "Content-Type: application/json" -d
      ''{"roles":["user"],"enabled":true,"rules":{"field":{"username":"*"}},"metadata":{"version":1}}''
      "$ELASTICSEARCH_URL/_security/role_mapping/mapping1"'
