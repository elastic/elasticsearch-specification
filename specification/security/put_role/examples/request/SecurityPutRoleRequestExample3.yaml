summary: Role example 3
method_request: POST /_security/role/only_remote_access_role
description:
  Run `POST /_security/role/only_remote_access_role` to configure a role with remote indices and remote cluster
  privileges for a remote cluster.
# type: request
value: |-
  {
    "remote_indices": [
      {
        "clusters": ["my_remote"], 
        "names": ["logs*"], 
        "privileges": ["read", "read_cross_cluster", "view_index_metadata"] 
      }
    ],
    "remote_cluster": [
      {
        "clusters": ["my_remote"], 
        "privileges": ["monitor_stats"]  
      }
    ]
  }
alternatives:
  - language: Python
    code: |-
      resp = client.security.put_role(
          name="only_remote_access_role",
          remote_indices=[
              {
                  "clusters": [
                      "my_remote"
                  ],
                  "names": [
                      "logs*"
                  ],
                  "privileges": [
                      "read",
                      "read_cross_cluster",
                      "view_index_metadata"
                  ]
              }
          ],
          remote_cluster=[
              {
                  "clusters": [
                      "my_remote"
                  ],
                  "privileges": [
                      "monitor_stats"
                  ]
              }
          ],
      )
  - language: JavaScript
    code: |-
      const response = await client.security.putRole({
        name: "only_remote_access_role",
        remote_indices: [
          {
            clusters: ["my_remote"],
            names: ["logs*"],
            privileges: ["read", "read_cross_cluster", "view_index_metadata"],
          },
        ],
        remote_cluster: [
          {
            clusters: ["my_remote"],
            privileges: ["monitor_stats"],
          },
        ],
      });
  - language: Ruby
    code: |-
      response = client.security.put_role(
        name: "only_remote_access_role",
        body: {
          "remote_indices": [
            {
              "clusters": [
                "my_remote"
              ],
              "names": [
                "logs*"
              ],
              "privileges": [
                "read",
                "read_cross_cluster",
                "view_index_metadata"
              ]
            }
          ],
          "remote_cluster": [
            {
              "clusters": [
                "my_remote"
              ],
              "privileges": [
                "monitor_stats"
              ]
            }
          ]
        }
      )
  - language: PHP
    code: |-
      $resp = $client->security()->putRole([
          "name" => "only_remote_access_role",
          "body" => [
              "remote_indices" => array(
                  [
                      "clusters" => array(
                          "my_remote",
                      ),
                      "names" => array(
                          "logs*",
                      ),
                      "privileges" => array(
                          "read",
                          "read_cross_cluster",
                          "view_index_metadata",
                      ),
                  ],
              ),
              "remote_cluster" => array(
                  [
                      "clusters" => array(
                          "my_remote",
                      ),
                      "privileges" => array(
                          "monitor_stats",
                      ),
                  ],
              ),
          ],
      ]);
  - language: curl
    code:
      "curl -X POST -H \"Authorization: ApiKey $ELASTIC_API_KEY\" -H \"Content-Type: application/json\" -d
      '{\"remote_indices\":[{\"clusters\":[\"my_remote\"],\"names\":[\"logs*\"],\"privileges\":[\"read\",\"read_cross_cluster\",\"v\
      iew_index_metadata\"]}],\"remote_cluster\":[{\"clusters\":[\"my_remote\"],\"privileges\":[\"monitor_stats\"]}]}'
      \"$ELASTICSEARCH_URL/_security/role/only_remote_access_role\""
  - language: Java
    code: |
      client.security().putRole(p -> p
          .name("only_remote_access_role")
          .remoteCluster(r -> r
              .clusters("my_remote")
              .privileges(RemoteClusterPrivilege.MonitorStats)
          )
          .remoteIndices(r -> r
              .clusters("my_remote")
              .names("logs*")
              .privileges(List.of("read","read_cross_cluster","view_index_metadata"))
          )
      );
